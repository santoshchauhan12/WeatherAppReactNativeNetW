var __BUNDLE_START_TIME__=globalThis.nativePerformanceNow?nativePerformanceNow():Date.now(),__DEV__=false,process=globalThis.process||{},__METRO_GLOBAL_PREFIX__='';process.env=process.env||{};process.env.NODE_ENV=process.env.NODE_ENV||"production";
(function (global) {
  "use strict";

  global.__r = metroRequire;
  global[`${__METRO_GLOBAL_PREFIX__}__d`] = define;
  global.__c = clear;
  global.__registerSegment = registerSegment;
  var modules = clear();
  var EMPTY = {};
  var CYCLE_DETECTED = {};
  var _ref = {},
    hasOwnProperty = _ref.hasOwnProperty;
  function clear() {
    modules = new Map();
    return modules;
  }
  function define(factory, moduleId, dependencyMap) {
    if (modules.has(moduleId)) {
      return;
    }
    var mod = {
      dependencyMap: dependencyMap,
      factory: factory,
      hasError: false,
      importedAll: EMPTY,
      importedDefault: EMPTY,
      isInitialized: false,
      publicModule: {
        exports: {}
      }
    };
    modules.set(moduleId, mod);
  }
  function metroRequire(moduleId) {
    var moduleIdReallyIsNumber = moduleId;
    var module = modules.get(moduleIdReallyIsNumber);
    return module && module.isInitialized ? module.publicModule.exports : guardedLoadModule(moduleIdReallyIsNumber, module);
  }
  function metroImportDefault(moduleId) {
    var moduleIdReallyIsNumber = moduleId;
    var maybeInitializedModule = modules.get(moduleIdReallyIsNumber);
    if (maybeInitializedModule && maybeInitializedModule.importedDefault !== EMPTY) {
      return maybeInitializedModule.importedDefault;
    }
    var exports = metroRequire(moduleIdReallyIsNumber);
    var importedDefault = exports && exports.__esModule ? exports.default : exports;
    var initializedModule = modules.get(moduleIdReallyIsNumber);
    return initializedModule.importedDefault = importedDefault;
  }
  metroRequire.importDefault = metroImportDefault;
  function metroImportAll(moduleId) {
    var moduleIdReallyIsNumber = moduleId;
    var maybeInitializedModule = modules.get(moduleIdReallyIsNumber);
    if (maybeInitializedModule && maybeInitializedModule.importedAll !== EMPTY) {
      return maybeInitializedModule.importedAll;
    }
    var exports = metroRequire(moduleIdReallyIsNumber);
    var importedAll;
    if (exports && exports.__esModule) {
      importedAll = exports;
    } else {
      importedAll = {};
      if (exports) {
        for (var key in exports) {
          if (hasOwnProperty.call(exports, key)) {
            importedAll[key] = exports[key];
          }
        }
      }
      importedAll.default = exports;
    }
    var initializedModule = modules.get(moduleIdReallyIsNumber);
    return initializedModule.importedAll = importedAll;
  }
  metroRequire.importAll = metroImportAll;
  metroRequire.context = function fallbackRequireContext() {
    throw new Error("The experimental Metro feature `require.context` is not enabled in your project.");
  };
  metroRequire.resolveWeak = function fallbackRequireResolveWeak() {
    throw new Error("require.resolveWeak cannot be called dynamically.");
  };
  var inGuard = false;
  function guardedLoadModule(moduleId, module) {
    if (!inGuard && global.ErrorUtils) {
      inGuard = true;
      var returnValue;
      try {
        returnValue = loadModuleImplementation(moduleId, module);
      } catch (e) {
        global.ErrorUtils.reportFatalError(e);
      }
      inGuard = false;
      return returnValue;
    } else {
      return loadModuleImplementation(moduleId, module);
    }
  }
  var ID_MASK_SHIFT = 16;
  var LOCAL_ID_MASK = 65535;
  function unpackModuleId(moduleId) {
    var segmentId = moduleId >>> ID_MASK_SHIFT;
    var localId = moduleId & LOCAL_ID_MASK;
    return {
      segmentId: segmentId,
      localId: localId
    };
  }
  metroRequire.unpackModuleId = unpackModuleId;
  function packModuleId(value) {
    return (value.segmentId << ID_MASK_SHIFT) + value.localId;
  }
  metroRequire.packModuleId = packModuleId;
  var moduleDefinersBySegmentID = [];
  var definingSegmentByModuleID = new Map();
  function registerSegment(segmentId, moduleDefiner, moduleIds) {
    moduleDefinersBySegmentID[segmentId] = moduleDefiner;
    if (moduleIds) {
      moduleIds.forEach(function (moduleId) {
        if (!modules.has(moduleId) && !definingSegmentByModuleID.has(moduleId)) {
          definingSegmentByModuleID.set(moduleId, segmentId);
        }
      });
    }
  }
  function loadModuleImplementation(moduleId, module) {
    if (!module && moduleDefinersBySegmentID.length > 0) {
      var _definingSegmentByMod;
      var segmentId = (_definingSegmentByMod = definingSegmentByModuleID.get(moduleId)) != null ? _definingSegmentByMod : 0;
      var definer = moduleDefinersBySegmentID[segmentId];
      if (definer != null) {
        definer(moduleId);
        module = modules.get(moduleId);
        definingSegmentByModuleID.delete(moduleId);
      }
    }
    var nativeRequire = global.nativeRequire;
    if (!module && nativeRequire) {
      var _unpackModuleId = unpackModuleId(moduleId),
        _segmentId = _unpackModuleId.segmentId,
        localId = _unpackModuleId.localId;
      nativeRequire(localId, _segmentId);
      module = modules.get(moduleId);
    }
    if (!module) {
      throw unknownModuleError(moduleId);
    }
    if (module.hasError) {
      throw module.error;
    }
    module.isInitialized = true;
    var _module = module,
      factory = _module.factory,
      dependencyMap = _module.dependencyMap;
    try {
      var moduleObject = module.publicModule;
      moduleObject.id = moduleId;
      factory(global, metroRequire, metroImportDefault, metroImportAll, moduleObject, moduleObject.exports, dependencyMap);
      {
        module.factory = undefined;
        module.dependencyMap = undefined;
      }
      return moduleObject.exports;
    } catch (e) {
      module.hasError = true;
      module.error = e;
      module.isInitialized = false;
      module.publicModule.exports = undefined;
      throw e;
    } finally {}
  }
  function unknownModuleError(id) {
    var message = 'Requiring unknown module "' + id + '".';
    return Error(message);
  }
})(typeof globalThis !== 'undefined' ? globalThis : typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this);
(function (global) {
  /**
   * Copyright (c) Meta Platforms, Inc. and affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * @polyfill
   * @nolint
   * @format
   */

  'use client';

  /* eslint-disable no-shadow, eqeqeq, curly, no-unused-vars, no-void, no-control-regex  */

  /**
   * This pipes all of our console logging functions to native logging so that
   * JavaScript errors in required modules show up in Xcode via NSLog.
   */
  var inspect = function () {
    // Copyright Joyent, Inc. and other Node contributors.
    //
    // Permission is hereby granted, free of charge, to any person obtaining a
    // copy of this software and associated documentation files (the
    // "Software"), to deal in the Software without restriction, including
    // without limitation the rights to use, copy, modify, merge, publish,
    // distribute, sublicense, and/or sell copies of the Software, and to permit
    // persons to whom the Software is furnished to do so, subject to the
    // following conditions:
    //
    // The above copyright notice and this permission notice shall be included
    // in all copies or substantial portions of the Software.
    //
    // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
    // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
    // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
    // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
    // USE OR OTHER DEALINGS IN THE SOFTWARE.
    //
    // https://github.com/joyent/node/blob/master/lib/util.js

    function inspect(obj, opts) {
      var ctx = {
        seen: [],
        formatValueCalls: 0,
        stylize: stylizeNoColor
      };
      return formatValue(ctx, obj, opts.depth);
    }
    function stylizeNoColor(str, styleType) {
      return str;
    }
    function arrayToHash(array) {
      var hash = {};
      array.forEach(function (val, idx) {
        hash[val] = true;
      });
      return hash;
    }
    function formatValue(ctx, value, recurseTimes) {
      ctx.formatValueCalls++;
      if (ctx.formatValueCalls > 200) {
        return `[TOO BIG formatValueCalls ${ctx.formatValueCalls} exceeded limit of 200]`;
      }

      // Primitive types cannot have properties
      var primitive = formatPrimitive(ctx, value);
      if (primitive) {
        return primitive;
      }

      // Look up the keys of the object.
      var keys = Object.keys(value);
      var visibleKeys = arrayToHash(keys);

      // IE doesn't make error fields non-enumerable
      // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
      if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
        return formatError(value);
      }

      // Some type of object without properties can be shortcutted.
      if (keys.length === 0) {
        if (isFunction(value)) {
          var name = value.name ? ': ' + value.name : '';
          return ctx.stylize('[Function' + name + ']', 'special');
        }
        if (isRegExp(value)) {
          return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
        }
        if (isDate(value)) {
          return ctx.stylize(Date.prototype.toString.call(value), 'date');
        }
        if (isError(value)) {
          return formatError(value);
        }
      }
      var base = '',
        array = false,
        braces = ['{', '}'];

      // Make Array say that they are Array
      if (isArray(value)) {
        array = true;
        braces = ['[', ']'];
      }

      // Make functions say that they are functions
      if (isFunction(value)) {
        var n = value.name ? ': ' + value.name : '';
        base = ' [Function' + n + ']';
      }

      // Make RegExps say that they are RegExps
      if (isRegExp(value)) {
        base = ' ' + RegExp.prototype.toString.call(value);
      }

      // Make dates with properties first say the date
      if (isDate(value)) {
        base = ' ' + Date.prototype.toUTCString.call(value);
      }

      // Make error with message first say the error
      if (isError(value)) {
        base = ' ' + formatError(value);
      }
      if (keys.length === 0 && (!array || value.length == 0)) {
        return braces[0] + base + braces[1];
      }
      if (recurseTimes < 0) {
        if (isRegExp(value)) {
          return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
        } else {
          return ctx.stylize('[Object]', 'special');
        }
      }
      ctx.seen.push(value);
      var output;
      if (array) {
        output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
      } else {
        output = keys.map(function (key) {
          return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
        });
      }
      ctx.seen.pop();
      return reduceToSingleString(output, base, braces);
    }
    function formatPrimitive(ctx, value) {
      if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');
      if (isString(value)) {
        var simple = "'" + JSON.stringify(value).replace(/^"|"$/g, '').replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
        return ctx.stylize(simple, 'string');
      }
      if (isNumber(value)) return ctx.stylize('' + value, 'number');
      if (isBoolean(value)) return ctx.stylize('' + value, 'boolean');
      // For some reason typeof null is "object", so special case here.
      if (isNull(value)) return ctx.stylize('null', 'null');
    }
    function formatError(value) {
      return '[' + Error.prototype.toString.call(value) + ']';
    }
    function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
      var output = [];
      for (var i = 0, l = value.length; i < l; ++i) {
        if (hasOwnProperty(value, String(i))) {
          output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));
        } else {
          output.push('');
        }
      }
      keys.forEach(function (key) {
        if (!key.match(/^\d+$/)) {
          output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));
        }
      });
      return output;
    }
    function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
      var name, str, desc;
      desc = Object.getOwnPropertyDescriptor(value, key) || {
        value: value[key]
      };
      if (desc.get) {
        if (desc.set) {
          str = ctx.stylize('[Getter/Setter]', 'special');
        } else {
          str = ctx.stylize('[Getter]', 'special');
        }
      } else {
        if (desc.set) {
          str = ctx.stylize('[Setter]', 'special');
        }
      }
      if (!hasOwnProperty(visibleKeys, key)) {
        name = '[' + key + ']';
      }
      if (!str) {
        if (ctx.seen.indexOf(desc.value) < 0) {
          if (isNull(recurseTimes)) {
            str = formatValue(ctx, desc.value, null);
          } else {
            str = formatValue(ctx, desc.value, recurseTimes - 1);
          }
          if (str.indexOf('\n') > -1) {
            if (array) {
              str = str.split('\n').map(function (line) {
                return '  ' + line;
              }).join('\n').slice(2);
            } else {
              str = '\n' + str.split('\n').map(function (line) {
                return '   ' + line;
              }).join('\n');
            }
          }
        } else {
          str = ctx.stylize('[Circular]', 'special');
        }
      }
      if (isUndefined(name)) {
        if (array && key.match(/^\d+$/)) {
          return str;
        }
        name = JSON.stringify('' + key);
        if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
          name = name.slice(1, name.length - 1);
          name = ctx.stylize(name, 'name');
        } else {
          name = name.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'");
          name = ctx.stylize(name, 'string');
        }
      }
      return name + ': ' + str;
    }
    function reduceToSingleString(output, base, braces) {
      var numLinesEst = 0;
      var length = output.reduce(function (prev, cur) {
        numLinesEst++;
        if (cur.indexOf('\n') >= 0) numLinesEst++;
        return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
      }, 0);
      if (length > 60) {
        return braces[0] + (base === '' ? '' : base + '\n ') + ' ' + output.join(',\n  ') + ' ' + braces[1];
      }
      return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
    }

    // NOTE: These type checking functions intentionally don't use `instanceof`
    // because it is fragile and can be easily faked with `Object.create()`.
    function isArray(ar) {
      return Array.isArray(ar);
    }
    function isBoolean(arg) {
      return typeof arg === 'boolean';
    }
    function isNull(arg) {
      return arg === null;
    }
    function isNumber(arg) {
      return typeof arg === 'number';
    }
    function isString(arg) {
      return typeof arg === 'string';
    }
    function isUndefined(arg) {
      return arg === undefined;
    }
    function isRegExp(re) {
      return isObject(re) && objectToString(re) === '[object RegExp]';
    }
    function isObject(arg) {
      return typeof arg === 'object' && arg !== null;
    }
    function isDate(d) {
      return isObject(d) && objectToString(d) === '[object Date]';
    }
    function isError(e) {
      return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);
    }
    function isFunction(arg) {
      return typeof arg === 'function';
    }
    function objectToString(o) {
      return Object.prototype.toString.call(o);
    }
    function hasOwnProperty(obj, prop) {
      return Object.prototype.hasOwnProperty.call(obj, prop);
    }
    return inspect;
  }();
  var INDEX_COLUMN_NAME = '(index)';
  var LOG_LEVELS = {
    trace: 0,
    info: 1,
    warn: 2,
    error: 3
  };
  function getNativeLogFunction(level) {
    return function () {
      var str;
      if (arguments.length === 1 && typeof arguments[0] === 'string') {
        str = arguments[0];
      } else {
        str = Array.prototype.map.call(arguments, function (arg) {
          return inspect(arg, {
            depth: 10
          });
        }).join(', ');
      }

      // TRICKY
      // If more than one argument is provided, the code above collapses them all
      // into a single formatted string. This transform wraps string arguments in
      // single quotes (e.g. "foo" -> "'foo'") which then breaks the "Warning:"
      // check below. So it's important that we look at the first argument, rather
      // than the formatted argument string.
      var firstArg = arguments[0];
      var logLevel = level;
      if (typeof firstArg === 'string' && firstArg.slice(0, 9) === 'Warning: ' && logLevel >= LOG_LEVELS.error) {
        // React warnings use console.error so that a stack trace is shown,
        // but we don't (currently) want these to show a redbox
        // (Note: Logic duplicated in ExceptionsManager.js.)
        logLevel = LOG_LEVELS.warn;
      }
      if (groupStack.length) {
        str = groupFormat('', str);
      }
      global.nativeLoggingHook(str, logLevel);
    };
  }
  function repeat(element, n) {
    return Array.apply(null, Array(n)).map(function () {
      return element;
    });
  }
  function formatCellValue(cell, key) {
    if (key === INDEX_COLUMN_NAME) {
      return cell[key];
    }
    if (cell.hasOwnProperty(key)) {
      var cellValue = cell[key];
      switch (typeof cellValue) {
        case 'function':
          return 'ƒ';
        case 'string':
          return "'" + cellValue + "'";
        case 'object':
          return cellValue == null ? 'null' : '{…}';
      }
      return String(cellValue);
    }
    return '';
  }
  function consoleTablePolyfill(data, columns) {
    var rows;

    // convert object -> array
    if (Array.isArray(data)) {
      rows = data.map(function (row, index) {
        var processedRow = {};
        processedRow[INDEX_COLUMN_NAME] = String(index);
        Object.assign(processedRow, row);
        return processedRow;
      });
    } else {
      rows = [];
      for (var key in data) {
        if (data.hasOwnProperty(key)) {
          var processedRow = {};
          processedRow[INDEX_COLUMN_NAME] = key;
          Object.assign(processedRow, data[key]);
          rows.push(processedRow);
        }
      }
    }
    if (rows.length === 0) {
      global.nativeLoggingHook('', LOG_LEVELS.info);
      return;
    }
    if (Array.isArray(columns)) {
      columns = [INDEX_COLUMN_NAME].concat(columns);
    } else {
      columns = Array.from(rows.reduce(function (columnSet, row) {
        Object.keys(row).forEach(function (key) {
          return columnSet.add(key);
        });
        return columnSet;
      }, new Set()));
    }
    var stringRows = [];
    var columnWidths = [];

    // Convert each cell to a string. Also
    // figure out max cell width for each column
    columns.forEach(function (k, i) {
      columnWidths[i] = k.length;
      for (var j = 0; j < rows.length; j++) {
        var cellStr = formatCellValue(rows[j], k);
        stringRows[j] = stringRows[j] || [];
        stringRows[j][i] = cellStr;
        columnWidths[i] = Math.max(columnWidths[i], cellStr.length);
      }
    });

    // Join all elements in the row into a single string with | separators
    // (appends extra spaces to each cell to make separators  | aligned)
    function joinRow(row, space) {
      var cells = row.map(function (cell, i) {
        var extraSpaces = repeat(' ', columnWidths[i] - cell.length).join('');
        return cell + extraSpaces;
      });
      space = space || ' ';
      return '| ' + cells.join(space + '|' + space) + ' |';
    }
    var separators = columnWidths.map(function (columnWidth) {
      return repeat('-', columnWidth).join('');
    });
    var separatorRow = joinRow(separators);
    var header = joinRow(columns);
    var table = [header, separatorRow];
    for (var i = 0; i < rows.length; i++) {
      table.push(joinRow(stringRows[i]));
    }

    // Notice extra empty line at the beginning.
    // Native logging hook adds "RCTLog >" at the front of every
    // logged string, which would shift the header and screw up
    // the table
    global.nativeLoggingHook('\n' + table.join('\n'), LOG_LEVELS.info);
  }
  var GROUP_PAD = "\u2502"; // Box light vertical
  var GROUP_OPEN = "\u2510"; // Box light down+left
  var GROUP_CLOSE = "\u2518"; // Box light up+left

  var groupStack = [];
  function groupFormat(prefix, msg) {
    // Insert group formatting before the console message
    return groupStack.join('') + prefix + ' ' + (msg || '');
  }
  function consoleGroupPolyfill(label) {
    global.nativeLoggingHook(groupFormat(GROUP_OPEN, label), LOG_LEVELS.info);
    groupStack.push(GROUP_PAD);
  }
  function consoleGroupCollapsedPolyfill(label) {
    global.nativeLoggingHook(groupFormat(GROUP_CLOSE, label), LOG_LEVELS.info);
    groupStack.push(GROUP_PAD);
  }
  function consoleGroupEndPolyfill() {
    groupStack.pop();
    global.nativeLoggingHook(groupFormat(GROUP_CLOSE), LOG_LEVELS.info);
  }
  function consoleAssertPolyfill(expression, label) {
    if (!expression) {
      global.nativeLoggingHook('Assertion failed: ' + label, LOG_LEVELS.error);
    }
  }
  if (global.nativeLoggingHook) {
    var originalConsole = global.console;
    // Preserve the original `console` as `originalConsole`

    global.console = Object.assign({}, originalConsole != null ? originalConsole : {}, {
      error: getNativeLogFunction(LOG_LEVELS.error),
      info: getNativeLogFunction(LOG_LEVELS.info),
      log: getNativeLogFunction(LOG_LEVELS.info),
      warn: getNativeLogFunction(LOG_LEVELS.warn),
      trace: getNativeLogFunction(LOG_LEVELS.trace),
      debug: getNativeLogFunction(LOG_LEVELS.trace),
      table: consoleTablePolyfill,
      group: consoleGroupPolyfill,
      groupEnd: consoleGroupEndPolyfill,
      groupCollapsed: consoleGroupCollapsedPolyfill,
      assert: consoleAssertPolyfill
    });

    // TODO(T206796580): This was copy-pasted from ExceptionsManager.js
    // Delete the copy there after the c++ pipeline is rolled out everywhere.
    if (global.RN$useAlwaysAvailableJSErrorHandling === true) {
      var stringifySafe = function stringifySafe(arg) {
        return inspect(arg, {
          depth: 10
        }).replace(/\n\s*/g, ' ');
      };
      var originalConsoleError = console.error;
      console.reportErrorsAsExceptions = true;
      console.error = function () {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        originalConsoleError.apply(this, args);
        if (!console.reportErrorsAsExceptions) {
          return;
        }
        if (global.RN$inExceptionHandler != null && global.RN$inExceptionHandler()) {
          return;
        }
        var error;
        var firstArg = args[0];
        if (firstArg != null && firstArg.stack) {
          // RN$handleException will console.error this with high enough fidelity.
          error = firstArg;
        } else {
          if (typeof firstArg === 'string' && firstArg.startsWith('Warning: ')) {
            // React warnings use console.error so that a stack trace is shown, but
            // we don't (currently) want these to show a redbox
            return;
          }
          var message = args.map(function (arg) {
            return typeof arg === 'string' ? arg : stringifySafe(arg);
          }).join(' ');
          error = new Error(message);
          error.name = 'console.error';
        }
        var isFatal = false;
        var reportToConsole = false;
        global.RN$handleException(error, isFatal, reportToConsole);
      };
    }
    Object.defineProperty(console, '_isPolyfilled', {
      value: true,
      enumerable: false
    });

    // If available, also call the original `console` method since that is
    // sometimes useful. Ex: on OS X, this will let you see rich output in
    // the Safari Web Inspector console.
  } else if (!global.console) {
    var stub = function stub() {};
    var log = global.print || stub;
    global.console = {
      debug: log,
      error: log,
      info: log,
      log: log,
      trace: log,
      warn: log,
      assert: function assert(expression, label) {
        if (!expression) {
          log('Assertion failed: ' + label);
        }
      },
      clear: stub,
      dir: stub,
      dirxml: stub,
      group: stub,
      groupCollapsed: stub,
      groupEnd: stub,
      profile: stub,
      profileEnd: stub,
      table: stub
    };
    Object.defineProperty(console, '_isPolyfilled', {
      value: true,
      enumerable: false
    });
  }
})(typeof globalThis !== 'undefined' ? globalThis : typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this);
(function (global) {
  var _inGuard = 0;
  var _globalHandler = global.RN$useAlwaysAvailableJSErrorHandling === true ? global.RN$handleException : function (e, isFatal) {
    throw e;
  };
  var ErrorUtils = {
    setGlobalHandler: function setGlobalHandler(fun) {
      _globalHandler = fun;
    },
    getGlobalHandler: function getGlobalHandler() {
      return _globalHandler;
    },
    reportError: function reportError(error) {
      _globalHandler && _globalHandler(error, false);
    },
    reportFatalError: function reportFatalError(error) {
      _globalHandler && _globalHandler(error, true);
    },
    applyWithGuard: function applyWithGuard(fun, context, args, unused_onError, unused_name) {
      try {
        _inGuard++;
        return fun.apply(context, args);
      } catch (e) {
        ErrorUtils.reportError(e);
      } finally {
        _inGuard--;
      }
      return null;
    },
    applyWithGuardIfNeeded: function applyWithGuardIfNeeded(fun, context, args) {
      if (ErrorUtils.inGuard()) {
        return fun.apply(context, args);
      } else {
        ErrorUtils.applyWithGuard(fun, context, args);
      }
      return null;
    },
    inGuard: function inGuard() {
      return !!_inGuard;
    },
    guard: function guard(fun, name, context) {
      var _ref;
      if (typeof fun !== 'function') {
        console.warn('A function must be passed to ErrorUtils.guard, got ', fun);
        return null;
      }
      var guardName = (_ref = name != null ? name : fun.name) != null ? _ref : '<generated guard>';
      function guarded() {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return ErrorUtils.applyWithGuard(fun, context != null ? context : this, args, null, guardName);
      }
      return guarded;
    }
  };
  global.ErrorUtils = ErrorUtils;
})(typeof globalThis !== 'undefined' ? globalThis : typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  var _reactNative = _$$_REQUIRE(_dependencyMap[1]);
  var _App = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  /**
   * @format
   */

  _reactNative.AppRegistry.registerComponent(_$$_REQUIRE(_dependencyMap[3]).name, function () {
    return _App.default;
  });
},0,[1,2,497,606]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
      "default": e
    };
  }
  module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;
},1,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';
  'use client';

  module.exports = {
    get registerCallableModule() {
      return _$$_REQUIRE(_dependencyMap[0]).default;
    },
    get AccessibilityInfo() {
      return _$$_REQUIRE(_dependencyMap[1]).default;
    },
    get ActivityIndicator() {
      return _$$_REQUIRE(_dependencyMap[2]).default;
    },
    get Button() {
      return _$$_REQUIRE(_dependencyMap[3]).default;
    },
    get DrawerLayoutAndroid() {
      return _$$_REQUIRE(_dependencyMap[4]).default;
    },
    get FlatList() {
      return _$$_REQUIRE(_dependencyMap[5]).default;
    },
    get Image() {
      return _$$_REQUIRE(_dependencyMap[6]).default;
    },
    get ImageBackground() {
      return _$$_REQUIRE(_dependencyMap[7]).default;
    },
    get InputAccessoryView() {
      return _$$_REQUIRE(_dependencyMap[8]).default;
    },
    get experimental_LayoutConformance() {
      return _$$_REQUIRE(_dependencyMap[9]).default;
    },
    get KeyboardAvoidingView() {
      return _$$_REQUIRE(_dependencyMap[10]).default;
    },
    get Modal() {
      return _$$_REQUIRE(_dependencyMap[11]).default;
    },
    get Pressable() {
      return _$$_REQUIRE(_dependencyMap[12]).default;
    },
    get ProgressBarAndroid() {
      _$$_REQUIRE(_dependencyMap[13]).default('progress-bar-android-moved', "ProgressBarAndroid has been extracted from react-native core and will be removed in a future release. It can now be installed and imported from '@react-native-community/progress-bar-android' instead of 'react-native'. See https://github.com/react-native-progress-view/progress-bar-android");
      return _$$_REQUIRE(_dependencyMap[14]).default;
    },
    get RefreshControl() {
      return _$$_REQUIRE(_dependencyMap[15]).default;
    },
    get SafeAreaView() {
      return _$$_REQUIRE(_dependencyMap[16]).default;
    },
    get ScrollView() {
      return _$$_REQUIRE(_dependencyMap[17]).default;
    },
    get SectionList() {
      return _$$_REQUIRE(_dependencyMap[18]).default;
    },
    get StatusBar() {
      return _$$_REQUIRE(_dependencyMap[19]).default;
    },
    get Switch() {
      return _$$_REQUIRE(_dependencyMap[20]).default;
    },
    get Text() {
      return _$$_REQUIRE(_dependencyMap[21]).default;
    },
    get TextInput() {
      return _$$_REQUIRE(_dependencyMap[22]).default;
    },
    get Touchable() {
      return _$$_REQUIRE(_dependencyMap[23]).default;
    },
    get TouchableHighlight() {
      return _$$_REQUIRE(_dependencyMap[24]).default;
    },
    get TouchableNativeFeedback() {
      return _$$_REQUIRE(_dependencyMap[25]).default;
    },
    get TouchableOpacity() {
      return _$$_REQUIRE(_dependencyMap[26]).default;
    },
    get TouchableWithoutFeedback() {
      return _$$_REQUIRE(_dependencyMap[27]).default;
    },
    get View() {
      return _$$_REQUIRE(_dependencyMap[28]).default;
    },
    get VirtualizedList() {
      return _$$_REQUIRE(_dependencyMap[29]).default;
    },
    get VirtualizedSectionList() {
      return _$$_REQUIRE(_dependencyMap[30]).default;
    },
    get ActionSheetIOS() {
      return _$$_REQUIRE(_dependencyMap[31]).default;
    },
    get Alert() {
      return _$$_REQUIRE(_dependencyMap[32]).default;
    },
    get Animated() {
      return _$$_REQUIRE(_dependencyMap[33]).default;
    },
    get Appearance() {
      return _$$_REQUIRE(_dependencyMap[34]);
    },
    get AppRegistry() {
      return _$$_REQUIRE(_dependencyMap[35]).default;
    },
    get AppState() {
      return _$$_REQUIRE(_dependencyMap[36]).default;
    },
    get BackHandler() {
      return _$$_REQUIRE(_dependencyMap[37]).default;
    },
    get Clipboard() {
      _$$_REQUIRE(_dependencyMap[13]).default('clipboard-moved', "Clipboard has been extracted from react-native core and will be removed in a future release. It can now be installed and imported from '@react-native-clipboard/clipboard' instead of 'react-native'. See https://github.com/react-native-clipboard/clipboard");
      return _$$_REQUIRE(_dependencyMap[38]).default;
    },
    get DeviceInfo() {
      return _$$_REQUIRE(_dependencyMap[39]).default;
    },
    get DevMenu() {
      return _$$_REQUIRE(_dependencyMap[40]).default;
    },
    get DevSettings() {
      return _$$_REQUIRE(_dependencyMap[41]).default;
    },
    get Dimensions() {
      return _$$_REQUIRE(_dependencyMap[42]).default;
    },
    get Easing() {
      return _$$_REQUIRE(_dependencyMap[43]).default;
    },
    get findNodeHandle() {
      return _$$_REQUIRE(_dependencyMap[44]).findNodeHandle;
    },
    get I18nManager() {
      return _$$_REQUIRE(_dependencyMap[45]).default;
    },
    get InteractionManager() {
      return _$$_REQUIRE(_dependencyMap[46]).default;
    },
    get Keyboard() {
      return _$$_REQUIRE(_dependencyMap[47]).default;
    },
    get LayoutAnimation() {
      return _$$_REQUIRE(_dependencyMap[48]).default;
    },
    get Linking() {
      return _$$_REQUIRE(_dependencyMap[49]).default;
    },
    get LogBox() {
      return _$$_REQUIRE(_dependencyMap[50]).default;
    },
    get NativeDialogManagerAndroid() {
      return _$$_REQUIRE(_dependencyMap[51]).default;
    },
    get NativeEventEmitter() {
      return _$$_REQUIRE(_dependencyMap[52]).default;
    },
    get Networking() {
      return _$$_REQUIRE(_dependencyMap[53]).default;
    },
    get PanResponder() {
      return _$$_REQUIRE(_dependencyMap[54]).default;
    },
    get PermissionsAndroid() {
      return _$$_REQUIRE(_dependencyMap[55]).default;
    },
    get PixelRatio() {
      return _$$_REQUIRE(_dependencyMap[56]).default;
    },
    get PushNotificationIOS() {
      _$$_REQUIRE(_dependencyMap[13]).default('pushNotificationIOS-moved', "PushNotificationIOS has been extracted from react-native core and will be removed in a future release. It can now be installed and imported from '@react-native-community/push-notification-ios' instead of 'react-native'. See https://github.com/react-native-push-notification/ios");
      return _$$_REQUIRE(_dependencyMap[57]).default;
    },
    get Settings() {
      return _$$_REQUIRE(_dependencyMap[58]).default;
    },
    get Share() {
      return _$$_REQUIRE(_dependencyMap[59]).default;
    },
    get StyleSheet() {
      return _$$_REQUIRE(_dependencyMap[60]).default;
    },
    get Systrace() {
      return _$$_REQUIRE(_dependencyMap[61]);
    },
    get ToastAndroid() {
      return _$$_REQUIRE(_dependencyMap[62]).default;
    },
    get TurboModuleRegistry() {
      return _$$_REQUIRE(_dependencyMap[63]);
    },
    get UIManager() {
      return _$$_REQUIRE(_dependencyMap[64]).default;
    },
    get unstable_batchedUpdates() {
      return _$$_REQUIRE(_dependencyMap[44]).unstable_batchedUpdates;
    },
    get useAnimatedValue() {
      return _$$_REQUIRE(_dependencyMap[65]).default;
    },
    get useColorScheme() {
      return _$$_REQUIRE(_dependencyMap[66]).default;
    },
    get useWindowDimensions() {
      return _$$_REQUIRE(_dependencyMap[67]).default;
    },
    get UTFSequence() {
      return _$$_REQUIRE(_dependencyMap[68]).default;
    },
    get Vibration() {
      return _$$_REQUIRE(_dependencyMap[69]).default;
    },
    get DeviceEventEmitter() {
      return _$$_REQUIRE(_dependencyMap[70]).default;
    },
    get DynamicColorIOS() {
      return _$$_REQUIRE(_dependencyMap[71]).DynamicColorIOS;
    },
    get NativeAppEventEmitter() {
      return _$$_REQUIRE(_dependencyMap[72]).default;
    },
    get NativeModules() {
      return _$$_REQUIRE(_dependencyMap[73]).default;
    },
    get Platform() {
      return _$$_REQUIRE(_dependencyMap[74]).default;
    },
    get PlatformColor() {
      return _$$_REQUIRE(_dependencyMap[75]).PlatformColor;
    },
    get processColor() {
      return _$$_REQUIRE(_dependencyMap[76]).default;
    },
    get requireNativeComponent() {
      return _$$_REQUIRE(_dependencyMap[77]).default;
    },
    get RootTagContext() {
      return _$$_REQUIRE(_dependencyMap[78]).RootTagContext;
    }
  };
},2,[3,21,275,284,403,344,362,411,412,419,421,422,431,141,276,373,413,378,400,404,433,285,438,442,446,297,298,447,248,448,449,450,221,299,453,233,456,258,460,463,464,466,113,322,57,428,318,384,385,469,474,223,191,190,475,477,112,480,483,484,253,17,487,36,44,490,491,416,492,493,22,496,228,37,33,92,89,280,255]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var registerCallableModule = function () {
    if (global.RN$Bridgeless === true) {
      return function (name, moduleOrFactory) {
        if (typeof moduleOrFactory === 'function') {
          global.RN$registerCallableModule(name, moduleOrFactory);
          return;
        }
        global.RN$registerCallableModule(name, function () {
          return moduleOrFactory;
        });
      };
    }
    var BatchedBridge = _$$_REQUIRE(_dependencyMap[0]).default;
    return function (name, moduleOrFactory) {
      if (typeof moduleOrFactory === 'function') {
        BatchedBridge.registerLazyCallableModule(name, moduleOrFactory);
        return;
      }
      BatchedBridge.registerCallableModule(name, moduleOrFactory);
    };
  }();
  var _default = exports.default = registerCallableModule;
},3,[4]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var BatchedBridge = new (_$$_REQUIRE(_dependencyMap[0]).default)();
  Object.defineProperty(global, '__fbBatchedBridge', {
    configurable: true,
    value: BatchedBridge
  });
  var _default = exports.default = BatchedBridge;
},4,[5]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var TO_JS = 0;
  var TO_NATIVE = 1;
  var MODULE_IDS = 0;
  var METHOD_IDS = 1;
  var PARAMS = 2;
  var MIN_TIME_BETWEEN_FLUSHES_MS = 5;
  var TRACE_TAG_REACT_APPS = 131072;
  var DEBUG_INFO_LIMIT = 32;
  var MessageQueue = /*#__PURE__*/function () {
    function MessageQueue() {
      (0, _classCallCheck2.default)(this, MessageQueue);
      this._lazyCallableModules = {};
      this._queue = [[], [], [], 0];
      this._successCallbacks = new Map();
      this._failureCallbacks = new Map();
      this._callID = 0;
      this._lastFlush = 0;
      this._eventLoopStartTime = Date.now();
      this._reactNativeMicrotasksCallback = null;
      this.callFunctionReturnFlushedQueue = this.callFunctionReturnFlushedQueue.bind(this);
      this.flushedQueue = this.flushedQueue.bind(this);
      this.invokeCallbackAndReturnFlushedQueue = this.invokeCallbackAndReturnFlushedQueue.bind(this);
    }
    return (0, _createClass2.default)(MessageQueue, [{
      key: "callFunctionReturnFlushedQueue",
      value: function callFunctionReturnFlushedQueue(module, method, args) {
        var _this = this;
        this.__guard(function () {
          _this.__callFunction(module, method, args);
        });
        return this.flushedQueue();
      }
    }, {
      key: "invokeCallbackAndReturnFlushedQueue",
      value: function invokeCallbackAndReturnFlushedQueue(cbID, args) {
        var _this2 = this;
        this.__guard(function () {
          _this2.__invokeCallback(cbID, args);
        });
        return this.flushedQueue();
      }
    }, {
      key: "flushedQueue",
      value: function flushedQueue() {
        var _this3 = this;
        this.__guard(function () {
          _this3.__callReactNativeMicrotasks();
        });
        var queue = this._queue;
        this._queue = [[], [], [], this._callID];
        return queue[0].length ? queue : null;
      }
    }, {
      key: "getEventLoopRunningTime",
      value: function getEventLoopRunningTime() {
        return Date.now() - this._eventLoopStartTime;
      }
    }, {
      key: "registerCallableModule",
      value: function registerCallableModule(name, module) {
        this._lazyCallableModules[name] = function () {
          return module;
        };
      }
    }, {
      key: "registerLazyCallableModule",
      value: function registerLazyCallableModule(name, factory) {
        var module;
        var getValue = factory;
        this._lazyCallableModules[name] = function () {
          if (getValue) {
            module = getValue();
            getValue = null;
          }
          return module;
        };
      }
    }, {
      key: "getCallableModule",
      value: function getCallableModule(name) {
        var getValue = this._lazyCallableModules[name];
        return getValue ? getValue() : null;
      }
    }, {
      key: "callNativeSyncHook",
      value: function callNativeSyncHook(moduleID, methodID, params, onFail, onSucc) {
        this.processCallbacks(moduleID, methodID, params, onFail, onSucc);
        return global.nativeCallSyncHook(moduleID, methodID, params);
      }
    }, {
      key: "processCallbacks",
      value: function processCallbacks(moduleID, methodID, params, onFail, onSucc) {
        var _this4 = this;
        if (onFail || onSucc) {
          onFail && params.push(this._callID << 1);
          onSucc && params.push(this._callID << 1 | 1);
          this._successCallbacks.set(this._callID, onSucc);
          this._failureCallbacks.set(this._callID, onFail);
        }
        this._callID++;
      }
    }, {
      key: "enqueueNativeCall",
      value: function enqueueNativeCall(moduleID, methodID, params, onFail, onSucc) {
        this.processCallbacks(moduleID, methodID, params, onFail, onSucc);
        this._queue[MODULE_IDS].push(moduleID);
        this._queue[METHOD_IDS].push(methodID);
        this._queue[PARAMS].push(params);
        var now = Date.now();
        if (global.nativeFlushQueueImmediate && now - this._lastFlush >= MIN_TIME_BETWEEN_FLUSHES_MS) {
          var queue = this._queue;
          this._queue = [[], [], [], this._callID];
          this._lastFlush = now;
          global.nativeFlushQueueImmediate(queue);
        }
        _$$_REQUIRE(_dependencyMap[4]).counterEvent('pending_js_to_native_queue', this._queue[0].length);
        if (this.__spy) {
          this.__spy({
            type: TO_NATIVE,
            module: moduleID + '',
            method: methodID,
            args: params
          });
        }
      }
    }, {
      key: "createDebugLookup",
      value: function createDebugLookup(moduleID, name, methods) {}
    }, {
      key: "setReactNativeMicrotasksCallback",
      value: function setReactNativeMicrotasksCallback(fn) {
        this._reactNativeMicrotasksCallback = fn;
      }
    }, {
      key: "__guard",
      value: function __guard(fn) {
        if (this.__shouldPauseOnThrow()) {
          fn();
        } else {
          try {
            fn();
          } catch (error) {
            _$$_REQUIRE(_dependencyMap[5]).default.reportFatalError(error);
          }
        }
      }
    }, {
      key: "__shouldPauseOnThrow",
      value: function __shouldPauseOnThrow() {
        return typeof DebuggerInternal !== 'undefined' && DebuggerInternal.shouldPauseOnThrow === true;
      }
    }, {
      key: "__callReactNativeMicrotasks",
      value: function __callReactNativeMicrotasks() {
        _$$_REQUIRE(_dependencyMap[4]).beginEvent('JSTimers.callReactNativeMicrotasks()');
        try {
          if (this._reactNativeMicrotasksCallback != null) {
            this._reactNativeMicrotasksCallback();
          }
        } finally {
          _$$_REQUIRE(_dependencyMap[4]).endEvent();
        }
      }
    }, {
      key: "__callFunction",
      value: function __callFunction(module, method, args) {
        this._lastFlush = Date.now();
        this._eventLoopStartTime = this._lastFlush;
        if (this.__spy) {
          _$$_REQUIRE(_dependencyMap[4]).beginEvent(`${module}.${method}(${_$$_REQUIRE(_dependencyMap[6]).default(args)})`);
        } else {
          _$$_REQUIRE(_dependencyMap[4]).beginEvent(`${module}.${method}(...)`);
        }
        try {
          if (this.__spy) {
            this.__spy({
              type: TO_JS,
              module: module,
              method: method,
              args: args
            });
          }
          var moduleMethods = this.getCallableModule(module);
          if (!moduleMethods) {
            var callableModuleNames = Object.keys(this._lazyCallableModules);
            var n = callableModuleNames.length;
            var callableModuleNameList = callableModuleNames.join(', ');
            var isBridgelessMode = global.RN$Bridgeless === true ? 'true' : 'false';
            _$$_REQUIRE(_dependencyMap[7])(false, `Failed to call into JavaScript module method ${module}.${method}(). Module has not been registered as callable. Bridgeless Mode: ${isBridgelessMode}. Registered callable JavaScript modules (n = ${n}): ${callableModuleNameList}.
          A frequent cause of the error is that the application entry file path is incorrect. This can also happen when the JS bundle is corrupt or there is an early initialization error when loading React Native.`);
          }
          if (!moduleMethods[method]) {
            _$$_REQUIRE(_dependencyMap[7])(false, `Failed to call into JavaScript module method ${module}.${method}(). Module exists, but the method is undefined.`);
          }
          moduleMethods[method].apply(moduleMethods, args);
        } finally {
          _$$_REQUIRE(_dependencyMap[4]).endEvent();
        }
      }
    }, {
      key: "__invokeCallback",
      value: function __invokeCallback(cbID, args) {
        this._lastFlush = Date.now();
        this._eventLoopStartTime = this._lastFlush;
        var callID = cbID >>> 1;
        var isSuccess = cbID & 1;
        var callback = isSuccess ? this._successCallbacks.get(callID) : this._failureCallbacks.get(callID);
        try {
          if (!callback) {
            return;
          }
          this._successCallbacks.delete(callID);
          this._failureCallbacks.delete(callID);
          callback.apply(undefined, (0, _toConsumableArray2.default)(args));
        } finally {}
      }
    }], [{
      key: "spy",
      value: function spy(spyOrToggle) {
        if (spyOrToggle === true) {
          MessageQueue.prototype.__spy = function (info) {
            console.log(`${info.type === TO_JS ? 'N->JS' : 'JS->N'} : ` + `${info.module != null ? info.module + '.' : ''}${info.method}` + `(${JSON.stringify(info.args)})`);
          };
        } else if (spyOrToggle === false) {
          MessageQueue.prototype.__spy = null;
        } else {
          MessageQueue.prototype.__spy = spyOrToggle;
        }
      }
    }]);
  }();
  var _default = exports.default = MessageQueue;
},5,[1,6,12,13,17,18,19,20]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _toConsumableArray(r) {
    return _$$_REQUIRE(_dependencyMap[0])(r) || _$$_REQUIRE(_dependencyMap[1])(r) || _$$_REQUIRE(_dependencyMap[2])(r) || _$$_REQUIRE(_dependencyMap[3])();
  }
  module.exports = _toConsumableArray, module.exports.__esModule = true, module.exports["default"] = module.exports;
},6,[7,9,10,11]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _arrayWithoutHoles(r) {
    if (Array.isArray(r)) return _$$_REQUIRE(_dependencyMap[0])(r);
  }
  module.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;
},7,[8]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _arrayLikeToArray(r, a) {
    (null == a || a > r.length) && (a = r.length);
    for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
    return n;
  }
  module.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;
},8,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _iterableToArray(r) {
    if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
  }
  module.exports = _iterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;
},9,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _unsupportedIterableToArray(r, a) {
    if (r) {
      if ("string" == typeof r) return _$$_REQUIRE(_dependencyMap[0])(r, a);
      var t = {}.toString.call(r).slice(8, -1);
      return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _$$_REQUIRE(_dependencyMap[0])(r, a) : undefined;
    }
  }
  module.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;
},10,[8]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  module.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports["default"] = module.exports;
},11,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
  }
  module.exports = _classCallCheck, module.exports.__esModule = true, module.exports["default"] = module.exports;
},12,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _defineProperties(e, r) {
    for (var t = 0; t < r.length; t++) {
      var o = r[t];
      o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _$$_REQUIRE(_dependencyMap[0])(o.key), o);
    }
  }
  function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
      writable: false
    }), e;
  }
  module.exports = _createClass, module.exports.__esModule = true, module.exports["default"] = module.exports;
},13,[14]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function toPropertyKey(t) {
    var i = _$$_REQUIRE(_dependencyMap[0])(t, "string");
    return "symbol" == _$$_REQUIRE(_dependencyMap[1])["default"](i) ? i : i + "";
  }
  module.exports = toPropertyKey, module.exports.__esModule = true, module.exports["default"] = module.exports;
},14,[15,16]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function toPrimitive(t, r) {
    if ("object" != _$$_REQUIRE(_dependencyMap[0])["default"](t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (undefined !== e) {
      var i = e.call(t, r || "default");
      if ("object" != _$$_REQUIRE(_dependencyMap[0])["default"](i)) return i;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
  }
  module.exports = toPrimitive, module.exports.__esModule = true, module.exports["default"] = module.exports;
},15,[16]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _typeof(o) {
    "@babel/helpers - typeof";

    return module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
      return typeof o;
    } : function (o) {
      return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, module.exports.__esModule = true, module.exports["default"] = module.exports, _typeof(o);
  }
  module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;
},16,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.beginAsyncEvent = beginAsyncEvent;
  exports.beginEvent = beginEvent;
  exports.counterEvent = counterEvent;
  exports.endAsyncEvent = endAsyncEvent;
  exports.endEvent = endEvent;
  exports.isEnabled = isEnabled;
  exports.setEnabled = setEnabled;
  var TRACE_TAG_REACT_APPS = 131072;
  var _asyncCookie = 0;
  function isEnabled() {
    return global.nativeTraceIsTracing ? global.nativeTraceIsTracing(TRACE_TAG_REACT_APPS) : Boolean(global.__RCTProfileIsProfiling);
  }
  function setEnabled(_doEnable) {}
  function beginEvent(eventName, args) {
    if (isEnabled()) {
      var eventNameString = typeof eventName === 'function' ? eventName() : eventName;
      global.nativeTraceBeginSection(TRACE_TAG_REACT_APPS, eventNameString, args);
    }
  }
  function endEvent(args) {
    if (isEnabled()) {
      global.nativeTraceEndSection(TRACE_TAG_REACT_APPS, args);
    }
  }
  function beginAsyncEvent(eventName, args) {
    var cookie = _asyncCookie;
    if (isEnabled()) {
      _asyncCookie++;
      var eventNameString = typeof eventName === 'function' ? eventName() : eventName;
      global.nativeTraceBeginAsyncSection(TRACE_TAG_REACT_APPS, eventNameString, cookie, args);
    }
    return cookie;
  }
  function endAsyncEvent(eventName, cookie, args) {
    if (isEnabled()) {
      var eventNameString = typeof eventName === 'function' ? eventName() : eventName;
      global.nativeTraceEndAsyncSection(TRACE_TAG_REACT_APPS, eventNameString, cookie, args);
    }
  }
  function counterEvent(eventName, value) {
    if (isEnabled()) {
      var eventNameString = typeof eventName === 'function' ? eventName() : eventName;
      global.nativeTraceCounter && global.nativeTraceCounter(TRACE_TAG_REACT_APPS, eventNameString, value);
    }
  }
},17,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = exports.default = global.ErrorUtils;
},18,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.createStringifySafeWithLimits = createStringifySafeWithLimits;
  exports.default = undefined;
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  function createStringifySafeWithLimits(limits) {
    var _limits$maxDepth = limits.maxDepth,
      maxDepth = _limits$maxDepth === undefined ? Number.POSITIVE_INFINITY : _limits$maxDepth,
      _limits$maxStringLimi = limits.maxStringLimit,
      maxStringLimit = _limits$maxStringLimi === undefined ? Number.POSITIVE_INFINITY : _limits$maxStringLimi,
      _limits$maxArrayLimit = limits.maxArrayLimit,
      maxArrayLimit = _limits$maxArrayLimit === undefined ? Number.POSITIVE_INFINITY : _limits$maxArrayLimit,
      _limits$maxObjectKeys = limits.maxObjectKeysLimit,
      maxObjectKeysLimit = _limits$maxObjectKeys === undefined ? Number.POSITIVE_INFINITY : _limits$maxObjectKeys;
    var stack = [];
    function replacer(key, value) {
      while (stack.length && this !== stack[0]) {
        stack.shift();
      }
      if (typeof value === 'string') {
        var truncatedString = '...(truncated)...';
        if (value.length > maxStringLimit + truncatedString.length) {
          return value.substring(0, maxStringLimit) + truncatedString;
        }
        return value;
      }
      if (typeof value !== 'object' || value === null) {
        return value;
      }
      var retval = value;
      if (Array.isArray(value)) {
        if (stack.length >= maxDepth) {
          retval = `[ ... array with ${value.length} values ... ]`;
        } else if (value.length > maxArrayLimit) {
          retval = value.slice(0, maxArrayLimit).concat([`... extra ${value.length - maxArrayLimit} values truncated ...`]);
        }
      } else {
        (0, _invariant.default)(typeof value === 'object', 'This was already found earlier');
        var keys = Object.keys(value);
        if (stack.length >= maxDepth) {
          retval = `{ ... object with ${keys.length} keys ... }`;
        } else if (keys.length > maxObjectKeysLimit) {
          retval = {};
          for (var k of keys.slice(0, maxObjectKeysLimit)) {
            retval[k] = value[k];
          }
          var truncatedKey = '...(truncated keys)...';
          retval[truncatedKey] = keys.length - maxObjectKeysLimit;
        }
      }
      stack.unshift(retval);
      return retval;
    }
    return function stringifySafe(arg) {
      if (arg === undefined) {
        return 'undefined';
      } else if (arg === null) {
        return 'null';
      } else if (typeof arg === 'function') {
        try {
          return arg.toString();
        } catch (e) {
          return '[function unknown]';
        }
      } else if (arg instanceof Error) {
        return arg.name + ': ' + arg.message;
      } else {
        try {
          var ret = JSON.stringify(arg, replacer);
          if (ret === undefined) {
            return '["' + typeof arg + '" failed to stringify]';
          }
          return ret;
        } catch (e) {
          if (typeof arg.toString === 'function') {
            try {
              return arg.toString();
            } catch (E) {}
          }
        }
      }
      return '["' + typeof arg + '" failed to stringify]';
    };
  }
  var stringifySafe = createStringifySafeWithLimits({
    maxDepth: 10,
    maxStringLimit: 100,
    maxArrayLimit: 50,
    maxObjectKeysLimit: 50
  });
  var _default = exports.default = stringifySafe;
},19,[1,20]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  'use strict';

  /**
   * Use invariant() to assert state which your program assumes to be true.
   *
   * Provide sprintf-style format (only %s is supported) and arguments
   * to provide information about what broke and what you were
   * expecting.
   *
   * The invariant message will be stripped in production, but the invariant
   * will remain to ensure logic does not differ in production.
   */
  var invariant = function invariant(condition, format, a, b, c, d, e, f) {
    if (!condition) {
      var error;
      if (format === undefined) {
        error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
      } else {
        var args = [a, b, c, d, e, f];
        var argIndex = 0;
        error = new Error(format.replace(/%s/g, function () {
          return args[argIndex++];
        }));
        error.name = 'Invariant Violation';
      }
      error.framesToPop = 1; // we don't care about invariant's own frame
      throw error;
    }
  };
  module.exports = invariant;
},20,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _RCTDeviceEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _legacySendAccessibilityEvent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _NativeAccessibilityInfo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _NativeAccessibilityManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var EventNames = _Platform.default.OS === 'android' ? new Map([['change', 'touchExplorationDidChange'], ['reduceMotionChanged', 'reduceMotionDidChange'], ['highTextContrastChanged', 'highTextContrastDidChange'], ['screenReaderChanged', 'touchExplorationDidChange'], ['accessibilityServiceChanged', 'accessibilityServiceDidChange'], ['invertColorsChanged', 'invertColorDidChange'], ['grayscaleChanged', 'grayscaleModeDidChange']]) : new Map([['announcementFinished', 'announcementFinished'], ['boldTextChanged', 'boldTextChanged'], ['change', 'screenReaderChanged'], ['grayscaleChanged', 'grayscaleChanged'], ['invertColorsChanged', 'invertColorsChanged'], ['reduceMotionChanged', 'reduceMotionChanged'], ['reduceTransparencyChanged', 'reduceTransparencyChanged'], ['screenReaderChanged', 'screenReaderChanged'], ['darkerSystemColorsChanged', 'darkerSystemColorsChanged']]);
  var AccessibilityInfo = {
    isBoldTextEnabled: function isBoldTextEnabled() {
      if (_Platform.default.OS === 'android') {
        return Promise.resolve(false);
      } else {
        return new Promise(function (resolve, reject) {
          if (_NativeAccessibilityManager.default != null) {
            _NativeAccessibilityManager.default.getCurrentBoldTextState(resolve, reject);
          } else {
            reject(null);
          }
        });
      }
    },
    isGrayscaleEnabled: function isGrayscaleEnabled() {
      if (_Platform.default.OS === 'android') {
        return new Promise(function (resolve, reject) {
          if ((_NativeAccessibilityInfo.default == null ? undefined : _NativeAccessibilityInfo.default.isGrayscaleEnabled) != null) {
            _NativeAccessibilityInfo.default.isGrayscaleEnabled(resolve);
          } else {
            reject(null);
          }
        });
      } else {
        return new Promise(function (resolve, reject) {
          if (_NativeAccessibilityManager.default != null) {
            _NativeAccessibilityManager.default.getCurrentGrayscaleState(resolve, reject);
          } else {
            reject(null);
          }
        });
      }
    },
    isInvertColorsEnabled: function isInvertColorsEnabled() {
      if (_Platform.default.OS === 'android') {
        return new Promise(function (resolve, reject) {
          if ((_NativeAccessibilityInfo.default == null ? undefined : _NativeAccessibilityInfo.default.isInvertColorsEnabled) != null) {
            _NativeAccessibilityInfo.default.isInvertColorsEnabled(resolve);
          } else {
            reject(null);
          }
        });
      } else {
        return new Promise(function (resolve, reject) {
          if (_NativeAccessibilityManager.default != null) {
            _NativeAccessibilityManager.default.getCurrentInvertColorsState(resolve, reject);
          } else {
            reject(null);
          }
        });
      }
    },
    isReduceMotionEnabled: function isReduceMotionEnabled() {
      return new Promise(function (resolve, reject) {
        if (_Platform.default.OS === 'android') {
          if (_NativeAccessibilityInfo.default != null) {
            _NativeAccessibilityInfo.default.isReduceMotionEnabled(resolve);
          } else {
            reject(null);
          }
        } else {
          if (_NativeAccessibilityManager.default != null) {
            _NativeAccessibilityManager.default.getCurrentReduceMotionState(resolve, reject);
          } else {
            reject(null);
          }
        }
      });
    },
    isHighTextContrastEnabled: function isHighTextContrastEnabled() {
      return new Promise(function (resolve, reject) {
        if (_Platform.default.OS === 'android') {
          if ((_NativeAccessibilityInfo.default == null ? undefined : _NativeAccessibilityInfo.default.isHighTextContrastEnabled) != null) {
            _NativeAccessibilityInfo.default.isHighTextContrastEnabled(resolve);
          } else {
            reject(null);
          }
        } else {
          return Promise.resolve(false);
        }
      });
    },
    isDarkerSystemColorsEnabled: function isDarkerSystemColorsEnabled() {
      return new Promise(function (resolve, reject) {
        if (_Platform.default.OS === 'android') {
          return Promise.resolve(false);
        } else {
          if ((_NativeAccessibilityManager.default == null ? undefined : _NativeAccessibilityManager.default.getCurrentDarkerSystemColorsState) != null) {
            _NativeAccessibilityManager.default.getCurrentDarkerSystemColorsState(resolve, reject);
          } else {
            reject(null);
          }
        }
      });
    },
    prefersCrossFadeTransitions: function prefersCrossFadeTransitions() {
      return new Promise(function (resolve, reject) {
        if (_Platform.default.OS === 'android') {
          return Promise.resolve(false);
        } else {
          if ((_NativeAccessibilityManager.default == null ? undefined : _NativeAccessibilityManager.default.getCurrentPrefersCrossFadeTransitionsState) != null) {
            _NativeAccessibilityManager.default.getCurrentPrefersCrossFadeTransitionsState(resolve, reject);
          } else {
            reject(null);
          }
        }
      });
    },
    isReduceTransparencyEnabled: function isReduceTransparencyEnabled() {
      if (_Platform.default.OS === 'android') {
        return Promise.resolve(false);
      } else {
        return new Promise(function (resolve, reject) {
          if (_NativeAccessibilityManager.default != null) {
            _NativeAccessibilityManager.default.getCurrentReduceTransparencyState(resolve, reject);
          } else {
            reject(null);
          }
        });
      }
    },
    isScreenReaderEnabled: function isScreenReaderEnabled() {
      return new Promise(function (resolve, reject) {
        if (_Platform.default.OS === 'android') {
          if (_NativeAccessibilityInfo.default != null) {
            _NativeAccessibilityInfo.default.isTouchExplorationEnabled(resolve);
          } else {
            reject(null);
          }
        } else {
          if (_NativeAccessibilityManager.default != null) {
            _NativeAccessibilityManager.default.getCurrentVoiceOverState(resolve, reject);
          } else {
            reject(null);
          }
        }
      });
    },
    isAccessibilityServiceEnabled: function isAccessibilityServiceEnabled() {
      return new Promise(function (resolve, reject) {
        if (_Platform.default.OS === 'android') {
          if (_NativeAccessibilityInfo.default != null && _NativeAccessibilityInfo.default.isAccessibilityServiceEnabled != null) {
            _NativeAccessibilityInfo.default.isAccessibilityServiceEnabled(resolve);
          } else {
            reject(null);
          }
        } else {
          reject(null);
        }
      });
    },
    addEventListener: function addEventListener(eventName, handler) {
      var deviceEventName = EventNames.get(eventName);
      return deviceEventName == null ? {
        remove: function remove() {}
      } : _RCTDeviceEventEmitter.default.addListener(deviceEventName, handler);
    },
    setAccessibilityFocus: function setAccessibilityFocus(reactTag) {
      (0, _legacySendAccessibilityEvent.default)(reactTag, 'focus');
    },
    sendAccessibilityEvent: function sendAccessibilityEvent(handle, eventType) {
      if (_Platform.default.OS === 'ios' && eventType === 'click') {
        return;
      }
      (0, _$$_REQUIRE(_dependencyMap[6]).sendAccessibilityEvent)(handle, eventType);
    },
    announceForAccessibility: function announceForAccessibility(announcement) {
      if (_Platform.default.OS === 'android') {
        _NativeAccessibilityInfo.default == null ? undefined : _NativeAccessibilityInfo.default.announceForAccessibility(announcement);
      } else {
        _NativeAccessibilityManager.default == null ? undefined : _NativeAccessibilityManager.default.announceForAccessibility(announcement);
      }
    },
    announceForAccessibilityWithOptions: function announceForAccessibilityWithOptions(announcement, options) {
      if (_Platform.default.OS === 'android') {
        _NativeAccessibilityInfo.default == null ? undefined : _NativeAccessibilityInfo.default.announceForAccessibility(announcement);
      } else {
        if (_NativeAccessibilityManager.default != null && _NativeAccessibilityManager.default.announceForAccessibilityWithOptions) {
          _NativeAccessibilityManager.default == null ? undefined : _NativeAccessibilityManager.default.announceForAccessibilityWithOptions(announcement, options);
        } else {
          _NativeAccessibilityManager.default == null ? undefined : _NativeAccessibilityManager.default.announceForAccessibility(announcement);
        }
      }
    },
    getRecommendedTimeoutMillis: function getRecommendedTimeoutMillis(originalTimeout) {
      if (_Platform.default.OS === 'android') {
        return new Promise(function (resolve, reject) {
          if (_NativeAccessibilityInfo.default != null && _NativeAccessibilityInfo.default.getRecommendedTimeoutMillis) {
            _NativeAccessibilityInfo.default.getRecommendedTimeoutMillis(originalTimeout, resolve);
          } else {
            resolve(originalTimeout);
          }
        });
      } else {
        return Promise.resolve(originalTimeout);
      }
    }
  };
  var _default = exports.default = AccessibilityInfo;
},21,[1,22,33,43,53,55,57]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _EventEmitter2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && "function" == typeof p ? function (t) { return p.apply(e, t); } : p; }
  var RCTDeviceEventEmitterImpl = /*#__PURE__*/function (_EventEmitter) {
    function RCTDeviceEventEmitterImpl() {
      (0, _classCallCheck2.default)(this, RCTDeviceEventEmitterImpl);
      return _callSuper(this, RCTDeviceEventEmitterImpl, arguments);
    }
    (0, _inherits2.default)(RCTDeviceEventEmitterImpl, _EventEmitter);
    return (0, _createClass2.default)(RCTDeviceEventEmitterImpl, [{
      key: "emit",
      value: function emit(eventType) {
        (0, _$$_REQUIRE(_dependencyMap[8]).beginEvent)(function () {
          return `RCTDeviceEventEmitter.emit#${eventType}`;
        });
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }
        _superPropGet(RCTDeviceEventEmitterImpl, "emit", this, 3)([eventType].concat(args));
        (0, _$$_REQUIRE(_dependencyMap[8]).endEvent)();
      }
    }]);
  }(_EventEmitter2.default);
  var RCTDeviceEventEmitter = new RCTDeviceEventEmitterImpl();
  Object.defineProperty(global, '__rctDeviceEventEmitter', {
    configurable: true,
    value: RCTDeviceEventEmitter
  });
  var _default = exports.default = RCTDeviceEventEmitter;
},22,[1,12,13,23,25,26,28,30,17]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _possibleConstructorReturn(t, e) {
    if (e && ("object" == _$$_REQUIRE(_dependencyMap[0])["default"](e) || "function" == typeof e)) return e;
    if (undefined !== e) throw new TypeError("Derived constructors may only return object or undefined");
    return _$$_REQUIRE(_dependencyMap[1])(t);
  }
  module.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports["default"] = module.exports;
},23,[16,24]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _assertThisInitialized(e) {
    if (undefined === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
  }
  module.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports["default"] = module.exports;
},24,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _getPrototypeOf(t) {
    return module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {
      return t.__proto__ || Object.getPrototypeOf(t);
    }, module.exports.__esModule = true, module.exports["default"] = module.exports, _getPrototypeOf(t);
  }
  module.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;
},25,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _get() {
    return module.exports = _get = "undefined" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function (e, t, r) {
      var p = _$$_REQUIRE(_dependencyMap[0])(e, t);
      if (p) {
        var n = Object.getOwnPropertyDescriptor(p, t);
        return n.get ? n.get.call(arguments.length < 3 ? e : r) : n.value;
      }
    }, module.exports.__esModule = true, module.exports["default"] = module.exports, _get.apply(null, arguments);
  }
  module.exports = _get, module.exports.__esModule = true, module.exports["default"] = module.exports;
},26,[27]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _superPropBase(t, o) {
    for (; !{}.hasOwnProperty.call(t, o) && null !== (t = _$$_REQUIRE(_dependencyMap[0])(t)););
    return t;
  }
  module.exports = _superPropBase, module.exports.__esModule = true, module.exports["default"] = module.exports;
},27,[25]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _inherits(t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, {
      constructor: {
        value: t,
        writable: true,
        configurable: true
      }
    }), Object.defineProperty(t, "prototype", {
      writable: false
    }), e && _$$_REQUIRE(_dependencyMap[0])(t, e);
  }
  module.exports = _inherits, module.exports.__esModule = true, module.exports["default"] = module.exports;
},28,[29]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _setPrototypeOf(t, e) {
    return module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {
      return t.__proto__ = e, t;
    }, module.exports.__esModule = true, module.exports["default"] = module.exports, _setPrototypeOf(t, e);
  }
  module.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;
},29,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _classPrivateFieldLooseBase2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _classPrivateFieldLooseKey2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _registry = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("registry");
  var EventEmitter = exports.default = /*#__PURE__*/function () {
    function EventEmitter() {
      (0, _classCallCheck2.default)(this, EventEmitter);
      Object.defineProperty(this, _registry, {
        writable: true,
        value: {}
      });
    }
    return (0, _createClass2.default)(EventEmitter, [{
      key: "addListener",
      value: function addListener(eventType, listener, context) {
        if (typeof listener !== 'function') {
          throw new TypeError('EventEmitter.addListener(...): 2nd argument must be a function.');
        }
        var registrations = allocate((0, _classPrivateFieldLooseBase2.default)(this, _registry)[_registry], eventType);
        var registration = {
          context: context,
          listener: listener,
          remove: function remove() {
            registrations.delete(registration);
          }
        };
        registrations.add(registration);
        return registration;
      }
    }, {
      key: "emit",
      value: function emit(eventType) {
        var registrations = (0, _classPrivateFieldLooseBase2.default)(this, _registry)[_registry][eventType];
        if (registrations != null) {
          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            args[_key - 1] = arguments[_key];
          }
          for (var registration of Array.from(registrations)) {
            registration.listener.apply(registration.context, args);
          }
        }
      }
    }, {
      key: "removeAllListeners",
      value: function removeAllListeners(eventType) {
        if (eventType == null) {
          (0, _classPrivateFieldLooseBase2.default)(this, _registry)[_registry] = {};
        } else {
          delete (0, _classPrivateFieldLooseBase2.default)(this, _registry)[_registry][eventType];
        }
      }
    }, {
      key: "listenerCount",
      value: function listenerCount(eventType) {
        var registrations = (0, _classPrivateFieldLooseBase2.default)(this, _registry)[_registry][eventType];
        return registrations == null ? 0 : registrations.size;
      }
    }]);
  }();
  function allocate(registry, eventType) {
    var registrations = registry[eventType];
    if (registrations == null) {
      registrations = new Set();
      registry[eventType] = registrations;
    }
    return registrations;
  }
},30,[1,12,13,31,32]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _classPrivateFieldBase(e, t) {
    if (!{}.hasOwnProperty.call(e, t)) throw new TypeError("attempted to use private field on non-instance");
    return e;
  }
  module.exports = _classPrivateFieldBase, module.exports.__esModule = true, module.exports["default"] = module.exports;
},31,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var id = 0;
  function _classPrivateFieldKey(e) {
    return "__private_" + id++ + "_" + e;
  }
  module.exports = _classPrivateFieldKey, module.exports.__esModule = true, module.exports["default"] = module.exports;
},32,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _NativePlatformConstantsAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var Platform = {
    __constants: null,
    OS: 'android',
    get Version() {
      return this.constants.Version;
    },
    get constants() {
      if (this.__constants == null) {
        this.__constants = _NativePlatformConstantsAndroid.default.getConstants();
      }
      return this.__constants;
    },
    get isTesting() {
      return false;
    },
    get isDisableAnimations() {
      var _this$constants$isDis;
      return (_this$constants$isDis = this.constants.isDisableAnimations) != null ? _this$constants$isDis : this.isTesting;
    },
    get isTV() {
      return this.constants.uiMode === 'tv';
    },
    get isVision() {
      return false;
    },
    select: function select(spec) {
      return 'android' in spec ? spec.android : 'native' in spec ? spec.native : spec.default;
    }
  };
  var _default = exports.default = Platform;
},33,[1,34]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativePlatformConstantsAndroid = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativePlatformConstantsAndroid).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativePlatformConstantsAndroid[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativePlatformConstantsAndroid[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativePlatformConstantsAndroid.default;
},34,[35]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.getEnforcing('PlatformConstants');
},35,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.get = get;
  exports.getEnforcing = getEnforcing;
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var turboModuleProxy = global.__turboModuleProxy;
  function requireModule(name) {
    if (turboModuleProxy != null) {
      var module = turboModuleProxy(name);
      if (module != null) {
        return module;
      }
    }
    if (global.RN$Bridgeless !== true || global.RN$TurboInterop === true || global.RN$UnifiedNativeModuleProxy === true) {
      var legacyModule = _$$_REQUIRE(_dependencyMap[2]).default[name];
      if (legacyModule != null) {
        return legacyModule;
      }
    }
    return null;
  }
  function get(name) {
    return requireModule(name);
  }
  function getEnforcing(name) {
    var module = requireModule(name);
    (0, _invariant.default)(module != null, `TurboModuleRegistry.getEnforcing(...): '${name}' could not be found. ` + 'Verify that a module by this name is registered in the native binary.');
    return module;
  }
},36,[1,20,37]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  function genModule(config, moduleID) {
    if (!config) {
      return null;
    }
    var _config = (0, _slicedToArray2.default)(config, 5),
      moduleName = _config[0],
      constants = _config[1],
      methods = _config[2],
      promiseMethods = _config[3],
      syncMethods = _config[4];
    _$$_REQUIRE(_dependencyMap[2])(!moduleName.startsWith('RCT') && !moduleName.startsWith('RK'), "Module name prefixes should've been stripped by the native side but wasn't for " + moduleName);
    if (!constants && !methods) {
      return {
        name: moduleName
      };
    }
    var module = {};
    methods && methods.forEach(function (methodName, methodID) {
      var isPromise = promiseMethods && arrayContains(promiseMethods, methodID) || false;
      var isSync = syncMethods && arrayContains(syncMethods, methodID) || false;
      _$$_REQUIRE(_dependencyMap[2])(!isPromise || !isSync, 'Cannot have a method that is both async and a sync hook');
      var methodType = isPromise ? 'promise' : isSync ? 'sync' : 'async';
      module[methodName] = genMethod(moduleID, methodID, methodType);
    });
    Object.assign(module, constants);
    if (module.getConstants == null) {
      module.getConstants = function () {
        return constants || Object.freeze({});
      };
    } else {
      console.warn(`Unable to define method 'getConstants()' on NativeModule '${moduleName}'. NativeModule '${moduleName}' already has a constant or method called 'getConstants'. Please remove it.`);
    }
    return {
      name: moduleName,
      module: module
    };
  }
  global.__fbGenNativeModule = genModule;
  function loadModule(name, moduleID) {
    _$$_REQUIRE(_dependencyMap[2])(global.nativeRequireModuleConfig, "Can't lazily create module without nativeRequireModuleConfig");
    var config = global.nativeRequireModuleConfig(name);
    var info = genModule(config, moduleID);
    return info && info.module;
  }
  function genMethod(moduleID, methodID, type) {
    var fn = null;
    if (type === 'promise') {
      fn = function promiseMethodWrapper() {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        var enqueueingFrameError = new Error();
        return new Promise(function (resolve, reject) {
          _$$_REQUIRE(_dependencyMap[3]).default.enqueueNativeCall(moduleID, methodID, args, function (data) {
            return resolve(data);
          }, function (errorData) {
            return reject(updateErrorWithErrorData(errorData, enqueueingFrameError));
          });
        });
      };
    } else {
      fn = function nonPromiseMethodWrapper() {
        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }
        var lastArg = args.length > 0 ? args[args.length - 1] : null;
        var secondLastArg = args.length > 1 ? args[args.length - 2] : null;
        var hasSuccessCallback = typeof lastArg === 'function';
        var hasErrorCallback = typeof secondLastArg === 'function';
        hasErrorCallback && _$$_REQUIRE(_dependencyMap[2])(hasSuccessCallback, 'Cannot have a non-function arg after a function arg.');
        var onSuccess = hasSuccessCallback ? lastArg : null;
        var onFail = hasErrorCallback ? secondLastArg : null;
        var callbackCount = hasSuccessCallback + hasErrorCallback;
        var newArgs = args.slice(0, args.length - callbackCount);
        if (type === 'sync') {
          return _$$_REQUIRE(_dependencyMap[3]).default.callNativeSyncHook(moduleID, methodID, newArgs, onFail, onSuccess);
        } else {
          _$$_REQUIRE(_dependencyMap[3]).default.enqueueNativeCall(moduleID, methodID, newArgs, onFail, onSuccess);
        }
      };
    }
    fn.type = type;
    return fn;
  }
  function arrayContains(array, value) {
    return array.indexOf(value) !== -1;
  }
  function updateErrorWithErrorData(errorData, error) {
    return Object.assign(error, errorData || {});
  }
  var NativeModules = {};
  if (global.nativeModuleProxy) {
    NativeModules = global.nativeModuleProxy;
  } else {
    var bridgeConfig = global.__fbBatchedBridgeConfig;
    _$$_REQUIRE(_dependencyMap[2])(bridgeConfig, '__fbBatchedBridgeConfig is not set, cannot invoke native modules');
    var defineLazyObjectProperty = _$$_REQUIRE(_dependencyMap[4]).default;
    (bridgeConfig.remoteModuleConfig || []).forEach(function (config, moduleID) {
      var info = genModule(config, moduleID);
      if (!info) {
        return;
      }
      if (info.module) {
        NativeModules[info.name] = info.module;
      } else {
        defineLazyObjectProperty(NativeModules, info.name, {
          get: function get() {
            return loadModule(info.name, moduleID);
          }
        });
      }
    });
  }
  var _default = exports.default = NativeModules;
},37,[1,38,20,4,42]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _slicedToArray(r, e) {
    return _$$_REQUIRE(_dependencyMap[0])(r) || _$$_REQUIRE(_dependencyMap[1])(r, e) || _$$_REQUIRE(_dependencyMap[2])(r, e) || _$$_REQUIRE(_dependencyMap[3])();
  }
  module.exports = _slicedToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;
},38,[39,40,10,41]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _arrayWithHoles(r) {
    if (Array.isArray(r)) return r;
  }
  module.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;
},39,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _iterableToArrayLimit(r, l) {
    var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (null != t) {
      var e,
        n,
        i,
        u,
        a = [],
        f = true,
        o = false;
      try {
        if (i = (t = t.call(r)).next, 0 === l) {
          if (Object(t) !== t) return;
          f = false;
        } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true);
      } catch (r) {
        o = true, n = r;
      } finally {
        try {
          if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
        } finally {
          if (o) throw n;
        }
      }
      return a;
    }
  }
  module.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports["default"] = module.exports;
},40,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  module.exports = _nonIterableRest, module.exports.__esModule = true, module.exports["default"] = module.exports;
},41,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  function defineLazyObjectProperty(object, name, descriptor) {
    var get = descriptor.get;
    var enumerable = descriptor.enumerable !== false;
    var writable = descriptor.writable !== false;
    var value;
    var valueSet = false;
    function getValue() {
      if (!valueSet) {
        valueSet = true;
        setValue(get());
      }
      return value;
    }
    function setValue(newValue) {
      value = newValue;
      valueSet = true;
      Object.defineProperty(object, name, {
        value: newValue,
        configurable: true,
        enumerable: enumerable,
        writable: writable
      });
    }
    Object.defineProperty(object, name, {
      get: getValue,
      set: setValue,
      configurable: true,
      enumerable: enumerable
    });
  }
  var _default = exports.default = defineLazyObjectProperty;
},42,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _UIManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _nullthrows = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  function legacySendAccessibilityEvent(reactTag, eventType) {
    if (eventType === 'focus') {
      (0, _nullthrows.default)(_UIManager.default.sendAccessibilityEvent)(reactTag, _UIManager.default.getConstants().AccessibilityEventTypes.typeViewFocused);
    }
    if (eventType === 'click') {
      (0, _nullthrows.default)(_UIManager.default.sendAccessibilityEvent)(reactTag, _UIManager.default.getConstants().AccessibilityEventTypes.typeViewClicked);
    }
  }
  var _default = exports.default = legacySendAccessibilityEvent;
},43,[1,44,45]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _nullthrows = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  function isFabricReactTag(reactTag) {
    return reactTag % 2 === 0;
  }
  var UIManagerImpl = global.RN$Bridgeless === true ? _$$_REQUIRE(_dependencyMap[2]).default : _$$_REQUIRE(_dependencyMap[3]).default;
  var UIManager = Object.assign({}, UIManagerImpl, {
    measure: function measure(reactTag, callback) {
      if (isFabricReactTag(reactTag)) {
        var FabricUIManager = (0, _nullthrows.default)((0, _$$_REQUIRE(_dependencyMap[4]).getFabricUIManager)());
        var shadowNode = FabricUIManager.findShadowNodeByTag_DEPRECATED(reactTag);
        if (shadowNode) {
          FabricUIManager.measure(shadowNode, callback);
        } else {
          console.warn(`measure cannot find view with tag #${reactTag}`);
          callback();
        }
      } else {
        UIManagerImpl.measure(reactTag, callback);
      }
    },
    measureInWindow: function measureInWindow(reactTag, callback) {
      if (isFabricReactTag(reactTag)) {
        var FabricUIManager = (0, _nullthrows.default)((0, _$$_REQUIRE(_dependencyMap[4]).getFabricUIManager)());
        var shadowNode = FabricUIManager.findShadowNodeByTag_DEPRECATED(reactTag);
        if (shadowNode) {
          FabricUIManager.measureInWindow(shadowNode, callback);
        } else {
          console.warn(`measure cannot find view with tag #${reactTag}`);
          callback();
        }
      } else {
        UIManagerImpl.measureInWindow(reactTag, callback);
      }
    },
    measureLayout: function measureLayout(reactTag, ancestorReactTag, errorCallback, callback) {
      if (isFabricReactTag(reactTag)) {
        var FabricUIManager = (0, _nullthrows.default)((0, _$$_REQUIRE(_dependencyMap[4]).getFabricUIManager)());
        var shadowNode = FabricUIManager.findShadowNodeByTag_DEPRECATED(reactTag);
        var ancestorShadowNode = FabricUIManager.findShadowNodeByTag_DEPRECATED(ancestorReactTag);
        if (!shadowNode || !ancestorShadowNode) {
          return;
        }
        FabricUIManager.measureLayout(shadowNode, ancestorShadowNode, errorCallback, callback);
      } else {
        UIManagerImpl.measureLayout(reactTag, ancestorReactTag, errorCallback, callback);
      }
    },
    measureLayoutRelativeToParent: function measureLayoutRelativeToParent(reactTag, errorCallback, callback) {
      if (isFabricReactTag(reactTag)) {
        console.warn('RCTUIManager.measureLayoutRelativeToParent method is deprecated and it will not be implemented in newer versions of RN (Fabric) - T47686450');
        var FabricUIManager = (0, _nullthrows.default)((0, _$$_REQUIRE(_dependencyMap[4]).getFabricUIManager)());
        var shadowNode = FabricUIManager.findShadowNodeByTag_DEPRECATED(reactTag);
        if (shadowNode) {
          FabricUIManager.measure(shadowNode, function (left, top, width, height, pageX, pageY) {
            callback(left, top, width, height);
          });
        }
      } else {
        UIManagerImpl.measureLayoutRelativeToParent(reactTag, errorCallback, callback);
      }
    },
    dispatchViewManagerCommand: function dispatchViewManagerCommand(reactTag, commandName, commandArgs) {
      if (typeof reactTag !== 'number') {
        throw new Error('dispatchViewManagerCommand: found null reactTag');
      }
      if (isFabricReactTag(reactTag)) {
        var FabricUIManager = (0, _nullthrows.default)((0, _$$_REQUIRE(_dependencyMap[4]).getFabricUIManager)());
        var shadowNode = FabricUIManager.findShadowNodeByTag_DEPRECATED(reactTag);
        if (shadowNode) {
          commandName = `${commandName}`;
          FabricUIManager.dispatchCommand(shadowNode, commandName, commandArgs);
        }
      } else {
        UIManagerImpl.dispatchViewManagerCommand(reactTag, commandName, commandArgs);
      }
    }
  });
  var _default = exports.default = UIManager;
},44,[1,45,46,49,47]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function nullthrows(x, message) {
    if (x != null) {
      return x;
    }
    var error = new Error(message !== undefined ? message : 'Got unexpected ' + x);
    error.framesToPop = 1; // Skip nullthrows's own stack frame.
    throw error;
  }
  module.exports = nullthrows;
  module.exports.default = nullthrows;
  Object.defineProperty(module.exports, '__esModule', {
    value: true
  });
},45,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _defineLazyObjectProperty = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _nullthrows = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  function raiseSoftError(methodName, details) {
    console.error(`[ReactNative Architecture][JS] '${methodName}' is not available in the new React Native architecture.` + (details ? ` ${details}` : ''));
  }
  var getUIManagerConstants = global.RN$LegacyInterop_UIManager_getConstants;
  var getUIManagerConstantsCached = function () {
    var wasCalledOnce = false;
    var result = {};
    return function () {
      if (!wasCalledOnce) {
        result = (0, _nullthrows.default)(getUIManagerConstants)();
        wasCalledOnce = true;
      }
      return result;
    };
  }();
  var _getConstantsForViewManager = global.RN$LegacyInterop_UIManager_getConstantsForViewManager;
  var _getDefaultEventTypes = global.RN$LegacyInterop_UIManager_getDefaultEventTypes;
  var getDefaultEventTypesCached = function () {
    var wasCalledOnce = false;
    var result = null;
    return function () {
      if (!wasCalledOnce) {
        result = (0, _nullthrows.default)(_getDefaultEventTypes)();
        wasCalledOnce = true;
      }
      return result;
    };
  }();
  var UIManagerJSOverridenAPIs = {
    measure: function measure(reactTag, callback) {
      raiseSoftError('measure');
    },
    measureInWindow: function measureInWindow(reactTag, callback) {
      raiseSoftError('measureInWindow');
    },
    measureLayout: function measureLayout(reactTag, ancestorReactTag, errorCallback, callback) {
      raiseSoftError('measureLayout');
    },
    measureLayoutRelativeToParent: function measureLayoutRelativeToParent(reactTag, errorCallback, callback) {
      raiseSoftError('measureLayoutRelativeToParent');
    },
    dispatchViewManagerCommand: function dispatchViewManagerCommand(reactTag, commandID, commandArgs) {
      raiseSoftError('dispatchViewManagerCommand');
    }
  };
  var UIManagerJSUnusedInNewArchAPIs = {
    createView: function createView(reactTag, viewName, rootTag, props) {
      raiseSoftError('createView');
    },
    updateView: function updateView(reactTag, viewName, props) {
      raiseSoftError('updateView');
    },
    setChildren: function setChildren(containerTag, reactTags) {
      raiseSoftError('setChildren');
    },
    manageChildren: function manageChildren(containerTag, moveFromIndices, moveToIndices, addChildReactTags, addAtIndices, removeAtIndices) {
      raiseSoftError('manageChildren');
    },
    setJSResponder: function setJSResponder(reactTag, blockNativeResponder) {
      raiseSoftError('setJSResponder');
    },
    clearJSResponder: function clearJSResponder() {
      raiseSoftError('clearJSResponder');
    }
  };
  var UIManagerJSDeprecatedPlatformAPIs = _Platform.default.select({
    android: {}
  });
  var UIManagerJSPlatformAPIs = _Platform.default.select({
    android: {
      getConstantsForViewManager: function getConstantsForViewManager(viewManagerName) {
        if (_getConstantsForViewManager) {
          return _getConstantsForViewManager(viewManagerName);
        }
        raiseSoftError('getConstantsForViewManager');
        return {};
      },
      getDefaultEventTypes: function getDefaultEventTypes() {
        if (_getDefaultEventTypes) {
          return getDefaultEventTypesCached();
        }
        raiseSoftError('getDefaultEventTypes');
        return [];
      },
      setLayoutAnimationEnabledExperimental: function setLayoutAnimationEnabledExperimental(enabled) {},
      sendAccessibilityEvent: function sendAccessibilityEvent(reactTag, eventType) {
        var AccessibilityEvent = {
          TYPE_VIEW_FOCUSED: 0x00000008,
          TYPE_WINDOW_STATE_CHANGED: 0x00000020,
          TYPE_VIEW_CLICKED: 0x00000001,
          TYPE_VIEW_HOVER_ENTER: 0x00000080
        };
        var eventName = null;
        if (eventType === AccessibilityEvent.TYPE_VIEW_FOCUSED) {
          eventName = 'focus';
        } else if (eventType === AccessibilityEvent.TYPE_WINDOW_STATE_CHANGED) {
          eventName = 'windowStateChange';
        } else if (eventType === AccessibilityEvent.TYPE_VIEW_CLICKED) {
          eventName = 'click';
        } else if (eventType === AccessibilityEvent.TYPE_VIEW_HOVER_ENTER) {
          eventName = 'viewHoverEnter';
        } else {
          console.error(`sendAccessibilityEvent() dropping event: Called with unsupported eventType: ${eventType}`);
          return;
        }
        var FabricUIManager = (0, _nullthrows.default)((0, _$$_REQUIRE(_dependencyMap[4]).getFabricUIManager)());
        var shadowNode = FabricUIManager.findShadowNodeByTag_DEPRECATED(reactTag);
        if (!shadowNode) {
          console.error(`sendAccessibilityEvent() dropping event: Cannot find view with tag #${reactTag}`);
          return;
        }
        FabricUIManager.sendAccessibilityEvent(shadowNode, eventName);
      }
    },
    ios: {
      lazilyLoadView: function lazilyLoadView(name) {
        raiseSoftError('lazilyLoadView');
        return {};
      },
      focus: function focus(reactTag) {
        var FabricUIManager = (0, _nullthrows.default)((0, _$$_REQUIRE(_dependencyMap[4]).getFabricUIManager)());
        var shadowNode = FabricUIManager.findShadowNodeByTag_DEPRECATED(reactTag);
        if (!shadowNode) {
          console.error(`focus() noop: Cannot find view with tag #${reactTag}`);
          return;
        }
        FabricUIManager.dispatchCommand(shadowNode, 'focus', []);
      },
      blur: function blur(reactTag) {
        var FabricUIManager = (0, _nullthrows.default)((0, _$$_REQUIRE(_dependencyMap[4]).getFabricUIManager)());
        var shadowNode = FabricUIManager.findShadowNodeByTag_DEPRECATED(reactTag);
        if (!shadowNode) {
          console.error(`blur() noop: Cannot find view with tag #${reactTag}`);
          return;
        }
        FabricUIManager.dispatchCommand(shadowNode, 'blur', []);
      }
    }
  });
  var UIManagerJS = Object.assign({}, UIManagerJSOverridenAPIs, UIManagerJSDeprecatedPlatformAPIs, UIManagerJSPlatformAPIs, UIManagerJSUnusedInNewArchAPIs, {
    getViewManagerConfig: function getViewManagerConfig(viewManagerName) {
      if (getUIManagerConstants) {
        var constants = getUIManagerConstantsCached();
        if (!constants[viewManagerName] && UIManagerJS.getConstantsForViewManager) {
          constants[viewManagerName] = UIManagerJS.getConstantsForViewManager(viewManagerName);
        }
        return constants[viewManagerName];
      } else {
        raiseSoftError(`getViewManagerConfig('${viewManagerName}')`, `If '${viewManagerName}' has a ViewManager and you want to retrieve its native ViewConfig, please turn on the native ViewConfig interop layer. If you want to see if this component is registered with React Native, please call hasViewManagerConfig('${viewManagerName}') instead.`);
        return null;
      }
    },
    hasViewManagerConfig: function hasViewManagerConfig(viewManagerName) {
      return (0, _$$_REQUIRE(_dependencyMap[5]).unstable_hasComponent)(viewManagerName);
    },
    getConstants: function getConstants() {
      if (getUIManagerConstants) {
        return getUIManagerConstantsCached();
      } else {
        raiseSoftError('getConstants');
        return null;
      }
    },
    findSubviewIn: function findSubviewIn(reactTag, point, callback) {
      var FabricUIManager = (0, _nullthrows.default)((0, _$$_REQUIRE(_dependencyMap[4]).getFabricUIManager)());
      var shadowNode = FabricUIManager.findShadowNodeByTag_DEPRECATED(reactTag);
      if (!shadowNode) {
        console.error(`findSubviewIn() noop: Cannot find view with reactTag ${reactTag}`);
        return;
      }
      FabricUIManager.findNodeAtPoint(shadowNode, point[0], point[1], function (internalInstanceHandle) {
        if (internalInstanceHandle == null) {
          console.error('findSubviewIn(): Cannot find node at point');
          return;
        }
        var instanceHandle = internalInstanceHandle;
        var node = instanceHandle.stateNode.node;
        if (!node) {
          console.error('findSubviewIn(): Cannot find node at point');
          return;
        }
        var nativeViewTag = instanceHandle.stateNode.canonical.nativeTag;
        FabricUIManager.measure(node, function (x, y, width, height, pageX, pageY) {
          callback(nativeViewTag, pageX, pageY, width, height);
        });
      });
    },
    viewIsDescendantOf: function viewIsDescendantOf(reactTag, ancestorReactTag, callback) {
      var FabricUIManager = (0, _nullthrows.default)((0, _$$_REQUIRE(_dependencyMap[4]).getFabricUIManager)());
      var shadowNode = FabricUIManager.findShadowNodeByTag_DEPRECATED(reactTag);
      if (!shadowNode) {
        console.error(`viewIsDescendantOf() noop: Cannot find view with reactTag ${reactTag}`);
        return;
      }
      var ancestorShadowNode = FabricUIManager.findShadowNodeByTag_DEPRECATED(ancestorReactTag);
      if (!ancestorShadowNode) {
        console.error(`viewIsDescendantOf() noop: Cannot find view with ancestorReactTag ${ancestorReactTag}`);
        return;
      }
      var DOCUMENT_POSITION_CONTAINED_BY = 16;
      var result = FabricUIManager.compareDocumentPosition(ancestorShadowNode, shadowNode);
      var isAncestor = (result & DOCUMENT_POSITION_CONTAINED_BY) !== 0;
      callback([isAncestor]);
    },
    configureNextLayoutAnimation: function configureNextLayoutAnimation(config, callback, errorCallback) {
      var FabricUIManager = (0, _nullthrows.default)((0, _$$_REQUIRE(_dependencyMap[4]).getFabricUIManager)());
      FabricUIManager.configureNextLayoutAnimation(config, callback, errorCallback);
    }
  });
  if (getUIManagerConstants) {
    Object.keys(getUIManagerConstantsCached()).forEach(function (viewConfigName) {
      UIManagerJS[viewConfigName] = getUIManagerConstantsCached()[viewConfigName];
    });
    if (UIManagerJS.getConstants().ViewManagerNames) {
      UIManagerJS.getConstants().ViewManagerNames.forEach(function (viewManagerName) {
        (0, _defineLazyObjectProperty.default)(UIManagerJS, viewManagerName, {
          get: function get() {
            return (0, _nullthrows.default)(UIManagerJS.getConstantsForViewManager)(viewManagerName);
          }
        });
      });
    }
  }
  var _default = exports.default = UIManagerJS;
},46,[1,42,33,45,47,48]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getFabricUIManager = getFabricUIManager;
  var _defineLazyObjectProperty = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var nativeFabricUIManagerProxy;
  var CACHED_PROPERTIES = ['createNode', 'cloneNode', 'cloneNodeWithNewChildren', 'cloneNodeWithNewProps', 'cloneNodeWithNewChildrenAndProps', 'createChildSet', 'appendChild', 'appendChildToSet', 'completeRoot', 'measure', 'measureInWindow', 'measureLayout', 'configureNextLayoutAnimation', 'sendAccessibilityEvent', 'findShadowNodeByTag_DEPRECATED', 'setNativeProps', 'dispatchCommand', 'compareDocumentPosition', 'getBoundingClientRect'];
  function getFabricUIManager() {
    if (nativeFabricUIManagerProxy == null && global.nativeFabricUIManager != null) {
      nativeFabricUIManagerProxy = createProxyWithCachedProperties(global.nativeFabricUIManager, CACHED_PROPERTIES);
    }
    return nativeFabricUIManagerProxy;
  }
  function createProxyWithCachedProperties(implementation, propertiesToCache) {
    var proxy = Object.create(implementation);
    var _loop = function _loop(propertyName) {
      (0, _defineLazyObjectProperty.default)(proxy, propertyName, {
        get: function get() {
          return implementation[propertyName];
        }
      });
    };
    for (var propertyName of propertiesToCache) {
      _loop(propertyName);
    }
    return proxy;
  }
},47,[1,42]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.unstable_hasComponent = unstable_hasComponent;
  var componentNameToExists = new Map();
  function unstable_hasComponent(name) {
    var hasNativeComponent = componentNameToExists.get(name);
    if (hasNativeComponent == null) {
      if (global.__nativeComponentRegistry__hasComponent) {
        hasNativeComponent = global.__nativeComponentRegistry__hasComponent(name);
        componentNameToExists.set(name, hasNativeComponent);
      } else {
        throw `unstable_hasComponent('${name}'): Global function is not registered`;
      }
    }
    return hasNativeComponent;
  }
},48,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _NativeUIManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _nullthrows = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var viewManagerConfigs = {};
  var triedLoadingConfig = new Set();
  var NativeUIManagerConstants = {};
  var isNativeUIManagerConstantsSet = false;
  function _getConstants() {
    if (!isNativeUIManagerConstantsSet) {
      NativeUIManagerConstants = _NativeUIManager.default.getConstants();
      isNativeUIManagerConstantsSet = true;
    }
    return NativeUIManagerConstants;
  }
  function _getViewManagerConfig(viewManagerName) {
    if (viewManagerConfigs[viewManagerName] === undefined && _NativeUIManager.default.getConstantsForViewManager) {
      try {
        viewManagerConfigs[viewManagerName] = _NativeUIManager.default.getConstantsForViewManager(viewManagerName);
      } catch (e) {
        console.error("NativeUIManager.getConstantsForViewManager('" + viewManagerName + "') threw an exception.", e);
        viewManagerConfigs[viewManagerName] = null;
      }
    }
    var config = viewManagerConfigs[viewManagerName];
    if (config) {
      return config;
    }
    if (!global.nativeCallSyncHook) {
      return config;
    }
    if (_NativeUIManager.default.lazilyLoadView && !triedLoadingConfig.has(viewManagerName)) {
      var result = (0, _nullthrows.default)(_NativeUIManager.default.lazilyLoadView)(viewManagerName);
      triedLoadingConfig.add(viewManagerName);
      if (result != null && result.viewConfig != null) {
        _getConstants()[viewManagerName] = result.viewConfig;
        lazifyViewManagerConfig(viewManagerName);
      }
    }
    return viewManagerConfigs[viewManagerName];
  }
  var UIManagerJS = Object.assign({}, _NativeUIManager.default, {
    createView: function createView(reactTag, viewName, rootTag, props) {
      _NativeUIManager.default.createView(reactTag, viewName, rootTag, props);
    },
    getConstants: function getConstants() {
      return _getConstants();
    },
    getViewManagerConfig: function getViewManagerConfig(viewManagerName) {
      return _getViewManagerConfig(viewManagerName);
    },
    hasViewManagerConfig: function hasViewManagerConfig(viewManagerName) {
      return _getViewManagerConfig(viewManagerName) != null;
    }
  });
  _NativeUIManager.default.getViewManagerConfig = UIManagerJS.getViewManagerConfig;
  function lazifyViewManagerConfig(viewName) {
    var viewConfig = _getConstants()[viewName];
    viewManagerConfigs[viewName] = viewConfig;
    if (viewConfig.Manager) {
      _$$_REQUIRE(_dependencyMap[3]).default(viewConfig, 'Constants', {
        get: function get() {
          var viewManager = _$$_REQUIRE(_dependencyMap[4]).default[viewConfig.Manager];
          var constants = {};
          viewManager && Object.keys(viewManager).forEach(function (key) {
            var value = viewManager[key];
            if (typeof value !== 'function') {
              constants[key] = value;
            }
          });
          return constants;
        }
      });
      _$$_REQUIRE(_dependencyMap[3]).default(viewConfig, 'Commands', {
        get: function get() {
          var viewManager = _$$_REQUIRE(_dependencyMap[4]).default[viewConfig.Manager];
          var commands = {};
          var index = 0;
          viewManager && Object.keys(viewManager).forEach(function (key) {
            var value = viewManager[key];
            if (typeof value === 'function') {
              commands[key] = index++;
            }
          });
          return commands;
        }
      });
    }
  }
  if (_getConstants().ViewManagerNames) {
    _NativeUIManager.default.getConstants().ViewManagerNames.forEach(function (viewManagerName) {
      _$$_REQUIRE(_dependencyMap[3]).default(_NativeUIManager.default, viewManagerName, {
        get: function get() {
          return (0, _nullthrows.default)(_NativeUIManager.default.getConstantsForViewManager)(viewManagerName);
        }
      });
    });
  }
  if (!global.nativeCallSyncHook) {
    Object.keys(_getConstants()).forEach(function (viewManagerName) {
      if (!_$$_REQUIRE(_dependencyMap[5]).default.includes(viewManagerName)) {
        if (!viewManagerConfigs[viewManagerName]) {
          viewManagerConfigs[viewManagerName] = _getConstants()[viewManagerName];
        }
        _$$_REQUIRE(_dependencyMap[3]).default(_NativeUIManager.default, viewManagerName, {
          get: function get() {
            console.warn(`Accessing view manager configs directly off UIManager via UIManager['${viewManagerName}'] ` + `is no longer supported. Use UIManager.getViewManagerConfig('${viewManagerName}') instead.`);
            return UIManagerJS.getViewManagerConfig(viewManagerName);
          }
        });
      }
    });
  }
  var _default = exports.default = UIManagerJS;
},49,[1,50,45,42,37,52]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeUIManager = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeUIManager).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeUIManager[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeUIManager[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeUIManager.default;
},50,[51]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.getEnforcing('UIManager');
},51,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var UIManagerProperties = ['clearJSResponder', 'configureNextLayoutAnimation', 'createView', 'dispatchViewManagerCommand', 'findSubviewIn', 'getConstantsForViewManager', 'getDefaultEventTypes', 'manageChildren', 'measure', 'measureInWindow', 'measureLayout', 'measureLayoutRelativeToParent', 'removeRootView', 'sendAccessibilityEvent', 'setChildren', 'setJSResponder', 'setLayoutAnimationEnabledExperimental', 'updateView', 'viewIsDescendantOf', 'LazyViewManagersEnabled', 'ViewManagerNames', 'StyleConstants', 'AccessibilityEventTypes', 'UIView', 'getViewManagerConfig', 'hasViewManagerConfig', 'blur', 'focus', 'genericBubblingEventTypes', 'genericDirectEventTypes', 'lazilyLoadView'];
  var _default = exports.default = UIManagerProperties;
},52,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeAccessibilityInfo = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeAccessibilityInfo).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeAccessibilityInfo[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeAccessibilityInfo[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeAccessibilityInfo.default;
},53,[54]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.get('AccessibilityInfo');
},54,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeAccessibilityManager = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeAccessibilityManager).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeAccessibilityManager[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeAccessibilityManager[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeAccessibilityManager.default;
},55,[56]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.get('AccessibilityManager');
},56,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.keys(_$$_REQUIRE(_dependencyMap[0])).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _$$_REQUIRE(_dependencyMap[0])[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _$$_REQUIRE(_dependencyMap[0])[key];
      }
    });
  });
},57,[58]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.dispatchCommand = dispatchCommand;
  exports.findHostInstance_DEPRECATED = findHostInstance_DEPRECATED;
  exports.findNodeHandle = findNodeHandle;
  exports.getNodeFromInternalInstanceHandle = getNodeFromInternalInstanceHandle;
  exports.getPublicInstanceFromInternalInstanceHandle = getPublicInstanceFromInternalInstanceHandle;
  exports.getPublicInstanceFromRootTag = getPublicInstanceFromRootTag;
  exports.isChildPublicInstance = isChildPublicInstance;
  exports.isProfilingRenderer = isProfilingRenderer;
  exports.renderElement = renderElement;
  exports.sendAccessibilityEvent = sendAccessibilityEvent;
  exports.unmountComponentAtNodeAndRemoveContainer = unmountComponentAtNodeAndRemoveContainer;
  exports.unstable_batchedUpdates = unstable_batchedUpdates;
  function renderElement(_ref) {
    var element = _ref.element,
      rootTag = _ref.rootTag,
      useFabric = _ref.useFabric,
      useConcurrentRoot = _ref.useConcurrentRoot;
    if (useFabric) {
      _$$_REQUIRE(_dependencyMap[0]).default.render(element, rootTag, null, useConcurrentRoot, {
        onCaughtError: _$$_REQUIRE(_dependencyMap[1]).onCaughtError,
        onUncaughtError: _$$_REQUIRE(_dependencyMap[1]).onUncaughtError,
        onRecoverableError: _$$_REQUIRE(_dependencyMap[1]).onRecoverableError
      });
    } else {
      _$$_REQUIRE(_dependencyMap[2]).default.render(element, rootTag, undefined, {
        onCaughtError: _$$_REQUIRE(_dependencyMap[1]).onCaughtError,
        onUncaughtError: _$$_REQUIRE(_dependencyMap[1]).onUncaughtError,
        onRecoverableError: _$$_REQUIRE(_dependencyMap[1]).onRecoverableError
      });
    }
  }
  function findHostInstance_DEPRECATED(componentOrHandle) {
    return _$$_REQUIRE(_dependencyMap[2]).default.findHostInstance_DEPRECATED(componentOrHandle);
  }
  function findNodeHandle(componentOrHandle) {
    return _$$_REQUIRE(_dependencyMap[2]).default.findNodeHandle(componentOrHandle);
  }
  function dispatchCommand(handle, command, args) {
    if (global.RN$Bridgeless === true) {
      return _$$_REQUIRE(_dependencyMap[0]).default.dispatchCommand(handle, command, args);
    } else {
      return _$$_REQUIRE(_dependencyMap[2]).default.dispatchCommand(handle, command, args);
    }
  }
  function sendAccessibilityEvent(handle, eventType) {
    return _$$_REQUIRE(_dependencyMap[2]).default.sendAccessibilityEvent(handle, eventType);
  }
  function unmountComponentAtNodeAndRemoveContainer(rootTag) {
    var rootTagAsNumber = rootTag;
    _$$_REQUIRE(_dependencyMap[2]).default.unmountComponentAtNodeAndRemoveContainer(rootTagAsNumber);
  }
  function unstable_batchedUpdates(fn, bookkeeping) {
    return _$$_REQUIRE(_dependencyMap[2]).default.unstable_batchedUpdates(fn, bookkeeping);
  }
  function isProfilingRenderer() {
    return Boolean(false);
  }
  function isChildPublicInstance(parentInstance, childInstance) {
    return _$$_REQUIRE(_dependencyMap[2]).default.isChildPublicInstance(parentInstance, childInstance);
  }
  function getNodeFromInternalInstanceHandle(internalInstanceHandle) {
    return _$$_REQUIRE(_dependencyMap[0]).default.getNodeFromInternalInstanceHandle(internalInstanceHandle);
  }
  function getPublicInstanceFromInternalInstanceHandle(internalInstanceHandle) {
    return _$$_REQUIRE(_dependencyMap[0]).default.getPublicInstanceFromInternalInstanceHandle(internalInstanceHandle);
  }
  function getPublicInstanceFromRootTag(rootTag) {
    return _$$_REQUIRE(_dependencyMap[0]).default.getPublicInstanceFromRootTag(rootTag);
  }
},58,[59,272,273]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var ReactFabric;
  {
    ReactFabric = _$$_REQUIRE(_dependencyMap[0]);
  }
  global.RN$stopSurface = ReactFabric.stopSurface;
  if (global.RN$Bridgeless !== true) {
    _$$_REQUIRE(_dependencyMap[1]).BatchedBridge.registerCallableModule('ReactFabric', ReactFabric);
  }
  var _default = exports.default = ReactFabric;
},59,[60,261]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /**
   * Copyright (c) Meta Platforms, Inc. and affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * 
   * @nolint
   * @preventMunge
   * @generated SignedSource<<558b9dfa7f6550519be8c208c6bc0eef>>
   *
   * This file was sync'd from the facebook/react repository.
   */

  "use strict";

  _$$_REQUIRE(_dependencyMap[0]);
  var React = _$$_REQUIRE(_dependencyMap[1]),
    isArrayImpl = Array.isArray,
    ReactSharedInternals = React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,
    REACT_LEGACY_ELEMENT_TYPE = Symbol.for("react.element"),
    REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"),
    REACT_PORTAL_TYPE = Symbol.for("react.portal"),
    REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"),
    REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"),
    REACT_PROFILER_TYPE = Symbol.for("react.profiler"),
    REACT_PROVIDER_TYPE = Symbol.for("react.provider"),
    REACT_CONSUMER_TYPE = Symbol.for("react.consumer"),
    REACT_CONTEXT_TYPE = Symbol.for("react.context"),
    REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"),
    REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"),
    REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"),
    REACT_MEMO_TYPE = Symbol.for("react.memo"),
    REACT_LAZY_TYPE = Symbol.for("react.lazy");
  Symbol.for("react.scope");
  Symbol.for("react.debug_trace_mode");
  var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
  Symbol.for("react.legacy_hidden");
  Symbol.for("react.tracing_marker");
  var REACT_MEMO_CACHE_SENTINEL = Symbol.for("react.memo_cache_sentinel"),
    MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
  function getIteratorFn(maybeIterable) {
    if (null === maybeIterable || "object" !== typeof maybeIterable) return null;
    maybeIterable = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable["@@iterator"];
    return "function" === typeof maybeIterable ? maybeIterable : null;
  }
  var assign = Object.assign,
    prefix,
    suffix;
  function describeBuiltInComponentFrame(name) {
    if (undefined === prefix) try {
      throw Error();
    } catch (x) {
      var match = x.stack.trim().match(/\n( *(at )?)/);
      prefix = match && match[1] || "";
      suffix = -1 < x.stack.indexOf("\n    at") ? " (<anonymous>)" : -1 < x.stack.indexOf("@") ? "@unknown:0:0" : "";
    }
    return "\n" + prefix + name + suffix;
  }
  var reentry = false;
  function describeNativeComponentFrame(fn, construct) {
    if (!fn || reentry) return "";
    reentry = true;
    var previousPrepareStackTrace = Error.prepareStackTrace;
    Error.prepareStackTrace = undefined;
    try {
      var RunInRootFrame = {
        DetermineComponentFrameRoot: function DetermineComponentFrameRoot() {
          try {
            if (construct) {
              var Fake = function Fake() {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, "props", {
                set: function set() {
                  throw Error();
                }
              });
              if ("object" === typeof Reflect && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x) {
                  var control = x;
                }
                Reflect.construct(fn, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x$0) {
                  control = x$0;
                }
                fn.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x$1) {
                control = x$1;
              }
              (Fake = fn()) && "function" === typeof Fake.catch && Fake.catch(function () {});
            }
          } catch (sample) {
            if (sample && control && "string" === typeof sample.stack) return [sample.stack, control.stack];
          }
          return [null, null];
        }
      };
      RunInRootFrame.DetermineComponentFrameRoot.displayName = "DetermineComponentFrameRoot";
      var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, "name");
      namePropDescriptor && namePropDescriptor.configurable && Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, "name", {
        value: "DetermineComponentFrameRoot"
      });
      var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),
        sampleStack = _RunInRootFrame$Deter[0],
        controlStack = _RunInRootFrame$Deter[1];
      if (sampleStack && controlStack) {
        var sampleLines = sampleStack.split("\n"),
          controlLines = controlStack.split("\n");
        for (namePropDescriptor = RunInRootFrame = 0; RunInRootFrame < sampleLines.length && !sampleLines[RunInRootFrame].includes("DetermineComponentFrameRoot");) RunInRootFrame++;
        for (; namePropDescriptor < controlLines.length && !controlLines[namePropDescriptor].includes("DetermineComponentFrameRoot");) namePropDescriptor++;
        if (RunInRootFrame === sampleLines.length || namePropDescriptor === controlLines.length) for (RunInRootFrame = sampleLines.length - 1, namePropDescriptor = controlLines.length - 1; 1 <= RunInRootFrame && 0 <= namePropDescriptor && sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor];) namePropDescriptor--;
        for (; 1 <= RunInRootFrame && 0 <= namePropDescriptor; RunInRootFrame--, namePropDescriptor--) if (sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor]) {
          if (1 !== RunInRootFrame || 1 !== namePropDescriptor) {
            do if (RunInRootFrame--, namePropDescriptor--, 0 > namePropDescriptor || sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor]) {
              var frame = "\n" + sampleLines[RunInRootFrame].replace(" at new ", " at ");
              fn.displayName && frame.includes("<anonymous>") && (frame = frame.replace("<anonymous>", fn.displayName));
              return frame;
            } while (1 <= RunInRootFrame && 0 <= namePropDescriptor);
          }
          break;
        }
      }
    } finally {
      reentry = false, Error.prepareStackTrace = previousPrepareStackTrace;
    }
    return (previousPrepareStackTrace = fn ? fn.displayName || fn.name : "") ? describeBuiltInComponentFrame(previousPrepareStackTrace) : "";
  }
  function describeFiber(fiber) {
    switch (fiber.tag) {
      case 26:
      case 27:
      case 5:
        return describeBuiltInComponentFrame(fiber.type);
      case 16:
        return describeBuiltInComponentFrame("Lazy");
      case 13:
        return describeBuiltInComponentFrame("Suspense");
      case 19:
        return describeBuiltInComponentFrame("SuspenseList");
      case 0:
      case 15:
        return fiber = describeNativeComponentFrame(fiber.type, false), fiber;
      case 11:
        return fiber = describeNativeComponentFrame(fiber.type.render, false), fiber;
      case 1:
        return fiber = describeNativeComponentFrame(fiber.type, true), fiber;
      default:
        return "";
    }
  }
  function getStackByFiberInDevAndProd(workInProgress) {
    try {
      var info = "";
      do info += describeFiber(workInProgress), workInProgress = workInProgress.return; while (workInProgress);
      return info;
    } catch (x) {
      return "\nError generating stack: " + x.message + "\n" + x.stack;
    }
  }
  var REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference");
  function getComponentNameFromType(type) {
    if (null == type) return null;
    if ("function" === typeof type) return type.$$typeof === REACT_CLIENT_REFERENCE ? null : type.displayName || type.name || null;
    if ("string" === typeof type) return type;
    switch (type) {
      case REACT_FRAGMENT_TYPE:
        return "Fragment";
      case REACT_PORTAL_TYPE:
        return "Portal";
      case REACT_PROFILER_TYPE:
        return "Profiler";
      case REACT_STRICT_MODE_TYPE:
        return "StrictMode";
      case REACT_SUSPENSE_TYPE:
        return "Suspense";
      case REACT_SUSPENSE_LIST_TYPE:
        return "SuspenseList";
    }
    if ("object" === typeof type) switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        return (type.displayName || "Context") + ".Provider";
      case REACT_CONSUMER_TYPE:
        return (type._context.displayName || "Context") + ".Consumer";
      case REACT_FORWARD_REF_TYPE:
        var innerType = type.render;
        type = type.displayName;
        type || (type = innerType.displayName || innerType.name || "", type = "" !== type ? "ForwardRef(" + type + ")" : "ForwardRef");
        return type;
      case REACT_MEMO_TYPE:
        return innerType = type.displayName || null, null !== innerType ? innerType : getComponentNameFromType(type.type) || "Memo";
      case REACT_LAZY_TYPE:
        innerType = type._payload;
        type = type._init;
        try {
          return getComponentNameFromType(type(innerType));
        } catch (x) {}
    }
    return null;
  }
  var hasError = false,
    caughtError = null,
    getFiberCurrentPropsFromNode$1 = null,
    getInstanceFromNode$1 = null,
    getNodeFromInstance$1 = null;
  function executeDispatch(event, listener, inst) {
    event.currentTarget = getNodeFromInstance$1(inst);
    try {
      listener(event);
    } catch (error) {
      hasError || (hasError = true, caughtError = error);
    }
    event.currentTarget = null;
  }
  function executeDirectDispatch(event) {
    var dispatchListener = event._dispatchListeners,
      dispatchInstance = event._dispatchInstances;
    if (isArrayImpl(dispatchListener)) throw Error("Invalid `event`.");
    event.currentTarget = dispatchListener ? getNodeFromInstance$1(dispatchInstance) : null;
    dispatchListener = dispatchListener ? dispatchListener(event) : null;
    event.currentTarget = null;
    event._dispatchListeners = null;
    event._dispatchInstances = null;
    return dispatchListener;
  }
  function functionThatReturnsTrue() {
    return true;
  }
  function functionThatReturnsFalse() {
    return false;
  }
  function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
    this.dispatchConfig = dispatchConfig;
    this._targetInst = targetInst;
    this.nativeEvent = nativeEvent;
    this._dispatchInstances = this._dispatchListeners = null;
    dispatchConfig = this.constructor.Interface;
    for (var propName in dispatchConfig) dispatchConfig.hasOwnProperty(propName) && ((targetInst = dispatchConfig[propName]) ? this[propName] = targetInst(nativeEvent) : "target" === propName ? this.target = nativeEventTarget : this[propName] = nativeEvent[propName]);
    this.isDefaultPrevented = (null != nativeEvent.defaultPrevented ? nativeEvent.defaultPrevented : false === nativeEvent.returnValue) ? functionThatReturnsTrue : functionThatReturnsFalse;
    this.isPropagationStopped = functionThatReturnsFalse;
    return this;
  }
  assign(SyntheticEvent.prototype, {
    preventDefault: function preventDefault() {
      this.defaultPrevented = true;
      var event = this.nativeEvent;
      event && (event.preventDefault ? event.preventDefault() : "unknown" !== typeof event.returnValue && (event.returnValue = false), this.isDefaultPrevented = functionThatReturnsTrue);
    },
    stopPropagation: function stopPropagation() {
      var event = this.nativeEvent;
      event && (event.stopPropagation ? event.stopPropagation() : "unknown" !== typeof event.cancelBubble && (event.cancelBubble = true), this.isPropagationStopped = functionThatReturnsTrue);
    },
    persist: function persist() {
      this.isPersistent = functionThatReturnsTrue;
    },
    isPersistent: functionThatReturnsFalse,
    destructor: function destructor() {
      var Interface = this.constructor.Interface,
        propName;
      for (propName in Interface) this[propName] = null;
      this.nativeEvent = this._targetInst = this.dispatchConfig = null;
      this.isPropagationStopped = this.isDefaultPrevented = functionThatReturnsFalse;
      this._dispatchInstances = this._dispatchListeners = null;
    }
  });
  SyntheticEvent.Interface = {
    type: null,
    target: null,
    currentTarget: function currentTarget() {
      return null;
    },
    eventPhase: null,
    bubbles: null,
    cancelable: null,
    timeStamp: function timeStamp(event) {
      return event.timeStamp || Date.now();
    },
    defaultPrevented: null,
    isTrusted: null
  };
  SyntheticEvent.extend = function (Interface) {
    function E() {}
    function Class() {
      return Super.apply(this, arguments);
    }
    var Super = this;
    E.prototype = Super.prototype;
    var prototype = new E();
    assign(prototype, Class.prototype);
    Class.prototype = prototype;
    Class.prototype.constructor = Class;
    Class.Interface = assign({}, Super.Interface, Interface);
    Class.extend = Super.extend;
    addEventPoolingTo(Class);
    return Class;
  };
  addEventPoolingTo(SyntheticEvent);
  function createOrGetPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
    if (this.eventPool.length) {
      var instance = this.eventPool.pop();
      this.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
      return instance;
    }
    return new this(dispatchConfig, targetInst, nativeEvent, nativeInst);
  }
  function releasePooledEvent(event) {
    if (!(event instanceof this)) throw Error("Trying to release an event instance into a pool of a different type.");
    event.destructor();
    10 > this.eventPool.length && this.eventPool.push(event);
  }
  function addEventPoolingTo(EventConstructor) {
    EventConstructor.getPooled = createOrGetPooledEvent;
    EventConstructor.eventPool = [];
    EventConstructor.release = releasePooledEvent;
  }
  var ResponderSyntheticEvent = SyntheticEvent.extend({
    touchHistory: function touchHistory() {
      return null;
    }
  });
  function isStartish(topLevelType) {
    return "topTouchStart" === topLevelType;
  }
  function isMoveish(topLevelType) {
    return "topTouchMove" === topLevelType;
  }
  var startDependencies = ["topTouchStart"],
    moveDependencies = ["topTouchMove"],
    endDependencies = ["topTouchCancel", "topTouchEnd"],
    touchBank = [],
    touchHistory = {
      touchBank: touchBank,
      numberActiveTouches: 0,
      indexOfSingleActiveTouch: -1,
      mostRecentTimeStamp: 0
    };
  function timestampForTouch(touch) {
    return touch.timeStamp || touch.timestamp;
  }
  function getTouchIdentifier(_ref) {
    _ref = _ref.identifier;
    if (null == _ref) throw Error("Touch object is missing identifier.");
    return _ref;
  }
  function recordTouchStart(touch) {
    var identifier = getTouchIdentifier(touch),
      touchRecord = touchBank[identifier];
    touchRecord ? (touchRecord.touchActive = true, touchRecord.startPageX = touch.pageX, touchRecord.startPageY = touch.pageY, touchRecord.startTimeStamp = timestampForTouch(touch), touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchRecord.previousPageX = touch.pageX, touchRecord.previousPageY = touch.pageY, touchRecord.previousTimeStamp = timestampForTouch(touch)) : (touchRecord = {
      touchActive: true,
      startPageX: touch.pageX,
      startPageY: touch.pageY,
      startTimeStamp: timestampForTouch(touch),
      currentPageX: touch.pageX,
      currentPageY: touch.pageY,
      currentTimeStamp: timestampForTouch(touch),
      previousPageX: touch.pageX,
      previousPageY: touch.pageY,
      previousTimeStamp: timestampForTouch(touch)
    }, touchBank[identifier] = touchRecord);
    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
  }
  function recordTouchMove(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord && (touchRecord.touchActive = true, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch));
  }
  function recordTouchEnd(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord && (touchRecord.touchActive = false, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch));
  }
  var instrumentationCallback,
    ResponderTouchHistoryStore = {
      instrument: function instrument(callback) {
        instrumentationCallback = callback;
      },
      recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {
        null != instrumentationCallback && instrumentationCallback(topLevelType, nativeEvent);
        if (isMoveish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchMove);else if (isStartish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchStart), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches && (touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier);else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (nativeEvent.changedTouches.forEach(recordTouchEnd), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches) for (topLevelType = 0; topLevelType < touchBank.length; topLevelType++) if (nativeEvent = touchBank[topLevelType], null != nativeEvent && nativeEvent.touchActive) {
          touchHistory.indexOfSingleActiveTouch = topLevelType;
          break;
        }
      },
      touchHistory: touchHistory
    };
  function accumulate(current, next) {
    if (null == next) throw Error("Accumulated items must not be null or undefined.");
    return null == current ? next : isArrayImpl(current) ? current.concat(next) : isArrayImpl(next) ? [current].concat(next) : [current, next];
  }
  function accumulateInto(current, next) {
    if (null == next) throw Error("Accumulated items must not be null or undefined.");
    if (null == current) return next;
    if (isArrayImpl(current)) {
      if (isArrayImpl(next)) return current.push.apply(current, next), current;
      current.push(next);
      return current;
    }
    return isArrayImpl(next) ? [current].concat(next) : [current, next];
  }
  function forEachAccumulated(arr, cb, scope) {
    Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);
  }
  var responderInst = null,
    trackedTouchCount = 0;
  function changeResponder(nextResponderInst, blockHostResponder) {
    var oldResponderInst = responderInst;
    responderInst = nextResponderInst;
    if (null !== ResponderEventPlugin.GlobalResponderHandler) ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);
  }
  var eventTypes = {
    startShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onStartShouldSetResponder",
        captured: "onStartShouldSetResponderCapture"
      },
      dependencies: startDependencies
    },
    scrollShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onScrollShouldSetResponder",
        captured: "onScrollShouldSetResponderCapture"
      },
      dependencies: ["topScroll"]
    },
    selectionChangeShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onSelectionChangeShouldSetResponder",
        captured: "onSelectionChangeShouldSetResponderCapture"
      },
      dependencies: ["topSelectionChange"]
    },
    moveShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onMoveShouldSetResponder",
        captured: "onMoveShouldSetResponderCapture"
      },
      dependencies: moveDependencies
    },
    responderStart: {
      registrationName: "onResponderStart",
      dependencies: startDependencies
    },
    responderMove: {
      registrationName: "onResponderMove",
      dependencies: moveDependencies
    },
    responderEnd: {
      registrationName: "onResponderEnd",
      dependencies: endDependencies
    },
    responderRelease: {
      registrationName: "onResponderRelease",
      dependencies: endDependencies
    },
    responderTerminationRequest: {
      registrationName: "onResponderTerminationRequest",
      dependencies: []
    },
    responderGrant: {
      registrationName: "onResponderGrant",
      dependencies: []
    },
    responderReject: {
      registrationName: "onResponderReject",
      dependencies: []
    },
    responderTerminate: {
      registrationName: "onResponderTerminate",
      dependencies: []
    }
  };
  function getParent$1(inst) {
    do inst = inst.return; while (inst && 5 !== inst.tag);
    return inst ? inst : null;
  }
  function traverseTwoPhase$1(inst, fn, arg) {
    for (var path = []; inst;) path.push(inst), inst = getParent$1(inst);
    for (inst = path.length; 0 < inst--;) fn(path[inst], "captured", arg);
    for (inst = 0; inst < path.length; inst++) fn(path[inst], "bubbled", arg);
  }
  function getListener$1(inst, registrationName) {
    inst = inst.stateNode;
    if (null === inst) return null;
    inst = getFiberCurrentPropsFromNode$1(inst);
    if (null === inst) return null;
    if ((inst = inst[registrationName]) && "function" !== typeof inst) throw Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof inst + "` type.");
    return inst;
  }
  function accumulateDirectionalDispatches$1(inst, phase, event) {
    if (phase = getListener$1(inst, event.dispatchConfig.phasedRegistrationNames[phase])) event._dispatchListeners = accumulateInto(event._dispatchListeners, phase), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }
  function accumulateDirectDispatchesSingle$1(event) {
    if (event && event.dispatchConfig.registrationName) {
      var inst = event._targetInst;
      if (inst && event && event.dispatchConfig.registrationName) {
        var listener = getListener$1(inst, event.dispatchConfig.registrationName);
        listener && (event._dispatchListeners = accumulateInto(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst));
      }
    }
  }
  function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
    if (event && event.dispatchConfig.phasedRegistrationNames) {
      var targetInst = event._targetInst;
      targetInst = targetInst ? getParent$1(targetInst) : null;
      traverseTwoPhase$1(targetInst, accumulateDirectionalDispatches$1, event);
    }
  }
  function accumulateTwoPhaseDispatchesSingle$1(event) {
    event && event.dispatchConfig.phasedRegistrationNames && traverseTwoPhase$1(event._targetInst, accumulateDirectionalDispatches$1, event);
  }
  var ResponderEventPlugin = {
      _getResponder: function _getResponder() {
        return responderInst;
      },
      eventTypes: eventTypes,
      extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        if (isStartish(topLevelType)) trackedTouchCount += 1;else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (0 <= trackedTouchCount) --trackedTouchCount;else return null;
        ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);
        if (targetInst && ("topScroll" === topLevelType && !nativeEvent.responderIgnoreScroll || 0 < trackedTouchCount && "topSelectionChange" === topLevelType || isStartish(topLevelType) || isMoveish(topLevelType))) {
          var shouldSetEventType = isStartish(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish(topLevelType) ? eventTypes.moveShouldSetResponder : "topSelectionChange" === topLevelType ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder;
          if (responderInst) b: {
            var JSCompiler_temp = responderInst;
            for (var depthA = 0, tempA = JSCompiler_temp; tempA; tempA = getParent$1(tempA)) depthA++;
            tempA = 0;
            for (var tempB = targetInst; tempB; tempB = getParent$1(tempB)) tempA++;
            for (; 0 < depthA - tempA;) JSCompiler_temp = getParent$1(JSCompiler_temp), depthA--;
            for (; 0 < tempA - depthA;) targetInst = getParent$1(targetInst), tempA--;
            for (; depthA--;) {
              if (JSCompiler_temp === targetInst || JSCompiler_temp === targetInst.alternate) break b;
              JSCompiler_temp = getParent$1(JSCompiler_temp);
              targetInst = getParent$1(targetInst);
            }
            JSCompiler_temp = null;
          } else JSCompiler_temp = targetInst;
          targetInst = JSCompiler_temp;
          JSCompiler_temp = targetInst === responderInst;
          shouldSetEventType = ResponderSyntheticEvent.getPooled(shouldSetEventType, targetInst, nativeEvent, nativeEventTarget);
          shouldSetEventType.touchHistory = ResponderTouchHistoryStore.touchHistory;
          JSCompiler_temp ? forEachAccumulated(shouldSetEventType, accumulateTwoPhaseDispatchesSingleSkipTarget) : forEachAccumulated(shouldSetEventType, accumulateTwoPhaseDispatchesSingle$1);
          b: {
            JSCompiler_temp = shouldSetEventType._dispatchListeners;
            targetInst = shouldSetEventType._dispatchInstances;
            if (isArrayImpl(JSCompiler_temp)) for (depthA = 0; depthA < JSCompiler_temp.length && !shouldSetEventType.isPropagationStopped(); depthA++) {
              if (JSCompiler_temp[depthA](shouldSetEventType, targetInst[depthA])) {
                JSCompiler_temp = targetInst[depthA];
                break b;
              }
            } else if (JSCompiler_temp && JSCompiler_temp(shouldSetEventType, targetInst)) {
              JSCompiler_temp = targetInst;
              break b;
            }
            JSCompiler_temp = null;
          }
          shouldSetEventType._dispatchInstances = null;
          shouldSetEventType._dispatchListeners = null;
          shouldSetEventType.isPersistent() || shouldSetEventType.constructor.release(shouldSetEventType);
          if (JSCompiler_temp && JSCompiler_temp !== responderInst) {
            if (shouldSetEventType = ResponderSyntheticEvent.getPooled(eventTypes.responderGrant, JSCompiler_temp, nativeEvent, nativeEventTarget), shouldSetEventType.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(shouldSetEventType, accumulateDirectDispatchesSingle$1), targetInst = true === executeDirectDispatch(shouldSetEventType), responderInst) {
              if (depthA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget), depthA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(depthA, accumulateDirectDispatchesSingle$1), tempA = !depthA._dispatchListeners || executeDirectDispatch(depthA), depthA.isPersistent() || depthA.constructor.release(depthA), tempA) {
                depthA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget);
                depthA.touchHistory = ResponderTouchHistoryStore.touchHistory;
                forEachAccumulated(depthA, accumulateDirectDispatchesSingle$1);
                var JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, [shouldSetEventType, depthA]);
                changeResponder(JSCompiler_temp, targetInst);
              } else shouldSetEventType = ResponderSyntheticEvent.getPooled(eventTypes.responderReject, JSCompiler_temp, nativeEvent, nativeEventTarget), shouldSetEventType.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(shouldSetEventType, accumulateDirectDispatchesSingle$1), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, shouldSetEventType);
            } else JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, shouldSetEventType), changeResponder(JSCompiler_temp, targetInst);
          } else JSCompiler_temp$jscomp$0 = null;
        } else JSCompiler_temp$jscomp$0 = null;
        shouldSetEventType = responderInst && isStartish(topLevelType);
        JSCompiler_temp = responderInst && isMoveish(topLevelType);
        targetInst = responderInst && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType);
        if (shouldSetEventType = shouldSetEventType ? eventTypes.responderStart : JSCompiler_temp ? eventTypes.responderMove : targetInst ? eventTypes.responderEnd : null) shouldSetEventType = ResponderSyntheticEvent.getPooled(shouldSetEventType, responderInst, nativeEvent, nativeEventTarget), shouldSetEventType.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(shouldSetEventType, accumulateDirectDispatchesSingle$1), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, shouldSetEventType);
        shouldSetEventType = responderInst && "topTouchCancel" === topLevelType;
        if (topLevelType = responderInst && !shouldSetEventType && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType)) a: {
          if ((topLevelType = nativeEvent.touches) && 0 !== topLevelType.length) for (JSCompiler_temp = 0; JSCompiler_temp < topLevelType.length; JSCompiler_temp++) if (targetInst = topLevelType[JSCompiler_temp].target, null !== targetInst && undefined !== targetInst && 0 !== targetInst) {
            depthA = getInstanceFromNode$1(targetInst);
            b: {
              for (targetInst = responderInst; depthA;) {
                if (targetInst === depthA || targetInst === depthA.alternate) {
                  targetInst = true;
                  break b;
                }
                depthA = getParent$1(depthA);
              }
              targetInst = false;
            }
            if (targetInst) {
              topLevelType = false;
              break a;
            }
          }
          topLevelType = true;
        }
        if (topLevelType = shouldSetEventType ? eventTypes.responderTerminate : topLevelType ? eventTypes.responderRelease : null) nativeEvent = ResponderSyntheticEvent.getPooled(topLevelType, responderInst, nativeEvent, nativeEventTarget), nativeEvent.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(nativeEvent, accumulateDirectDispatchesSingle$1), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, nativeEvent), changeResponder(null);
        return JSCompiler_temp$jscomp$0;
      },
      GlobalResponderHandler: null,
      injection: {
        injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {
          ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
        }
      }
    },
    eventPluginOrder = null,
    namesToPlugins = {};
  function recomputePluginOrdering() {
    if (eventPluginOrder) for (var pluginName in namesToPlugins) {
      var pluginModule = namesToPlugins[pluginName],
        pluginIndex = eventPluginOrder.indexOf(pluginName);
      if (-1 >= pluginIndex) throw Error("EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `" + (pluginName + "`."));
      if (!plugins[pluginIndex]) {
        if (!pluginModule.extractEvents) throw Error("EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `" + (pluginName + "` does not."));
        plugins[pluginIndex] = pluginModule;
        pluginIndex = pluginModule.eventTypes;
        for (var eventName in pluginIndex) {
          var JSCompiler_inline_result = undefined;
          var dispatchConfig = pluginIndex[eventName];
          if (eventNameDispatchConfigs.hasOwnProperty(eventName)) throw Error("EventPluginRegistry: More than one plugin attempted to publish the same event name, `" + (eventName + "`."));
          eventNameDispatchConfigs[eventName] = dispatchConfig;
          var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
          if (phasedRegistrationNames) {
            for (JSCompiler_inline_result in phasedRegistrationNames) phasedRegistrationNames.hasOwnProperty(JSCompiler_inline_result) && publishRegistrationName(phasedRegistrationNames[JSCompiler_inline_result], pluginModule);
            JSCompiler_inline_result = true;
          } else dispatchConfig.registrationName ? (publishRegistrationName(dispatchConfig.registrationName, pluginModule), JSCompiler_inline_result = true) : JSCompiler_inline_result = false;
          if (!JSCompiler_inline_result) throw Error("EventPluginRegistry: Failed to publish event `" + eventName + "` for plugin `" + pluginName + "`.");
        }
      }
    }
  }
  function publishRegistrationName(registrationName, pluginModule) {
    if (registrationNameModules[registrationName]) throw Error("EventPluginRegistry: More than one plugin attempted to publish the same registration name, `" + (registrationName + "`."));
    registrationNameModules[registrationName] = pluginModule;
  }
  var plugins = [],
    eventNameDispatchConfigs = {},
    registrationNameModules = {};
  function getListener(inst, registrationName) {
    inst = inst.stateNode;
    if (null === inst) return null;
    inst = getFiberCurrentPropsFromNode$1(inst);
    if (null === inst) return null;
    if ((inst = inst[registrationName]) && "function" !== typeof inst) throw Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof inst + "` type.");
    return inst;
  }
  var customBubblingEventTypes = _$$_REQUIRE(_dependencyMap[2]).ReactNativeViewConfigRegistry.customBubblingEventTypes,
    customDirectEventTypes = _$$_REQUIRE(_dependencyMap[2]).ReactNativeViewConfigRegistry.customDirectEventTypes;
  function accumulateDirectionalDispatches(inst, phase, event) {
    if (phase = getListener(inst, event.dispatchConfig.phasedRegistrationNames[phase])) event._dispatchListeners = accumulateInto(event._dispatchListeners, phase), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }
  function traverseTwoPhase(inst, fn, arg, skipBubbling) {
    for (var path = []; inst;) {
      path.push(inst);
      do inst = inst.return; while (inst && 5 !== inst.tag);
      inst = inst ? inst : null;
    }
    for (inst = path.length; 0 < inst--;) fn(path[inst], "captured", arg);
    if (skipBubbling) fn(path[0], "bubbled", arg);else for (inst = 0; inst < path.length; inst++) fn(path[inst], "bubbled", arg);
  }
  function accumulateTwoPhaseDispatchesSingle(event) {
    event && event.dispatchConfig.phasedRegistrationNames && traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event, false);
  }
  function accumulateDirectDispatchesSingle(event) {
    if (event && event.dispatchConfig.registrationName) {
      var inst = event._targetInst;
      if (inst && event && event.dispatchConfig.registrationName) {
        var listener = getListener(inst, event.dispatchConfig.registrationName);
        listener && (event._dispatchListeners = accumulateInto(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst));
      }
    }
  }
  if (eventPluginOrder) throw Error("EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.");
  eventPluginOrder = Array.prototype.slice.call(["ResponderEventPlugin", "ReactNativeBridgeEventPlugin"]);
  recomputePluginOrdering();
  var injectedNamesToPlugins$jscomp$inline_281 = {
      ResponderEventPlugin: ResponderEventPlugin,
      ReactNativeBridgeEventPlugin: {
        eventTypes: {},
        extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
          if (null == targetInst) return null;
          var bubbleDispatchConfig = customBubblingEventTypes[topLevelType],
            directDispatchConfig = customDirectEventTypes[topLevelType];
          if (!bubbleDispatchConfig && !directDispatchConfig) throw Error('Unsupported top level event type "' + topLevelType + '" dispatched');
          topLevelType = SyntheticEvent.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);
          if (bubbleDispatchConfig) null != topLevelType && null != topLevelType.dispatchConfig.phasedRegistrationNames && topLevelType.dispatchConfig.phasedRegistrationNames.skipBubbling ? topLevelType && topLevelType.dispatchConfig.phasedRegistrationNames && traverseTwoPhase(topLevelType._targetInst, accumulateDirectionalDispatches, topLevelType, true) : forEachAccumulated(topLevelType, accumulateTwoPhaseDispatchesSingle);else if (directDispatchConfig) forEachAccumulated(topLevelType, accumulateDirectDispatchesSingle);else return null;
          return topLevelType;
        }
      }
    },
    isOrderingDirty$jscomp$inline_282 = false,
    pluginName$jscomp$inline_283;
  for (pluginName$jscomp$inline_283 in injectedNamesToPlugins$jscomp$inline_281) if (injectedNamesToPlugins$jscomp$inline_281.hasOwnProperty(pluginName$jscomp$inline_283)) {
    var pluginModule$jscomp$inline_284 = injectedNamesToPlugins$jscomp$inline_281[pluginName$jscomp$inline_283];
    if (!namesToPlugins.hasOwnProperty(pluginName$jscomp$inline_283) || namesToPlugins[pluginName$jscomp$inline_283] !== pluginModule$jscomp$inline_284) {
      if (namesToPlugins[pluginName$jscomp$inline_283]) throw Error("EventPluginRegistry: Cannot inject two different event plugins using the same name, `" + (pluginName$jscomp$inline_283 + "`."));
      namesToPlugins[pluginName$jscomp$inline_283] = pluginModule$jscomp$inline_284;
      isOrderingDirty$jscomp$inline_282 = true;
    }
  }
  isOrderingDirty$jscomp$inline_282 && recomputePluginOrdering();
  var emptyObject = {},
    removedKeys = null,
    removedKeyCount = 0,
    deepDifferOptions = {
      unsafelyIgnoreFunctions: true
    };
  function defaultDiffer(prevProp, nextProp) {
    return "object" !== typeof nextProp || null === nextProp ? true : _$$_REQUIRE(_dependencyMap[2]).deepDiffer(prevProp, nextProp, deepDifferOptions);
  }
  function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {
    if (isArrayImpl(node)) for (var i = node.length; i-- && 0 < removedKeyCount;) restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);else if (node && 0 < removedKeyCount) for (i in removedKeys) if (removedKeys[i]) {
      var nextProp = node[i];
      if (undefined !== nextProp) {
        var attributeConfig = validAttributes[i];
        if (attributeConfig) {
          "function" === typeof nextProp && (nextProp = true);
          "undefined" === typeof nextProp && (nextProp = null);
          if ("object" !== typeof attributeConfig) updatePayload[i] = nextProp;else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) nextProp = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[i] = nextProp;
          removedKeys[i] = false;
          removedKeyCount--;
        }
      }
    }
  }
  function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {
    if (!updatePayload && prevProp === nextProp) return updatePayload;
    if (!prevProp || !nextProp) return nextProp ? addNestedProperty(updatePayload, nextProp, validAttributes) : prevProp ? clearNestedProperty(updatePayload, prevProp, validAttributes) : updatePayload;
    if (!isArrayImpl(prevProp) && !isArrayImpl(nextProp)) return diffProperties(updatePayload, prevProp, nextProp, validAttributes);
    if (isArrayImpl(prevProp) && isArrayImpl(nextProp)) {
      var minLength = prevProp.length < nextProp.length ? prevProp.length : nextProp.length,
        i;
      for (i = 0; i < minLength; i++) updatePayload = diffNestedProperty(updatePayload, prevProp[i], nextProp[i], validAttributes);
      for (; i < prevProp.length; i++) updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
      for (; i < nextProp.length; i++) updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
      return updatePayload;
    }
    return isArrayImpl(prevProp) ? diffProperties(updatePayload, _$$_REQUIRE(_dependencyMap[2]).flattenStyle(prevProp), nextProp, validAttributes) : diffProperties(updatePayload, prevProp, _$$_REQUIRE(_dependencyMap[2]).flattenStyle(nextProp), validAttributes);
  }
  function addNestedProperty(updatePayload, nextProp, validAttributes) {
    if (!nextProp) return updatePayload;
    if (!isArrayImpl(nextProp)) return diffProperties(updatePayload, emptyObject, nextProp, validAttributes);
    for (var i = 0; i < nextProp.length; i++) updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
    return updatePayload;
  }
  function clearNestedProperty(updatePayload, prevProp, validAttributes) {
    if (!prevProp) return updatePayload;
    if (!isArrayImpl(prevProp)) return diffProperties(updatePayload, prevProp, emptyObject, validAttributes);
    for (var i = 0; i < prevProp.length; i++) updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
    return updatePayload;
  }
  function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
    var attributeConfig, propKey;
    for (propKey in nextProps) if (attributeConfig = validAttributes[propKey]) {
      var prevProp = prevProps[propKey];
      var nextProp = nextProps[propKey];
      "function" === typeof nextProp && (nextProp = true, "function" === typeof prevProp && (prevProp = true));
      "undefined" === typeof nextProp && (nextProp = null, "undefined" === typeof prevProp && (prevProp = null));
      removedKeys && (removedKeys[propKey] = false);
      if (updatePayload && undefined !== updatePayload[propKey]) {
        if ("object" !== typeof attributeConfig) updatePayload[propKey] = nextProp;else {
          if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[propKey] = attributeConfig;
        }
      } else if (prevProp !== nextProp) if ("object" !== typeof attributeConfig) defaultDiffer(prevProp, nextProp) && ((updatePayload || (updatePayload = {}))[propKey] = nextProp);else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) {
        if (undefined === prevProp || ("function" === typeof attributeConfig.diff ? attributeConfig.diff(prevProp, nextProp) : defaultDiffer(prevProp, nextProp))) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, (updatePayload || (updatePayload = {}))[propKey] = attributeConfig;
      } else removedKeys = null, removedKeyCount = 0, updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig), 0 < removedKeyCount && updatePayload && (restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig), removedKeys = null);
    }
    for (var propKey$5 in prevProps) undefined === nextProps[propKey$5] && (!(attributeConfig = validAttributes[propKey$5]) || updatePayload && undefined !== updatePayload[propKey$5] || (prevProp = prevProps[propKey$5], undefined !== prevProp && ("object" !== typeof attributeConfig || "function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process ? ((updatePayload || (updatePayload = {}))[propKey$5] = null, removedKeys || (removedKeys = {}), removedKeys[propKey$5] || (removedKeys[propKey$5] = true, removedKeyCount++)) : updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig))));
    return updatePayload;
  }
  function fastAddProperties(payload, props, validAttributes) {
    if (isArrayImpl(props)) {
      for (var i = 0; i < props.length; i++) payload = fastAddProperties(payload, props[i], validAttributes);
      return payload;
    }
    for (i in props) {
      var prop = props[i],
        attributeConfig = validAttributes[i];
      if (null != attributeConfig) {
        var newValue = undefined;
        if (undefined === prop) {
          if (payload && undefined !== payload[i]) newValue = null;else continue;
        } else "function" === typeof prop ? newValue = true : "object" !== typeof attributeConfig ? newValue = prop : "function" === typeof attributeConfig.process ? newValue = attributeConfig.process(prop) : "function" === typeof attributeConfig.diff && (newValue = prop);
        undefined !== newValue ? (payload || (payload = {}), payload[i] = newValue) : payload = fastAddProperties(payload, prop, attributeConfig);
      }
    }
    return payload;
  }
  function batchedUpdatesImpl(fn, bookkeeping) {
    return fn(bookkeeping);
  }
  var isInsideEventHandler = false;
  function batchedUpdates$1(fn, bookkeeping) {
    if (isInsideEventHandler) return fn(bookkeeping);
    isInsideEventHandler = true;
    try {
      return batchedUpdatesImpl(fn, bookkeeping);
    } finally {
      isInsideEventHandler = false;
    }
  }
  var eventQueue = null;
  function executeDispatchesAndReleaseTopLevel(e) {
    if (e) {
      var dispatchListeners = e._dispatchListeners,
        dispatchInstances = e._dispatchInstances;
      if (isArrayImpl(dispatchListeners)) for (var i = 0; i < dispatchListeners.length && !e.isPropagationStopped(); i++) executeDispatch(e, dispatchListeners[i], dispatchInstances[i]);else dispatchListeners && executeDispatch(e, dispatchListeners, dispatchInstances);
      e._dispatchListeners = null;
      e._dispatchInstances = null;
      e.isPersistent() || e.constructor.release(e);
    }
  }
  function dispatchEvent(target, topLevelType, nativeEvent) {
    var eventTarget = null;
    if (null != target) {
      var stateNode = target.stateNode;
      null != stateNode && (eventTarget = getPublicInstance(stateNode));
    }
    batchedUpdates$1(function () {
      var event = {
        eventName: topLevelType,
        nativeEvent: nativeEvent
      };
      _$$_REQUIRE(_dependencyMap[2]).RawEventEmitter.emit(topLevelType, event);
      _$$_REQUIRE(_dependencyMap[2]).RawEventEmitter.emit("*", event);
      event = eventTarget;
      for (var events = null, legacyPlugins = plugins, i = 0; i < legacyPlugins.length; i++) {
        var possiblePlugin = legacyPlugins[i];
        possiblePlugin && (possiblePlugin = possiblePlugin.extractEvents(topLevelType, target, nativeEvent, event)) && (events = accumulateInto(events, possiblePlugin));
      }
      event = events;
      null !== event && (eventQueue = accumulateInto(eventQueue, event));
      event = eventQueue;
      eventQueue = null;
      if (event) {
        forEachAccumulated(event, executeDispatchesAndReleaseTopLevel);
        if (eventQueue) throw Error("processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.");
        if (hasError) throw event = caughtError, hasError = false, caughtError = null, event;
      }
    });
  }
  var rendererID = null,
    injectedHook = null;
  function onCommitRoot(root) {
    if (injectedHook && "function" === typeof injectedHook.onCommitFiberRoot) try {
      injectedHook.onCommitFiberRoot(rendererID, root, undefined, 128 === (root.current.flags & 128));
    } catch (err) {}
  }
  function setIsStrictModeForDevtools(newIsStrictMode) {
    "function" === typeof _$$_REQUIRE(_dependencyMap[3]).log && _$$_REQUIRE(_dependencyMap[3]).unstable_setDisableYieldValue(newIsStrictMode);
    if (injectedHook && "function" === typeof injectedHook.setStrictMode) try {
      injectedHook.setStrictMode(rendererID, newIsStrictMode);
    } catch (err) {}
  }
  var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback,
    log = Math.log,
    LN2 = Math.LN2;
  function clz32Fallback(x) {
    x >>>= 0;
    return 0 === x ? 32 : 31 - (log(x) / LN2 | 0) | 0;
  }
  var nextTransitionLane = 128,
    nextRetryLane = 4194304;
  function getHighestPriorityLanes(lanes) {
    var pendingSyncLanes = lanes & 42;
    if (0 !== pendingSyncLanes) return pendingSyncLanes;
    switch (lanes & -lanes) {
      case 1:
        return 1;
      case 2:
        return 2;
      case 4:
        return 4;
      case 8:
        return 8;
      case 16:
        return 16;
      case 32:
        return 32;
      case 64:
        return 64;
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return lanes & 4194176;
      case 4194304:
      case 8388608:
      case 16777216:
      case 33554432:
        return lanes & 62914560;
      case 67108864:
        return 67108864;
      case 134217728:
        return 134217728;
      case 268435456:
        return 268435456;
      case 536870912:
        return 536870912;
      case 1073741824:
        return 0;
      default:
        return lanes;
    }
  }
  function getNextLanes(root, wipLanes) {
    var pendingLanes = root.pendingLanes;
    if (0 === pendingLanes) return 0;
    var nextLanes = 0,
      suspendedLanes = root.suspendedLanes,
      pingedLanes = root.pingedLanes,
      warmLanes = root.warmLanes;
    root = 0 !== root.finishedLanes;
    var nonIdlePendingLanes = pendingLanes & 134217727;
    0 !== nonIdlePendingLanes ? (pendingLanes = nonIdlePendingLanes & ~suspendedLanes, 0 !== pendingLanes ? nextLanes = getHighestPriorityLanes(pendingLanes) : (pingedLanes &= nonIdlePendingLanes, 0 !== pingedLanes ? nextLanes = getHighestPriorityLanes(pingedLanes) : root || (warmLanes = nonIdlePendingLanes & ~warmLanes, 0 !== warmLanes && (nextLanes = getHighestPriorityLanes(warmLanes))))) : (nonIdlePendingLanes = pendingLanes & ~suspendedLanes, 0 !== nonIdlePendingLanes ? nextLanes = getHighestPriorityLanes(nonIdlePendingLanes) : 0 !== pingedLanes ? nextLanes = getHighestPriorityLanes(pingedLanes) : root || (warmLanes = pendingLanes & ~warmLanes, 0 !== warmLanes && (nextLanes = getHighestPriorityLanes(warmLanes))));
    return 0 === nextLanes ? 0 : 0 !== wipLanes && wipLanes !== nextLanes && 0 === (wipLanes & suspendedLanes) && (suspendedLanes = nextLanes & -nextLanes, warmLanes = wipLanes & -wipLanes, suspendedLanes >= warmLanes || 32 === suspendedLanes && 0 !== (warmLanes & 4194176)) ? wipLanes : nextLanes;
  }
  function checkIfRootIsPrerendering(root, renderLanes) {
    return 0 === (root.pendingLanes & ~(root.suspendedLanes & ~root.pingedLanes) & renderLanes);
  }
  function computeExpirationTime(lane, currentTime) {
    switch (lane) {
      case 1:
      case 2:
      case 4:
      case 8:
        return currentTime + 250;
      case 16:
      case 32:
      case 64:
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return currentTime + 5e3;
      case 4194304:
      case 8388608:
      case 16777216:
      case 33554432:
        return -1;
      case 67108864:
      case 134217728:
      case 268435456:
      case 536870912:
      case 1073741824:
        return -1;
      default:
        return -1;
    }
  }
  function claimNextTransitionLane() {
    var lane = nextTransitionLane;
    nextTransitionLane <<= 1;
    0 === (nextTransitionLane & 4194176) && (nextTransitionLane = 128);
    return lane;
  }
  function claimNextRetryLane() {
    var lane = nextRetryLane;
    nextRetryLane <<= 1;
    0 === (nextRetryLane & 62914560) && (nextRetryLane = 4194304);
    return lane;
  }
  function createLaneMap(initial) {
    for (var laneMap = [], i = 0; 31 > i; i++) laneMap.push(initial);
    return laneMap;
  }
  function markRootUpdated$1(root, updateLane) {
    root.pendingLanes |= updateLane;
    268435456 !== updateLane && (root.suspendedLanes = 0, root.pingedLanes = 0, root.warmLanes = 0);
  }
  function markRootFinished(root, finishedLanes, remainingLanes, spawnedLane, updatedLanes, suspendedRetryLanes) {
    var previouslyPendingLanes = root.pendingLanes;
    root.pendingLanes = remainingLanes;
    root.suspendedLanes = 0;
    root.pingedLanes = 0;
    root.warmLanes = 0;
    root.expiredLanes &= remainingLanes;
    root.entangledLanes &= remainingLanes;
    root.errorRecoveryDisabledLanes &= remainingLanes;
    root.shellSuspendCounter = 0;
    var entanglements = root.entanglements,
      expirationTimes = root.expirationTimes,
      hiddenUpdates = root.hiddenUpdates;
    for (remainingLanes = previouslyPendingLanes & ~remainingLanes; 0 < remainingLanes;) {
      var index$10 = 31 - clz32(remainingLanes),
        lane = 1 << index$10;
      entanglements[index$10] = 0;
      expirationTimes[index$10] = -1;
      var hiddenUpdatesForLane = hiddenUpdates[index$10];
      if (null !== hiddenUpdatesForLane) for (hiddenUpdates[index$10] = null, index$10 = 0; index$10 < hiddenUpdatesForLane.length; index$10++) {
        var update = hiddenUpdatesForLane[index$10];
        null !== update && (update.lane &= -536870913);
      }
      remainingLanes &= ~lane;
    }
    0 !== spawnedLane && markSpawnedDeferredLane(root, spawnedLane, 0);
    0 !== suspendedRetryLanes && 0 === updatedLanes && (root.suspendedLanes |= suspendedRetryLanes & ~(previouslyPendingLanes & ~finishedLanes));
  }
  function markSpawnedDeferredLane(root, spawnedLane, entangledLanes) {
    root.pendingLanes |= spawnedLane;
    root.suspendedLanes &= ~spawnedLane;
    var spawnedLaneIndex = 31 - clz32(spawnedLane);
    root.entangledLanes |= spawnedLane;
    root.entanglements[spawnedLaneIndex] = root.entanglements[spawnedLaneIndex] | 1073741824 | entangledLanes & 4194218;
  }
  function markRootEntangled(root, entangledLanes) {
    var rootEntangledLanes = root.entangledLanes |= entangledLanes;
    for (root = root.entanglements; rootEntangledLanes;) {
      var index$11 = 31 - clz32(rootEntangledLanes),
        lane = 1 << index$11;
      lane & entangledLanes | root[index$11] & entangledLanes && (root[index$11] |= entangledLanes);
      rootEntangledLanes &= ~lane;
    }
  }
  function lanesToEventPriority(lanes) {
    lanes &= -lanes;
    return 2 < lanes ? 8 < lanes ? 0 !== (lanes & 134217727) ? 32 : 268435456 : 8 : 2;
  }
  function getNearestMountedFiber(fiber) {
    var node = fiber,
      nearestMounted = fiber;
    if (fiber.alternate) for (; node.return;) node = node.return;else {
      fiber = node;
      do node = fiber, 0 !== (node.flags & 4098) && (nearestMounted = node.return), fiber = node.return; while (fiber);
    }
    return 3 === node.tag ? nearestMounted : null;
  }
  function assertIsMounted(fiber) {
    if (getNearestMountedFiber(fiber) !== fiber) throw Error("Unable to find node on an unmounted component.");
  }
  function findCurrentFiberUsingSlowPath(fiber) {
    var alternate = fiber.alternate;
    if (!alternate) {
      alternate = getNearestMountedFiber(fiber);
      if (null === alternate) throw Error("Unable to find node on an unmounted component.");
      return alternate !== fiber ? null : fiber;
    }
    for (var a = fiber, b = alternate;;) {
      var parentA = a.return;
      if (null === parentA) break;
      var parentB = parentA.alternate;
      if (null === parentB) {
        b = parentA.return;
        if (null !== b) {
          a = b;
          continue;
        }
        break;
      }
      if (parentA.child === parentB.child) {
        for (parentB = parentA.child; parentB;) {
          if (parentB === a) return assertIsMounted(parentA), fiber;
          if (parentB === b) return assertIsMounted(parentA), alternate;
          parentB = parentB.sibling;
        }
        throw Error("Unable to find node on an unmounted component.");
      }
      if (a.return !== b.return) a = parentA, b = parentB;else {
        for (var didFindChild = false, child$12 = parentA.child; child$12;) {
          if (child$12 === a) {
            didFindChild = true;
            a = parentA;
            b = parentB;
            break;
          }
          if (child$12 === b) {
            didFindChild = true;
            b = parentA;
            a = parentB;
            break;
          }
          child$12 = child$12.sibling;
        }
        if (!didFindChild) {
          for (child$12 = parentB.child; child$12;) {
            if (child$12 === a) {
              didFindChild = true;
              a = parentB;
              b = parentA;
              break;
            }
            if (child$12 === b) {
              didFindChild = true;
              b = parentB;
              a = parentA;
              break;
            }
            child$12 = child$12.sibling;
          }
          if (!didFindChild) throw Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
        }
      }
      if (a.alternate !== b) throw Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
    }
    if (3 !== a.tag) throw Error("Unable to find node on an unmounted component.");
    return a.stateNode.current === a ? fiber : alternate;
  }
  function findCurrentHostFiberImpl(node) {
    var tag = node.tag;
    if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return node;
    for (node = node.child; null !== node;) {
      tag = findCurrentHostFiberImpl(node);
      if (null !== tag) return tag;
      node = node.sibling;
    }
    return null;
  }
  var valueStack = [],
    index = -1;
  function createCursor(defaultValue) {
    return {
      current: defaultValue
    };
  }
  function pop(cursor) {
    0 > index || (cursor.current = valueStack[index], valueStack[index] = null, index--);
  }
  function push(cursor, value) {
    index++;
    valueStack[index] = cursor.current;
    cursor.current = value;
  }
  var emptyContextObject = {};
  function is(x, y) {
    return x === y && (0 !== x || 1 / x === 1 / y) || x !== x && y !== y;
  }
  var objectIs = "function" === typeof Object.is ? Object.is : is,
    CapturedStacks = new WeakMap();
  function createCapturedValueAtFiber(value, source) {
    if ("object" === typeof value && null !== value) {
      var existing = CapturedStacks.get(value);
      if (undefined !== existing) return existing;
      source = {
        value: value,
        source: source,
        stack: getStackByFiberInDevAndProd(source)
      };
      CapturedStacks.set(value, source);
      return source;
    }
    return {
      value: value,
      source: source,
      stack: getStackByFiberInDevAndProd(source)
    };
  }
  var contextStackCursor = createCursor(null),
    contextFiberStackCursor = createCursor(null),
    rootInstanceStackCursor = createCursor(null),
    hostTransitionProviderCursor = createCursor(null);
  function pushHostContainer(fiber, nextRootInstance) {
    push(rootInstanceStackCursor, nextRootInstance);
    push(contextFiberStackCursor, fiber);
    push(contextStackCursor, null);
    fiber = PROD_HOST_CONTEXT;
    pop(contextStackCursor);
    push(contextStackCursor, fiber);
  }
  function popHostContainer() {
    pop(contextStackCursor);
    pop(contextFiberStackCursor);
    pop(rootInstanceStackCursor);
  }
  function pushHostContext(fiber) {
    null !== fiber.memoizedState && push(hostTransitionProviderCursor, fiber);
    var context = contextStackCursor.current;
    context !== context && (push(contextFiberStackCursor, fiber), push(contextStackCursor, context));
  }
  function popHostContext(fiber) {
    contextFiberStackCursor.current === fiber && (pop(contextStackCursor), pop(contextFiberStackCursor));
    hostTransitionProviderCursor.current === fiber && (pop(hostTransitionProviderCursor), HostTransitionContext._currentValue2 = null);
  }
  var hydrationErrors = null,
    concurrentQueues = [],
    concurrentQueuesIndex = 0,
    concurrentlyUpdatedLanes = 0;
  function finishQueueingConcurrentUpdates() {
    for (var endIndex = concurrentQueuesIndex, i = concurrentlyUpdatedLanes = concurrentQueuesIndex = 0; i < endIndex;) {
      var fiber = concurrentQueues[i];
      concurrentQueues[i++] = null;
      var queue = concurrentQueues[i];
      concurrentQueues[i++] = null;
      var update = concurrentQueues[i];
      concurrentQueues[i++] = null;
      var lane = concurrentQueues[i];
      concurrentQueues[i++] = null;
      if (null !== queue && null !== update) {
        var pending = queue.pending;
        null === pending ? update.next = update : (update.next = pending.next, pending.next = update);
        queue.pending = update;
      }
      0 !== lane && markUpdateLaneFromFiberToRoot(fiber, update, lane);
    }
  }
  function enqueueUpdate$1(fiber, queue, update, lane) {
    concurrentQueues[concurrentQueuesIndex++] = fiber;
    concurrentQueues[concurrentQueuesIndex++] = queue;
    concurrentQueues[concurrentQueuesIndex++] = update;
    concurrentQueues[concurrentQueuesIndex++] = lane;
    concurrentlyUpdatedLanes |= lane;
    fiber.lanes |= lane;
    fiber = fiber.alternate;
    null !== fiber && (fiber.lanes |= lane);
  }
  function enqueueConcurrentHookUpdate(fiber, queue, update, lane) {
    enqueueUpdate$1(fiber, queue, update, lane);
    return getRootForUpdatedFiber(fiber);
  }
  function enqueueConcurrentRenderForLane(fiber, lane) {
    enqueueUpdate$1(fiber, null, null, lane);
    return getRootForUpdatedFiber(fiber);
  }
  function markUpdateLaneFromFiberToRoot(sourceFiber, update, lane) {
    sourceFiber.lanes |= lane;
    var alternate = sourceFiber.alternate;
    null !== alternate && (alternate.lanes |= lane);
    for (var isHidden = false, parent = sourceFiber.return; null !== parent;) parent.childLanes |= lane, alternate = parent.alternate, null !== alternate && (alternate.childLanes |= lane), 22 === parent.tag && (sourceFiber = parent.stateNode, null === sourceFiber || sourceFiber._visibility & 1 || (isHidden = true)), sourceFiber = parent, parent = parent.return;
    isHidden && null !== update && 3 === sourceFiber.tag && (parent = sourceFiber.stateNode, isHidden = 31 - clz32(lane), parent = parent.hiddenUpdates, sourceFiber = parent[isHidden], null === sourceFiber ? parent[isHidden] = [update] : sourceFiber.push(update), update.lane = lane | 536870912);
  }
  function getRootForUpdatedFiber(sourceFiber) {
    if (50 < nestedUpdateCount) throw nestedUpdateCount = 0, rootWithNestedUpdates = null, Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
    for (var parent = sourceFiber.return; null !== parent;) sourceFiber = parent, parent = sourceFiber.return;
    return 3 === sourceFiber.tag ? sourceFiber.stateNode : null;
  }
  var firstScheduledRoot = null,
    lastScheduledRoot = null,
    didScheduleMicrotask = false,
    mightHavePendingSyncWork = false,
    isFlushingWork = false,
    currentEventTransitionLane = 0;
  function ensureRootIsScheduled(root) {
    root !== lastScheduledRoot && null === root.next && (null === lastScheduledRoot ? firstScheduledRoot = lastScheduledRoot = root : lastScheduledRoot = lastScheduledRoot.next = root);
    mightHavePendingSyncWork = true;
    didScheduleMicrotask || (didScheduleMicrotask = true, scheduleImmediateTask(processRootScheduleInMicrotask));
  }
  function flushSyncWorkAcrossRoots_impl(syncTransitionLanes, onlyLegacy) {
    if (!isFlushingWork && mightHavePendingSyncWork) {
      isFlushingWork = true;
      do {
        var didPerformSomeWork = false;
        for (var root = firstScheduledRoot; null !== root;) {
          if (!onlyLegacy || 0 === root.tag) if (0 !== syncTransitionLanes) {
            var pendingLanes = root.pendingLanes;
            if (0 === pendingLanes) var JSCompiler_inline_result = 0;else {
              var suspendedLanes = root.suspendedLanes,
                pingedLanes = root.pingedLanes;
              JSCompiler_inline_result = (1 << 31 - clz32(42 | syncTransitionLanes) + 1) - 1;
              JSCompiler_inline_result &= pendingLanes & ~(suspendedLanes & ~pingedLanes);
              JSCompiler_inline_result = JSCompiler_inline_result & 201326677 ? JSCompiler_inline_result & 201326677 | 1 : JSCompiler_inline_result ? JSCompiler_inline_result | 2 : 0;
            }
            0 !== JSCompiler_inline_result && (didPerformSomeWork = true, performSyncWorkOnRoot(root, JSCompiler_inline_result));
          } else JSCompiler_inline_result = workInProgressRootRenderLanes, JSCompiler_inline_result = getNextLanes(root, root === workInProgressRoot ? JSCompiler_inline_result : 0), 0 === (JSCompiler_inline_result & 3) || checkIfRootIsPrerendering(root, JSCompiler_inline_result) || (didPerformSomeWork = true, performSyncWorkOnRoot(root, JSCompiler_inline_result));
          root = root.next;
        }
      } while (didPerformSomeWork);
      isFlushingWork = false;
    }
  }
  function processRootScheduleInMicrotask() {
    mightHavePendingSyncWork = didScheduleMicrotask = false;
    0 !== currentEventTransitionLane && (currentEventTransitionLane = 0);
    for (var currentTime = _$$_REQUIRE(_dependencyMap[3]).unstable_now(), prev = null, root = firstScheduledRoot; null !== root;) {
      var next = root.next,
        nextLanes = scheduleTaskForRootDuringMicrotask(root, currentTime);
      0 === nextLanes ? (root.next = null, null === prev ? firstScheduledRoot = next : prev.next = next, null === next && (lastScheduledRoot = prev)) : (prev = root, 0 !== (nextLanes & 3) && (mightHavePendingSyncWork = true));
      root = next;
    }
    flushSyncWorkAcrossRoots_impl(0, false);
  }
  function scheduleTaskForRootDuringMicrotask(root, currentTime) {
    for (var suspendedLanes = root.suspendedLanes, pingedLanes = root.pingedLanes, expirationTimes = root.expirationTimes, lanes = root.pendingLanes & -62914561; 0 < lanes;) {
      var index$8 = 31 - clz32(lanes),
        lane = 1 << index$8,
        expirationTime = expirationTimes[index$8];
      if (-1 === expirationTime) {
        if (0 === (lane & suspendedLanes) || 0 !== (lane & pingedLanes)) expirationTimes[index$8] = computeExpirationTime(lane, currentTime);
      } else expirationTime <= currentTime && (root.expiredLanes |= lane);
      lanes &= ~lane;
    }
    currentTime = workInProgressRoot;
    suspendedLanes = workInProgressRootRenderLanes;
    suspendedLanes = getNextLanes(root, root === currentTime ? suspendedLanes : 0);
    pingedLanes = root.callbackNode;
    if (0 === suspendedLanes || root === currentTime && 2 === workInProgressSuspendedReason || null !== root.cancelPendingCommit) return null !== pingedLanes && null !== pingedLanes && _$$_REQUIRE(_dependencyMap[3]).unstable_cancelCallback(pingedLanes), root.callbackNode = null, root.callbackPriority = 0;
    if (0 === (suspendedLanes & 3) || checkIfRootIsPrerendering(root, suspendedLanes)) {
      currentTime = suspendedLanes & -suspendedLanes;
      if (currentTime === root.callbackPriority) return currentTime;
      null !== pingedLanes && _$$_REQUIRE(_dependencyMap[3]).unstable_cancelCallback(pingedLanes);
      switch (lanesToEventPriority(suspendedLanes)) {
        case 2:
        case 8:
          suspendedLanes = _$$_REQUIRE(_dependencyMap[3]).unstable_UserBlockingPriority;
          break;
        case 32:
          suspendedLanes = _$$_REQUIRE(_dependencyMap[3]).unstable_NormalPriority;
          break;
        case 268435456:
          suspendedLanes = _$$_REQUIRE(_dependencyMap[3]).unstable_IdlePriority;
          break;
        default:
          suspendedLanes = _$$_REQUIRE(_dependencyMap[3]).unstable_NormalPriority;
      }
      pingedLanes = performWorkOnRootViaSchedulerTask.bind(null, root);
      suspendedLanes = _$$_REQUIRE(_dependencyMap[3]).unstable_scheduleCallback(suspendedLanes, pingedLanes);
      root.callbackPriority = currentTime;
      root.callbackNode = suspendedLanes;
      return currentTime;
    }
    null !== pingedLanes && null !== pingedLanes && _$$_REQUIRE(_dependencyMap[3]).unstable_cancelCallback(pingedLanes);
    root.callbackPriority = 2;
    root.callbackNode = null;
    return 2;
  }
  function performWorkOnRootViaSchedulerTask(root, didTimeout) {
    var originalCallbackNode = root.callbackNode;
    if (flushPassiveEffects() && root.callbackNode !== originalCallbackNode) return null;
    var workInProgressRootRenderLanes$jscomp$0 = workInProgressRootRenderLanes;
    workInProgressRootRenderLanes$jscomp$0 = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes$jscomp$0 : 0);
    if (0 === workInProgressRootRenderLanes$jscomp$0) return null;
    performWorkOnRoot(root, workInProgressRootRenderLanes$jscomp$0, didTimeout);
    scheduleTaskForRootDuringMicrotask(root, _$$_REQUIRE(_dependencyMap[3]).unstable_now());
    return null != root.callbackNode && root.callbackNode === originalCallbackNode ? performWorkOnRootViaSchedulerTask.bind(null, root) : null;
  }
  function performSyncWorkOnRoot(root, lanes) {
    if (flushPassiveEffects()) return null;
    performWorkOnRoot(root, lanes, true);
  }
  function scheduleImmediateTask(cb) {
    supportsMicrotasks ? scheduleMicrotask(function () {
      0 !== (executionContext & 6) ? _$$_REQUIRE(_dependencyMap[3]).unstable_scheduleCallback(_$$_REQUIRE(_dependencyMap[3]).unstable_ImmediatePriority, cb) : cb();
    }) : _$$_REQUIRE(_dependencyMap[3]).unstable_scheduleCallback(_$$_REQUIRE(_dependencyMap[3]).unstable_ImmediatePriority, cb);
  }
  function requestTransitionLane() {
    0 === currentEventTransitionLane && (currentEventTransitionLane = claimNextTransitionLane());
    return currentEventTransitionLane;
  }
  var currentEntangledListeners = null,
    currentEntangledPendingCount = 0,
    currentEntangledLane = 0,
    currentEntangledActionThenable = null;
  function entangleAsyncAction(transition, thenable) {
    if (null === currentEntangledListeners) {
      var entangledListeners = currentEntangledListeners = [];
      currentEntangledPendingCount = 0;
      currentEntangledLane = requestTransitionLane();
      currentEntangledActionThenable = {
        status: "pending",
        value: undefined,
        then: function then(resolve) {
          entangledListeners.push(resolve);
        }
      };
    }
    currentEntangledPendingCount++;
    thenable.then(pingEngtangledActionScope, pingEngtangledActionScope);
    return thenable;
  }
  function pingEngtangledActionScope() {
    if (0 === --currentEntangledPendingCount && null !== currentEntangledListeners) {
      null !== currentEntangledActionThenable && (currentEntangledActionThenable.status = "fulfilled");
      var listeners = currentEntangledListeners;
      currentEntangledListeners = null;
      currentEntangledLane = 0;
      currentEntangledActionThenable = null;
      for (var i = 0; i < listeners.length; i++) (0, listeners[i])();
    }
  }
  function chainThenableValue(thenable, result) {
    var listeners = [],
      thenableWithOverride = {
        status: "pending",
        value: null,
        reason: null,
        then: function then(resolve) {
          listeners.push(resolve);
        }
      };
    thenable.then(function () {
      thenableWithOverride.status = "fulfilled";
      thenableWithOverride.value = result;
      for (var i = 0; i < listeners.length; i++) (0, listeners[i])(result);
    }, function (error) {
      thenableWithOverride.status = "rejected";
      thenableWithOverride.reason = error;
      for (error = 0; error < listeners.length; error++) (0, listeners[error])(undefined);
    });
    return thenableWithOverride;
  }
  var hasForceUpdate = false;
  function initializeUpdateQueue(fiber) {
    fiber.updateQueue = {
      baseState: fiber.memoizedState,
      firstBaseUpdate: null,
      lastBaseUpdate: null,
      shared: {
        pending: null,
        lanes: 0,
        hiddenCallbacks: null
      },
      callbacks: null
    };
  }
  function cloneUpdateQueue(current, workInProgress) {
    current = current.updateQueue;
    workInProgress.updateQueue === current && (workInProgress.updateQueue = {
      baseState: current.baseState,
      firstBaseUpdate: current.firstBaseUpdate,
      lastBaseUpdate: current.lastBaseUpdate,
      shared: current.shared,
      callbacks: null
    });
  }
  function createUpdate(lane) {
    return {
      lane: lane,
      tag: 0,
      payload: null,
      callback: null,
      next: null
    };
  }
  function enqueueUpdate(fiber, update, lane) {
    var updateQueue = fiber.updateQueue;
    if (null === updateQueue) return null;
    updateQueue = updateQueue.shared;
    if (0 !== (executionContext & 2)) {
      var pending = updateQueue.pending;
      null === pending ? update.next = update : (update.next = pending.next, pending.next = update);
      updateQueue.pending = update;
      update = getRootForUpdatedFiber(fiber);
      markUpdateLaneFromFiberToRoot(fiber, null, lane);
      return update;
    }
    enqueueUpdate$1(fiber, updateQueue, update, lane);
    return getRootForUpdatedFiber(fiber);
  }
  function entangleTransitions(root, fiber, lane) {
    fiber = fiber.updateQueue;
    if (null !== fiber && (fiber = fiber.shared, 0 !== (lane & 4194176))) {
      var queueLanes = fiber.lanes;
      queueLanes &= root.pendingLanes;
      lane |= queueLanes;
      fiber.lanes = lane;
      markRootEntangled(root, lane);
    }
  }
  function enqueueCapturedUpdate(workInProgress, capturedUpdate) {
    var queue = workInProgress.updateQueue,
      current = workInProgress.alternate;
    if (null !== current && (current = current.updateQueue, queue === current)) {
      var newFirst = null,
        newLast = null;
      queue = queue.firstBaseUpdate;
      if (null !== queue) {
        do {
          var clone = {
            lane: queue.lane,
            tag: queue.tag,
            payload: queue.payload,
            callback: null,
            next: null
          };
          null === newLast ? newFirst = newLast = clone : newLast = newLast.next = clone;
          queue = queue.next;
        } while (null !== queue);
        null === newLast ? newFirst = newLast = capturedUpdate : newLast = newLast.next = capturedUpdate;
      } else newFirst = newLast = capturedUpdate;
      queue = {
        baseState: current.baseState,
        firstBaseUpdate: newFirst,
        lastBaseUpdate: newLast,
        shared: current.shared,
        callbacks: current.callbacks
      };
      workInProgress.updateQueue = queue;
      return;
    }
    workInProgress = queue.lastBaseUpdate;
    null === workInProgress ? queue.firstBaseUpdate = capturedUpdate : workInProgress.next = capturedUpdate;
    queue.lastBaseUpdate = capturedUpdate;
  }
  var didReadFromEntangledAsyncAction = false;
  function suspendIfUpdateReadFromEntangledAsyncAction() {
    if (didReadFromEntangledAsyncAction) {
      var entangledActionThenable = currentEntangledActionThenable;
      if (null !== entangledActionThenable) throw entangledActionThenable;
    }
  }
  function processUpdateQueue(workInProgress$jscomp$0, props, instance$jscomp$0, renderLanes) {
    didReadFromEntangledAsyncAction = false;
    var queue = workInProgress$jscomp$0.updateQueue;
    hasForceUpdate = false;
    var firstBaseUpdate = queue.firstBaseUpdate,
      lastBaseUpdate = queue.lastBaseUpdate,
      pendingQueue = queue.shared.pending;
    if (null !== pendingQueue) {
      queue.shared.pending = null;
      var lastPendingUpdate = pendingQueue,
        firstPendingUpdate = lastPendingUpdate.next;
      lastPendingUpdate.next = null;
      null === lastBaseUpdate ? firstBaseUpdate = firstPendingUpdate : lastBaseUpdate.next = firstPendingUpdate;
      lastBaseUpdate = lastPendingUpdate;
      var current = workInProgress$jscomp$0.alternate;
      null !== current && (current = current.updateQueue, pendingQueue = current.lastBaseUpdate, pendingQueue !== lastBaseUpdate && (null === pendingQueue ? current.firstBaseUpdate = firstPendingUpdate : pendingQueue.next = firstPendingUpdate, current.lastBaseUpdate = lastPendingUpdate));
    }
    if (null !== firstBaseUpdate) {
      var newState = queue.baseState;
      lastBaseUpdate = 0;
      current = firstPendingUpdate = lastPendingUpdate = null;
      pendingQueue = firstBaseUpdate;
      do {
        var updateLane = pendingQueue.lane & -536870913,
          isHiddenUpdate = updateLane !== pendingQueue.lane;
        if (isHiddenUpdate ? (workInProgressRootRenderLanes & updateLane) === updateLane : (renderLanes & updateLane) === updateLane) {
          0 !== updateLane && updateLane === currentEntangledLane && (didReadFromEntangledAsyncAction = true);
          null !== current && (current = current.next = {
            lane: 0,
            tag: pendingQueue.tag,
            payload: pendingQueue.payload,
            callback: null,
            next: null
          });
          a: {
            var workInProgress = workInProgress$jscomp$0,
              update = pendingQueue;
            updateLane = props;
            var instance = instance$jscomp$0;
            switch (update.tag) {
              case 1:
                workInProgress = update.payload;
                if ("function" === typeof workInProgress) {
                  newState = workInProgress.call(instance, newState, updateLane);
                  break a;
                }
                newState = workInProgress;
                break a;
              case 3:
                workInProgress.flags = workInProgress.flags & -65537 | 128;
              case 0:
                workInProgress = update.payload;
                updateLane = "function" === typeof workInProgress ? workInProgress.call(instance, newState, updateLane) : workInProgress;
                if (null === updateLane || undefined === updateLane) break a;
                newState = assign({}, newState, updateLane);
                break a;
              case 2:
                hasForceUpdate = true;
            }
          }
          updateLane = pendingQueue.callback;
          null !== updateLane && (workInProgress$jscomp$0.flags |= 64, isHiddenUpdate && (workInProgress$jscomp$0.flags |= 8192), isHiddenUpdate = queue.callbacks, null === isHiddenUpdate ? queue.callbacks = [updateLane] : isHiddenUpdate.push(updateLane));
        } else isHiddenUpdate = {
          lane: updateLane,
          tag: pendingQueue.tag,
          payload: pendingQueue.payload,
          callback: pendingQueue.callback,
          next: null
        }, null === current ? (firstPendingUpdate = current = isHiddenUpdate, lastPendingUpdate = newState) : current = current.next = isHiddenUpdate, lastBaseUpdate |= updateLane;
        pendingQueue = pendingQueue.next;
        if (null === pendingQueue) if (pendingQueue = queue.shared.pending, null === pendingQueue) break;else isHiddenUpdate = pendingQueue, pendingQueue = isHiddenUpdate.next, isHiddenUpdate.next = null, queue.lastBaseUpdate = isHiddenUpdate, queue.shared.pending = null;
      } while (1);
      null === current && (lastPendingUpdate = newState);
      queue.baseState = lastPendingUpdate;
      queue.firstBaseUpdate = firstPendingUpdate;
      queue.lastBaseUpdate = current;
      null === firstBaseUpdate && (queue.shared.lanes = 0);
      workInProgressRootSkippedLanes |= lastBaseUpdate;
      workInProgress$jscomp$0.lanes = lastBaseUpdate;
      workInProgress$jscomp$0.memoizedState = newState;
    }
  }
  function callCallback(callback, context) {
    if ("function" !== typeof callback) throw Error("Invalid argument passed as callback. Expected a function. Instead received: " + callback);
    callback.call(context);
  }
  function commitCallbacks(updateQueue, context) {
    var callbacks = updateQueue.callbacks;
    if (null !== callbacks) for (updateQueue.callbacks = null, updateQueue = 0; updateQueue < callbacks.length; updateQueue++) callCallback(callbacks[updateQueue], context);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  function shallowEqual(objA, objB) {
    if (objectIs(objA, objB)) return true;
    if ("object" !== typeof objA || null === objA || "object" !== typeof objB || null === objB) return false;
    var keysA = Object.keys(objA),
      keysB = Object.keys(objB);
    if (keysA.length !== keysB.length) return false;
    for (keysB = 0; keysB < keysA.length; keysB++) {
      var currentKey = keysA[keysB];
      if (!hasOwnProperty.call(objB, currentKey) || !objectIs(objA[currentKey], objB[currentKey])) return false;
    }
    return true;
  }
  var SuspenseException = Error("Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately, or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\n\nTo handle async errors, wrap your component in an error boundary, or call the promise's `.catch` method and pass the result to `use`"),
    SuspenseyCommitException = Error("Suspense Exception: This is not a real error, and should not leak into userspace. If you're seeing this, it's likely a bug in React."),
    noopSuspenseyCommitThenable = {
      then: function then() {}
    };
  function isThenableResolved(thenable) {
    thenable = thenable.status;
    return "fulfilled" === thenable || "rejected" === thenable;
  }
  function noop() {}
  function trackUsedThenable(thenableState, thenable, index) {
    index = thenableState[index];
    undefined === index ? thenableState.push(thenable) : index !== thenable && (thenable.then(noop, noop), thenable = index);
    switch (thenable.status) {
      case "fulfilled":
        return thenable.value;
      case "rejected":
        throw thenableState = thenable.reason, checkIfUseWrappedInAsyncCatch(thenableState), thenableState;
      default:
        if ("string" === typeof thenable.status) thenable.then(noop, noop);else {
          thenableState = workInProgressRoot;
          if (null !== thenableState && 100 < thenableState.shellSuspendCounter) throw Error("async/await is not yet supported in Client Components, only Server Components. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server.");
          thenableState = thenable;
          thenableState.status = "pending";
          thenableState.then(function (fulfilledValue) {
            if ("pending" === thenable.status) {
              var fulfilledThenable = thenable;
              fulfilledThenable.status = "fulfilled";
              fulfilledThenable.value = fulfilledValue;
            }
          }, function (error) {
            if ("pending" === thenable.status) {
              var rejectedThenable = thenable;
              rejectedThenable.status = "rejected";
              rejectedThenable.reason = error;
            }
          });
        }
        switch (thenable.status) {
          case "fulfilled":
            return thenable.value;
          case "rejected":
            throw thenableState = thenable.reason, checkIfUseWrappedInAsyncCatch(thenableState), thenableState;
        }
        suspendedThenable = thenable;
        throw SuspenseException;
    }
  }
  var suspendedThenable = null;
  function getSuspendedThenable() {
    if (null === suspendedThenable) throw Error("Expected a suspended thenable. This is a bug in React. Please file an issue.");
    var thenable = suspendedThenable;
    suspendedThenable = null;
    return thenable;
  }
  function checkIfUseWrappedInAsyncCatch(rejectedReason) {
    if (rejectedReason === SuspenseException) throw Error("Hooks are not supported inside an async component. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server.");
  }
  var thenableState$1 = null,
    thenableIndexCounter$1 = 0;
  function unwrapThenable(thenable) {
    var index = thenableIndexCounter$1;
    thenableIndexCounter$1 += 1;
    null === thenableState$1 && (thenableState$1 = []);
    return trackUsedThenable(thenableState$1, thenable, index);
  }
  function coerceRef(workInProgress, element) {
    element = element.props.ref;
    workInProgress.ref = undefined !== element ? element : null;
  }
  function throwOnInvalidObjectType(returnFiber, newChild) {
    if (newChild.$$typeof === REACT_LEGACY_ELEMENT_TYPE) throw Error('A React Element from an older version of React was rendered. This is not supported. It can happen if:\n- Multiple copies of the "react" package is used.\n- A library pre-bundled an old copy of "react" or "react/jsx-runtime".\n- A compiler tries to "inline" JSX instead of using the runtime.');
    returnFiber = Object.prototype.toString.call(newChild);
    throw Error("Objects are not valid as a React child (found: " + ("[object Object]" === returnFiber ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : returnFiber) + "). If you meant to render a collection of children, use an array instead.");
  }
  function resolveLazy(lazyType) {
    var init = lazyType._init;
    return init(lazyType._payload);
  }
  function createChildReconciler(shouldTrackSideEffects) {
    function deleteChild(returnFiber, childToDelete) {
      if (shouldTrackSideEffects) {
        var deletions = returnFiber.deletions;
        null === deletions ? (returnFiber.deletions = [childToDelete], returnFiber.flags |= 16) : deletions.push(childToDelete);
      }
    }
    function deleteRemainingChildren(returnFiber, currentFirstChild) {
      if (!shouldTrackSideEffects) return null;
      for (; null !== currentFirstChild;) deleteChild(returnFiber, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      return null;
    }
    function mapRemainingChildren(currentFirstChild) {
      for (var existingChildren = new Map(); null !== currentFirstChild;) null !== currentFirstChild.key ? existingChildren.set(currentFirstChild.key, currentFirstChild) : existingChildren.set(currentFirstChild.index, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      return existingChildren;
    }
    function useFiber(fiber, pendingProps) {
      fiber = createWorkInProgress(fiber, pendingProps);
      fiber.index = 0;
      fiber.sibling = null;
      return fiber;
    }
    function placeChild(newFiber, lastPlacedIndex, newIndex) {
      newFiber.index = newIndex;
      if (!shouldTrackSideEffects) return newFiber.flags |= 1048576, lastPlacedIndex;
      newIndex = newFiber.alternate;
      if (null !== newIndex) return newIndex = newIndex.index, newIndex < lastPlacedIndex ? (newFiber.flags |= 33554434, lastPlacedIndex) : newIndex;
      newFiber.flags |= 33554434;
      return lastPlacedIndex;
    }
    function placeSingleChild(newFiber) {
      shouldTrackSideEffects && null === newFiber.alternate && (newFiber.flags |= 33554434);
      return newFiber;
    }
    function updateTextNode(returnFiber, current, textContent, lanes) {
      if (null === current || 6 !== current.tag) return current = createFiberFromText(textContent, returnFiber.mode, lanes), current.return = returnFiber, current;
      current = useFiber(current, textContent);
      current.return = returnFiber;
      return current;
    }
    function updateElement(returnFiber, current, element, lanes) {
      var elementType = element.type;
      if (elementType === REACT_FRAGMENT_TYPE) return updateFragment(returnFiber, current, element.props.children, lanes, element.key);
      if (null !== current && (current.elementType === elementType || "object" === typeof elementType && null !== elementType && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === current.type)) return current = useFiber(current, element.props), coerceRef(current, element), current.return = returnFiber, current;
      current = createFiberFromTypeAndProps(element.type, element.key, element.props, null, returnFiber.mode, lanes);
      coerceRef(current, element);
      current.return = returnFiber;
      return current;
    }
    function updatePortal(returnFiber, current, portal, lanes) {
      if (null === current || 4 !== current.tag || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) return current = createFiberFromPortal(portal, returnFiber.mode, lanes), current.return = returnFiber, current;
      current = useFiber(current, portal.children || []);
      current.return = returnFiber;
      return current;
    }
    function updateFragment(returnFiber, current, fragment, lanes, key) {
      if (null === current || 7 !== current.tag) return current = createFiberFromFragment(fragment, returnFiber.mode, lanes, key), current.return = returnFiber, current;
      current = useFiber(current, fragment);
      current.return = returnFiber;
      return current;
    }
    function createChild(returnFiber, newChild, lanes) {
      if ("string" === typeof newChild && "" !== newChild || "number" === typeof newChild || "bigint" === typeof newChild) return newChild = createFiberFromText("" + newChild, returnFiber.mode, lanes), newChild.return = returnFiber, newChild;
      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return lanes = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, lanes), coerceRef(lanes, newChild), lanes.return = returnFiber, lanes;
          case REACT_PORTAL_TYPE:
            return newChild = createFiberFromPortal(newChild, returnFiber.mode, lanes), newChild.return = returnFiber, newChild;
          case REACT_LAZY_TYPE:
            var init = newChild._init;
            newChild = init(newChild._payload);
            return createChild(returnFiber, newChild, lanes);
        }
        if (isArrayImpl(newChild) || getIteratorFn(newChild)) return newChild = createFiberFromFragment(newChild, returnFiber.mode, lanes, null), newChild.return = returnFiber, newChild;
        if ("function" === typeof newChild.then) return createChild(returnFiber, unwrapThenable(newChild), lanes);
        if (newChild.$$typeof === REACT_CONTEXT_TYPE) return createChild(returnFiber, readContextDuringReconciliation(returnFiber, newChild), lanes);
        throwOnInvalidObjectType(returnFiber, newChild);
      }
      return null;
    }
    function updateSlot(returnFiber, oldFiber, newChild, lanes) {
      var key = null !== oldFiber ? oldFiber.key : null;
      if ("string" === typeof newChild && "" !== newChild || "number" === typeof newChild || "bigint" === typeof newChild) return null !== key ? null : updateTextNode(returnFiber, oldFiber, "" + newChild, lanes);
      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return newChild.key === key ? updateElement(returnFiber, oldFiber, newChild, lanes) : null;
          case REACT_PORTAL_TYPE:
            return newChild.key === key ? updatePortal(returnFiber, oldFiber, newChild, lanes) : null;
          case REACT_LAZY_TYPE:
            return key = newChild._init, newChild = key(newChild._payload), updateSlot(returnFiber, oldFiber, newChild, lanes);
        }
        if (isArrayImpl(newChild) || getIteratorFn(newChild)) return null !== key ? null : updateFragment(returnFiber, oldFiber, newChild, lanes, null);
        if ("function" === typeof newChild.then) return updateSlot(returnFiber, oldFiber, unwrapThenable(newChild), lanes);
        if (newChild.$$typeof === REACT_CONTEXT_TYPE) return updateSlot(returnFiber, oldFiber, readContextDuringReconciliation(returnFiber, newChild), lanes);
        throwOnInvalidObjectType(returnFiber, newChild);
      }
      return null;
    }
    function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {
      if ("string" === typeof newChild && "" !== newChild || "number" === typeof newChild || "bigint" === typeof newChild) return existingChildren = existingChildren.get(newIdx) || null, updateTextNode(returnFiber, existingChildren, "" + newChild, lanes);
      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, updateElement(returnFiber, existingChildren, newChild, lanes);
          case REACT_PORTAL_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, updatePortal(returnFiber, existingChildren, newChild, lanes);
          case REACT_LAZY_TYPE:
            var init = newChild._init;
            newChild = init(newChild._payload);
            return updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes);
        }
        if (isArrayImpl(newChild) || getIteratorFn(newChild)) return existingChildren = existingChildren.get(newIdx) || null, updateFragment(returnFiber, existingChildren, newChild, lanes, null);
        if ("function" === typeof newChild.then) return updateFromMap(existingChildren, returnFiber, newIdx, unwrapThenable(newChild), lanes);
        if (newChild.$$typeof === REACT_CONTEXT_TYPE) return updateFromMap(existingChildren, returnFiber, newIdx, readContextDuringReconciliation(returnFiber, newChild), lanes);
        throwOnInvalidObjectType(returnFiber, newChild);
      }
      return null;
    }
    function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {
      for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null; null !== oldFiber && newIdx < newChildren.length; newIdx++) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);
        if (null === newFiber) {
          null === oldFiber && (oldFiber = nextOldFiber);
          break;
        }
        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }
      if (newIdx === newChildren.length) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;
      if (null === oldFiber) {
        for (; newIdx < newChildren.length; newIdx++) oldFiber = createChild(returnFiber, newChildren[newIdx], lanes), null !== oldFiber && (currentFirstChild = placeChild(oldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = oldFiber : previousNewFiber.sibling = oldFiber, previousNewFiber = oldFiber);
        return resultingFirstChild;
      }
      for (oldFiber = mapRemainingChildren(oldFiber); newIdx < newChildren.length; newIdx++) nextOldFiber = updateFromMap(oldFiber, returnFiber, newIdx, newChildren[newIdx], lanes), null !== nextOldFiber && (shouldTrackSideEffects && null !== nextOldFiber.alternate && oldFiber.delete(null === nextOldFiber.key ? newIdx : nextOldFiber.key), currentFirstChild = placeChild(nextOldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = nextOldFiber : previousNewFiber.sibling = nextOldFiber, previousNewFiber = nextOldFiber);
      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return resultingFirstChild;
    }
    function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildren, lanes) {
      if (null == newChildren) throw Error("An iterable object provided no iterator.");
      for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null, step = newChildren.next(); null !== oldFiber && !step.done; newIdx++, step = newChildren.next()) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);
        if (null === newFiber) {
          null === oldFiber && (oldFiber = nextOldFiber);
          break;
        }
        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }
      if (step.done) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;
      if (null === oldFiber) {
        for (; !step.done; newIdx++, step = newChildren.next()) step = createChild(returnFiber, step.value, lanes), null !== step && (currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = step : previousNewFiber.sibling = step, previousNewFiber = step);
        return resultingFirstChild;
      }
      for (oldFiber = mapRemainingChildren(oldFiber); !step.done; newIdx++, step = newChildren.next()) step = updateFromMap(oldFiber, returnFiber, newIdx, step.value, lanes), null !== step && (shouldTrackSideEffects && null !== step.alternate && oldFiber.delete(null === step.key ? newIdx : step.key), currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = step : previousNewFiber.sibling = step, previousNewFiber = step);
      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return resultingFirstChild;
    }
    function reconcileChildFibersImpl(returnFiber, currentFirstChild, newChild, lanes) {
      "object" === typeof newChild && null !== newChild && newChild.type === REACT_FRAGMENT_TYPE && null === newChild.key && (newChild = newChild.props.children);
      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            a: {
              for (var key = newChild.key; null !== currentFirstChild;) {
                if (currentFirstChild.key === key) {
                  key = newChild.type;
                  if (key === REACT_FRAGMENT_TYPE) {
                    if (7 === currentFirstChild.tag) {
                      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                      lanes = useFiber(currentFirstChild, newChild.props.children);
                      lanes.return = returnFiber;
                      returnFiber = lanes;
                      break a;
                    }
                  } else if (currentFirstChild.elementType === key || "object" === typeof key && null !== key && key.$$typeof === REACT_LAZY_TYPE && resolveLazy(key) === currentFirstChild.type) {
                    deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                    lanes = useFiber(currentFirstChild, newChild.props);
                    coerceRef(lanes, newChild);
                    lanes.return = returnFiber;
                    returnFiber = lanes;
                    break a;
                  }
                  deleteRemainingChildren(returnFiber, currentFirstChild);
                  break;
                } else deleteChild(returnFiber, currentFirstChild);
                currentFirstChild = currentFirstChild.sibling;
              }
              newChild.type === REACT_FRAGMENT_TYPE ? (lanes = createFiberFromFragment(newChild.props.children, returnFiber.mode, lanes, newChild.key), lanes.return = returnFiber, returnFiber = lanes) : (lanes = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, lanes), coerceRef(lanes, newChild), lanes.return = returnFiber, returnFiber = lanes);
            }
            return placeSingleChild(returnFiber);
          case REACT_PORTAL_TYPE:
            a: {
              for (key = newChild.key; null !== currentFirstChild;) {
                if (currentFirstChild.key === key) {
                  if (4 === currentFirstChild.tag && currentFirstChild.stateNode.containerInfo === newChild.containerInfo && currentFirstChild.stateNode.implementation === newChild.implementation) {
                    deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                    lanes = useFiber(currentFirstChild, newChild.children || []);
                    lanes.return = returnFiber;
                    returnFiber = lanes;
                    break a;
                  } else {
                    deleteRemainingChildren(returnFiber, currentFirstChild);
                    break;
                  }
                } else deleteChild(returnFiber, currentFirstChild);
                currentFirstChild = currentFirstChild.sibling;
              }
              lanes = createFiberFromPortal(newChild, returnFiber.mode, lanes);
              lanes.return = returnFiber;
              returnFiber = lanes;
            }
            return placeSingleChild(returnFiber);
          case REACT_LAZY_TYPE:
            return key = newChild._init, newChild = key(newChild._payload), reconcileChildFibersImpl(returnFiber, currentFirstChild, newChild, lanes);
        }
        if (isArrayImpl(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);
        if (getIteratorFn(newChild)) {
          key = getIteratorFn(newChild);
          if ("function" !== typeof key) throw Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
          newChild = key.call(newChild);
          return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);
        }
        if ("function" === typeof newChild.then) return reconcileChildFibersImpl(returnFiber, currentFirstChild, unwrapThenable(newChild), lanes);
        if (newChild.$$typeof === REACT_CONTEXT_TYPE) return reconcileChildFibersImpl(returnFiber, currentFirstChild, readContextDuringReconciliation(returnFiber, newChild), lanes);
        throwOnInvalidObjectType(returnFiber, newChild);
      }
      return "string" === typeof newChild && "" !== newChild || "number" === typeof newChild || "bigint" === typeof newChild ? (newChild = "" + newChild, null !== currentFirstChild && 6 === currentFirstChild.tag ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling), lanes = useFiber(currentFirstChild, newChild), lanes.return = returnFiber, returnFiber = lanes) : (deleteRemainingChildren(returnFiber, currentFirstChild), lanes = createFiberFromText(newChild, returnFiber.mode, lanes), lanes.return = returnFiber, returnFiber = lanes), placeSingleChild(returnFiber)) : deleteRemainingChildren(returnFiber, currentFirstChild);
    }
    return function (returnFiber, currentFirstChild, newChild, lanes) {
      try {
        thenableIndexCounter$1 = 0;
        var firstChildFiber = reconcileChildFibersImpl(returnFiber, currentFirstChild, newChild, lanes);
        thenableState$1 = null;
        return firstChildFiber;
      } catch (x) {
        if (x === SuspenseException || 0 === (returnFiber.mode & 1) && "object" === typeof x && null !== x && "function" === typeof x.then) throw x;
        var fiber = createFiberImplClass(29, x, null, returnFiber.mode);
        fiber.lanes = lanes;
        fiber.return = returnFiber;
        return fiber;
      } finally {}
    };
  }
  var reconcileChildFibers = createChildReconciler(true),
    mountChildFibers = createChildReconciler(false),
    currentTreeHiddenStackCursor = createCursor(null),
    prevEntangledRenderLanesCursor = createCursor(0);
  function pushHiddenContext(fiber, context) {
    fiber = entangledRenderLanes;
    push(prevEntangledRenderLanesCursor, fiber);
    push(currentTreeHiddenStackCursor, context);
    entangledRenderLanes = fiber | context.baseLanes;
  }
  function reuseHiddenContextOnStack() {
    push(prevEntangledRenderLanesCursor, entangledRenderLanes);
    push(currentTreeHiddenStackCursor, currentTreeHiddenStackCursor.current);
  }
  function popHiddenContext() {
    entangledRenderLanes = prevEntangledRenderLanesCursor.current;
    pop(currentTreeHiddenStackCursor);
    pop(prevEntangledRenderLanesCursor);
  }
  var suspenseHandlerStackCursor = createCursor(null),
    shellBoundary = null;
  function pushPrimaryTreeSuspenseHandler(handler) {
    var current = handler.alternate;
    push(suspenseStackCursor, suspenseStackCursor.current & 1);
    push(suspenseHandlerStackCursor, handler);
    null === shellBoundary && (null === current || null !== currentTreeHiddenStackCursor.current ? shellBoundary = handler : null !== current.memoizedState && (shellBoundary = handler));
  }
  function pushOffscreenSuspenseHandler(fiber) {
    if (22 === fiber.tag) {
      if (push(suspenseStackCursor, suspenseStackCursor.current), push(suspenseHandlerStackCursor, fiber), null === shellBoundary) {
        var current = fiber.alternate;
        null !== current && null !== current.memoizedState && (shellBoundary = fiber);
      }
    } else reuseSuspenseHandlerOnStack(fiber);
  }
  function reuseSuspenseHandlerOnStack() {
    push(suspenseStackCursor, suspenseStackCursor.current);
    push(suspenseHandlerStackCursor, suspenseHandlerStackCursor.current);
  }
  function popSuspenseHandler(fiber) {
    pop(suspenseHandlerStackCursor);
    shellBoundary === fiber && (shellBoundary = null);
    pop(suspenseStackCursor);
  }
  var suspenseStackCursor = createCursor(0);
  function findFirstSuspended(row) {
    for (var node = row; null !== node;) {
      if (13 === node.tag) {
        var state = node.memoizedState;
        if (null !== state && (null === state.dehydrated || shim$1() || shim$1())) return node;
      } else if (19 === node.tag && undefined !== node.memoizedProps.revealOrder) {
        if (0 !== (node.flags & 128)) return node;
      } else if (null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }
      if (node === row) break;
      for (; null === node.sibling;) {
        if (null === node.return || node.return === row) return null;
        node = node.return;
      }
      node.sibling.return = node.return;
      node = node.sibling;
    }
    return null;
  }
  var renderLanes = 0,
    currentlyRenderingFiber$1 = null,
    currentHook = null,
    workInProgressHook = null,
    didScheduleRenderPhaseUpdate = false,
    didScheduleRenderPhaseUpdateDuringThisPass = false,
    shouldDoubleInvokeUserFnsInHooksDEV = false,
    thenableIndexCounter = 0,
    thenableState = null,
    globalClientIdCounter = 0;
  function throwInvalidHookError() {
    throw Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem.");
  }
  function areHookInputsEqual(nextDeps, prevDeps) {
    if (null === prevDeps) return false;
    for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) if (!objectIs(nextDeps[i], prevDeps[i])) return false;
    return true;
  }
  function renderWithHooks(current, workInProgress, Component, props, secondArg, nextRenderLanes) {
    renderLanes = nextRenderLanes;
    currentlyRenderingFiber$1 = workInProgress;
    workInProgress.memoizedState = null;
    workInProgress.updateQueue = null;
    workInProgress.lanes = 0;
    ReactSharedInternals.H = null === current || null === current.memoizedState ? HooksDispatcherOnMount : HooksDispatcherOnUpdate;
    shouldDoubleInvokeUserFnsInHooksDEV = false;
    nextRenderLanes = Component(props, secondArg);
    shouldDoubleInvokeUserFnsInHooksDEV = false;
    didScheduleRenderPhaseUpdateDuringThisPass && (nextRenderLanes = renderWithHooksAgain(workInProgress, Component, props, secondArg));
    finishRenderingHooks(current);
    return nextRenderLanes;
  }
  function finishRenderingHooks(current) {
    ReactSharedInternals.H = ContextOnlyDispatcher;
    var didRenderTooFewHooks = null !== currentHook && null !== currentHook.next;
    renderLanes = 0;
    workInProgressHook = currentHook = currentlyRenderingFiber$1 = null;
    didScheduleRenderPhaseUpdate = false;
    thenableIndexCounter = 0;
    thenableState = null;
    if (didRenderTooFewHooks) throw Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
    null === current || didReceiveUpdate || (current = current.dependencies, null !== current && checkIfContextChanged(current) && (didReceiveUpdate = true));
  }
  function renderWithHooksAgain(workInProgress, Component, props, secondArg) {
    currentlyRenderingFiber$1 = workInProgress;
    var numberOfReRenders = 0;
    do {
      didScheduleRenderPhaseUpdateDuringThisPass && (thenableState = null);
      thenableIndexCounter = 0;
      didScheduleRenderPhaseUpdateDuringThisPass = false;
      if (25 <= numberOfReRenders) throw Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
      numberOfReRenders += 1;
      workInProgressHook = currentHook = null;
      if (null != workInProgress.updateQueue) {
        var children = workInProgress.updateQueue;
        children.lastEffect = null;
        children.events = null;
        children.stores = null;
        null != children.memoCache && (children.memoCache.index = 0);
      }
      ReactSharedInternals.H = HooksDispatcherOnRerender;
      children = Component(props, secondArg);
    } while (didScheduleRenderPhaseUpdateDuringThisPass);
    return children;
  }
  function TransitionAwareHostComponent() {
    var dispatcher = ReactSharedInternals.H,
      maybeThenable = dispatcher.useState()[0];
    maybeThenable = "function" === typeof maybeThenable.then ? useThenable(maybeThenable) : maybeThenable;
    dispatcher = dispatcher.useState()[0];
    (null !== currentHook ? currentHook.memoizedState : null) !== dispatcher && (currentlyRenderingFiber$1.flags |= 1024);
    return maybeThenable;
  }
  function bailoutHooks(current, workInProgress, lanes) {
    workInProgress.updateQueue = current.updateQueue;
    workInProgress.flags &= -2053;
    current.lanes &= ~lanes;
  }
  function resetHooksOnUnwind(workInProgress) {
    if (didScheduleRenderPhaseUpdate) {
      for (workInProgress = workInProgress.memoizedState; null !== workInProgress;) {
        var queue = workInProgress.queue;
        null !== queue && (queue.pending = null);
        workInProgress = workInProgress.next;
      }
      didScheduleRenderPhaseUpdate = false;
    }
    renderLanes = 0;
    workInProgressHook = currentHook = currentlyRenderingFiber$1 = null;
    didScheduleRenderPhaseUpdateDuringThisPass = false;
    thenableIndexCounter = 0;
    thenableState = null;
  }
  function mountWorkInProgressHook() {
    var hook = {
      memoizedState: null,
      baseState: null,
      baseQueue: null,
      queue: null,
      next: null
    };
    null === workInProgressHook ? currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook : workInProgressHook = workInProgressHook.next = hook;
    return workInProgressHook;
  }
  function updateWorkInProgressHook() {
    if (null === currentHook) {
      var nextCurrentHook = currentlyRenderingFiber$1.alternate;
      nextCurrentHook = null !== nextCurrentHook ? nextCurrentHook.memoizedState : null;
    } else nextCurrentHook = currentHook.next;
    var nextWorkInProgressHook = null === workInProgressHook ? currentlyRenderingFiber$1.memoizedState : workInProgressHook.next;
    if (null !== nextWorkInProgressHook) workInProgressHook = nextWorkInProgressHook, currentHook = nextCurrentHook;else {
      if (null === nextCurrentHook) {
        if (null === currentlyRenderingFiber$1.alternate) throw Error("Update hook called on initial render. This is likely a bug in React. Please file an issue.");
        throw Error("Rendered more hooks than during the previous render.");
      }
      currentHook = nextCurrentHook;
      nextCurrentHook = {
        memoizedState: currentHook.memoizedState,
        baseState: currentHook.baseState,
        baseQueue: currentHook.baseQueue,
        queue: currentHook.queue,
        next: null
      };
      null === workInProgressHook ? currentlyRenderingFiber$1.memoizedState = workInProgressHook = nextCurrentHook : workInProgressHook = workInProgressHook.next = nextCurrentHook;
    }
    return workInProgressHook;
  }
  var createFunctionComponentUpdateQueue;
  createFunctionComponentUpdateQueue = function createFunctionComponentUpdateQueue() {
    return {
      lastEffect: null,
      events: null,
      stores: null,
      memoCache: null
    };
  };
  function useThenable(thenable) {
    var index = thenableIndexCounter;
    thenableIndexCounter += 1;
    null === thenableState && (thenableState = []);
    thenable = trackUsedThenable(thenableState, thenable, index);
    index = currentlyRenderingFiber$1;
    null === (null === workInProgressHook ? index.memoizedState : workInProgressHook.next) && (index = index.alternate, ReactSharedInternals.H = null === index || null === index.memoizedState ? HooksDispatcherOnMount : HooksDispatcherOnUpdate);
    return thenable;
  }
  function use(usable) {
    if (null !== usable && "object" === typeof usable) {
      if ("function" === typeof usable.then) return useThenable(usable);
      if (usable.$$typeof === REACT_CONTEXT_TYPE) return readContext(usable);
    }
    throw Error("An unsupported type was passed to use(): " + String(usable));
  }
  function useMemoCache(size) {
    var memoCache = null,
      updateQueue = currentlyRenderingFiber$1.updateQueue;
    null !== updateQueue && (memoCache = updateQueue.memoCache);
    if (null == memoCache) {
      var current = currentlyRenderingFiber$1.alternate;
      null !== current && (current = current.updateQueue, null !== current && (current = current.memoCache, null != current && (memoCache = {
        data: current.data.map(function (array) {
          return array.slice();
        }),
        index: 0
      })));
    }
    null == memoCache && (memoCache = {
      data: [],
      index: 0
    });
    null === updateQueue && (updateQueue = createFunctionComponentUpdateQueue(), currentlyRenderingFiber$1.updateQueue = updateQueue);
    updateQueue.memoCache = memoCache;
    updateQueue = memoCache.data[memoCache.index];
    if (undefined === updateQueue) for (updateQueue = memoCache.data[memoCache.index] = Array(size), current = 0; current < size; current++) updateQueue[current] = REACT_MEMO_CACHE_SENTINEL;
    memoCache.index++;
    return updateQueue;
  }
  function basicStateReducer(state, action) {
    return "function" === typeof action ? action(state) : action;
  }
  function updateReducer(reducer) {
    var hook = updateWorkInProgressHook();
    return updateReducerImpl(hook, currentHook, reducer);
  }
  function updateReducerImpl(hook, current, reducer) {
    var queue = hook.queue;
    if (null === queue) throw Error("Should have a queue. You are likely calling Hooks conditionally, which is not allowed. (https://react.dev/link/invalid-hook-call)");
    queue.lastRenderedReducer = reducer;
    var baseQueue = hook.baseQueue,
      pendingQueue = queue.pending;
    if (null !== pendingQueue) {
      if (null !== baseQueue) {
        var baseFirst = baseQueue.next;
        baseQueue.next = pendingQueue.next;
        pendingQueue.next = baseFirst;
      }
      current.baseQueue = baseQueue = pendingQueue;
      queue.pending = null;
    }
    pendingQueue = hook.baseState;
    if (null === baseQueue) hook.memoizedState = pendingQueue;else {
      current = baseQueue.next;
      var newBaseQueueFirst = baseFirst = null,
        newBaseQueueLast = null,
        update = current,
        didReadFromEntangledAsyncAction$45 = false;
      do {
        var updateLane = update.lane & -536870913;
        if (updateLane !== update.lane ? (workInProgressRootRenderLanes & updateLane) === updateLane : (renderLanes & updateLane) === updateLane) {
          var revertLane = update.revertLane;
          if (0 === revertLane) null !== newBaseQueueLast && (newBaseQueueLast = newBaseQueueLast.next = {
            lane: 0,
            revertLane: 0,
            action: update.action,
            hasEagerState: update.hasEagerState,
            eagerState: update.eagerState,
            next: null
          }), updateLane === currentEntangledLane && (didReadFromEntangledAsyncAction$45 = true);else if ((renderLanes & revertLane) === revertLane) {
            update = update.next;
            revertLane === currentEntangledLane && (didReadFromEntangledAsyncAction$45 = true);
            continue;
          } else updateLane = {
            lane: 0,
            revertLane: update.revertLane,
            action: update.action,
            hasEagerState: update.hasEagerState,
            eagerState: update.eagerState,
            next: null
          }, null === newBaseQueueLast ? (newBaseQueueFirst = newBaseQueueLast = updateLane, baseFirst = pendingQueue) : newBaseQueueLast = newBaseQueueLast.next = updateLane, currentlyRenderingFiber$1.lanes |= revertLane, workInProgressRootSkippedLanes |= revertLane;
          updateLane = update.action;
          shouldDoubleInvokeUserFnsInHooksDEV && reducer(pendingQueue, updateLane);
          pendingQueue = update.hasEagerState ? update.eagerState : reducer(pendingQueue, updateLane);
        } else revertLane = {
          lane: updateLane,
          revertLane: update.revertLane,
          action: update.action,
          hasEagerState: update.hasEagerState,
          eagerState: update.eagerState,
          next: null
        }, null === newBaseQueueLast ? (newBaseQueueFirst = newBaseQueueLast = revertLane, baseFirst = pendingQueue) : newBaseQueueLast = newBaseQueueLast.next = revertLane, currentlyRenderingFiber$1.lanes |= updateLane, workInProgressRootSkippedLanes |= updateLane;
        update = update.next;
      } while (null !== update && update !== current);
      null === newBaseQueueLast ? baseFirst = pendingQueue : newBaseQueueLast.next = newBaseQueueFirst;
      if (!objectIs(pendingQueue, hook.memoizedState) && (didReceiveUpdate = true, didReadFromEntangledAsyncAction$45 && (reducer = currentEntangledActionThenable, null !== reducer))) throw reducer;
      hook.memoizedState = pendingQueue;
      hook.baseState = baseFirst;
      hook.baseQueue = newBaseQueueLast;
      queue.lastRenderedState = pendingQueue;
    }
    null === baseQueue && (queue.lanes = 0);
    return [hook.memoizedState, queue.dispatch];
  }
  function rerenderReducer(reducer) {
    var hook = updateWorkInProgressHook(),
      queue = hook.queue;
    if (null === queue) throw Error("Should have a queue. You are likely calling Hooks conditionally, which is not allowed. (https://react.dev/link/invalid-hook-call)");
    queue.lastRenderedReducer = reducer;
    var dispatch = queue.dispatch,
      lastRenderPhaseUpdate = queue.pending,
      newState = hook.memoizedState;
    if (null !== lastRenderPhaseUpdate) {
      queue.pending = null;
      var update = lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;
      do newState = reducer(newState, update.action), update = update.next; while (update !== lastRenderPhaseUpdate);
      objectIs(newState, hook.memoizedState) || (didReceiveUpdate = true);
      hook.memoizedState = newState;
      null === hook.baseQueue && (hook.baseState = newState);
      queue.lastRenderedState = newState;
    }
    return [newState, dispatch];
  }
  function updateSyncExternalStore(subscribe, getSnapshot) {
    var fiber = currentlyRenderingFiber$1,
      hook = updateWorkInProgressHook();
    var nextSnapshot = getSnapshot();
    var snapshotChanged = !objectIs((currentHook || hook).memoizedState, nextSnapshot);
    snapshotChanged && (hook.memoizedState = nextSnapshot, didReceiveUpdate = true);
    hook = hook.queue;
    updateEffect(subscribeToStore.bind(null, fiber, hook, subscribe), [subscribe]);
    if (hook.getSnapshot !== getSnapshot || snapshotChanged || null !== workInProgressHook && workInProgressHook.memoizedState.tag & 1) {
      fiber.flags |= 2048;
      pushEffect(9, updateStoreInstance.bind(null, fiber, hook, nextSnapshot, getSnapshot), {
        destroy: undefined
      }, null);
      if (null === workInProgressRoot) throw Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
      0 !== (renderLanes & 60) || pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
    }
    return nextSnapshot;
  }
  function pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {
    fiber.flags |= 16384;
    fiber = {
      getSnapshot: getSnapshot,
      value: renderedSnapshot
    };
    getSnapshot = currentlyRenderingFiber$1.updateQueue;
    null === getSnapshot ? (getSnapshot = createFunctionComponentUpdateQueue(), currentlyRenderingFiber$1.updateQueue = getSnapshot, getSnapshot.stores = [fiber]) : (renderedSnapshot = getSnapshot.stores, null === renderedSnapshot ? getSnapshot.stores = [fiber] : renderedSnapshot.push(fiber));
  }
  function updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {
    inst.value = nextSnapshot;
    inst.getSnapshot = getSnapshot;
    checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);
  }
  function subscribeToStore(fiber, inst, subscribe) {
    return subscribe(function () {
      checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);
    });
  }
  function checkIfSnapshotChanged(inst) {
    var latestGetSnapshot = inst.getSnapshot;
    inst = inst.value;
    try {
      var nextValue = latestGetSnapshot();
      return !objectIs(inst, nextValue);
    } catch (error) {
      return true;
    }
  }
  function forceStoreRerender(fiber) {
    var root = enqueueConcurrentRenderForLane(fiber, 2);
    null !== root && scheduleUpdateOnFiber(root, fiber, 2);
  }
  function mountStateImpl(initialState) {
    var hook = mountWorkInProgressHook();
    if ("function" === typeof initialState) {
      var initialStateInitializer = initialState;
      initialState = initialStateInitializer();
      if (shouldDoubleInvokeUserFnsInHooksDEV) {
        setIsStrictModeForDevtools(true);
        try {
          initialStateInitializer();
        } finally {
          setIsStrictModeForDevtools(false);
        }
      }
    }
    hook.memoizedState = hook.baseState = initialState;
    hook.queue = {
      pending: null,
      lanes: 0,
      dispatch: null,
      lastRenderedReducer: basicStateReducer,
      lastRenderedState: initialState
    };
    return hook;
  }
  function updateOptimisticImpl(hook, current, passthrough, reducer) {
    hook.baseState = passthrough;
    return updateReducerImpl(hook, currentHook, "function" === typeof reducer ? reducer : basicStateReducer);
  }
  function dispatchActionState(fiber, actionQueue, setPendingState, setState, payload) {
    if (isRenderPhaseUpdate(fiber)) throw Error("Cannot update form state while rendering.");
    fiber = actionQueue.action;
    if (null !== fiber) {
      var actionNode = {
        payload: payload,
        action: fiber,
        next: null,
        isTransition: true,
        status: "pending",
        value: null,
        reason: null,
        listeners: [],
        then: function then(listener) {
          actionNode.listeners.push(listener);
        }
      };
      null !== ReactSharedInternals.T ? setPendingState(true) : actionNode.isTransition = false;
      setState(actionNode);
      setPendingState = actionQueue.pending;
      null === setPendingState ? (actionNode.next = actionQueue.pending = actionNode, runActionStateAction(actionQueue, actionNode)) : (actionNode.next = setPendingState.next, actionQueue.pending = setPendingState.next = actionNode);
    }
  }
  function runActionStateAction(actionQueue, node) {
    var action = node.action,
      payload = node.payload,
      prevState = actionQueue.state;
    if (node.isTransition) {
      var prevTransition = ReactSharedInternals.T,
        currentTransition = {};
      ReactSharedInternals.T = currentTransition;
      try {
        var returnValue = action(prevState, payload),
          onStartTransitionFinish = ReactSharedInternals.S;
        null !== onStartTransitionFinish && onStartTransitionFinish(currentTransition, returnValue);
        handleActionReturnValue(actionQueue, node, returnValue);
      } catch (error) {
        onActionError(actionQueue, node, error);
      } finally {
        ReactSharedInternals.T = prevTransition;
      }
    } else try {
      prevTransition = action(prevState, payload), handleActionReturnValue(actionQueue, node, prevTransition);
    } catch (error$49) {
      onActionError(actionQueue, node, error$49);
    }
  }
  function handleActionReturnValue(actionQueue, node, returnValue) {
    null !== returnValue && "object" === typeof returnValue && "function" === typeof returnValue.then ? returnValue.then(function (nextState) {
      onActionSuccess(actionQueue, node, nextState);
    }, function (error) {
      return onActionError(actionQueue, node, error);
    }) : onActionSuccess(actionQueue, node, returnValue);
  }
  function onActionSuccess(actionQueue, actionNode, nextState) {
    actionNode.status = "fulfilled";
    actionNode.value = nextState;
    notifyActionListeners(actionNode);
    actionQueue.state = nextState;
    actionNode = actionQueue.pending;
    null !== actionNode && (nextState = actionNode.next, nextState === actionNode ? actionQueue.pending = null : (nextState = nextState.next, actionNode.next = nextState, runActionStateAction(actionQueue, nextState)));
  }
  function onActionError(actionQueue, actionNode, error) {
    var last = actionQueue.pending;
    actionQueue.pending = null;
    if (null !== last) {
      last = last.next;
      do actionNode.status = "rejected", actionNode.reason = error, notifyActionListeners(actionNode), actionNode = actionNode.next; while (actionNode !== last);
    }
    actionQueue.action = null;
  }
  function notifyActionListeners(actionNode) {
    actionNode = actionNode.listeners;
    for (var i = 0; i < actionNode.length; i++) (0, actionNode[i])();
  }
  function actionStateReducer(oldState, newState) {
    return newState;
  }
  function mountActionState(action, initialStateProp) {
    var stateHook = mountWorkInProgressHook();
    stateHook.memoizedState = stateHook.baseState = initialStateProp;
    var stateQueue = {
      pending: null,
      lanes: 0,
      dispatch: null,
      lastRenderedReducer: actionStateReducer,
      lastRenderedState: initialStateProp
    };
    stateHook.queue = stateQueue;
    stateHook = dispatchSetState.bind(null, currentlyRenderingFiber$1, stateQueue);
    stateQueue.dispatch = stateHook;
    stateQueue = mountStateImpl(false);
    var setPendingState = dispatchOptimisticSetState.bind(null, currentlyRenderingFiber$1, false, stateQueue.queue);
    stateQueue = mountWorkInProgressHook();
    var actionQueue = {
      state: initialStateProp,
      dispatch: null,
      action: action,
      pending: null
    };
    stateQueue.queue = actionQueue;
    stateHook = dispatchActionState.bind(null, currentlyRenderingFiber$1, actionQueue, setPendingState, stateHook);
    actionQueue.dispatch = stateHook;
    stateQueue.memoizedState = action;
    return [initialStateProp, stateHook, false];
  }
  function updateActionState(action) {
    var stateHook = updateWorkInProgressHook();
    return updateActionStateImpl(stateHook, currentHook, action);
  }
  function updateActionStateImpl(stateHook, currentStateHook, action) {
    currentStateHook = updateReducerImpl(stateHook, currentStateHook, actionStateReducer)[0];
    stateHook = updateReducer(basicStateReducer)[0];
    currentStateHook = "object" === typeof currentStateHook && null !== currentStateHook && "function" === typeof currentStateHook.then ? useThenable(currentStateHook) : currentStateHook;
    var actionQueueHook = updateWorkInProgressHook(),
      actionQueue = actionQueueHook.queue,
      dispatch = actionQueue.dispatch;
    action !== actionQueueHook.memoizedState && (currentlyRenderingFiber$1.flags |= 2048, pushEffect(9, actionStateActionEffect.bind(null, actionQueue, action), {
      destroy: undefined
    }, null));
    return [currentStateHook, dispatch, stateHook];
  }
  function actionStateActionEffect(actionQueue, action) {
    actionQueue.action = action;
  }
  function rerenderActionState(action) {
    var stateHook = updateWorkInProgressHook(),
      currentStateHook = currentHook;
    if (null !== currentStateHook) return updateActionStateImpl(stateHook, currentStateHook, action);
    updateWorkInProgressHook();
    stateHook = stateHook.memoizedState;
    currentStateHook = updateWorkInProgressHook();
    var dispatch = currentStateHook.queue.dispatch;
    currentStateHook.memoizedState = action;
    return [stateHook, dispatch, false];
  }
  function pushEffect(tag, create, inst, deps) {
    tag = {
      tag: tag,
      create: create,
      inst: inst,
      deps: deps,
      next: null
    };
    create = currentlyRenderingFiber$1.updateQueue;
    null === create && (create = createFunctionComponentUpdateQueue(), currentlyRenderingFiber$1.updateQueue = create);
    inst = create.lastEffect;
    null === inst ? create.lastEffect = tag.next = tag : (deps = inst.next, inst.next = tag, tag.next = deps, create.lastEffect = tag);
    return tag;
  }
  function updateRef() {
    return updateWorkInProgressHook().memoizedState;
  }
  function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
    var hook = mountWorkInProgressHook();
    currentlyRenderingFiber$1.flags |= fiberFlags;
    hook.memoizedState = pushEffect(1 | hookFlags, create, {
      destroy: undefined
    }, undefined === deps ? null : deps);
  }
  function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
    var hook = updateWorkInProgressHook();
    deps = undefined === deps ? null : deps;
    var inst = hook.memoizedState.inst;
    null !== currentHook && null !== deps && areHookInputsEqual(deps, currentHook.memoizedState.deps) ? hook.memoizedState = pushEffect(hookFlags, create, inst, deps) : (currentlyRenderingFiber$1.flags |= fiberFlags, hook.memoizedState = pushEffect(1 | hookFlags, create, inst, deps));
  }
  function mountEffect(create, deps) {
    mountEffectImpl(8390656, 8, create, deps);
  }
  function updateEffect(create, deps) {
    updateEffectImpl(2048, 8, create, deps);
  }
  function updateInsertionEffect(create, deps) {
    return updateEffectImpl(4, 2, create, deps);
  }
  function updateLayoutEffect(create, deps) {
    return updateEffectImpl(4, 4, create, deps);
  }
  function imperativeHandleEffect(create, ref) {
    if ("function" === typeof ref) {
      create = create();
      var refCleanup = ref(create);
      return function () {
        "function" === typeof refCleanup ? refCleanup() : ref(null);
      };
    }
    if (null !== ref && undefined !== ref) return create = create(), ref.current = create, function () {
      ref.current = null;
    };
  }
  function updateImperativeHandle(ref, create, deps) {
    deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
    updateEffectImpl(4, 4, imperativeHandleEffect.bind(null, create, ref), deps);
  }
  function mountDebugValue() {}
  function updateCallback(callback, deps) {
    var hook = updateWorkInProgressHook();
    deps = undefined === deps ? null : deps;
    var prevState = hook.memoizedState;
    if (null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
    hook.memoizedState = [callback, deps];
    return callback;
  }
  function updateMemo(nextCreate, deps) {
    var hook = updateWorkInProgressHook();
    deps = undefined === deps ? null : deps;
    var prevState = hook.memoizedState;
    if (null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
    prevState = nextCreate();
    if (shouldDoubleInvokeUserFnsInHooksDEV) {
      setIsStrictModeForDevtools(true);
      try {
        nextCreate();
      } finally {
        setIsStrictModeForDevtools(false);
      }
    }
    hook.memoizedState = [prevState, deps];
    return prevState;
  }
  function mountDeferredValueImpl(hook, value, initialValue) {
    if (undefined === initialValue || 0 !== (renderLanes & 1073741824)) return hook.memoizedState = value;
    hook.memoizedState = initialValue;
    hook = requestDeferredLane();
    currentlyRenderingFiber$1.lanes |= hook;
    workInProgressRootSkippedLanes |= hook;
    return initialValue;
  }
  function updateDeferredValueImpl(hook, prevValue, value, initialValue) {
    if (objectIs(value, prevValue)) return value;
    if (null !== currentTreeHiddenStackCursor.current) return hook = mountDeferredValueImpl(hook, value, initialValue), objectIs(hook, prevValue) || (didReceiveUpdate = true), hook;
    if (0 === (renderLanes & 42)) return didReceiveUpdate = true, hook.memoizedState = value;
    hook = requestDeferredLane();
    currentlyRenderingFiber$1.lanes |= hook;
    workInProgressRootSkippedLanes |= hook;
    return prevValue;
  }
  function startTransition(fiber, queue, pendingState, finishedState, callback) {
    var previousPriority = currentUpdatePriority;
    currentUpdatePriority = 0 !== previousPriority && 8 > previousPriority ? previousPriority : 8;
    var prevTransition = ReactSharedInternals.T,
      currentTransition = {};
    ReactSharedInternals.T = currentTransition;
    dispatchOptimisticSetState(fiber, false, queue, pendingState);
    try {
      var returnValue = callback(),
        onStartTransitionFinish = ReactSharedInternals.S;
      null !== onStartTransitionFinish && onStartTransitionFinish(currentTransition, returnValue);
      if (null !== returnValue && "object" === typeof returnValue && "function" === typeof returnValue.then) {
        var thenableForFinishedState = chainThenableValue(returnValue, finishedState);
        dispatchSetStateInternal(fiber, queue, thenableForFinishedState, requestUpdateLane(fiber));
      } else dispatchSetStateInternal(fiber, queue, finishedState, requestUpdateLane(fiber));
    } catch (error) {
      dispatchSetStateInternal(fiber, queue, {
        then: function then() {},
        status: "rejected",
        reason: error
      }, requestUpdateLane(fiber));
    } finally {
      currentUpdatePriority = previousPriority, ReactSharedInternals.T = prevTransition;
    }
  }
  function useHostTransitionStatus() {
    return readContext(HostTransitionContext);
  }
  function updateId() {
    return updateWorkInProgressHook().memoizedState;
  }
  function updateRefresh() {
    return updateWorkInProgressHook().memoizedState;
  }
  function refreshCache(fiber) {
    for (var provider = fiber.return; null !== provider;) {
      switch (provider.tag) {
        case 24:
        case 3:
          var lane = requestUpdateLane(provider);
          fiber = createUpdate(lane);
          var root = enqueueUpdate(provider, fiber, lane);
          null !== root && (scheduleUpdateOnFiber(root, provider, lane), entangleTransitions(root, provider, lane));
          provider = {
            cache: createCache()
          };
          fiber.payload = provider;
          return;
      }
      provider = provider.return;
    }
  }
  function dispatchReducerAction(fiber, queue, action) {
    var lane = requestUpdateLane(fiber);
    action = {
      lane: lane,
      revertLane: 0,
      action: action,
      hasEagerState: false,
      eagerState: null,
      next: null
    };
    isRenderPhaseUpdate(fiber) ? enqueueRenderPhaseUpdate(queue, action) : (action = enqueueConcurrentHookUpdate(fiber, queue, action, lane), null !== action && (scheduleUpdateOnFiber(action, fiber, lane), entangleTransitionUpdate(action, queue, lane)));
  }
  function dispatchSetState(fiber, queue, action) {
    var lane = requestUpdateLane(fiber);
    dispatchSetStateInternal(fiber, queue, action, lane);
  }
  function dispatchSetStateInternal(fiber, queue, action, lane) {
    var update = {
      lane: lane,
      revertLane: 0,
      action: action,
      hasEagerState: false,
      eagerState: null,
      next: null
    };
    if (isRenderPhaseUpdate(fiber)) enqueueRenderPhaseUpdate(queue, update);else {
      var alternate = fiber.alternate;
      if (0 === fiber.lanes && (null === alternate || 0 === alternate.lanes) && (alternate = queue.lastRenderedReducer, null !== alternate)) try {
        var currentState = queue.lastRenderedState,
          eagerState = alternate(currentState, action);
        update.hasEagerState = true;
        update.eagerState = eagerState;
        if (objectIs(eagerState, currentState)) return enqueueUpdate$1(fiber, queue, update, 0), null === workInProgressRoot && finishQueueingConcurrentUpdates(), false;
      } catch (error) {} finally {}
      action = enqueueConcurrentHookUpdate(fiber, queue, update, lane);
      if (null !== action) return scheduleUpdateOnFiber(action, fiber, lane), entangleTransitionUpdate(action, queue, lane), true;
    }
    return false;
  }
  function dispatchOptimisticSetState(fiber, throwIfDuringRender, queue, action) {
    action = {
      lane: 2,
      revertLane: requestTransitionLane(),
      action: action,
      hasEagerState: false,
      eagerState: null,
      next: null
    };
    if (isRenderPhaseUpdate(fiber)) {
      if (throwIfDuringRender) throw Error("Cannot update optimistic state while rendering.");
    } else throwIfDuringRender = enqueueConcurrentHookUpdate(fiber, queue, action, 2), null !== throwIfDuringRender && scheduleUpdateOnFiber(throwIfDuringRender, fiber, 2);
  }
  function isRenderPhaseUpdate(fiber) {
    var alternate = fiber.alternate;
    return fiber === currentlyRenderingFiber$1 || null !== alternate && alternate === currentlyRenderingFiber$1;
  }
  function enqueueRenderPhaseUpdate(queue, update) {
    didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;
    var pending = queue.pending;
    null === pending ? update.next = update : (update.next = pending.next, pending.next = update);
    queue.pending = update;
  }
  function entangleTransitionUpdate(root, queue, lane) {
    if (0 !== (lane & 4194176)) {
      var queueLanes = queue.lanes;
      queueLanes &= root.pendingLanes;
      lane |= queueLanes;
      queue.lanes = lane;
      markRootEntangled(root, lane);
    }
  }
  var ContextOnlyDispatcher = {
    readContext: readContext,
    use: use,
    useCallback: throwInvalidHookError,
    useContext: throwInvalidHookError,
    useEffect: throwInvalidHookError,
    useImperativeHandle: throwInvalidHookError,
    useLayoutEffect: throwInvalidHookError,
    useInsertionEffect: throwInvalidHookError,
    useMemo: throwInvalidHookError,
    useReducer: throwInvalidHookError,
    useRef: throwInvalidHookError,
    useState: throwInvalidHookError,
    useDebugValue: throwInvalidHookError,
    useDeferredValue: throwInvalidHookError,
    useTransition: throwInvalidHookError,
    useSyncExternalStore: throwInvalidHookError,
    useId: throwInvalidHookError
  };
  ContextOnlyDispatcher.useCacheRefresh = throwInvalidHookError;
  ContextOnlyDispatcher.useMemoCache = throwInvalidHookError;
  ContextOnlyDispatcher.useHostTransitionStatus = throwInvalidHookError;
  ContextOnlyDispatcher.useFormState = throwInvalidHookError;
  ContextOnlyDispatcher.useActionState = throwInvalidHookError;
  ContextOnlyDispatcher.useOptimistic = throwInvalidHookError;
  var HooksDispatcherOnMount = {
    readContext: readContext,
    use: use,
    useCallback: function useCallback(callback, deps) {
      mountWorkInProgressHook().memoizedState = [callback, undefined === deps ? null : deps];
      return callback;
    },
    useContext: readContext,
    useEffect: mountEffect,
    useImperativeHandle: function useImperativeHandle(ref, create, deps) {
      deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
      mountEffectImpl(4194308, 4, imperativeHandleEffect.bind(null, create, ref), deps);
    },
    useLayoutEffect: function useLayoutEffect(create, deps) {
      return mountEffectImpl(4194308, 4, create, deps);
    },
    useInsertionEffect: function useInsertionEffect(create, deps) {
      mountEffectImpl(4, 2, create, deps);
    },
    useMemo: function useMemo(nextCreate, deps) {
      var hook = mountWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      var nextValue = nextCreate();
      if (shouldDoubleInvokeUserFnsInHooksDEV) {
        setIsStrictModeForDevtools(true);
        try {
          nextCreate();
        } finally {
          setIsStrictModeForDevtools(false);
        }
      }
      hook.memoizedState = [nextValue, deps];
      return nextValue;
    },
    useReducer: function useReducer(reducer, initialArg, init) {
      var hook = mountWorkInProgressHook();
      if (undefined !== init) {
        var initialState = init(initialArg);
        if (shouldDoubleInvokeUserFnsInHooksDEV) {
          setIsStrictModeForDevtools(true);
          try {
            init(initialArg);
          } finally {
            setIsStrictModeForDevtools(false);
          }
        }
      } else initialState = initialArg;
      hook.memoizedState = hook.baseState = initialState;
      reducer = {
        pending: null,
        lanes: 0,
        dispatch: null,
        lastRenderedReducer: reducer,
        lastRenderedState: initialState
      };
      hook.queue = reducer;
      reducer = reducer.dispatch = dispatchReducerAction.bind(null, currentlyRenderingFiber$1, reducer);
      return [hook.memoizedState, reducer];
    },
    useRef: function useRef(initialValue) {
      var hook = mountWorkInProgressHook();
      initialValue = {
        current: initialValue
      };
      return hook.memoizedState = initialValue;
    },
    useState: function useState(initialState) {
      initialState = mountStateImpl(initialState);
      var queue = initialState.queue,
        dispatch = dispatchSetState.bind(null, currentlyRenderingFiber$1, queue);
      queue.dispatch = dispatch;
      return [initialState.memoizedState, dispatch];
    },
    useDebugValue: mountDebugValue,
    useDeferredValue: function useDeferredValue(value, initialValue) {
      var hook = mountWorkInProgressHook();
      return mountDeferredValueImpl(hook, value, initialValue);
    },
    useTransition: function useTransition() {
      var stateHook = mountStateImpl(false);
      stateHook = startTransition.bind(null, currentlyRenderingFiber$1, stateHook.queue, true, false);
      mountWorkInProgressHook().memoizedState = stateHook;
      return [false, stateHook];
    },
    useSyncExternalStore: function useSyncExternalStore(subscribe, getSnapshot) {
      var fiber = currentlyRenderingFiber$1,
        hook = mountWorkInProgressHook();
      var nextSnapshot = getSnapshot();
      if (null === workInProgressRoot) throw Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
      0 !== (workInProgressRootRenderLanes & 60) || pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
      hook.memoizedState = nextSnapshot;
      var inst = {
        value: nextSnapshot,
        getSnapshot: getSnapshot
      };
      hook.queue = inst;
      mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]);
      fiber.flags |= 2048;
      pushEffect(9, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), {
        destroy: undefined
      }, null);
      return nextSnapshot;
    },
    useId: function useId() {
      var hook = mountWorkInProgressHook(),
        identifierPrefix = workInProgressRoot.identifierPrefix,
        globalClientId = globalClientIdCounter++;
      identifierPrefix = ":" + identifierPrefix + "r" + globalClientId.toString(32) + ":";
      return hook.memoizedState = identifierPrefix;
    },
    useCacheRefresh: function useCacheRefresh() {
      return mountWorkInProgressHook().memoizedState = refreshCache.bind(null, currentlyRenderingFiber$1);
    }
  };
  HooksDispatcherOnMount.useMemoCache = useMemoCache;
  HooksDispatcherOnMount.useHostTransitionStatus = useHostTransitionStatus;
  HooksDispatcherOnMount.useFormState = mountActionState;
  HooksDispatcherOnMount.useActionState = mountActionState;
  HooksDispatcherOnMount.useOptimistic = function (passthrough) {
    var hook = mountWorkInProgressHook();
    hook.memoizedState = hook.baseState = passthrough;
    var queue = {
      pending: null,
      lanes: 0,
      dispatch: null,
      lastRenderedReducer: null,
      lastRenderedState: null
    };
    hook.queue = queue;
    hook = dispatchOptimisticSetState.bind(null, currentlyRenderingFiber$1, true, queue);
    queue.dispatch = hook;
    return [passthrough, hook];
  };
  var HooksDispatcherOnUpdate = {
    readContext: readContext,
    use: use,
    useCallback: updateCallback,
    useContext: readContext,
    useEffect: updateEffect,
    useImperativeHandle: updateImperativeHandle,
    useInsertionEffect: updateInsertionEffect,
    useLayoutEffect: updateLayoutEffect,
    useMemo: updateMemo,
    useReducer: updateReducer,
    useRef: updateRef,
    useState: function useState() {
      return updateReducer(basicStateReducer);
    },
    useDebugValue: mountDebugValue,
    useDeferredValue: function useDeferredValue(value, initialValue) {
      var hook = updateWorkInProgressHook();
      return updateDeferredValueImpl(hook, currentHook.memoizedState, value, initialValue);
    },
    useTransition: function useTransition() {
      var booleanOrThenable = updateReducer(basicStateReducer)[0],
        start = updateWorkInProgressHook().memoizedState;
      return ["boolean" === typeof booleanOrThenable ? booleanOrThenable : useThenable(booleanOrThenable), start];
    },
    useSyncExternalStore: updateSyncExternalStore,
    useId: updateId
  };
  HooksDispatcherOnUpdate.useCacheRefresh = updateRefresh;
  HooksDispatcherOnUpdate.useMemoCache = useMemoCache;
  HooksDispatcherOnUpdate.useHostTransitionStatus = useHostTransitionStatus;
  HooksDispatcherOnUpdate.useFormState = updateActionState;
  HooksDispatcherOnUpdate.useActionState = updateActionState;
  HooksDispatcherOnUpdate.useOptimistic = function (passthrough, reducer) {
    var hook = updateWorkInProgressHook();
    return updateOptimisticImpl(hook, currentHook, passthrough, reducer);
  };
  var HooksDispatcherOnRerender = {
    readContext: readContext,
    use: use,
    useCallback: updateCallback,
    useContext: readContext,
    useEffect: updateEffect,
    useImperativeHandle: updateImperativeHandle,
    useInsertionEffect: updateInsertionEffect,
    useLayoutEffect: updateLayoutEffect,
    useMemo: updateMemo,
    useReducer: rerenderReducer,
    useRef: updateRef,
    useState: function useState() {
      return rerenderReducer(basicStateReducer);
    },
    useDebugValue: mountDebugValue,
    useDeferredValue: function useDeferredValue(value, initialValue) {
      var hook = updateWorkInProgressHook();
      return null === currentHook ? mountDeferredValueImpl(hook, value, initialValue) : updateDeferredValueImpl(hook, currentHook.memoizedState, value, initialValue);
    },
    useTransition: function useTransition() {
      var booleanOrThenable = rerenderReducer(basicStateReducer)[0],
        start = updateWorkInProgressHook().memoizedState;
      return ["boolean" === typeof booleanOrThenable ? booleanOrThenable : useThenable(booleanOrThenable), start];
    },
    useSyncExternalStore: updateSyncExternalStore,
    useId: updateId
  };
  HooksDispatcherOnRerender.useCacheRefresh = updateRefresh;
  HooksDispatcherOnRerender.useMemoCache = useMemoCache;
  HooksDispatcherOnRerender.useHostTransitionStatus = useHostTransitionStatus;
  HooksDispatcherOnRerender.useFormState = rerenderActionState;
  HooksDispatcherOnRerender.useActionState = rerenderActionState;
  HooksDispatcherOnRerender.useOptimistic = function (passthrough, reducer) {
    var hook = updateWorkInProgressHook();
    if (null !== currentHook) return updateOptimisticImpl(hook, currentHook, passthrough, reducer);
    hook.baseState = passthrough;
    return [passthrough, hook.queue.dispatch];
  };
  function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
    ctor = workInProgress.memoizedState;
    getDerivedStateFromProps = getDerivedStateFromProps(nextProps, ctor);
    getDerivedStateFromProps = null === getDerivedStateFromProps || undefined === getDerivedStateFromProps ? ctor : assign({}, ctor, getDerivedStateFromProps);
    workInProgress.memoizedState = getDerivedStateFromProps;
    0 === workInProgress.lanes && (workInProgress.updateQueue.baseState = getDerivedStateFromProps);
  }
  var classComponentUpdater = {
    isMounted: function isMounted(component) {
      return (component = component._reactInternals) ? getNearestMountedFiber(component) === component : false;
    },
    enqueueSetState: function enqueueSetState(inst, payload, callback) {
      inst = inst._reactInternals;
      var lane = requestUpdateLane(inst),
        update = createUpdate(lane);
      update.payload = payload;
      undefined !== callback && null !== callback && (update.callback = callback);
      payload = enqueueUpdate(inst, update, lane);
      null !== payload && (scheduleUpdateOnFiber(payload, inst, lane), entangleTransitions(payload, inst, lane));
    },
    enqueueReplaceState: function enqueueReplaceState(inst, payload, callback) {
      inst = inst._reactInternals;
      var lane = requestUpdateLane(inst),
        update = createUpdate(lane);
      update.tag = 1;
      update.payload = payload;
      undefined !== callback && null !== callback && (update.callback = callback);
      payload = enqueueUpdate(inst, update, lane);
      null !== payload && (scheduleUpdateOnFiber(payload, inst, lane), entangleTransitions(payload, inst, lane));
    },
    enqueueForceUpdate: function enqueueForceUpdate(inst, callback) {
      inst = inst._reactInternals;
      var lane = requestUpdateLane(inst),
        update = createUpdate(lane);
      update.tag = 2;
      undefined !== callback && null !== callback && (update.callback = callback);
      callback = enqueueUpdate(inst, update, lane);
      null !== callback && (scheduleUpdateOnFiber(callback, inst, lane), entangleTransitions(callback, inst, lane));
    }
  };
  function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
    workInProgress = workInProgress.stateNode;
    return "function" === typeof workInProgress.shouldComponentUpdate ? workInProgress.shouldComponentUpdate(newProps, newState, nextContext) : ctor.prototype && ctor.prototype.isPureReactComponent ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState) : true;
  }
  function constructClassInstance(workInProgress, ctor, props) {
    var context = emptyContextObject,
      contextType = ctor.contextType;
    "object" === typeof contextType && null !== contextType && (context = readContext(contextType));
    ctor = new ctor(props, context);
    workInProgress.memoizedState = null !== ctor.state && undefined !== ctor.state ? ctor.state : null;
    ctor.updater = classComponentUpdater;
    workInProgress.stateNode = ctor;
    ctor._reactInternals = workInProgress;
    return ctor;
  }
  function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
    workInProgress = instance.state;
    "function" === typeof instance.componentWillReceiveProps && instance.componentWillReceiveProps(newProps, nextContext);
    "function" === typeof instance.UNSAFE_componentWillReceiveProps && instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
    instance.state !== workInProgress && classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }
  function mountClassInstance(workInProgress, ctor, newProps, renderLanes) {
    var instance = workInProgress.stateNode;
    instance.props = newProps;
    instance.state = workInProgress.memoizedState;
    instance.refs = {};
    initializeUpdateQueue(workInProgress);
    var contextType = ctor.contextType;
    instance.context = "object" === typeof contextType && null !== contextType ? readContext(contextType) : emptyContextObject;
    instance.state = workInProgress.memoizedState;
    contextType = ctor.getDerivedStateFromProps;
    "function" === typeof contextType && (applyDerivedStateFromProps(workInProgress, ctor, contextType, newProps), instance.state = workInProgress.memoizedState);
    "function" === typeof ctor.getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || (ctor = instance.state, "function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount(), ctor !== instance.state && classComponentUpdater.enqueueReplaceState(instance, instance.state, null), processUpdateQueue(workInProgress, newProps, instance, renderLanes), suspendIfUpdateReadFromEntangledAsyncAction(), instance.state = workInProgress.memoizedState);
    "function" === typeof instance.componentDidMount && (workInProgress.flags |= 4194308);
  }
  function resolveClassComponentProps(Component, baseProps) {
    var newProps = baseProps;
    if ("ref" in baseProps) {
      newProps = {};
      for (var propName in baseProps) "ref" !== propName && (newProps[propName] = baseProps[propName]);
    }
    if (Component = Component.defaultProps) {
      newProps === baseProps && (newProps = assign({}, newProps));
      for (var propName$51 in Component) undefined === newProps[propName$51] && (newProps[propName$51] = Component[propName$51]);
    }
    return newProps;
  }
  var reportGlobalError = "function" === typeof reportError ? reportError : function (error) {
    if ("object" === typeof window && "function" === typeof window.ErrorEvent) {
      var event = new window.ErrorEvent("error", {
        bubbles: true,
        cancelable: true,
        message: "object" === typeof error && null !== error && "string" === typeof error.message ? String(error.message) : String(error),
        error: error
      });
      if (!window.dispatchEvent(event)) return;
    } else if ("object" === typeof process && "function" === typeof process.emit) {
      process.emit("uncaughtException", error);
      return;
    }
    console.error(error);
  };
  function defaultOnRecoverableError(error) {
    reportGlobalError(error);
  }
  function logUncaughtError(root, errorInfo) {
    try {
      var onUncaughtError = root.onUncaughtError;
      onUncaughtError(errorInfo.value, {
        componentStack: errorInfo.stack
      });
    } catch (e) {
      setTimeout(function () {
        throw e;
      });
    }
  }
  function logCaughtError(root, boundary, errorInfo) {
    try {
      var onCaughtError = root.onCaughtError;
      onCaughtError(errorInfo.value, {
        componentStack: errorInfo.stack,
        errorBoundary: 1 === boundary.tag ? boundary.stateNode : null
      });
    } catch (e) {
      setTimeout(function () {
        throw e;
      });
    }
  }
  function createRootErrorUpdate(root, errorInfo, lane) {
    lane = createUpdate(lane);
    lane.tag = 3;
    lane.payload = {
      element: null
    };
    lane.callback = function () {
      logUncaughtError(root, errorInfo);
    };
    return lane;
  }
  function createClassErrorUpdate(lane) {
    lane = createUpdate(lane);
    lane.tag = 3;
    return lane;
  }
  function initializeClassErrorUpdate(update, root, fiber, errorInfo) {
    var getDerivedStateFromError = fiber.type.getDerivedStateFromError;
    if ("function" === typeof getDerivedStateFromError) {
      var error = errorInfo.value;
      update.payload = function () {
        return getDerivedStateFromError(error);
      };
      update.callback = function () {
        logCaughtError(root, fiber, errorInfo);
      };
    }
    var inst = fiber.stateNode;
    null !== inst && "function" === typeof inst.componentDidCatch && (update.callback = function () {
      logCaughtError(root, fiber, errorInfo);
      "function" !== typeof getDerivedStateFromError && (null === legacyErrorBoundariesThatAlreadyFailed ? legacyErrorBoundariesThatAlreadyFailed = new Set([this]) : legacyErrorBoundariesThatAlreadyFailed.add(this));
      var stack = errorInfo.stack;
      this.componentDidCatch(errorInfo.value, {
        componentStack: null !== stack ? stack : ""
      });
    });
  }
  function throwException(root, returnFiber, sourceFiber, value, rootRenderLanes) {
    sourceFiber.flags |= 32768;
    if (null !== value && "object" === typeof value && "function" === typeof value.then) {
      var currentSourceFiber = sourceFiber.alternate;
      null !== currentSourceFiber && propagateParentContextChanges(currentSourceFiber, sourceFiber, rootRenderLanes, true);
      currentSourceFiber = sourceFiber.tag;
      0 !== (sourceFiber.mode & 1) || 0 !== currentSourceFiber && 11 !== currentSourceFiber && 15 !== currentSourceFiber || ((currentSourceFiber = sourceFiber.alternate) ? (sourceFiber.updateQueue = currentSourceFiber.updateQueue, sourceFiber.memoizedState = currentSourceFiber.memoizedState, sourceFiber.lanes = currentSourceFiber.lanes) : (sourceFiber.updateQueue = null, sourceFiber.memoizedState = null));
      currentSourceFiber = suspenseHandlerStackCursor.current;
      if (null !== currentSourceFiber) {
        switch (currentSourceFiber.tag) {
          case 13:
            return sourceFiber.mode & 1 && (null === shellBoundary ? renderDidSuspendDelayIfPossible() : null === currentSourceFiber.alternate && 0 === workInProgressRootExitStatus && (workInProgressRootExitStatus = 3)), currentSourceFiber.flags &= -257, 0 === (currentSourceFiber.mode & 1) ? currentSourceFiber === returnFiber ? currentSourceFiber.flags |= 65536 : (currentSourceFiber.flags |= 128, sourceFiber.flags |= 131072, sourceFiber.flags &= -52805, 1 === sourceFiber.tag ? null === sourceFiber.alternate ? sourceFiber.tag = 17 : (returnFiber = createUpdate(2), returnFiber.tag = 2, enqueueUpdate(sourceFiber, returnFiber, 2)) : 0 === sourceFiber.tag && null === sourceFiber.alternate && (sourceFiber.tag = 28), sourceFiber.lanes |= 2) : (currentSourceFiber.flags |= 65536, currentSourceFiber.lanes = rootRenderLanes), value === noopSuspenseyCommitThenable ? currentSourceFiber.flags |= 16384 : (returnFiber = currentSourceFiber.updateQueue, null === returnFiber ? currentSourceFiber.updateQueue = new Set([value]) : returnFiber.add(value), currentSourceFiber.mode & 1 && attachPingListener(root, value, rootRenderLanes)), false;
          case 22:
            if (currentSourceFiber.mode & 1) return currentSourceFiber.flags |= 65536, value === noopSuspenseyCommitThenable ? currentSourceFiber.flags |= 16384 : (returnFiber = currentSourceFiber.updateQueue, null === returnFiber ? (returnFiber = {
              transitions: null,
              markerInstances: null,
              retryQueue: new Set([value])
            }, currentSourceFiber.updateQueue = returnFiber) : (sourceFiber = returnFiber.retryQueue, null === sourceFiber ? returnFiber.retryQueue = new Set([value]) : sourceFiber.add(value)), attachPingListener(root, value, rootRenderLanes)), false;
        }
        throw Error("Unexpected Suspense handler tag (" + currentSourceFiber.tag + "). This is a bug in React.");
      }
      if (1 === root.tag) return attachPingListener(root, value, rootRenderLanes), renderDidSuspendDelayIfPossible(), false;
      value = Error("A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition.");
    }
    currentSourceFiber = createCapturedValueAtFiber(Error("There was an error during concurrent rendering but React was able to recover by instead synchronously rendering the entire root.", {
      cause: value
    }), sourceFiber);
    null === workInProgressRootConcurrentErrors ? workInProgressRootConcurrentErrors = [currentSourceFiber] : workInProgressRootConcurrentErrors.push(currentSourceFiber);
    4 !== workInProgressRootExitStatus && (workInProgressRootExitStatus = 2);
    if (null === returnFiber) return true;
    value = createCapturedValueAtFiber(value, sourceFiber);
    do {
      switch (returnFiber.tag) {
        case 3:
          return returnFiber.flags |= 65536, root = rootRenderLanes & -rootRenderLanes, returnFiber.lanes |= root, root = createRootErrorUpdate(returnFiber.stateNode, value, root), enqueueCapturedUpdate(returnFiber, root), false;
        case 1:
          if (sourceFiber = returnFiber.type, currentSourceFiber = returnFiber.stateNode, 0 === (returnFiber.flags & 128) && ("function" === typeof sourceFiber.getDerivedStateFromError || null !== currentSourceFiber && "function" === typeof currentSourceFiber.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(currentSourceFiber)))) return returnFiber.flags |= 65536, rootRenderLanes &= -rootRenderLanes, returnFiber.lanes |= rootRenderLanes, rootRenderLanes = createClassErrorUpdate(rootRenderLanes), initializeClassErrorUpdate(rootRenderLanes, root, returnFiber, value), enqueueCapturedUpdate(returnFiber, rootRenderLanes), false;
      }
      returnFiber = returnFiber.return;
    } while (null !== returnFiber);
    return false;
  }
  var SelectiveHydrationException = Error("This is not a real error. It's an implementation detail of React's selective hydration feature. If this leaks into userspace, it's a bug in React. Please file an issue."),
    didReceiveUpdate = false;
  function reconcileChildren(current, workInProgress, nextChildren, renderLanes) {
    workInProgress.child = null === current ? mountChildFibers(workInProgress, null, nextChildren, renderLanes) : reconcileChildFibers(workInProgress, current.child, nextChildren, renderLanes);
  }
  function updateForwardRef(current, workInProgress, Component, nextProps, renderLanes) {
    Component = Component.render;
    var ref = workInProgress.ref;
    if ("ref" in nextProps) {
      var propsWithoutRef = {};
      for (var key in nextProps) "ref" !== key && (propsWithoutRef[key] = nextProps[key]);
    } else propsWithoutRef = nextProps;
    prepareToReadContext(workInProgress);
    nextProps = renderWithHooks(current, workInProgress, Component, propsWithoutRef, ref, renderLanes);
    if (null !== current && !didReceiveUpdate) return bailoutHooks(current, workInProgress, renderLanes), bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
    workInProgress.flags |= 1;
    reconcileChildren(current, workInProgress, nextProps, renderLanes);
    return workInProgress.child;
  }
  function updateMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {
    if (null === current) {
      var type = Component.type;
      if ("function" === typeof type && !shouldConstruct(type) && undefined === type.defaultProps && null === Component.compare) return workInProgress.tag = 15, workInProgress.type = type, updateSimpleMemoComponent(current, workInProgress, type, nextProps, renderLanes);
      current = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress, workInProgress.mode, renderLanes);
      current.ref = workInProgress.ref;
      current.return = workInProgress;
      return workInProgress.child = current;
    }
    type = current.child;
    if (!checkScheduledUpdateOrContext(current, renderLanes)) {
      var prevProps = type.memoizedProps;
      Component = Component.compare;
      Component = null !== Component ? Component : shallowEqual;
      if (Component(prevProps, nextProps) && current.ref === workInProgress.ref) return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
    }
    workInProgress.flags |= 1;
    current = createWorkInProgress(type, nextProps);
    current.ref = workInProgress.ref;
    current.return = workInProgress;
    return workInProgress.child = current;
  }
  function updateSimpleMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {
    if (null !== current) {
      var prevProps = current.memoizedProps;
      if (shallowEqual(prevProps, nextProps) && current.ref === workInProgress.ref) if (didReceiveUpdate = false, workInProgress.pendingProps = nextProps = prevProps, checkScheduledUpdateOrContext(current, renderLanes)) 0 !== (current.flags & 131072) && (didReceiveUpdate = true);else return workInProgress.lanes = current.lanes, bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
    }
    return updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes);
  }
  function updateOffscreenComponent(current, workInProgress, renderLanes) {
    var nextProps = workInProgress.pendingProps,
      nextChildren = nextProps.children,
      nextIsDetached = 0 !== (workInProgress.stateNode._pendingVisibility & 2),
      prevState = null !== current ? current.memoizedState : null;
    markRef(current, workInProgress);
    if ("hidden" === nextProps.mode || nextIsDetached) {
      if (0 !== (workInProgress.flags & 128)) {
        nextProps = null !== prevState ? prevState.baseLanes | renderLanes : renderLanes;
        if (null !== current) {
          nextChildren = workInProgress.child = current.child;
          for (nextIsDetached = 0; null !== nextChildren;) nextIsDetached = nextIsDetached | nextChildren.lanes | nextChildren.childLanes, nextChildren = nextChildren.sibling;
          workInProgress.childLanes = nextIsDetached & ~nextProps;
        } else workInProgress.childLanes = 0, workInProgress.child = null;
        return deferHiddenOffscreenComponent(current, workInProgress, nextProps, renderLanes);
      }
      if (0 === (workInProgress.mode & 1)) workInProgress.memoizedState = {
        baseLanes: 0,
        cachePool: null
      }, null !== current && pushTransition(workInProgress, null), reuseHiddenContextOnStack(), pushOffscreenSuspenseHandler(workInProgress);else if (0 !== (renderLanes & 536870912)) workInProgress.memoizedState = {
        baseLanes: 0,
        cachePool: null
      }, null !== current && pushTransition(workInProgress, null !== prevState ? prevState.cachePool : null), null !== prevState ? pushHiddenContext(workInProgress, prevState) : reuseHiddenContextOnStack(), pushOffscreenSuspenseHandler(workInProgress);else return workInProgress.lanes = workInProgress.childLanes = 536870912, deferHiddenOffscreenComponent(current, workInProgress, null !== prevState ? prevState.baseLanes | renderLanes : renderLanes, renderLanes);
    } else null !== prevState ? (pushTransition(workInProgress, prevState.cachePool), pushHiddenContext(workInProgress, prevState), reuseSuspenseHandlerOnStack(workInProgress), workInProgress.memoizedState = null) : (null !== current && pushTransition(workInProgress, null), reuseHiddenContextOnStack(), reuseSuspenseHandlerOnStack(workInProgress));
    reconcileChildren(current, workInProgress, nextChildren, renderLanes);
    return workInProgress.child;
  }
  function deferHiddenOffscreenComponent(current, workInProgress, nextBaseLanes, renderLanes) {
    var JSCompiler_inline_result = peekCacheFromPool();
    JSCompiler_inline_result = null === JSCompiler_inline_result ? null : {
      parent: CacheContext._currentValue2,
      pool: JSCompiler_inline_result
    };
    workInProgress.memoizedState = {
      baseLanes: nextBaseLanes,
      cachePool: JSCompiler_inline_result
    };
    null !== current && pushTransition(workInProgress, null);
    reuseHiddenContextOnStack();
    pushOffscreenSuspenseHandler(workInProgress);
    null !== current && propagateParentContextChanges(current, workInProgress, renderLanes, true);
    return null;
  }
  function markRef(current, workInProgress) {
    var ref = workInProgress.ref;
    if (null === ref) null !== current && null !== current.ref && (workInProgress.flags |= 2097664);else {
      if ("function" !== typeof ref && "object" !== typeof ref) throw Error("Expected ref to be a function, an object returned by React.createRef(), or undefined/null.");
      if (null === current || current.ref !== ref) workInProgress.flags |= 2097664;
    }
  }
  function updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes) {
    prepareToReadContext(workInProgress);
    Component = renderWithHooks(current, workInProgress, Component, nextProps, undefined, renderLanes);
    if (null !== current && !didReceiveUpdate) return bailoutHooks(current, workInProgress, renderLanes), bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
    workInProgress.flags |= 1;
    reconcileChildren(current, workInProgress, Component, renderLanes);
    return workInProgress.child;
  }
  function replayFunctionComponent(current, workInProgress, nextProps, Component, secondArg, renderLanes) {
    prepareToReadContext(workInProgress);
    workInProgress.updateQueue = null;
    nextProps = renderWithHooksAgain(workInProgress, Component, nextProps, secondArg);
    finishRenderingHooks(current);
    if (null !== current && !didReceiveUpdate) return bailoutHooks(current, workInProgress, renderLanes), bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
    workInProgress.flags |= 1;
    reconcileChildren(current, workInProgress, nextProps, renderLanes);
    return workInProgress.child;
  }
  function updateClassComponent(current, workInProgress, Component, nextProps, renderLanes) {
    prepareToReadContext(workInProgress);
    if (null === workInProgress.stateNode) resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress), constructClassInstance(workInProgress, Component, nextProps), mountClassInstance(workInProgress, Component, nextProps, renderLanes), nextProps = true;else if (null === current) {
      var instance = workInProgress.stateNode,
        unresolvedOldProps = workInProgress.memoizedProps,
        oldProps = resolveClassComponentProps(Component, unresolvedOldProps);
      instance.props = oldProps;
      var oldContext = instance.context,
        contextType = Component.contextType,
        nextContext = emptyContextObject;
      "object" === typeof contextType && null !== contextType && (nextContext = readContext(contextType));
      var getDerivedStateFromProps = Component.getDerivedStateFromProps;
      contextType = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate;
      unresolvedOldProps = workInProgress.pendingProps !== unresolvedOldProps;
      contextType || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (unresolvedOldProps || oldContext !== nextContext) && callComponentWillReceiveProps(workInProgress, instance, nextProps, nextContext);
      hasForceUpdate = false;
      var oldState = workInProgress.memoizedState;
      instance.state = oldState;
      processUpdateQueue(workInProgress, nextProps, instance, renderLanes);
      suspendIfUpdateReadFromEntangledAsyncAction();
      oldContext = workInProgress.memoizedState;
      unresolvedOldProps || oldState !== oldContext || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldContext = workInProgress.memoizedState), (oldProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldState, oldContext, nextContext)) ? (contextType || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || ("function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount()), "function" === typeof instance.componentDidMount && (workInProgress.flags |= 4194308)) : ("function" === typeof instance.componentDidMount && (workInProgress.flags |= 4194308), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldContext), instance.props = nextProps, instance.state = oldContext, instance.context = nextContext, nextProps = oldProps) : ("function" === typeof instance.componentDidMount && (workInProgress.flags |= 4194308), nextProps = false);
    } else {
      instance = workInProgress.stateNode;
      cloneUpdateQueue(current, workInProgress);
      nextContext = workInProgress.memoizedProps;
      contextType = resolveClassComponentProps(Component, nextContext);
      instance.props = contextType;
      getDerivedStateFromProps = workInProgress.pendingProps;
      oldState = instance.context;
      oldContext = Component.contextType;
      oldProps = emptyContextObject;
      "object" === typeof oldContext && null !== oldContext && (oldProps = readContext(oldContext));
      unresolvedOldProps = Component.getDerivedStateFromProps;
      (oldContext = "function" === typeof unresolvedOldProps || "function" === typeof instance.getSnapshotBeforeUpdate) || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (nextContext !== getDerivedStateFromProps || oldState !== oldProps) && callComponentWillReceiveProps(workInProgress, instance, nextProps, oldProps);
      hasForceUpdate = false;
      oldState = workInProgress.memoizedState;
      instance.state = oldState;
      processUpdateQueue(workInProgress, nextProps, instance, renderLanes);
      suspendIfUpdateReadFromEntangledAsyncAction();
      var newState = workInProgress.memoizedState;
      nextContext !== getDerivedStateFromProps || oldState !== newState || hasForceUpdate || null !== current && null !== current.dependencies && checkIfContextChanged(current.dependencies) ? ("function" === typeof unresolvedOldProps && (applyDerivedStateFromProps(workInProgress, Component, unresolvedOldProps, nextProps), newState = workInProgress.memoizedState), (contextType = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, contextType, nextProps, oldState, newState, oldProps) || null !== current && null !== current.dependencies && checkIfContextChanged(current.dependencies)) ? (oldContext || "function" !== typeof instance.UNSAFE_componentWillUpdate && "function" !== typeof instance.componentWillUpdate || ("function" === typeof instance.componentWillUpdate && instance.componentWillUpdate(nextProps, newState, oldProps), "function" === typeof instance.UNSAFE_componentWillUpdate && instance.UNSAFE_componentWillUpdate(nextProps, newState, oldProps)), "function" === typeof instance.componentDidUpdate && (workInProgress.flags |= 4), "function" === typeof instance.getSnapshotBeforeUpdate && (workInProgress.flags |= 1024)) : ("function" !== typeof instance.componentDidUpdate || nextContext === current.memoizedProps && oldState === current.memoizedState || (workInProgress.flags |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || nextContext === current.memoizedProps && oldState === current.memoizedState || (workInProgress.flags |= 1024), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = newState), instance.props = nextProps, instance.state = newState, instance.context = oldProps, nextProps = contextType) : ("function" !== typeof instance.componentDidUpdate || nextContext === current.memoizedProps && oldState === current.memoizedState || (workInProgress.flags |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || nextContext === current.memoizedProps && oldState === current.memoizedState || (workInProgress.flags |= 1024), nextProps = false);
    }
    return finishClassComponent(current, workInProgress, Component, nextProps, false, renderLanes);
  }
  function finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes) {
    markRef(current, workInProgress);
    hasContext = 0 !== (workInProgress.flags & 128);
    if (!shouldUpdate && !hasContext) return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
    shouldUpdate = workInProgress.stateNode;
    Component = hasContext && "function" !== typeof Component.getDerivedStateFromError ? null : shouldUpdate.render();
    workInProgress.flags |= 1;
    null !== current && hasContext ? (workInProgress.child = reconcileChildFibers(workInProgress, current.child, null, renderLanes), workInProgress.child = reconcileChildFibers(workInProgress, null, Component, renderLanes)) : reconcileChildren(current, workInProgress, Component, renderLanes);
    workInProgress.memoizedState = shouldUpdate.state;
    return workInProgress.child;
  }
  var SUSPENDED_MARKER = {
    dehydrated: null,
    treeContext: null,
    retryLane: 0
  };
  function mountSuspenseOffscreenState(renderLanes) {
    return {
      baseLanes: renderLanes,
      cachePool: getSuspendedCache()
    };
  }
  function getRemainingWorkInPrimaryTree(current, primaryTreeDidDefer, renderLanes) {
    current = null !== current ? current.childLanes & ~renderLanes : 0;
    primaryTreeDidDefer && (current |= workInProgressDeferredLane);
    return current;
  }
  function updateSuspenseComponent(current, workInProgress, renderLanes) {
    var nextProps = workInProgress.pendingProps,
      showFallback = false,
      didSuspend = 0 !== (workInProgress.flags & 128),
      JSCompiler_temp;
    (JSCompiler_temp = didSuspend) || (JSCompiler_temp = null !== current && null === current.memoizedState ? false : 0 !== (suspenseStackCursor.current & 2));
    JSCompiler_temp && (showFallback = true, workInProgress.flags &= -129);
    JSCompiler_temp = 0 !== (workInProgress.flags & 32);
    workInProgress.flags &= -33;
    if (null === current) {
      var nextPrimaryChildren = nextProps.children;
      nextProps = nextProps.fallback;
      if (showFallback) return reuseSuspenseHandlerOnStack(workInProgress), showFallback = workInProgress.mode, didSuspend = workInProgress.child, nextPrimaryChildren = {
        mode: "hidden",
        children: nextPrimaryChildren
      }, 0 === (showFallback & 1) && null !== didSuspend ? (didSuspend.childLanes = 0, didSuspend.pendingProps = nextPrimaryChildren) : didSuspend = createFiberFromOffscreen(nextPrimaryChildren, showFallback, 0, null), nextProps = createFiberFromFragment(nextProps, showFallback, renderLanes, null), didSuspend.return = workInProgress, nextProps.return = workInProgress, didSuspend.sibling = nextProps, workInProgress.child = didSuspend, nextPrimaryChildren = workInProgress.child, nextPrimaryChildren.memoizedState = mountSuspenseOffscreenState(renderLanes), nextPrimaryChildren.childLanes = getRemainingWorkInPrimaryTree(current, JSCompiler_temp, renderLanes), workInProgress.memoizedState = SUSPENDED_MARKER, nextProps;
      pushPrimaryTreeSuspenseHandler(workInProgress);
      return mountSuspensePrimaryChildren(workInProgress, nextPrimaryChildren);
    }
    nextPrimaryChildren = current.memoizedState;
    if (null !== nextPrimaryChildren && null !== nextPrimaryChildren.dehydrated) {
      if (didSuspend) workInProgress.flags & 256 ? (pushPrimaryTreeSuspenseHandler(workInProgress), workInProgress.flags &= -257, workInProgress = retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes)) : null !== workInProgress.memoizedState ? (reuseSuspenseHandlerOnStack(workInProgress), workInProgress.child = current.child, workInProgress.flags |= 128, workInProgress = null) : (reuseSuspenseHandlerOnStack(workInProgress), nextPrimaryChildren = nextProps.fallback, showFallback = workInProgress.mode, nextProps = createFiberFromOffscreen({
        mode: "visible",
        children: nextProps.children
      }, showFallback, 0, null), nextPrimaryChildren = createFiberFromFragment(nextPrimaryChildren, showFallback, renderLanes, null), nextPrimaryChildren.flags |= 2, nextProps.return = workInProgress, nextPrimaryChildren.return = workInProgress, nextProps.sibling = nextPrimaryChildren, workInProgress.child = nextProps, 0 !== (workInProgress.mode & 1) && reconcileChildFibers(workInProgress, current.child, null, renderLanes), nextProps = workInProgress.child, nextProps.memoizedState = mountSuspenseOffscreenState(renderLanes), nextProps.childLanes = getRemainingWorkInPrimaryTree(current, JSCompiler_temp, renderLanes), workInProgress.memoizedState = SUSPENDED_MARKER, workInProgress = nextPrimaryChildren);else if (pushPrimaryTreeSuspenseHandler(workInProgress), shim$1()) JSCompiler_temp = shim$1().digest, nextProps = Error("The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering."), nextProps.stack = "", nextProps.digest = JSCompiler_temp, JSCompiler_temp = {
        value: nextProps,
        source: null,
        stack: null
      }, null === hydrationErrors ? hydrationErrors = [JSCompiler_temp] : hydrationErrors.push(JSCompiler_temp), workInProgress = retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes);else if (didReceiveUpdate || propagateParentContextChanges(current, workInProgress, renderLanes, false), JSCompiler_temp = 0 !== (renderLanes & current.childLanes), didReceiveUpdate || JSCompiler_temp) {
        JSCompiler_temp = workInProgressRoot;
        if (null !== JSCompiler_temp) {
          nextProps = renderLanes & -renderLanes;
          if (0 !== (nextProps & 42)) nextProps = 1;else switch (nextProps) {
            case 2:
              nextProps = 1;
              break;
            case 8:
              nextProps = 4;
              break;
            case 32:
              nextProps = 16;
              break;
            case 128:
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
            case 4194304:
            case 8388608:
            case 16777216:
            case 33554432:
              nextProps = 64;
              break;
            case 268435456:
              nextProps = 134217728;
              break;
            default:
              nextProps = 0;
          }
          nextProps = 0 !== (nextProps & (JSCompiler_temp.suspendedLanes | renderLanes)) ? 0 : nextProps;
          if (0 !== nextProps && nextProps !== nextPrimaryChildren.retryLane) throw nextPrimaryChildren.retryLane = nextProps, enqueueConcurrentRenderForLane(current, nextProps), scheduleUpdateOnFiber(JSCompiler_temp, current, nextProps), SelectiveHydrationException;
        }
        shim$1() || renderDidSuspendDelayIfPossible();
        workInProgress = retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes);
      } else shim$1() ? (workInProgress.flags |= 128, workInProgress.child = current.child, retryDehydratedSuspenseBoundary.bind(null, current), shim$1(), workInProgress = null) : (workInProgress = mountSuspensePrimaryChildren(workInProgress, nextProps.children), workInProgress.flags |= 4096);
      return workInProgress;
    }
    if (showFallback) {
      reuseSuspenseHandlerOnStack(workInProgress);
      nextPrimaryChildren = nextProps.fallback;
      showFallback = workInProgress.mode;
      didSuspend = current.child;
      var currentFallbackChildFragment = didSuspend.sibling,
        primaryChildProps = {
          mode: "hidden",
          children: nextProps.children
        };
      0 === (showFallback & 1) && workInProgress.child !== didSuspend ? (nextProps = workInProgress.child, nextProps.childLanes = 0, nextProps.pendingProps = primaryChildProps, workInProgress.deletions = null) : (nextProps = createWorkInProgress(didSuspend, primaryChildProps), nextProps.subtreeFlags = didSuspend.subtreeFlags & 31457280);
      null !== currentFallbackChildFragment ? nextPrimaryChildren = createWorkInProgress(currentFallbackChildFragment, nextPrimaryChildren) : (nextPrimaryChildren = createFiberFromFragment(nextPrimaryChildren, showFallback, renderLanes, null), nextPrimaryChildren.flags |= 2);
      nextPrimaryChildren.return = workInProgress;
      nextProps.return = workInProgress;
      nextProps.sibling = nextPrimaryChildren;
      workInProgress.child = nextProps;
      nextProps = nextPrimaryChildren;
      nextPrimaryChildren = workInProgress.child;
      showFallback = current.child.memoizedState;
      null === showFallback ? showFallback = mountSuspenseOffscreenState(renderLanes) : (didSuspend = showFallback.cachePool, null !== didSuspend ? (currentFallbackChildFragment = CacheContext._currentValue2, didSuspend = didSuspend.parent !== currentFallbackChildFragment ? {
        parent: currentFallbackChildFragment,
        pool: currentFallbackChildFragment
      } : didSuspend) : didSuspend = getSuspendedCache(), showFallback = {
        baseLanes: showFallback.baseLanes | renderLanes,
        cachePool: didSuspend
      });
      nextPrimaryChildren.memoizedState = showFallback;
      nextPrimaryChildren.childLanes = getRemainingWorkInPrimaryTree(current, JSCompiler_temp, renderLanes);
      workInProgress.memoizedState = SUSPENDED_MARKER;
      return nextProps;
    }
    pushPrimaryTreeSuspenseHandler(workInProgress);
    JSCompiler_temp = current.child;
    current = JSCompiler_temp.sibling;
    JSCompiler_temp = createWorkInProgress(JSCompiler_temp, {
      mode: "visible",
      children: nextProps.children
    });
    0 === (workInProgress.mode & 1) && (JSCompiler_temp.lanes = renderLanes);
    JSCompiler_temp.return = workInProgress;
    JSCompiler_temp.sibling = null;
    null !== current && (renderLanes = workInProgress.deletions, null === renderLanes ? (workInProgress.deletions = [current], workInProgress.flags |= 16) : renderLanes.push(current));
    workInProgress.child = JSCompiler_temp;
    workInProgress.memoizedState = null;
    return JSCompiler_temp;
  }
  function mountSuspensePrimaryChildren(workInProgress, primaryChildren) {
    primaryChildren = createFiberFromOffscreen({
      mode: "visible",
      children: primaryChildren
    }, workInProgress.mode, 0, null);
    primaryChildren.return = workInProgress;
    return workInProgress.child = primaryChildren;
  }
  function retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes) {
    reconcileChildFibers(workInProgress, current.child, null, renderLanes);
    current = mountSuspensePrimaryChildren(workInProgress, workInProgress.pendingProps.children);
    current.flags |= 2;
    workInProgress.memoizedState = null;
    return current;
  }
  function scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {
    fiber.lanes |= renderLanes;
    var alternate = fiber.alternate;
    null !== alternate && (alternate.lanes |= renderLanes);
    scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);
  }
  function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {
    var renderState = workInProgress.memoizedState;
    null === renderState ? workInProgress.memoizedState = {
      isBackwards: isBackwards,
      rendering: null,
      renderingStartTime: 0,
      last: lastContentRow,
      tail: tail,
      tailMode: tailMode
    } : (renderState.isBackwards = isBackwards, renderState.rendering = null, renderState.renderingStartTime = 0, renderState.last = lastContentRow, renderState.tail = tail, renderState.tailMode = tailMode);
  }
  function updateSuspenseListComponent(current, workInProgress, renderLanes) {
    var nextProps = workInProgress.pendingProps,
      revealOrder = nextProps.revealOrder,
      tailMode = nextProps.tail;
    reconcileChildren(current, workInProgress, nextProps.children, renderLanes);
    nextProps = suspenseStackCursor.current;
    if (0 !== (nextProps & 2)) nextProps = nextProps & 1 | 2, workInProgress.flags |= 128;else {
      if (null !== current && 0 !== (current.flags & 128)) a: for (current = workInProgress.child; null !== current;) {
        if (13 === current.tag) null !== current.memoizedState && scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);else if (19 === current.tag) scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);else if (null !== current.child) {
          current.child.return = current;
          current = current.child;
          continue;
        }
        if (current === workInProgress) break a;
        for (; null === current.sibling;) {
          if (null === current.return || current.return === workInProgress) break a;
          current = current.return;
        }
        current.sibling.return = current.return;
        current = current.sibling;
      }
      nextProps &= 1;
    }
    push(suspenseStackCursor, nextProps);
    if (0 === (workInProgress.mode & 1)) workInProgress.memoizedState = null;else switch (revealOrder) {
      case "forwards":
        renderLanes = workInProgress.child;
        for (revealOrder = null; null !== renderLanes;) current = renderLanes.alternate, null !== current && null === findFirstSuspended(current) && (revealOrder = renderLanes), renderLanes = renderLanes.sibling;
        renderLanes = revealOrder;
        null === renderLanes ? (revealOrder = workInProgress.child, workInProgress.child = null) : (revealOrder = renderLanes.sibling, renderLanes.sibling = null);
        initSuspenseListRenderState(workInProgress, false, revealOrder, renderLanes, tailMode);
        break;
      case "backwards":
        renderLanes = null;
        revealOrder = workInProgress.child;
        for (workInProgress.child = null; null !== revealOrder;) {
          current = revealOrder.alternate;
          if (null !== current && null === findFirstSuspended(current)) {
            workInProgress.child = revealOrder;
            break;
          }
          current = revealOrder.sibling;
          revealOrder.sibling = renderLanes;
          renderLanes = revealOrder;
          revealOrder = current;
        }
        initSuspenseListRenderState(workInProgress, true, renderLanes, null, tailMode);
        break;
      case "together":
        initSuspenseListRenderState(workInProgress, false, null, null, undefined);
        break;
      default:
        workInProgress.memoizedState = null;
    }
    return workInProgress.child;
  }
  function resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress) {
    0 === (workInProgress.mode & 1) && null !== current && (current.alternate = null, workInProgress.alternate = null, workInProgress.flags |= 2);
  }
  function bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {
    null !== current && (workInProgress.dependencies = current.dependencies);
    workInProgressRootSkippedLanes |= workInProgress.lanes;
    if (0 === (renderLanes & workInProgress.childLanes)) if (null !== current) {
      if (propagateParentContextChanges(current, workInProgress, renderLanes, false), 0 === (renderLanes & workInProgress.childLanes)) return null;
    } else return null;
    if (null !== current && workInProgress.child !== current.child) throw Error("Resuming work not yet implemented.");
    if (null !== workInProgress.child) {
      current = workInProgress.child;
      renderLanes = createWorkInProgress(current, current.pendingProps);
      workInProgress.child = renderLanes;
      for (renderLanes.return = workInProgress; null !== current.sibling;) current = current.sibling, renderLanes = renderLanes.sibling = createWorkInProgress(current, current.pendingProps), renderLanes.return = workInProgress;
      renderLanes.sibling = null;
    }
    return workInProgress.child;
  }
  function checkScheduledUpdateOrContext(current, renderLanes) {
    if (0 !== (current.lanes & renderLanes)) return true;
    current = current.dependencies;
    return null !== current && checkIfContextChanged(current) ? true : false;
  }
  function attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes) {
    switch (workInProgress.tag) {
      case 3:
        pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
        pushProvider(workInProgress, CacheContext, current.memoizedState.cache);
        break;
      case 27:
      case 5:
        pushHostContext(workInProgress);
        break;
      case 4:
        pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
        break;
      case 10:
        pushProvider(workInProgress, workInProgress.type, workInProgress.memoizedProps.value);
        break;
      case 13:
        var state = workInProgress.memoizedState;
        if (null !== state) {
          if (null !== state.dehydrated) return pushPrimaryTreeSuspenseHandler(workInProgress), workInProgress.flags |= 128, null;
          if (0 !== (renderLanes & workInProgress.child.childLanes)) return updateSuspenseComponent(current, workInProgress, renderLanes);
          pushPrimaryTreeSuspenseHandler(workInProgress);
          current = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
          return null !== current ? current.sibling : null;
        }
        pushPrimaryTreeSuspenseHandler(workInProgress);
        break;
      case 19:
        var didSuspendBefore = 0 !== (current.flags & 128);
        state = 0 !== (renderLanes & workInProgress.childLanes);
        state || (propagateParentContextChanges(current, workInProgress, renderLanes, false), state = 0 !== (renderLanes & workInProgress.childLanes));
        if (didSuspendBefore) {
          if (state) return updateSuspenseListComponent(current, workInProgress, renderLanes);
          workInProgress.flags |= 128;
        }
        didSuspendBefore = workInProgress.memoizedState;
        null !== didSuspendBefore && (didSuspendBefore.rendering = null, didSuspendBefore.tail = null, didSuspendBefore.lastEffect = null);
        push(suspenseStackCursor, suspenseStackCursor.current);
        if (state) break;else return null;
      case 22:
      case 23:
        return workInProgress.lanes = 0, updateOffscreenComponent(current, workInProgress, renderLanes);
      case 24:
        pushProvider(workInProgress, CacheContext, current.memoizedState.cache);
    }
    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
  }
  function beginWork(current, workInProgress, renderLanes) {
    if (null !== current) {
      if (current.memoizedProps !== workInProgress.pendingProps) didReceiveUpdate = true;else {
        if (!checkScheduledUpdateOrContext(current, renderLanes) && 0 === (workInProgress.flags & 128)) return didReceiveUpdate = false, attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes);
        didReceiveUpdate = 0 !== (current.flags & 131072) ? true : false;
      }
    } else didReceiveUpdate = false;
    workInProgress.lanes = 0;
    switch (workInProgress.tag) {
      case 16:
        var elementType = workInProgress.elementType;
        a: {
          resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress);
          current = workInProgress.pendingProps;
          var init = elementType._init;
          elementType = init(elementType._payload);
          workInProgress.type = elementType;
          if ("function" === typeof elementType) shouldConstruct(elementType) ? (current = resolveClassComponentProps(elementType, current), workInProgress.tag = 1, workInProgress = updateClassComponent(null, workInProgress, elementType, current, renderLanes)) : (workInProgress.tag = 0, workInProgress = updateFunctionComponent(null, workInProgress, elementType, current, renderLanes));else {
            if (undefined !== elementType && null !== elementType) if (init = elementType.$$typeof, init === REACT_FORWARD_REF_TYPE) {
              workInProgress.tag = 11;
              workInProgress = updateForwardRef(null, workInProgress, elementType, current, renderLanes);
              break a;
            } else if (init === REACT_MEMO_TYPE) {
              workInProgress.tag = 14;
              workInProgress = updateMemoComponent(null, workInProgress, elementType, current, renderLanes);
              break a;
            }
            workInProgress = getComponentNameFromType(elementType) || elementType;
            throw Error("Element type is invalid. Received a promise that resolves to: " + workInProgress + ". Lazy element type must resolve to a class or function.");
          }
        }
        return workInProgress;
      case 0:
        return updateFunctionComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
      case 1:
        return elementType = workInProgress.type, init = resolveClassComponentProps(elementType, workInProgress.pendingProps), updateClassComponent(current, workInProgress, elementType, init, renderLanes);
      case 3:
        pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
        if (null === current) throw Error("Should have a current fiber. This is a bug in React.");
        var nextProps = workInProgress.pendingProps;
        init = workInProgress.memoizedState;
        elementType = init.element;
        cloneUpdateQueue(current, workInProgress);
        processUpdateQueue(workInProgress, nextProps, null, renderLanes);
        nextProps = workInProgress.memoizedState;
        var nextCache = nextProps.cache;
        pushProvider(workInProgress, CacheContext, nextCache);
        nextCache !== init.cache && propagateContextChanges(workInProgress, [CacheContext], renderLanes, true);
        suspendIfUpdateReadFromEntangledAsyncAction();
        init = nextProps.element;
        init === elementType ? workInProgress = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) : (reconcileChildren(current, workInProgress, init, renderLanes), workInProgress = workInProgress.child);
        return workInProgress;
      case 26:
      case 27:
      case 5:
        return pushHostContext(workInProgress), elementType = workInProgress.pendingProps.children, null !== workInProgress.memoizedState && (init = renderWithHooks(current, workInProgress, TransitionAwareHostComponent, null, null, renderLanes), HostTransitionContext._currentValue2 = init), markRef(current, workInProgress), reconcileChildren(current, workInProgress, elementType, renderLanes), workInProgress.child;
      case 6:
        return null;
      case 13:
        return updateSuspenseComponent(current, workInProgress, renderLanes);
      case 4:
        return pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo), elementType = workInProgress.pendingProps, null === current ? workInProgress.child = reconcileChildFibers(workInProgress, null, elementType, renderLanes) : reconcileChildren(current, workInProgress, elementType, renderLanes), workInProgress.child;
      case 11:
        return updateForwardRef(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
      case 7:
        return reconcileChildren(current, workInProgress, workInProgress.pendingProps, renderLanes), workInProgress.child;
      case 8:
        return reconcileChildren(current, workInProgress, workInProgress.pendingProps.children, renderLanes), workInProgress.child;
      case 12:
        return reconcileChildren(current, workInProgress, workInProgress.pendingProps.children, renderLanes), workInProgress.child;
      case 10:
        return elementType = workInProgress.pendingProps, pushProvider(workInProgress, workInProgress.type, elementType.value), reconcileChildren(current, workInProgress, elementType.children, renderLanes), workInProgress.child;
      case 9:
        return init = workInProgress.type._context, elementType = workInProgress.pendingProps.children, prepareToReadContext(workInProgress), init = readContext(init), elementType = elementType(init), workInProgress.flags |= 1, reconcileChildren(current, workInProgress, elementType, renderLanes), workInProgress.child;
      case 14:
        return updateMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
      case 15:
        return updateSimpleMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
      case 17:
        return elementType = workInProgress.type, init = resolveClassComponentProps(elementType, workInProgress.pendingProps), resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress), workInProgress.tag = 1, prepareToReadContext(workInProgress), constructClassInstance(workInProgress, elementType, init), mountClassInstance(workInProgress, elementType, init, renderLanes), finishClassComponent(null, workInProgress, elementType, true, false, renderLanes);
      case 28:
        return elementType = workInProgress.type, init = resolveClassComponentProps(elementType, workInProgress.pendingProps), resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress), workInProgress.tag = 0, updateFunctionComponent(null, workInProgress, elementType, init, renderLanes);
      case 19:
        return updateSuspenseListComponent(current, workInProgress, renderLanes);
      case 22:
        return updateOffscreenComponent(current, workInProgress, renderLanes);
      case 24:
        return prepareToReadContext(workInProgress), elementType = readContext(CacheContext), null === current ? (init = peekCacheFromPool(), null === init && (init = workInProgressRoot, nextProps = createCache(), init.pooledCache = nextProps, nextProps.refCount++, null !== nextProps && (init.pooledCacheLanes |= renderLanes), init = nextProps), workInProgress.memoizedState = {
          parent: elementType,
          cache: init
        }, initializeUpdateQueue(workInProgress), pushProvider(workInProgress, CacheContext, init)) : (0 !== (current.lanes & renderLanes) && (cloneUpdateQueue(current, workInProgress), processUpdateQueue(workInProgress, null, null, renderLanes), suspendIfUpdateReadFromEntangledAsyncAction()), init = current.memoizedState, nextProps = workInProgress.memoizedState, init.parent !== elementType ? (init = {
          parent: elementType,
          cache: elementType
        }, workInProgress.memoizedState = init, 0 === workInProgress.lanes && (workInProgress.memoizedState = workInProgress.updateQueue.baseState = init), pushProvider(workInProgress, CacheContext, elementType)) : (elementType = nextProps.cache, pushProvider(workInProgress, CacheContext, elementType), elementType !== init.cache && propagateContextChanges(workInProgress, [CacheContext], renderLanes, true))), reconcileChildren(current, workInProgress, workInProgress.pendingProps.children, renderLanes), workInProgress.child;
      case 29:
        throw workInProgress.pendingProps;
    }
    throw Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in React. Please file an issue.");
  }
  var valueCursor = createCursor(null),
    currentlyRenderingFiber = null,
    lastContextDependency = null;
  function pushProvider(providerFiber, context, nextValue) {
    push(valueCursor, context._currentValue2);
    context._currentValue2 = nextValue;
  }
  function popProvider(context) {
    context._currentValue2 = valueCursor.current;
    pop(valueCursor);
  }
  function scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {
    for (; null !== parent;) {
      var alternate = parent.alternate;
      (parent.childLanes & renderLanes) !== renderLanes ? (parent.childLanes |= renderLanes, null !== alternate && (alternate.childLanes |= renderLanes)) : null !== alternate && (alternate.childLanes & renderLanes) !== renderLanes && (alternate.childLanes |= renderLanes);
      if (parent === propagationRoot) break;
      parent = parent.return;
    }
  }
  function propagateContextChanges(workInProgress, contexts, renderLanes, forcePropagateEntireTree) {
    var fiber = workInProgress.child;
    null !== fiber && (fiber.return = workInProgress);
    for (; null !== fiber;) {
      var list = fiber.dependencies;
      if (null !== list) {
        var nextFiber = fiber.child;
        list = list.firstContext;
        a: for (; null !== list;) {
          var dependency = list;
          list = fiber;
          for (var i = 0; i < contexts.length; i++) if (dependency.context === contexts[i]) {
            list.lanes |= renderLanes;
            dependency = list.alternate;
            null !== dependency && (dependency.lanes |= renderLanes);
            scheduleContextWorkOnParentPath(list.return, renderLanes, workInProgress);
            forcePropagateEntireTree || (nextFiber = null);
            break a;
          }
          list = dependency.next;
        }
      } else if (18 === fiber.tag) {
        nextFiber = fiber.return;
        if (null === nextFiber) throw Error("We just came from a parent so we must have had a parent. This is a bug in React.");
        nextFiber.lanes |= renderLanes;
        list = nextFiber.alternate;
        null !== list && (list.lanes |= renderLanes);
        scheduleContextWorkOnParentPath(nextFiber, renderLanes, workInProgress);
        nextFiber = null;
      } else nextFiber = fiber.child;
      if (null !== nextFiber) nextFiber.return = fiber;else for (nextFiber = fiber; null !== nextFiber;) {
        if (nextFiber === workInProgress) {
          nextFiber = null;
          break;
        }
        fiber = nextFiber.sibling;
        if (null !== fiber) {
          fiber.return = nextFiber.return;
          nextFiber = fiber;
          break;
        }
        nextFiber = nextFiber.return;
      }
      fiber = nextFiber;
    }
  }
  function propagateParentContextChanges(current, workInProgress, renderLanes, forcePropagateEntireTree) {
    current = null;
    for (var parent = workInProgress, isInsidePropagationBailout = false; null !== parent;) {
      if (!isInsidePropagationBailout) if (0 !== (parent.flags & 524288)) isInsidePropagationBailout = true;else if (0 !== (parent.flags & 262144)) break;
      if (10 === parent.tag) {
        var currentParent = parent.alternate;
        if (null === currentParent) throw Error("Should have a current fiber. This is a bug in React.");
        currentParent = currentParent.memoizedProps;
        if (null !== currentParent) {
          var context = parent.type;
          objectIs(parent.pendingProps.value, currentParent.value) || (null !== current ? current.push(context) : current = [context]);
        }
      } else if (parent === hostTransitionProviderCursor.current) {
        currentParent = parent.alternate;
        if (null === currentParent) throw Error("Should have a current fiber. This is a bug in React.");
        currentParent.memoizedState.memoizedState !== parent.memoizedState.memoizedState && (null !== current ? current.push(HostTransitionContext) : current = [HostTransitionContext]);
      }
      parent = parent.return;
    }
    null !== current && propagateContextChanges(workInProgress, current, renderLanes, forcePropagateEntireTree);
    workInProgress.flags |= 262144;
  }
  function checkIfContextChanged(currentDependencies) {
    for (currentDependencies = currentDependencies.firstContext; null !== currentDependencies;) {
      if (!objectIs(currentDependencies.context._currentValue2, currentDependencies.memoizedValue)) return true;
      currentDependencies = currentDependencies.next;
    }
    return false;
  }
  function prepareToReadContext(workInProgress) {
    currentlyRenderingFiber = workInProgress;
    lastContextDependency = null;
    workInProgress = workInProgress.dependencies;
    null !== workInProgress && (workInProgress.firstContext = null);
  }
  function readContext(context) {
    return readContextForConsumer(currentlyRenderingFiber, context);
  }
  function readContextDuringReconciliation(consumer, context) {
    null === currentlyRenderingFiber && prepareToReadContext(consumer);
    return readContextForConsumer(consumer, context);
  }
  function readContextForConsumer(consumer, context) {
    var value = context._currentValue2;
    context = {
      context: context,
      memoizedValue: value,
      next: null
    };
    if (null === lastContextDependency) {
      if (null === consumer) throw Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
      lastContextDependency = context;
      consumer.dependencies = {
        lanes: 0,
        firstContext: context
      };
      consumer.flags |= 524288;
    } else lastContextDependency = lastContextDependency.next = context;
    return value;
  }
  var AbortControllerLocal = "undefined" !== typeof AbortController ? AbortController : function () {
      var listeners = [],
        signal = this.signal = {
          aborted: false,
          addEventListener: function addEventListener(type, listener) {
            listeners.push(listener);
          }
        };
      this.abort = function () {
        signal.aborted = true;
        listeners.forEach(function (listener) {
          return listener();
        });
      };
    },
    CacheContext = {
      $$typeof: REACT_CONTEXT_TYPE,
      Consumer: null,
      Provider: null,
      _currentValue: null,
      _currentValue2: null,
      _threadCount: 0
    };
  function createCache() {
    return {
      controller: new AbortControllerLocal(),
      data: new Map(),
      refCount: 0
    };
  }
  function releaseCache(cache) {
    cache.refCount--;
    0 === cache.refCount && _$$_REQUIRE(_dependencyMap[3]).unstable_scheduleCallback(_$$_REQUIRE(_dependencyMap[3]).unstable_NormalPriority, function () {
      cache.controller.abort();
    });
  }
  var prevOnStartTransitionFinish = ReactSharedInternals.S;
  ReactSharedInternals.S = function (transition, returnValue) {
    "object" === typeof returnValue && null !== returnValue && "function" === typeof returnValue.then && entangleAsyncAction(transition, returnValue);
    null !== prevOnStartTransitionFinish && prevOnStartTransitionFinish(transition, returnValue);
  };
  var resumedCache = createCursor(null);
  function peekCacheFromPool() {
    var cacheResumedFromPreviousRender = resumedCache.current;
    return null !== cacheResumedFromPreviousRender ? cacheResumedFromPreviousRender : workInProgressRoot.pooledCache;
  }
  function pushTransition(offscreenWorkInProgress, prevCachePool) {
    null === prevCachePool ? push(resumedCache, resumedCache.current) : push(resumedCache, prevCachePool.pool);
  }
  function getSuspendedCache() {
    var cacheFromPool = peekCacheFromPool();
    return null === cacheFromPool ? null : {
      parent: CacheContext._currentValue2,
      pool: cacheFromPool
    };
  }
  function doesRequireClone(current, completedWork) {
    if (null !== current && current.child === completedWork.child) return false;
    if (0 !== (completedWork.flags & 16)) return true;
    for (current = completedWork.child; null !== current;) {
      if (0 !== (current.flags & 13878) || 0 !== (current.subtreeFlags & 13878)) return true;
      current = current.sibling;
    }
    return false;
  }
  function appendAllChildren(parent, workInProgress, needsVisibilityToggle, isHidden) {
    for (var node = workInProgress.child; null !== node;) {
      if (5 === node.tag) {
        var instance = node.stateNode;
        needsVisibilityToggle && isHidden && (instance = cloneHiddenInstance(instance));
        appendChildNode(parent.node, instance.node);
      } else if (6 === node.tag) {
        instance = node.stateNode;
        if (needsVisibilityToggle && isHidden) throw Error("Not yet implemented.");
        appendChildNode(parent.node, instance.node);
      } else if (4 !== node.tag) if (22 === node.tag && null !== node.memoizedState) instance = node.child, null !== instance && (instance.return = node), appendAllChildren(parent, node, true, true);else if (null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }
      if (node === workInProgress) break;
      for (; null === node.sibling;) {
        if (null === node.return || node.return === workInProgress) return;
        node = node.return;
      }
      node.sibling.return = node.return;
      node = node.sibling;
    }
  }
  function appendAllChildrenToContainer(containerChildSet, workInProgress, needsVisibilityToggle, isHidden) {
    for (var node = workInProgress.child; null !== node;) {
      if (5 === node.tag) {
        var instance = node.stateNode;
        needsVisibilityToggle && isHidden && (instance = cloneHiddenInstance(instance));
        appendChildNodeToSet(containerChildSet, instance.node);
      } else if (6 === node.tag) {
        instance = node.stateNode;
        if (needsVisibilityToggle && isHidden) throw Error("Not yet implemented.");
        appendChildNodeToSet(containerChildSet, instance.node);
      } else if (4 !== node.tag) if (22 === node.tag && null !== node.memoizedState) instance = node.child, null !== instance && (instance.return = node), appendAllChildrenToContainer(containerChildSet, node, !(null !== node.memoizedProps && "manual" === node.memoizedProps.mode), true);else if (null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }
      if (node === workInProgress) break;
      for (; null === node.sibling;) {
        if (null === node.return || node.return === workInProgress) return;
        node = node.return;
      }
      node.sibling.return = node.return;
      node = node.sibling;
    }
  }
  function updateHostContainer(current, workInProgress) {
    if (doesRequireClone(current, workInProgress)) {
      current = workInProgress.stateNode;
      var container = current.containerInfo,
        newChildSet = createChildNodeSet();
      appendAllChildrenToContainer(newChildSet, workInProgress, false, false);
      current.pendingChildren = newChildSet;
      workInProgress.flags |= 4;
      completeRoot(container, newChildSet);
    }
  }
  function scheduleRetryEffect(workInProgress, retryQueue) {
    null !== retryQueue && (workInProgress.flags |= 4);
    workInProgress.flags & 16384 && (retryQueue = 22 !== workInProgress.tag ? claimNextRetryLane() : 536870912, workInProgress.lanes |= retryQueue, workInProgressSuspendedRetryLanes |= retryQueue);
  }
  function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
    switch (renderState.tailMode) {
      case "hidden":
        hasRenderedATailFallback = renderState.tail;
        for (var lastTailNode = null; null !== hasRenderedATailFallback;) null !== hasRenderedATailFallback.alternate && (lastTailNode = hasRenderedATailFallback), hasRenderedATailFallback = hasRenderedATailFallback.sibling;
        null === lastTailNode ? renderState.tail = null : lastTailNode.sibling = null;
        break;
      case "collapsed":
        lastTailNode = renderState.tail;
        for (var lastTailNode$92 = null; null !== lastTailNode;) null !== lastTailNode.alternate && (lastTailNode$92 = lastTailNode), lastTailNode = lastTailNode.sibling;
        null === lastTailNode$92 ? hasRenderedATailFallback || null === renderState.tail ? renderState.tail = null : renderState.tail.sibling = null : lastTailNode$92.sibling = null;
    }
  }
  function bubbleProperties(completedWork) {
    var didBailout = null !== completedWork.alternate && completedWork.alternate.child === completedWork.child,
      newChildLanes = 0,
      subtreeFlags = 0;
    if (didBailout) for (var child$93 = completedWork.child; null !== child$93;) newChildLanes |= child$93.lanes | child$93.childLanes, subtreeFlags |= child$93.subtreeFlags & 31457280, subtreeFlags |= child$93.flags & 31457280, child$93.return = completedWork, child$93 = child$93.sibling;else for (child$93 = completedWork.child; null !== child$93;) newChildLanes |= child$93.lanes | child$93.childLanes, subtreeFlags |= child$93.subtreeFlags, subtreeFlags |= child$93.flags, child$93.return = completedWork, child$93 = child$93.sibling;
    completedWork.subtreeFlags |= subtreeFlags;
    completedWork.childLanes = newChildLanes;
    return didBailout;
  }
  function completeWork(current, workInProgress, renderLanes) {
    var newProps = workInProgress.pendingProps;
    switch (workInProgress.tag) {
      case 28:
      case 16:
      case 15:
      case 0:
      case 11:
      case 7:
      case 8:
      case 12:
      case 9:
      case 14:
        return bubbleProperties(workInProgress), null;
      case 1:
        return bubbleProperties(workInProgress), null;
      case 3:
        return newProps = workInProgress.stateNode, renderLanes = null, null !== current && (renderLanes = current.memoizedState.cache), workInProgress.memoizedState.cache !== renderLanes && (workInProgress.flags |= 2048), popProvider(CacheContext), popHostContainer(), newProps.pendingContext && (newProps.context = newProps.pendingContext, newProps.pendingContext = null), null !== current && null !== current.child || null === current || current.memoizedState.isDehydrated && 0 === (workInProgress.flags & 256) || (workInProgress.flags |= 1024, null !== hydrationErrors && (queueRecoverableErrors(hydrationErrors), hydrationErrors = null)), updateHostContainer(current, workInProgress), bubbleProperties(workInProgress), null;
      case 26:
      case 27:
      case 5:
        popHostContext(workInProgress);
        renderLanes = workInProgress.type;
        if (null !== current && null != workInProgress.stateNode) {
          renderLanes = current.stateNode;
          var oldProps = current.memoizedProps;
          if ((current = doesRequireClone(current, workInProgress)) || oldProps !== newProps) {
            b: {
              oldProps = diffProperties(null, oldProps, newProps, renderLanes.canonical.viewConfig.validAttributes);
              renderLanes.canonical.currentProps = newProps;
              newProps = renderLanes.node;
              if (current) newProps = null !== oldProps ? cloneNodeWithNewChildrenAndProps(newProps, oldProps) : cloneNodeWithNewChildren(newProps);else if (null !== oldProps) newProps = cloneNodeWithNewProps(newProps, oldProps);else {
                newProps = renderLanes;
                break b;
              }
              newProps = {
                node: newProps,
                canonical: renderLanes.canonical
              };
            }
            newProps === renderLanes ? workInProgress.stateNode = renderLanes : (workInProgress.stateNode = newProps, current ? appendAllChildren(newProps, workInProgress, false, false) : workInProgress.flags |= 4);
          } else workInProgress.stateNode = renderLanes;
        } else {
          if (!newProps) {
            if (null === workInProgress.stateNode) throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
            bubbleProperties(workInProgress);
            return null;
          }
          oldProps = rootInstanceStackCursor.current;
          current = nextReactTag;
          nextReactTag += 2;
          renderLanes = getViewConfigForType(renderLanes);
          var updatePayload = fastAddProperties(null, newProps, renderLanes.validAttributes);
          oldProps = createNode(current, renderLanes.uiViewClassName, oldProps, updatePayload, workInProgress);
          updatePayload = _$$_REQUIRE(_dependencyMap[2]).createPublicInstance(current, renderLanes, workInProgress);
          current = {
            node: oldProps,
            canonical: {
              nativeTag: current,
              viewConfig: renderLanes,
              currentProps: newProps,
              internalInstanceHandle: workInProgress,
              publicInstance: updatePayload
            }
          };
          appendAllChildren(current, workInProgress, false, false);
          workInProgress.stateNode = current;
        }
        bubbleProperties(workInProgress);
        workInProgress.flags &= -16777217;
        return null;
      case 6:
        if (current && null != workInProgress.stateNode) current.memoizedProps !== newProps ? (workInProgress.stateNode = createTextInstance(newProps, rootInstanceStackCursor.current, contextStackCursor.current, workInProgress), workInProgress.flags |= 4) : workInProgress.stateNode = current.stateNode;else {
          if ("string" !== typeof newProps && null === workInProgress.stateNode) throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
          workInProgress.stateNode = createTextInstance(newProps, rootInstanceStackCursor.current, contextStackCursor.current, workInProgress);
        }
        bubbleProperties(workInProgress);
        return null;
      case 13:
        newProps = workInProgress.memoizedState;
        if (null === current || null !== current.memoizedState && null !== current.memoizedState.dehydrated) {
          if (null !== newProps && null !== newProps.dehydrated) {
            if (null === current) {
              throw Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.");
              throw Error("Expected prepareToHydrateHostSuspenseInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.");
            }
            0 === (workInProgress.flags & 128) && (workInProgress.memoizedState = null);
            workInProgress.flags |= 4;
            bubbleProperties(workInProgress);
            oldProps = false;
          } else null !== hydrationErrors && (queueRecoverableErrors(hydrationErrors), hydrationErrors = null), oldProps = true;
          if (!oldProps) {
            if (workInProgress.flags & 256) return popSuspenseHandler(workInProgress), workInProgress;
            popSuspenseHandler(workInProgress);
            return null;
          }
        }
        popSuspenseHandler(workInProgress);
        if (0 !== (workInProgress.flags & 128)) return workInProgress.lanes = renderLanes, workInProgress;
        newProps = null !== newProps;
        current = null !== current && null !== current.memoizedState;
        newProps && (renderLanes = workInProgress.child, oldProps = null, null !== renderLanes.alternate && null !== renderLanes.alternate.memoizedState && null !== renderLanes.alternate.memoizedState.cachePool && (oldProps = renderLanes.alternate.memoizedState.cachePool.pool), updatePayload = null, null !== renderLanes.memoizedState && null !== renderLanes.memoizedState.cachePool && (updatePayload = renderLanes.memoizedState.cachePool.pool), updatePayload !== oldProps && (renderLanes.flags |= 2048));
        newProps !== current && newProps && (workInProgress.child.flags |= 8192);
        scheduleRetryEffect(workInProgress, workInProgress.updateQueue);
        bubbleProperties(workInProgress);
        return null;
      case 4:
        return popHostContainer(), updateHostContainer(current, workInProgress), bubbleProperties(workInProgress), null;
      case 10:
        return popProvider(workInProgress.type), bubbleProperties(workInProgress), null;
      case 17:
        return bubbleProperties(workInProgress), null;
      case 19:
        pop(suspenseStackCursor);
        oldProps = workInProgress.memoizedState;
        if (null === oldProps) return bubbleProperties(workInProgress), null;
        newProps = 0 !== (workInProgress.flags & 128);
        updatePayload = oldProps.rendering;
        if (null === updatePayload) {
          if (newProps) cutOffTailIfNeeded(oldProps, false);else {
            if (0 !== workInProgressRootExitStatus || null !== current && 0 !== (current.flags & 128)) for (current = workInProgress.child; null !== current;) {
              updatePayload = findFirstSuspended(current);
              if (null !== updatePayload) {
                workInProgress.flags |= 128;
                cutOffTailIfNeeded(oldProps, false);
                current = updatePayload.updateQueue;
                workInProgress.updateQueue = current;
                scheduleRetryEffect(workInProgress, current);
                workInProgress.subtreeFlags = 0;
                current = renderLanes;
                for (newProps = workInProgress.child; null !== newProps;) resetWorkInProgress(newProps, current), newProps = newProps.sibling;
                push(suspenseStackCursor, suspenseStackCursor.current & 1 | 2);
                return workInProgress.child;
              }
              current = current.sibling;
            }
            null !== oldProps.tail && _$$_REQUIRE(_dependencyMap[3]).unstable_now() > workInProgressRootRenderTargetTime && (workInProgress.flags |= 128, newProps = true, cutOffTailIfNeeded(oldProps, false), workInProgress.lanes = 4194304);
          }
        } else {
          if (!newProps) if (current = findFirstSuspended(updatePayload), null !== current) {
            if (workInProgress.flags |= 128, newProps = true, current = current.updateQueue, workInProgress.updateQueue = current, scheduleRetryEffect(workInProgress, current), cutOffTailIfNeeded(oldProps, true), null === oldProps.tail && "hidden" === oldProps.tailMode && !updatePayload.alternate) return bubbleProperties(workInProgress), null;
          } else 2 * _$$_REQUIRE(_dependencyMap[3]).unstable_now() - oldProps.renderingStartTime > workInProgressRootRenderTargetTime && 536870912 !== renderLanes && (workInProgress.flags |= 128, newProps = true, cutOffTailIfNeeded(oldProps, false), workInProgress.lanes = 4194304);
          oldProps.isBackwards ? (updatePayload.sibling = workInProgress.child, workInProgress.child = updatePayload) : (current = oldProps.last, null !== current ? current.sibling = updatePayload : workInProgress.child = updatePayload, oldProps.last = updatePayload);
        }
        if (null !== oldProps.tail) return workInProgress = oldProps.tail, oldProps.rendering = workInProgress, oldProps.tail = workInProgress.sibling, oldProps.renderingStartTime = _$$_REQUIRE(_dependencyMap[3]).unstable_now(), workInProgress.sibling = null, current = suspenseStackCursor.current, push(suspenseStackCursor, newProps ? current & 1 | 2 : current & 1), workInProgress;
        bubbleProperties(workInProgress);
        return null;
      case 22:
      case 23:
        return popSuspenseHandler(workInProgress), popHiddenContext(), newProps = null !== workInProgress.memoizedState, null !== current ? null !== current.memoizedState !== newProps && (workInProgress.flags |= 8192) : newProps && (workInProgress.flags |= 8192), newProps && 0 !== (workInProgress.mode & 1) ? 0 !== (renderLanes & 536870912) && 0 === (workInProgress.flags & 128) && (bubbleProperties(workInProgress), workInProgress.subtreeFlags & 6 && (workInProgress.flags |= 8192)) : bubbleProperties(workInProgress), newProps = workInProgress.updateQueue, null !== newProps && scheduleRetryEffect(workInProgress, newProps.retryQueue), newProps = null, null !== current && null !== current.memoizedState && null !== current.memoizedState.cachePool && (newProps = current.memoizedState.cachePool.pool), renderLanes = null, null !== workInProgress.memoizedState && null !== workInProgress.memoizedState.cachePool && (renderLanes = workInProgress.memoizedState.cachePool.pool), renderLanes !== newProps && (workInProgress.flags |= 2048), null !== current && pop(resumedCache), null;
      case 24:
        return newProps = null, null !== current && (newProps = current.memoizedState.cache), workInProgress.memoizedState.cache !== newProps && (workInProgress.flags |= 2048), popProvider(CacheContext), bubbleProperties(workInProgress), null;
      case 25:
        return null;
      case 29:
        return null;
    }
    throw Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in React. Please file an issue.");
  }
  function unwindWork(current, workInProgress) {
    switch (workInProgress.tag) {
      case 1:
        return current = workInProgress.flags, current & 65536 ? (workInProgress.flags = current & -65537 | 128, workInProgress) : null;
      case 3:
        return popProvider(CacheContext), popHostContainer(), current = workInProgress.flags, 0 !== (current & 65536) && 0 === (current & 128) ? (workInProgress.flags = current & -65537 | 128, workInProgress) : null;
      case 26:
      case 27:
      case 5:
        return popHostContext(workInProgress), null;
      case 13:
        popSuspenseHandler(workInProgress);
        current = workInProgress.memoizedState;
        if (null !== current && null !== current.dehydrated && null === workInProgress.alternate) throw Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.");
        current = workInProgress.flags;
        return current & 65536 ? (workInProgress.flags = current & -65537 | 128, workInProgress) : null;
      case 19:
        return pop(suspenseStackCursor), null;
      case 4:
        return popHostContainer(), null;
      case 10:
        return popProvider(workInProgress.type), null;
      case 22:
      case 23:
        return popSuspenseHandler(workInProgress), popHiddenContext(), null !== current && pop(resumedCache), current = workInProgress.flags, current & 65536 ? (workInProgress.flags = current & -65537 | 128, workInProgress) : null;
      case 24:
        return popProvider(CacheContext), null;
      case 25:
        return null;
      default:
        return null;
    }
  }
  function unwindInterruptedWork(current, interruptedWork) {
    switch (interruptedWork.tag) {
      case 3:
        popProvider(CacheContext);
        popHostContainer();
        break;
      case 26:
      case 27:
      case 5:
        popHostContext(interruptedWork);
        break;
      case 4:
        popHostContainer();
        break;
      case 13:
        popSuspenseHandler(interruptedWork);
        break;
      case 19:
        pop(suspenseStackCursor);
        break;
      case 10:
        popProvider(interruptedWork.type);
        break;
      case 22:
      case 23:
        popSuspenseHandler(interruptedWork);
        popHiddenContext();
        null !== current && pop(resumedCache);
        break;
      case 24:
        popProvider(CacheContext);
    }
  }
  function commitHookEffectListMount(flags, finishedWork) {
    try {
      var updateQueue = finishedWork.updateQueue,
        lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;
      if (null !== lastEffect) {
        var firstEffect = lastEffect.next;
        updateQueue = firstEffect;
        do {
          if ((updateQueue.tag & flags) === flags) {
            lastEffect = undefined;
            var create$114 = updateQueue.create,
              inst = updateQueue.inst;
            lastEffect = create$114();
            inst.destroy = lastEffect;
          }
          updateQueue = updateQueue.next;
        } while (updateQueue !== firstEffect);
      }
    } catch (error) {
      captureCommitPhaseError(finishedWork, finishedWork.return, error);
    }
  }
  function commitHookEffectListUnmount(flags, finishedWork, nearestMountedAncestor$jscomp$0) {
    try {
      var updateQueue = finishedWork.updateQueue,
        lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;
      if (null !== lastEffect) {
        var firstEffect = lastEffect.next;
        updateQueue = firstEffect;
        do {
          if ((updateQueue.tag & flags) === flags) {
            var inst = updateQueue.inst,
              destroy = inst.destroy;
            if (undefined !== destroy) {
              inst.destroy = undefined;
              lastEffect = finishedWork;
              var nearestMountedAncestor = nearestMountedAncestor$jscomp$0;
              try {
                destroy();
              } catch (error) {
                captureCommitPhaseError(lastEffect, nearestMountedAncestor, error);
              }
            }
          }
          updateQueue = updateQueue.next;
        } while (updateQueue !== firstEffect);
      }
    } catch (error) {
      captureCommitPhaseError(finishedWork, finishedWork.return, error);
    }
  }
  function commitClassCallbacks(finishedWork) {
    var updateQueue = finishedWork.updateQueue;
    if (null !== updateQueue) {
      var instance = finishedWork.stateNode;
      try {
        commitCallbacks(updateQueue, instance);
      } catch (error) {
        captureCommitPhaseError(finishedWork, finishedWork.return, error);
      }
    }
  }
  function safelyCallComponentWillUnmount(current, nearestMountedAncestor, instance) {
    instance.props = resolveClassComponentProps(current.type, current.memoizedProps);
    instance.state = current.memoizedState;
    try {
      instance.componentWillUnmount();
    } catch (error) {
      captureCommitPhaseError(current, nearestMountedAncestor, error);
    }
  }
  function safelyAttachRef(current, nearestMountedAncestor) {
    try {
      var ref = current.ref;
      if (null !== ref) {
        var instance = current.stateNode;
        switch (current.tag) {
          case 26:
          case 27:
          case 5:
            var instanceToUse = getPublicInstance(instance);
            break;
          default:
            instanceToUse = instance;
        }
        "function" === typeof ref ? current.refCleanup = ref(instanceToUse) : ref.current = instanceToUse;
      }
    } catch (error) {
      captureCommitPhaseError(current, nearestMountedAncestor, error);
    }
  }
  function safelyDetachRef(current, nearestMountedAncestor) {
    var ref = current.ref,
      refCleanup = current.refCleanup;
    if (null !== ref) if ("function" === typeof refCleanup) try {
      refCleanup();
    } catch (error) {
      captureCommitPhaseError(current, nearestMountedAncestor, error);
    } finally {
      current.refCleanup = null, current = current.alternate, null != current && (current.refCleanup = null);
    } else if ("function" === typeof ref) try {
      ref(null);
    } catch (error$116) {
      captureCommitPhaseError(current, nearestMountedAncestor, error$116);
    } else ref.current = null;
  }
  function commitHostMount(finishedWork) {
    try {
      throw Error("The current renderer does not support mutation. This error is likely caused by a bug in React. Please file an issue.");
    } catch (error) {
      captureCommitPhaseError(finishedWork, finishedWork.return, error);
    }
  }
  var offscreenSubtreeIsHidden = false,
    offscreenSubtreeWasHidden = false,
    PossiblyWeakSet = "function" === typeof WeakSet ? WeakSet : Set,
    nextEffect = null,
    shouldFireAfterActiveInstanceBlur = false;
  function commitBeforeMutationEffects(root, firstChild) {
    for (nextEffect = firstChild; null !== nextEffect;) if (root = nextEffect, firstChild = root.child, 0 !== (root.subtreeFlags & 1028) && null !== firstChild) firstChild.return = root, nextEffect = firstChild;else for (; null !== nextEffect;) {
      root = nextEffect;
      var current = root.alternate;
      firstChild = root.flags;
      switch (root.tag) {
        case 0:
          break;
        case 11:
        case 15:
          break;
        case 1:
          if (0 !== (firstChild & 1024) && null !== current) {
            firstChild = undefined;
            var finishedWork = root,
              prevProps = current.memoizedProps;
            current = current.memoizedState;
            var instance = finishedWork.stateNode;
            try {
              var resolvedPrevProps = resolveClassComponentProps(finishedWork.type, prevProps, finishedWork.elementType === finishedWork.type);
              firstChild = instance.getSnapshotBeforeUpdate(resolvedPrevProps, current);
              instance.__reactInternalSnapshotBeforeUpdate = firstChild;
            } catch (error) {
              captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
          }
          break;
        case 3:
          break;
        case 5:
        case 26:
        case 27:
        case 6:
        case 4:
        case 17:
          break;
        default:
          if (0 !== (firstChild & 1024)) throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
      }
      firstChild = root.sibling;
      if (null !== firstChild) {
        firstChild.return = root.return;
        nextEffect = firstChild;
        break;
      }
      nextEffect = root.return;
    }
    resolvedPrevProps = shouldFireAfterActiveInstanceBlur;
    shouldFireAfterActiveInstanceBlur = false;
    return resolvedPrevProps;
  }
  function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork) {
    var flags = finishedWork.flags;
    switch (finishedWork.tag) {
      case 0:
      case 11:
      case 15:
        recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
        flags & 4 && commitHookEffectListMount(5, finishedWork);
        break;
      case 1:
        recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
        if (flags & 4) if (finishedRoot = finishedWork.stateNode, null === current) try {
          finishedRoot.componentDidMount();
        } catch (error) {
          captureCommitPhaseError(finishedWork, finishedWork.return, error);
        } else {
          var prevProps = resolveClassComponentProps(finishedWork.type, current.memoizedProps);
          current = current.memoizedState;
          try {
            finishedRoot.componentDidUpdate(prevProps, current, finishedRoot.__reactInternalSnapshotBeforeUpdate);
          } catch (error$115) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error$115);
          }
        }
        flags & 64 && commitClassCallbacks(finishedWork);
        flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);
        break;
      case 3:
        recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
        if (flags & 64 && (flags = finishedWork.updateQueue, null !== flags)) {
          finishedRoot = null;
          if (null !== finishedWork.child) switch (finishedWork.child.tag) {
            case 27:
            case 5:
              finishedRoot = getPublicInstance(finishedWork.child.stateNode);
              break;
            case 1:
              finishedRoot = finishedWork.child.stateNode;
          }
          try {
            commitCallbacks(flags, finishedRoot);
          } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
          }
        }
        break;
      case 26:
      case 27:
      case 5:
        recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
        null === current && flags & 4 && commitHostMount(finishedWork);
        flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);
        break;
      case 12:
        recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
        break;
      case 13:
        recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
        break;
      case 22:
        if (0 !== (finishedWork.mode & 1)) {
          if (prevProps = null !== finishedWork.memoizedState || offscreenSubtreeIsHidden, !prevProps) {
            current = null !== current && null !== current.memoizedState || offscreenSubtreeWasHidden;
            var prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden,
              prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
            offscreenSubtreeIsHidden = prevProps;
            (offscreenSubtreeWasHidden = current) && !prevOffscreenSubtreeWasHidden ? recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, 0 !== (finishedWork.subtreeFlags & 8772)) : recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
            offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;
            offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
          }
        } else recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
        flags & 512 && ("manual" === finishedWork.memoizedProps.mode ? safelyAttachRef(finishedWork, finishedWork.return) : safelyDetachRef(finishedWork, finishedWork.return));
        break;
      default:
        recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
    }
  }
  function detachFiberAfterEffects(fiber) {
    var alternate = fiber.alternate;
    null !== alternate && (fiber.alternate = null, detachFiberAfterEffects(alternate));
    fiber.child = null;
    fiber.deletions = null;
    fiber.sibling = null;
    fiber.stateNode = null;
    fiber.return = null;
    fiber.dependencies = null;
    fiber.memoizedProps = null;
    fiber.memoizedState = null;
    fiber.pendingProps = null;
    fiber.stateNode = null;
    fiber.updateQueue = null;
  }
  function recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, parent) {
    for (parent = parent.child; null !== parent;) commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, parent), parent = parent.sibling;
  }
  function commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, deletedFiber) {
    if (injectedHook && "function" === typeof injectedHook.onCommitFiberUnmount) try {
      injectedHook.onCommitFiberUnmount(rendererID, deletedFiber);
    } catch (err) {}
    switch (deletedFiber.tag) {
      case 26:
      case 27:
      case 5:
        offscreenSubtreeWasHidden || safelyDetachRef(deletedFiber, nearestMountedAncestor);
      case 6:
        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
        break;
      case 18:
        break;
      case 4:
        createChildNodeSet();
        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
        break;
      case 0:
      case 11:
      case 14:
      case 15:
        offscreenSubtreeWasHidden || commitHookEffectListUnmount(2, deletedFiber, nearestMountedAncestor);
        offscreenSubtreeWasHidden || commitHookEffectListUnmount(4, deletedFiber, nearestMountedAncestor);
        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
        break;
      case 1:
        if (!offscreenSubtreeWasHidden) {
          safelyDetachRef(deletedFiber, nearestMountedAncestor);
          var instance = deletedFiber.stateNode;
          "function" === typeof instance.componentWillUnmount && safelyCallComponentWillUnmount(deletedFiber, nearestMountedAncestor, instance);
        }
        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
        break;
      case 21:
        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
        break;
      case 22:
        offscreenSubtreeWasHidden || safelyDetachRef(deletedFiber, nearestMountedAncestor);
        deletedFiber.mode & 1 ? (offscreenSubtreeWasHidden = (instance = offscreenSubtreeWasHidden) || null !== deletedFiber.memoizedState, recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber), offscreenSubtreeWasHidden = instance) : recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
        break;
      default:
        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
    }
  }
  function getRetryCache(finishedWork) {
    switch (finishedWork.tag) {
      case 13:
      case 19:
        var retryCache = finishedWork.stateNode;
        null === retryCache && (retryCache = finishedWork.stateNode = new PossiblyWeakSet());
        return retryCache;
      case 22:
        return finishedWork = finishedWork.stateNode, retryCache = finishedWork._retryCache, null === retryCache && (retryCache = finishedWork._retryCache = new PossiblyWeakSet()), retryCache;
      default:
        throw Error("Unexpected Suspense handler tag (" + finishedWork.tag + "). This is a bug in React.");
    }
  }
  function attachSuspenseRetryListeners(finishedWork, wakeables) {
    var retryCache = getRetryCache(finishedWork);
    wakeables.forEach(function (wakeable) {
      var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);
      retryCache.has(wakeable) || (retryCache.add(wakeable), wakeable.then(retry, retry));
    });
  }
  function recursivelyTraverseMutationEffects(root, parentFiber) {
    var deletions = parentFiber.deletions;
    if (null !== deletions) for (var i = 0; i < deletions.length; i++) {
      var childToDelete = deletions[i];
      commitDeletionEffectsOnFiber(root, parentFiber, childToDelete);
      var alternate = childToDelete.alternate;
      null !== alternate && (alternate.return = null);
      childToDelete.return = null;
    }
    if (parentFiber.subtreeFlags & 13878) for (parentFiber = parentFiber.child; null !== parentFiber;) commitMutationEffectsOnFiber(parentFiber, root), parentFiber = parentFiber.sibling;
  }
  function commitMutationEffectsOnFiber(finishedWork, root) {
    var current = finishedWork.alternate,
      flags = finishedWork.flags;
    switch (finishedWork.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);
        flags & 4 && (commitHookEffectListUnmount(3, finishedWork, finishedWork.return), commitHookEffectListMount(3, finishedWork), commitHookEffectListUnmount(5, finishedWork, finishedWork.return));
        break;
      case 1:
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);
        flags & 512 && (offscreenSubtreeWasHidden || null === current || safelyDetachRef(current, current.return));
        flags & 64 && offscreenSubtreeIsHidden && (finishedWork = finishedWork.updateQueue, null !== finishedWork && (flags = finishedWork.callbacks, null !== flags && (current = finishedWork.shared.hiddenCallbacks, finishedWork.shared.hiddenCallbacks = null === current ? flags : current.concat(flags))));
        break;
      case 26:
      case 27:
      case 5:
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);
        flags & 512 && (offscreenSubtreeWasHidden || null === current || safelyDetachRef(current, current.return));
        break;
      case 6:
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);
        break;
      case 3:
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);
        break;
      case 4:
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);
        break;
      case 12:
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);
        break;
      case 13:
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);
        finishedWork.child.flags & 8192 && (current = null !== current && null !== current.memoizedState, null === finishedWork.memoizedState || current || (globalMostRecentFallbackTime = _$$_REQUIRE(_dependencyMap[3]).unstable_now()));
        flags & 4 && (flags = finishedWork.updateQueue, null !== flags && (finishedWork.updateQueue = null, attachSuspenseRetryListeners(finishedWork, flags)));
        break;
      case 22:
        flags & 512 && (offscreenSubtreeWasHidden || null === current || safelyDetachRef(current, current.return));
        var isHidden = null !== finishedWork.memoizedState,
          wasHidden = null !== current && null !== current.memoizedState;
        if (finishedWork.mode & 1) {
          var prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden,
            prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
          offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden || isHidden;
          offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || wasHidden;
          recursivelyTraverseMutationEffects(root, finishedWork);
          offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
          offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;
        } else recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);
        root = finishedWork.stateNode;
        root._current = finishedWork;
        root._visibility &= -3;
        root._visibility |= root._pendingVisibility & 2;
        flags & 8192 && (root._visibility = isHidden ? root._visibility & -2 : root._visibility | 1, isHidden && (isHidden = offscreenSubtreeIsHidden || offscreenSubtreeWasHidden, null === current || wasHidden || isHidden || 0 !== (finishedWork.mode & 1) && recursivelyTraverseDisappearLayoutEffects(finishedWork)));
        flags & 4 && (flags = finishedWork.updateQueue, null !== flags && (current = flags.retryQueue, null !== current && (flags.retryQueue = null, attachSuspenseRetryListeners(finishedWork, current))));
        break;
      case 19:
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);
        flags & 4 && (flags = finishedWork.updateQueue, null !== flags && (finishedWork.updateQueue = null, attachSuspenseRetryListeners(finishedWork, flags)));
        break;
      case 21:
        break;
      default:
        recursivelyTraverseMutationEffects(root, finishedWork), commitReconciliationEffects(finishedWork);
    }
  }
  function commitReconciliationEffects(finishedWork) {
    var flags = finishedWork.flags;
    flags & 2 && (finishedWork.flags &= -3);
    flags & 4096 && (finishedWork.flags &= -4097);
  }
  function recursivelyTraverseLayoutEffects(root, parentFiber) {
    if (parentFiber.subtreeFlags & 8772) for (parentFiber = parentFiber.child; null !== parentFiber;) commitLayoutEffectOnFiber(root, parentFiber.alternate, parentFiber), parentFiber = parentFiber.sibling;
  }
  function recursivelyTraverseDisappearLayoutEffects(parentFiber) {
    for (parentFiber = parentFiber.child; null !== parentFiber;) {
      var finishedWork = parentFiber;
      switch (finishedWork.tag) {
        case 0:
        case 11:
        case 14:
        case 15:
          commitHookEffectListUnmount(4, finishedWork, finishedWork.return);
          recursivelyTraverseDisappearLayoutEffects(finishedWork);
          break;
        case 1:
          safelyDetachRef(finishedWork, finishedWork.return);
          var instance = finishedWork.stateNode;
          "function" === typeof instance.componentWillUnmount && safelyCallComponentWillUnmount(finishedWork, finishedWork.return, instance);
          recursivelyTraverseDisappearLayoutEffects(finishedWork);
          break;
        case 26:
        case 27:
        case 5:
          safelyDetachRef(finishedWork, finishedWork.return);
          recursivelyTraverseDisappearLayoutEffects(finishedWork);
          break;
        case 22:
          safelyDetachRef(finishedWork, finishedWork.return);
          null === finishedWork.memoizedState && recursivelyTraverseDisappearLayoutEffects(finishedWork);
          break;
        default:
          recursivelyTraverseDisappearLayoutEffects(finishedWork);
      }
      parentFiber = parentFiber.sibling;
    }
  }
  function recursivelyTraverseReappearLayoutEffects(finishedRoot$jscomp$0, parentFiber, includeWorkInProgressEffects) {
    includeWorkInProgressEffects = includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 8772);
    for (parentFiber = parentFiber.child; null !== parentFiber;) {
      var current = parentFiber.alternate,
        finishedRoot = finishedRoot$jscomp$0,
        finishedWork = parentFiber,
        flags = finishedWork.flags;
      switch (finishedWork.tag) {
        case 0:
        case 11:
        case 15:
          recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
          commitHookEffectListMount(4, finishedWork);
          break;
        case 1:
          recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
          current = finishedWork;
          finishedRoot = current.stateNode;
          if ("function" === typeof finishedRoot.componentDidMount) try {
            finishedRoot.componentDidMount();
          } catch (error) {
            captureCommitPhaseError(current, current.return, error);
          }
          current = finishedWork;
          finishedRoot = current.updateQueue;
          if (null !== finishedRoot) {
            var instance = current.stateNode;
            try {
              var hiddenCallbacks = finishedRoot.shared.hiddenCallbacks;
              if (null !== hiddenCallbacks) for (finishedRoot.shared.hiddenCallbacks = null, finishedRoot = 0; finishedRoot < hiddenCallbacks.length; finishedRoot++) callCallback(hiddenCallbacks[finishedRoot], instance);
            } catch (error) {
              captureCommitPhaseError(current, current.return, error);
            }
          }
          includeWorkInProgressEffects && flags & 64 && commitClassCallbacks(finishedWork);
          safelyAttachRef(finishedWork, finishedWork.return);
          break;
        case 26:
        case 27:
        case 5:
          recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
          includeWorkInProgressEffects && null === current && flags & 4 && commitHostMount(finishedWork);
          safelyAttachRef(finishedWork, finishedWork.return);
          break;
        case 12:
          recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
          break;
        case 13:
          recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
          break;
        case 22:
          null === finishedWork.memoizedState && recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
          safelyAttachRef(finishedWork, finishedWork.return);
          break;
        default:
          recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
      }
      parentFiber = parentFiber.sibling;
    }
  }
  function commitOffscreenPassiveMountEffects(current, finishedWork) {
    var previousCache = null;
    null !== current && null !== current.memoizedState && null !== current.memoizedState.cachePool && (previousCache = current.memoizedState.cachePool.pool);
    current = null;
    null !== finishedWork.memoizedState && null !== finishedWork.memoizedState.cachePool && (current = finishedWork.memoizedState.cachePool.pool);
    current !== previousCache && (null != current && current.refCount++, null != previousCache && releaseCache(previousCache));
  }
  function commitCachePassiveMountEffect(current, finishedWork) {
    current = null;
    null !== finishedWork.alternate && (current = finishedWork.alternate.memoizedState.cache);
    finishedWork = finishedWork.memoizedState.cache;
    finishedWork !== current && (finishedWork.refCount++, null != current && releaseCache(current));
  }
  function recursivelyTraversePassiveMountEffects(root, parentFiber, committedLanes, committedTransitions) {
    if (parentFiber.subtreeFlags & 10256) for (parentFiber = parentFiber.child; null !== parentFiber;) commitPassiveMountOnFiber(root, parentFiber, committedLanes, committedTransitions), parentFiber = parentFiber.sibling;
  }
  function commitPassiveMountOnFiber(finishedRoot, finishedWork, committedLanes, committedTransitions) {
    var flags = finishedWork.flags;
    switch (finishedWork.tag) {
      case 0:
      case 11:
      case 15:
        recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
        flags & 2048 && commitHookEffectListMount(9, finishedWork);
        break;
      case 3:
        recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
        flags & 2048 && (finishedRoot = null, null !== finishedWork.alternate && (finishedRoot = finishedWork.alternate.memoizedState.cache), finishedWork = finishedWork.memoizedState.cache, finishedWork !== finishedRoot && (finishedWork.refCount++, null != finishedRoot && releaseCache(finishedRoot)));
        break;
      case 12:
        if (flags & 2048) {
          recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
          finishedRoot = finishedWork.stateNode;
          try {
            var _finishedWork$memoize2 = finishedWork.memoizedProps,
              id = _finishedWork$memoize2.id,
              onPostCommit = _finishedWork$memoize2.onPostCommit;
            "function" === typeof onPostCommit && onPostCommit(id, null === finishedWork.alternate ? "mount" : "update", finishedRoot.passiveEffectDuration, -0);
          } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
          }
        } else recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
        break;
      case 23:
        break;
      case 22:
        _finishedWork$memoize2 = finishedWork.stateNode;
        null !== finishedWork.memoizedState ? _finishedWork$memoize2._visibility & 4 ? recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions) : finishedWork.mode & 1 ? recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork) : (_finishedWork$memoize2._visibility |= 4, recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions)) : _finishedWork$memoize2._visibility & 4 ? recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions) : (_finishedWork$memoize2._visibility |= 4, recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, 0 !== (finishedWork.subtreeFlags & 10256)));
        flags & 2048 && commitOffscreenPassiveMountEffects(finishedWork.alternate, finishedWork);
        break;
      case 24:
        recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
        flags & 2048 && commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);
        break;
      default:
        recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
    }
  }
  function recursivelyTraverseReconnectPassiveEffects(finishedRoot$jscomp$0, parentFiber, committedLanes$jscomp$0, committedTransitions$jscomp$0, includeWorkInProgressEffects) {
    includeWorkInProgressEffects = includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 10256);
    for (parentFiber = parentFiber.child; null !== parentFiber;) {
      var finishedRoot = finishedRoot$jscomp$0,
        finishedWork = parentFiber,
        committedLanes = committedLanes$jscomp$0,
        committedTransitions = committedTransitions$jscomp$0,
        flags = finishedWork.flags;
      switch (finishedWork.tag) {
        case 0:
        case 11:
        case 15:
          recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects);
          commitHookEffectListMount(8, finishedWork);
          break;
        case 23:
          break;
        case 22:
          var instance = finishedWork.stateNode;
          null !== finishedWork.memoizedState ? instance._visibility & 4 ? recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects) : finishedWork.mode & 1 ? recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork) : (instance._visibility |= 4, recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects)) : (instance._visibility |= 4, recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects));
          includeWorkInProgressEffects && flags & 2048 && commitOffscreenPassiveMountEffects(finishedWork.alternate, finishedWork);
          break;
        case 24:
          recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects);
          includeWorkInProgressEffects && flags & 2048 && commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);
          break;
        default:
          recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects);
      }
      parentFiber = parentFiber.sibling;
    }
  }
  function recursivelyTraverseAtomicPassiveEffects(finishedRoot$jscomp$0, parentFiber) {
    if (parentFiber.subtreeFlags & 10256) for (parentFiber = parentFiber.child; null !== parentFiber;) {
      var finishedRoot = finishedRoot$jscomp$0,
        finishedWork = parentFiber,
        flags = finishedWork.flags;
      switch (finishedWork.tag) {
        case 22:
          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);
          flags & 2048 && commitOffscreenPassiveMountEffects(finishedWork.alternate, finishedWork);
          break;
        case 24:
          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);
          flags & 2048 && commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);
          break;
        default:
          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);
      }
      parentFiber = parentFiber.sibling;
    }
  }
  var suspenseyCommitFlag = 8192;
  function recursivelyAccumulateSuspenseyCommit(parentFiber) {
    if (parentFiber.subtreeFlags & suspenseyCommitFlag) for (parentFiber = parentFiber.child; null !== parentFiber;) accumulateSuspenseyCommitOnFiber(parentFiber), parentFiber = parentFiber.sibling;
  }
  function accumulateSuspenseyCommitOnFiber(fiber) {
    switch (fiber.tag) {
      case 26:
        recursivelyAccumulateSuspenseyCommit(fiber);
        fiber.flags & suspenseyCommitFlag && null !== fiber.memoizedState && shim();
        break;
      case 5:
        recursivelyAccumulateSuspenseyCommit(fiber);
        break;
      case 3:
      case 4:
        recursivelyAccumulateSuspenseyCommit(fiber);
        break;
      case 22:
        if (null === fiber.memoizedState) {
          var current = fiber.alternate;
          null !== current && null !== current.memoizedState ? (current = suspenseyCommitFlag, suspenseyCommitFlag = 16777216, recursivelyAccumulateSuspenseyCommit(fiber), suspenseyCommitFlag = current) : recursivelyAccumulateSuspenseyCommit(fiber);
        }
        break;
      default:
        recursivelyAccumulateSuspenseyCommit(fiber);
    }
  }
  function detachAlternateSiblings(parentFiber) {
    var previousFiber = parentFiber.alternate;
    if (null !== previousFiber && (parentFiber = previousFiber.child, null !== parentFiber)) {
      previousFiber.child = null;
      do previousFiber = parentFiber.sibling, parentFiber.sibling = null, parentFiber = previousFiber; while (null !== parentFiber);
    }
  }
  function recursivelyTraversePassiveUnmountEffects(parentFiber) {
    var deletions = parentFiber.deletions;
    if (0 !== (parentFiber.flags & 16)) {
      if (null !== deletions) for (var i = 0; i < deletions.length; i++) {
        var childToDelete = deletions[i];
        nextEffect = childToDelete;
        commitPassiveUnmountEffectsInsideOfDeletedTree_begin(childToDelete, parentFiber);
      }
      detachAlternateSiblings(parentFiber);
    }
    if (parentFiber.subtreeFlags & 10256) for (parentFiber = parentFiber.child; null !== parentFiber;) commitPassiveUnmountOnFiber(parentFiber), parentFiber = parentFiber.sibling;
  }
  function commitPassiveUnmountOnFiber(finishedWork) {
    switch (finishedWork.tag) {
      case 0:
      case 11:
      case 15:
        recursivelyTraversePassiveUnmountEffects(finishedWork);
        finishedWork.flags & 2048 && commitHookEffectListUnmount(9, finishedWork, finishedWork.return);
        break;
      case 3:
        recursivelyTraversePassiveUnmountEffects(finishedWork);
        break;
      case 12:
        recursivelyTraversePassiveUnmountEffects(finishedWork);
        break;
      case 22:
        var instance = finishedWork.stateNode;
        null !== finishedWork.memoizedState && instance._visibility & 4 && (null === finishedWork.return || 13 !== finishedWork.return.tag) ? (instance._visibility &= -5, recursivelyTraverseDisconnectPassiveEffects(finishedWork)) : recursivelyTraversePassiveUnmountEffects(finishedWork);
        break;
      default:
        recursivelyTraversePassiveUnmountEffects(finishedWork);
    }
  }
  function recursivelyTraverseDisconnectPassiveEffects(parentFiber) {
    var deletions = parentFiber.deletions;
    if (0 !== (parentFiber.flags & 16)) {
      if (null !== deletions) for (var i = 0; i < deletions.length; i++) {
        var childToDelete = deletions[i];
        nextEffect = childToDelete;
        commitPassiveUnmountEffectsInsideOfDeletedTree_begin(childToDelete, parentFiber);
      }
      detachAlternateSiblings(parentFiber);
    }
    for (parentFiber = parentFiber.child; null !== parentFiber;) {
      deletions = parentFiber;
      switch (deletions.tag) {
        case 0:
        case 11:
        case 15:
          commitHookEffectListUnmount(8, deletions, deletions.return);
          recursivelyTraverseDisconnectPassiveEffects(deletions);
          break;
        case 22:
          i = deletions.stateNode;
          i._visibility & 4 && (i._visibility &= -5, recursivelyTraverseDisconnectPassiveEffects(deletions));
          break;
        default:
          recursivelyTraverseDisconnectPassiveEffects(deletions);
      }
      parentFiber = parentFiber.sibling;
    }
  }
  function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(deletedSubtreeRoot, nearestMountedAncestor) {
    for (; null !== nextEffect;) {
      var fiber = nextEffect;
      switch (fiber.tag) {
        case 0:
        case 11:
        case 15:
          commitHookEffectListUnmount(8, fiber, nearestMountedAncestor);
          break;
        case 23:
        case 22:
          if (null !== fiber.memoizedState && null !== fiber.memoizedState.cachePool) {
            var cache = fiber.memoizedState.cachePool.pool;
            null != cache && cache.refCount++;
          }
          break;
        case 24:
          releaseCache(fiber.memoizedState.cache);
      }
      cache = fiber.child;
      if (null !== cache) cache.return = fiber, nextEffect = cache;else a: for (fiber = deletedSubtreeRoot; null !== nextEffect;) {
        cache = nextEffect;
        var sibling = cache.sibling,
          returnFiber = cache.return;
        detachFiberAfterEffects(cache);
        if (cache === fiber) {
          nextEffect = null;
          break a;
        }
        if (null !== sibling) {
          sibling.return = returnFiber;
          nextEffect = sibling;
          break a;
        }
        nextEffect = returnFiber;
      }
    }
  }
  var DefaultAsyncDispatcher = {
      getCacheForType: function getCacheForType(resourceType) {
        var cache = readContext(CacheContext),
          cacheForType = cache.data.get(resourceType);
        undefined === cacheForType && (cacheForType = resourceType(), cache.data.set(resourceType, cacheForType));
        return cacheForType;
      }
    },
    PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map,
    executionContext = 0,
    workInProgressRoot = null,
    workInProgress = null,
    workInProgressRootRenderLanes = 0,
    workInProgressSuspendedReason = 0,
    workInProgressThrownValue = null,
    workInProgressRootDidSkipSuspendedSiblings = false,
    workInProgressRootIsPrerendering = false,
    workInProgressRootDidAttachPingListener = false,
    entangledRenderLanes = 0,
    workInProgressRootExitStatus = 0,
    workInProgressRootSkippedLanes = 0,
    workInProgressRootInterleavedUpdatedLanes = 0,
    workInProgressRootPingedLanes = 0,
    workInProgressDeferredLane = 0,
    workInProgressSuspendedRetryLanes = 0,
    workInProgressRootConcurrentErrors = null,
    workInProgressRootRecoverableErrors = null,
    workInProgressRootDidIncludeRecursiveRenderUpdate = false,
    globalMostRecentFallbackTime = 0,
    workInProgressRootRenderTargetTime = Infinity,
    workInProgressTransitions = null,
    legacyErrorBoundariesThatAlreadyFailed = null,
    rootDoesHavePassiveEffects = false,
    rootWithPendingPassiveEffects = null,
    pendingPassiveEffectsLanes = 0,
    pendingPassiveEffectsRemainingLanes = 0,
    pendingPassiveTransitions = null,
    nestedUpdateCount = 0,
    rootWithNestedUpdates = null;
  function requestUpdateLane(fiber) {
    return 0 === (fiber.mode & 1) ? 2 : 0 !== (executionContext & 2) && 0 !== workInProgressRootRenderLanes ? workInProgressRootRenderLanes & -workInProgressRootRenderLanes : null !== ReactSharedInternals.T ? (fiber = currentEntangledLane, 0 !== fiber ? fiber : requestTransitionLane()) : resolveUpdatePriority();
  }
  function requestDeferredLane() {
    0 === workInProgressDeferredLane && (workInProgressDeferredLane = 0 !== (workInProgressRootRenderLanes & 536870912) ? 536870912 : claimNextTransitionLane());
    var suspenseHandler = suspenseHandlerStackCursor.current;
    null !== suspenseHandler && (suspenseHandler.flags |= 32);
    return workInProgressDeferredLane;
  }
  function scheduleUpdateOnFiber(root, fiber, lane) {
    if (root === workInProgressRoot && 2 === workInProgressSuspendedReason || null !== root.cancelPendingCommit) prepareFreshStack(root, 0), markRootSuspended(root, workInProgressRootRenderLanes, workInProgressDeferredLane, false);
    markRootUpdated$1(root, lane);
    if (0 === (executionContext & 2) || root !== workInProgressRoot) root === workInProgressRoot && (0 === (executionContext & 2) && (workInProgressRootInterleavedUpdatedLanes |= lane), 4 === workInProgressRootExitStatus && markRootSuspended(root, workInProgressRootRenderLanes, workInProgressDeferredLane, false)), ensureRootIsScheduled(root), 2 === lane && 0 === executionContext && 0 === (fiber.mode & 1) && (workInProgressRootRenderTargetTime = _$$_REQUIRE(_dependencyMap[3]).unstable_now() + 500, flushSyncWorkAcrossRoots_impl(0, true));
  }
  function performWorkOnRoot(root$jscomp$0, lanes, forceSync) {
    if (0 !== (executionContext & 6)) throw Error("Should not already be working.");
    var shouldTimeSlice = !forceSync && 0 === (lanes & 60) && 0 === (lanes & root$jscomp$0.expiredLanes) || checkIfRootIsPrerendering(root$jscomp$0, lanes),
      exitStatus = shouldTimeSlice ? renderRootConcurrent(root$jscomp$0, lanes) : renderRootSync(root$jscomp$0, lanes, true),
      renderWasConcurrent = shouldTimeSlice;
    do {
      if (0 === exitStatus) {
        workInProgressRootIsPrerendering && !shouldTimeSlice && markRootSuspended(root$jscomp$0, lanes, 0, false);
        break;
      } else if (6 === exitStatus) markRootSuspended(root$jscomp$0, lanes, 0, !workInProgressRootDidSkipSuspendedSiblings);else {
        forceSync = root$jscomp$0.current.alternate;
        if (renderWasConcurrent && !isRenderConsistentWithExternalStores(forceSync)) {
          exitStatus = renderRootSync(root$jscomp$0, lanes, false);
          renderWasConcurrent = false;
          continue;
        }
        if (0 !== root$jscomp$0.tag && 2 === exitStatus) {
          renderWasConcurrent = lanes;
          if (root$jscomp$0.errorRecoveryDisabledLanes & renderWasConcurrent) var JSCompiler_inline_result = 0;else JSCompiler_inline_result = root$jscomp$0.pendingLanes & -536870913, JSCompiler_inline_result = 0 !== JSCompiler_inline_result ? JSCompiler_inline_result : JSCompiler_inline_result & 536870912 ? 536870912 : 0;
          if (0 !== JSCompiler_inline_result) {
            lanes = JSCompiler_inline_result;
            a: {
              var root = root$jscomp$0;
              exitStatus = workInProgressRootConcurrentErrors;
              JSCompiler_inline_result = renderRootSync(root, JSCompiler_inline_result, false);
              if (2 !== JSCompiler_inline_result) {
                if (workInProgressRootDidAttachPingListener) {
                  root.errorRecoveryDisabledLanes |= renderWasConcurrent;
                  workInProgressRootInterleavedUpdatedLanes |= renderWasConcurrent;
                  exitStatus = 4;
                  break a;
                }
                renderWasConcurrent = workInProgressRootRecoverableErrors;
                workInProgressRootRecoverableErrors = exitStatus;
                null !== renderWasConcurrent && queueRecoverableErrors(renderWasConcurrent);
              }
              exitStatus = JSCompiler_inline_result;
            }
            renderWasConcurrent = false;
            if (2 !== exitStatus) continue;
          }
        }
        if (1 === exitStatus) {
          prepareFreshStack(root$jscomp$0, 0);
          markRootSuspended(root$jscomp$0, lanes, 0, true);
          break;
        }
        a: {
          shouldTimeSlice = root$jscomp$0;
          renderWasConcurrent = exitStatus;
          switch (renderWasConcurrent) {
            case 0:
            case 1:
              throw Error("Root did not complete. This is a bug in React.");
            case 4:
              if ((lanes & 4194176) === lanes) {
                markRootSuspended(shouldTimeSlice, lanes, workInProgressDeferredLane, !workInProgressRootDidSkipSuspendedSiblings);
                break a;
              }
              break;
            case 2:
              workInProgressRootRecoverableErrors = null;
              break;
            case 3:
            case 5:
              break;
            default:
              throw Error("Unknown root exit status.");
          }
          shouldTimeSlice.finishedWork = forceSync;
          shouldTimeSlice.finishedLanes = lanes;
          if ((lanes & 62914560) === lanes && 3 === renderWasConcurrent && (renderWasConcurrent = globalMostRecentFallbackTime + 300 - _$$_REQUIRE(_dependencyMap[3]).unstable_now(), 10 < renderWasConcurrent)) {
            markRootSuspended(shouldTimeSlice, lanes, workInProgressDeferredLane, !workInProgressRootDidSkipSuspendedSiblings);
            if (0 !== getNextLanes(shouldTimeSlice, 0)) break a;
            shouldTimeSlice.timeoutHandle = scheduleTimeout(commitRootWhenReady.bind(null, shouldTimeSlice, forceSync, workInProgressRootRecoverableErrors, workInProgressTransitions, workInProgressRootDidIncludeRecursiveRenderUpdate, lanes, workInProgressDeferredLane, workInProgressRootInterleavedUpdatedLanes, workInProgressSuspendedRetryLanes, workInProgressRootDidSkipSuspendedSiblings, 2, -0, 0), renderWasConcurrent);
            break a;
          }
          commitRootWhenReady(shouldTimeSlice, forceSync, workInProgressRootRecoverableErrors, workInProgressTransitions, workInProgressRootDidIncludeRecursiveRenderUpdate, lanes, workInProgressDeferredLane, workInProgressRootInterleavedUpdatedLanes, workInProgressSuspendedRetryLanes, workInProgressRootDidSkipSuspendedSiblings, 0, -0, 0);
        }
      }
      break;
    } while (1);
    ensureRootIsScheduled(root$jscomp$0);
  }
  function queueRecoverableErrors(errors) {
    null === workInProgressRootRecoverableErrors ? workInProgressRootRecoverableErrors = errors : workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors, errors);
  }
  function commitRootWhenReady(root, finishedWork, recoverableErrors, transitions, didIncludeRenderPhaseUpdate, lanes, spawnedLane, updatedLanes, suspendedRetryLanes, didSkipSuspendedSiblings, suspendedCommitReason, completedRenderStartTime, completedRenderEndTime) {
    lanes = finishedWork.subtreeFlags;
    (lanes & 8192 || 16785408 === (lanes & 16785408)) && accumulateSuspenseyCommitOnFiber(finishedWork);
    finishedWork = ReactSharedInternals.T;
    lanes = currentUpdatePriority;
    try {
      currentUpdatePriority = 2, ReactSharedInternals.T = null, commitRootImpl(root, recoverableErrors, transitions, didIncludeRenderPhaseUpdate, lanes, spawnedLane, updatedLanes, suspendedRetryLanes, suspendedCommitReason, completedRenderStartTime, completedRenderEndTime);
    } finally {
      ReactSharedInternals.T = finishedWork, currentUpdatePriority = lanes;
    }
  }
  function isRenderConsistentWithExternalStores(finishedWork) {
    for (var node = finishedWork;;) {
      var tag = node.tag;
      if ((0 === tag || 11 === tag || 15 === tag) && node.flags & 16384 && (tag = node.updateQueue, null !== tag && (tag = tag.stores, null !== tag))) for (var i = 0; i < tag.length; i++) {
        var check = tag[i],
          getSnapshot = check.getSnapshot;
        check = check.value;
        try {
          if (!objectIs(getSnapshot(), check)) return false;
        } catch (error) {
          return false;
        }
      }
      tag = node.child;
      if (node.subtreeFlags & 16384 && null !== tag) tag.return = node, node = tag;else {
        if (node === finishedWork) break;
        for (; null === node.sibling;) {
          if (null === node.return || node.return === finishedWork) return true;
          node = node.return;
        }
        node.sibling.return = node.return;
        node = node.sibling;
      }
    }
    return true;
  }
  function markRootSuspended(root, suspendedLanes, spawnedLane, didAttemptEntireTree) {
    suspendedLanes &= ~workInProgressRootPingedLanes;
    suspendedLanes &= ~workInProgressRootInterleavedUpdatedLanes;
    root.suspendedLanes |= suspendedLanes;
    root.pingedLanes &= ~suspendedLanes;
    didAttemptEntireTree && (root.warmLanes |= suspendedLanes);
    didAttemptEntireTree = root.expirationTimes;
    for (var lanes = suspendedLanes; 0 < lanes;) {
      var index$9 = 31 - clz32(lanes),
        lane = 1 << index$9;
      didAttemptEntireTree[index$9] = -1;
      lanes &= ~lane;
    }
    0 !== spawnedLane && markSpawnedDeferredLane(root, spawnedLane, suspendedLanes);
  }
  function resetWorkInProgressStack() {
    if (null !== workInProgress) {
      if (0 === workInProgressSuspendedReason) var interruptedWork = workInProgress.return;else interruptedWork = workInProgress, lastContextDependency = currentlyRenderingFiber = null, resetHooksOnUnwind(interruptedWork), thenableState$1 = null, thenableIndexCounter$1 = 0, interruptedWork = workInProgress;
      for (; null !== interruptedWork;) unwindInterruptedWork(interruptedWork.alternate, interruptedWork), interruptedWork = interruptedWork.return;
      workInProgress = null;
    }
  }
  function prepareFreshStack(root, lanes) {
    root.finishedWork = null;
    root.finishedLanes = 0;
    var timeoutHandle = root.timeoutHandle;
    -1 !== timeoutHandle && (root.timeoutHandle = -1, cancelTimeout(timeoutHandle));
    timeoutHandle = root.cancelPendingCommit;
    null !== timeoutHandle && (root.cancelPendingCommit = null, timeoutHandle());
    resetWorkInProgressStack();
    workInProgressRoot = root;
    workInProgress = timeoutHandle = createWorkInProgress(root.current, null);
    workInProgressRootRenderLanes = lanes;
    workInProgressSuspendedReason = 0;
    workInProgressThrownValue = null;
    workInProgressRootDidSkipSuspendedSiblings = false;
    workInProgressRootIsPrerendering = checkIfRootIsPrerendering(root, lanes);
    workInProgressRootDidAttachPingListener = false;
    workInProgressSuspendedRetryLanes = workInProgressDeferredLane = workInProgressRootPingedLanes = workInProgressRootInterleavedUpdatedLanes = workInProgressRootSkippedLanes = workInProgressRootExitStatus = 0;
    workInProgressRootRecoverableErrors = workInProgressRootConcurrentErrors = null;
    workInProgressRootDidIncludeRecursiveRenderUpdate = false;
    0 !== (lanes & 8) && (lanes |= lanes & 32);
    var allEntangledLanes = root.entangledLanes;
    if (0 !== allEntangledLanes) for (root = root.entanglements, allEntangledLanes &= lanes; 0 < allEntangledLanes;) {
      var index$7 = 31 - clz32(allEntangledLanes),
        lane = 1 << index$7;
      lanes |= root[index$7];
      allEntangledLanes &= ~lane;
    }
    entangledRenderLanes = lanes;
    finishQueueingConcurrentUpdates();
    return timeoutHandle;
  }
  function handleThrow(root, thrownValue) {
    currentlyRenderingFiber$1 = null;
    ReactSharedInternals.H = ContextOnlyDispatcher;
    thrownValue === SuspenseException ? (thrownValue = getSuspendedThenable(), workInProgressSuspendedReason = 3) : thrownValue === SuspenseyCommitException ? (thrownValue = getSuspendedThenable(), workInProgressSuspendedReason = 4) : workInProgressSuspendedReason = thrownValue === SelectiveHydrationException ? 8 : null !== thrownValue && "object" === typeof thrownValue && "function" === typeof thrownValue.then ? 6 : 1;
    workInProgressThrownValue = thrownValue;
    null === workInProgress && (workInProgressRootExitStatus = 1, logUncaughtError(root, createCapturedValueAtFiber(thrownValue, root.current)));
  }
  function pushDispatcher() {
    var prevDispatcher = ReactSharedInternals.H;
    ReactSharedInternals.H = ContextOnlyDispatcher;
    return null === prevDispatcher ? ContextOnlyDispatcher : prevDispatcher;
  }
  function pushAsyncDispatcher() {
    var prevAsyncDispatcher = ReactSharedInternals.A;
    ReactSharedInternals.A = DefaultAsyncDispatcher;
    return prevAsyncDispatcher;
  }
  function renderDidSuspendDelayIfPossible() {
    workInProgressRootExitStatus = 4;
    workInProgressRootDidSkipSuspendedSiblings || (workInProgressRootRenderLanes & 4194176) !== workInProgressRootRenderLanes && null !== suspenseHandlerStackCursor.current || (workInProgressRootIsPrerendering = true);
    0 === (workInProgressRootSkippedLanes & 134217727) && 0 === (workInProgressRootInterleavedUpdatedLanes & 134217727) || null === workInProgressRoot || markRootSuspended(workInProgressRoot, workInProgressRootRenderLanes, workInProgressDeferredLane, false);
  }
  function renderRootSync(root, lanes, shouldYieldForPrerendering) {
    var prevExecutionContext = executionContext;
    executionContext |= 2;
    var prevDispatcher = pushDispatcher(),
      prevAsyncDispatcher = pushAsyncDispatcher();
    if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) workInProgressTransitions = null, prepareFreshStack(root, lanes);
    lanes = false;
    var exitStatus = workInProgressRootExitStatus;
    a: do try {
      if (0 !== workInProgressSuspendedReason && null !== workInProgress) {
        var unitOfWork = workInProgress,
          thrownValue = workInProgressThrownValue;
        switch (workInProgressSuspendedReason) {
          case 8:
            resetWorkInProgressStack();
            exitStatus = 6;
            break a;
          case 3:
          case 2:
          case 6:
            null === suspenseHandlerStackCursor.current && (lanes = true);
            var reason = workInProgressSuspendedReason;
            workInProgressSuspendedReason = 0;
            workInProgressThrownValue = null;
            throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);
            if (shouldYieldForPrerendering && workInProgressRootIsPrerendering) {
              exitStatus = 0;
              break a;
            }
            break;
          default:
            reason = workInProgressSuspendedReason, workInProgressSuspendedReason = 0, workInProgressThrownValue = null, throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);
        }
      }
      workLoopSync();
      exitStatus = workInProgressRootExitStatus;
      break;
    } catch (thrownValue$129) {
      handleThrow(root, thrownValue$129);
    } while (1);
    lanes && root.shellSuspendCounter++;
    lastContextDependency = currentlyRenderingFiber = null;
    executionContext = prevExecutionContext;
    ReactSharedInternals.H = prevDispatcher;
    ReactSharedInternals.A = prevAsyncDispatcher;
    null === workInProgress && (workInProgressRoot = null, workInProgressRootRenderLanes = 0, finishQueueingConcurrentUpdates());
    return exitStatus;
  }
  function workLoopSync() {
    for (; null !== workInProgress;) performUnitOfWork(workInProgress);
  }
  function renderRootConcurrent(root, lanes) {
    var prevExecutionContext = executionContext;
    executionContext |= 2;
    var prevDispatcher = pushDispatcher(),
      prevAsyncDispatcher = pushAsyncDispatcher();
    workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes ? (workInProgressTransitions = null, workInProgressRootRenderTargetTime = _$$_REQUIRE(_dependencyMap[3]).unstable_now() + 500, prepareFreshStack(root, lanes)) : workInProgressRootIsPrerendering = checkIfRootIsPrerendering(root, lanes);
    a: do try {
      if (0 !== workInProgressSuspendedReason && null !== workInProgress) {
        lanes = workInProgress;
        var thrownValue = workInProgressThrownValue;
        b: switch (workInProgressSuspendedReason) {
          case 1:
            workInProgressSuspendedReason = 0;
            workInProgressThrownValue = null;
            throwAndUnwindWorkLoop(root, lanes, thrownValue, 1);
            break;
          case 2:
            if (isThenableResolved(thrownValue)) {
              workInProgressSuspendedReason = 0;
              workInProgressThrownValue = null;
              replaySuspendedUnitOfWork(lanes);
              break;
            }
            lanes = function lanes() {
              2 === workInProgressSuspendedReason && workInProgressRoot === root && (workInProgressSuspendedReason = 7);
              ensureRootIsScheduled(root);
            };
            thrownValue.then(lanes, lanes);
            break a;
          case 3:
            workInProgressSuspendedReason = 7;
            break a;
          case 4:
            workInProgressSuspendedReason = 5;
            break a;
          case 7:
            isThenableResolved(thrownValue) ? (workInProgressSuspendedReason = 0, workInProgressThrownValue = null, replaySuspendedUnitOfWork(lanes)) : (workInProgressSuspendedReason = 0, workInProgressThrownValue = null, throwAndUnwindWorkLoop(root, lanes, thrownValue, 7));
            break;
          case 5:
            var resource = null;
            switch (workInProgress.tag) {
              case 26:
                resource = workInProgress.memoizedState;
              case 5:
              case 27:
                var hostFiber = workInProgress;
                if (resource ? shim(resource) : 1) {
                  workInProgressSuspendedReason = 0;
                  workInProgressThrownValue = null;
                  var sibling = hostFiber.sibling;
                  if (null !== sibling) workInProgress = sibling;else {
                    var returnFiber = hostFiber.return;
                    null !== returnFiber ? (workInProgress = returnFiber, completeUnitOfWork(returnFiber)) : workInProgress = null;
                  }
                  break b;
                }
            }
            workInProgressSuspendedReason = 0;
            workInProgressThrownValue = null;
            throwAndUnwindWorkLoop(root, lanes, thrownValue, 5);
            break;
          case 6:
            workInProgressSuspendedReason = 0;
            workInProgressThrownValue = null;
            throwAndUnwindWorkLoop(root, lanes, thrownValue, 6);
            break;
          case 8:
            resetWorkInProgressStack();
            workInProgressRootExitStatus = 6;
            break a;
          default:
            throw Error("Unexpected SuspendedReason. This is a bug in React.");
        }
      }
      workLoopConcurrent();
      break;
    } catch (thrownValue$131) {
      handleThrow(root, thrownValue$131);
    } while (1);
    lastContextDependency = currentlyRenderingFiber = null;
    ReactSharedInternals.H = prevDispatcher;
    ReactSharedInternals.A = prevAsyncDispatcher;
    executionContext = prevExecutionContext;
    if (null !== workInProgress) return 0;
    workInProgressRoot = null;
    workInProgressRootRenderLanes = 0;
    finishQueueingConcurrentUpdates();
    return workInProgressRootExitStatus;
  }
  function workLoopConcurrent() {
    for (; null !== workInProgress && !_$$_REQUIRE(_dependencyMap[3]).unstable_shouldYield();) performUnitOfWork(workInProgress);
  }
  function performUnitOfWork(unitOfWork) {
    var next = beginWork(unitOfWork.alternate, unitOfWork, entangledRenderLanes);
    unitOfWork.memoizedProps = unitOfWork.pendingProps;
    null === next ? completeUnitOfWork(unitOfWork) : workInProgress = next;
  }
  function replaySuspendedUnitOfWork(unitOfWork) {
    var next = unitOfWork;
    var current = next.alternate;
    switch (next.tag) {
      case 15:
      case 0:
        next = replayFunctionComponent(current, next, next.pendingProps, next.type, undefined, workInProgressRootRenderLanes);
        break;
      case 11:
        next = replayFunctionComponent(current, next, next.pendingProps, next.type.render, next.ref, workInProgressRootRenderLanes);
        break;
      case 5:
        resetHooksOnUnwind(next);
      default:
        unwindInterruptedWork(current, next), next = workInProgress = resetWorkInProgress(next, entangledRenderLanes), next = beginWork(current, next, entangledRenderLanes);
    }
    unitOfWork.memoizedProps = unitOfWork.pendingProps;
    null === next ? completeUnitOfWork(unitOfWork) : workInProgress = next;
  }
  function throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, suspendedReason) {
    lastContextDependency = currentlyRenderingFiber = null;
    resetHooksOnUnwind(unitOfWork);
    thenableState$1 = null;
    thenableIndexCounter$1 = 0;
    var returnFiber = unitOfWork.return;
    try {
      if (throwException(root, returnFiber, unitOfWork, thrownValue, workInProgressRootRenderLanes)) {
        workInProgressRootExitStatus = 1;
        logUncaughtError(root, createCapturedValueAtFiber(thrownValue, root.current));
        workInProgress = null;
        return;
      }
    } catch (error) {
      if (null !== returnFiber) throw workInProgress = returnFiber, error;
      workInProgressRootExitStatus = 1;
      logUncaughtError(root, createCapturedValueAtFiber(thrownValue, root.current));
      workInProgress = null;
      return;
    }
    if (unitOfWork.flags & 32768) {
      if (1 === suspendedReason) root = true;else if (workInProgressRootIsPrerendering || 0 !== (workInProgressRootRenderLanes & 536870912)) root = false;else if (workInProgressRootDidSkipSuspendedSiblings = root = true, 2 === suspendedReason || 3 === suspendedReason || 6 === suspendedReason) suspendedReason = suspenseHandlerStackCursor.current, null !== suspendedReason && 13 === suspendedReason.tag && (suspendedReason.flags |= 16384);
      unwindUnitOfWork(unitOfWork, root);
    } else completeUnitOfWork(unitOfWork);
  }
  function completeUnitOfWork(unitOfWork) {
    var completedWork = unitOfWork;
    do {
      if (0 !== (completedWork.flags & 32768)) {
        unwindUnitOfWork(completedWork, workInProgressRootDidSkipSuspendedSiblings);
        return;
      }
      unitOfWork = completedWork.return;
      var next = completeWork(completedWork.alternate, completedWork, entangledRenderLanes);
      if (null !== next) {
        workInProgress = next;
        return;
      }
      completedWork = completedWork.sibling;
      if (null !== completedWork) {
        workInProgress = completedWork;
        return;
      }
      workInProgress = completedWork = unitOfWork;
    } while (null !== completedWork);
    0 === workInProgressRootExitStatus && (workInProgressRootExitStatus = 5);
  }
  function unwindUnitOfWork(unitOfWork, skipSiblings) {
    do {
      var next = unwindWork(unitOfWork.alternate, unitOfWork);
      if (null !== next) {
        next.flags &= 32767;
        workInProgress = next;
        return;
      }
      next = unitOfWork.return;
      null !== next && (next.flags |= 32768, next.subtreeFlags = 0, next.deletions = null);
      if (!skipSiblings && (unitOfWork = unitOfWork.sibling, null !== unitOfWork)) {
        workInProgress = unitOfWork;
        return;
      }
      workInProgress = unitOfWork = next;
    } while (null !== unitOfWork);
    workInProgressRootExitStatus = 6;
    workInProgress = null;
  }
  function commitRootImpl(root, recoverableErrors, transitions, didIncludeRenderPhaseUpdate, renderPriorityLevel, spawnedLane, updatedLanes, suspendedRetryLanes) {
    do flushPassiveEffects(); while (null !== rootWithPendingPassiveEffects);
    if (0 !== (executionContext & 6)) throw Error("Should not already be working.");
    var finishedWork = root.finishedWork;
    didIncludeRenderPhaseUpdate = root.finishedLanes;
    if (null === finishedWork) return null;
    root.finishedWork = null;
    root.finishedLanes = 0;
    if (finishedWork === root.current) throw Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
    root.callbackNode = null;
    root.callbackPriority = 0;
    root.cancelPendingCommit = null;
    var remainingLanes = finishedWork.lanes | finishedWork.childLanes;
    remainingLanes |= concurrentlyUpdatedLanes;
    markRootFinished(root, didIncludeRenderPhaseUpdate, remainingLanes, spawnedLane, updatedLanes, suspendedRetryLanes);
    root === workInProgressRoot && (workInProgress = workInProgressRoot = null, workInProgressRootRenderLanes = 0);
    0 === (finishedWork.subtreeFlags & 10256) && 0 === (finishedWork.flags & 10256) || rootDoesHavePassiveEffects || (rootDoesHavePassiveEffects = true, pendingPassiveEffectsRemainingLanes = remainingLanes, pendingPassiveTransitions = transitions, scheduleCallback(_$$_REQUIRE(_dependencyMap[3]).unstable_NormalPriority, function () {
      flushPassiveEffects(true);
      return null;
    }));
    transitions = 0 !== (finishedWork.flags & 15990);
    0 !== (finishedWork.subtreeFlags & 15990) || transitions ? (transitions = ReactSharedInternals.T, ReactSharedInternals.T = null, spawnedLane = currentUpdatePriority, currentUpdatePriority = 2, updatedLanes = executionContext, executionContext |= 4, commitBeforeMutationEffects(root, finishedWork), commitMutationEffectsOnFiber(finishedWork, root), root.current = finishedWork, commitLayoutEffectOnFiber(root, finishedWork.alternate, finishedWork), _$$_REQUIRE(_dependencyMap[3]).unstable_requestPaint(), executionContext = updatedLanes, currentUpdatePriority = spawnedLane, ReactSharedInternals.T = transitions) : root.current = finishedWork;
    rootDoesHavePassiveEffects ? (rootDoesHavePassiveEffects = false, rootWithPendingPassiveEffects = root, pendingPassiveEffectsLanes = didIncludeRenderPhaseUpdate) : releaseRootPooledCache(root, remainingLanes);
    remainingLanes = root.pendingLanes;
    0 === remainingLanes && (legacyErrorBoundariesThatAlreadyFailed = null);
    onCommitRoot(finishedWork.stateNode, renderPriorityLevel);
    ensureRootIsScheduled(root);
    if (null !== recoverableErrors) for (renderPriorityLevel = root.onRecoverableError, finishedWork = 0; finishedWork < recoverableErrors.length; finishedWork++) remainingLanes = recoverableErrors[finishedWork], renderPriorityLevel(remainingLanes.value, {
      componentStack: remainingLanes.stack
    });
    0 !== (pendingPassiveEffectsLanes & 3) && 0 !== root.tag && flushPassiveEffects();
    remainingLanes = root.pendingLanes;
    0 !== (didIncludeRenderPhaseUpdate & 4194218) && 0 !== (remainingLanes & 42) ? root === rootWithNestedUpdates ? nestedUpdateCount++ : (nestedUpdateCount = 0, rootWithNestedUpdates = root) : nestedUpdateCount = 0;
    flushSyncWorkAcrossRoots_impl(0, false);
    return null;
  }
  function releaseRootPooledCache(root, remainingLanes) {
    0 === (root.pooledCacheLanes &= remainingLanes) && (remainingLanes = root.pooledCache, null != remainingLanes && (root.pooledCache = null, releaseCache(remainingLanes)));
  }
  function flushPassiveEffects() {
    if (null !== rootWithPendingPassiveEffects) {
      var root = rootWithPendingPassiveEffects,
        remainingLanes = pendingPassiveEffectsRemainingLanes;
      pendingPassiveEffectsRemainingLanes = 0;
      var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes),
        prevTransition = ReactSharedInternals.T,
        previousPriority = currentUpdatePriority;
      try {
        currentUpdatePriority = 32 > renderPriority ? 32 : renderPriority;
        ReactSharedInternals.T = null;
        if (null === rootWithPendingPassiveEffects) var JSCompiler_inline_result = false;else {
          renderPriority = pendingPassiveTransitions;
          pendingPassiveTransitions = null;
          var root$jscomp$0 = rootWithPendingPassiveEffects,
            lanes = pendingPassiveEffectsLanes;
          rootWithPendingPassiveEffects = null;
          pendingPassiveEffectsLanes = 0;
          if (0 !== (executionContext & 6)) throw Error("Cannot flush passive effects while already rendering.");
          var prevExecutionContext = executionContext;
          executionContext |= 4;
          commitPassiveUnmountOnFiber(root$jscomp$0.current);
          commitPassiveMountOnFiber(root$jscomp$0, root$jscomp$0.current, lanes, renderPriority);
          executionContext = prevExecutionContext;
          flushSyncWorkAcrossRoots_impl(0, false);
          if (injectedHook && "function" === typeof injectedHook.onPostCommitFiberRoot) try {
            injectedHook.onPostCommitFiberRoot(rendererID, root$jscomp$0);
          } catch (err) {}
          JSCompiler_inline_result = true;
        }
        return JSCompiler_inline_result;
      } finally {
        currentUpdatePriority = previousPriority, ReactSharedInternals.T = prevTransition, releaseRootPooledCache(root, remainingLanes);
      }
    }
    return false;
  }
  function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
    sourceFiber = createCapturedValueAtFiber(error, sourceFiber);
    sourceFiber = createRootErrorUpdate(rootFiber.stateNode, sourceFiber, 2);
    rootFiber = enqueueUpdate(rootFiber, sourceFiber, 2);
    null !== rootFiber && (markRootUpdated$1(rootFiber, 2), ensureRootIsScheduled(rootFiber));
  }
  function captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error) {
    if (3 === sourceFiber.tag) captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);else for (; null !== nearestMountedAncestor;) {
      if (3 === nearestMountedAncestor.tag) {
        captureCommitPhaseErrorOnRoot(nearestMountedAncestor, sourceFiber, error);
        break;
      } else if (1 === nearestMountedAncestor.tag) {
        var instance = nearestMountedAncestor.stateNode;
        if ("function" === typeof nearestMountedAncestor.type.getDerivedStateFromError || "function" === typeof instance.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(instance))) {
          sourceFiber = createCapturedValueAtFiber(error, sourceFiber);
          error = createClassErrorUpdate(2);
          instance = enqueueUpdate(nearestMountedAncestor, error, 2);
          null !== instance && (initializeClassErrorUpdate(error, instance, nearestMountedAncestor, sourceFiber), markRootUpdated$1(instance, 2), ensureRootIsScheduled(instance));
          break;
        }
      }
      nearestMountedAncestor = nearestMountedAncestor.return;
    }
  }
  function attachPingListener(root, wakeable, lanes) {
    var pingCache = root.pingCache;
    if (null === pingCache) {
      pingCache = root.pingCache = new PossiblyWeakMap();
      var threadIDs = new Set();
      pingCache.set(wakeable, threadIDs);
    } else threadIDs = pingCache.get(wakeable), undefined === threadIDs && (threadIDs = new Set(), pingCache.set(wakeable, threadIDs));
    threadIDs.has(lanes) || (workInProgressRootDidAttachPingListener = true, threadIDs.add(lanes), root = pingSuspendedRoot.bind(null, root, wakeable, lanes), wakeable.then(root, root));
  }
  function pingSuspendedRoot(root, wakeable, pingedLanes) {
    var pingCache = root.pingCache;
    null !== pingCache && pingCache.delete(wakeable);
    root.pingedLanes |= root.suspendedLanes & pingedLanes;
    root.warmLanes &= ~pingedLanes;
    workInProgressRoot === root && (workInProgressRootRenderLanes & pingedLanes) === pingedLanes && (4 === workInProgressRootExitStatus || 3 === workInProgressRootExitStatus && (workInProgressRootRenderLanes & 62914560) === workInProgressRootRenderLanes && 300 > _$$_REQUIRE(_dependencyMap[3]).unstable_now() - globalMostRecentFallbackTime ? 0 === (executionContext & 2) && prepareFreshStack(root, 0) : workInProgressRootPingedLanes |= pingedLanes, workInProgressSuspendedRetryLanes === workInProgressRootRenderLanes && (workInProgressSuspendedRetryLanes = 0));
    ensureRootIsScheduled(root);
  }
  function retryTimedOutBoundary(boundaryFiber, retryLane) {
    0 === retryLane && (retryLane = 0 === (boundaryFiber.mode & 1) ? 2 : claimNextRetryLane());
    boundaryFiber = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);
    null !== boundaryFiber && (markRootUpdated$1(boundaryFiber, retryLane), ensureRootIsScheduled(boundaryFiber));
  }
  function retryDehydratedSuspenseBoundary(boundaryFiber) {
    var suspenseState = boundaryFiber.memoizedState,
      retryLane = 0;
    null !== suspenseState && (retryLane = suspenseState.retryLane);
    retryTimedOutBoundary(boundaryFiber, retryLane);
  }
  function resolveRetryWakeable(boundaryFiber, wakeable) {
    var retryLane = 0;
    switch (boundaryFiber.tag) {
      case 13:
        var retryCache = boundaryFiber.stateNode;
        var suspenseState = boundaryFiber.memoizedState;
        null !== suspenseState && (retryLane = suspenseState.retryLane);
        break;
      case 19:
        retryCache = boundaryFiber.stateNode;
        break;
      case 22:
        retryCache = boundaryFiber.stateNode._retryCache;
        break;
      default:
        throw Error("Pinged unknown suspense boundary type. This is probably a bug in React.");
    }
    null !== retryCache && retryCache.delete(wakeable);
    retryTimedOutBoundary(boundaryFiber, retryLane);
  }
  function scheduleCallback(priorityLevel, callback) {
    return _$$_REQUIRE(_dependencyMap[3]).unstable_scheduleCallback(priorityLevel, callback);
  }
  function FiberNode(tag, pendingProps, key, mode) {
    this.tag = tag;
    this.key = key;
    this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
    this.index = 0;
    this.refCleanup = this.ref = null;
    this.pendingProps = pendingProps;
    this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
    this.mode = mode;
    this.subtreeFlags = this.flags = 0;
    this.deletions = null;
    this.childLanes = this.lanes = 0;
    this.alternate = null;
  }
  function createFiberImplClass(tag, pendingProps, key, mode) {
    return new FiberNode(tag, pendingProps, key, mode);
  }
  function shouldConstruct(Component) {
    Component = Component.prototype;
    return !(!Component || !Component.isReactComponent);
  }
  function createWorkInProgress(current, pendingProps) {
    var workInProgress = current.alternate;
    null === workInProgress ? (workInProgress = createFiberImplClass(current.tag, pendingProps, current.key, current.mode), workInProgress.elementType = current.elementType, workInProgress.type = current.type, workInProgress.stateNode = current.stateNode, workInProgress.alternate = current, current.alternate = workInProgress) : (workInProgress.pendingProps = pendingProps, workInProgress.type = current.type, workInProgress.flags = 0, workInProgress.subtreeFlags = 0, workInProgress.deletions = null);
    workInProgress.flags = current.flags & 31457280;
    workInProgress.childLanes = current.childLanes;
    workInProgress.lanes = current.lanes;
    workInProgress.child = current.child;
    workInProgress.memoizedProps = current.memoizedProps;
    workInProgress.memoizedState = current.memoizedState;
    workInProgress.updateQueue = current.updateQueue;
    pendingProps = current.dependencies;
    workInProgress.dependencies = null === pendingProps ? null : {
      lanes: pendingProps.lanes,
      firstContext: pendingProps.firstContext
    };
    workInProgress.sibling = current.sibling;
    workInProgress.index = current.index;
    workInProgress.ref = current.ref;
    workInProgress.refCleanup = current.refCleanup;
    return workInProgress;
  }
  function resetWorkInProgress(workInProgress, renderLanes) {
    workInProgress.flags &= 31457282;
    var current = workInProgress.alternate;
    null === current ? (workInProgress.childLanes = 0, workInProgress.lanes = renderLanes, workInProgress.child = null, workInProgress.subtreeFlags = 0, workInProgress.memoizedProps = null, workInProgress.memoizedState = null, workInProgress.updateQueue = null, workInProgress.dependencies = null, workInProgress.stateNode = null) : (workInProgress.childLanes = current.childLanes, workInProgress.lanes = current.lanes, workInProgress.child = current.child, workInProgress.subtreeFlags = 0, workInProgress.deletions = null, workInProgress.memoizedProps = current.memoizedProps, workInProgress.memoizedState = current.memoizedState, workInProgress.updateQueue = current.updateQueue, workInProgress.type = current.type, renderLanes = current.dependencies, workInProgress.dependencies = null === renderLanes ? null : {
      lanes: renderLanes.lanes,
      firstContext: renderLanes.firstContext
    });
    return workInProgress;
  }
  function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes) {
    var fiberTag = 0;
    owner = type;
    if ("function" === typeof type) shouldConstruct(type) && (fiberTag = 1);else if ("string" === typeof type) fiberTag = 5;else a: switch (type) {
      case REACT_FRAGMENT_TYPE:
        return createFiberFromFragment(pendingProps.children, mode, lanes, key);
      case REACT_STRICT_MODE_TYPE:
        fiberTag = 8;
        mode |= 8;
        0 !== (mode & 1) && (mode |= 16);
        break;
      case REACT_PROFILER_TYPE:
        return type = createFiberImplClass(12, pendingProps, key, mode | 2), type.elementType = REACT_PROFILER_TYPE, type.lanes = lanes, type;
      case REACT_SUSPENSE_TYPE:
        return type = createFiberImplClass(13, pendingProps, key, mode), type.elementType = REACT_SUSPENSE_TYPE, type.lanes = lanes, type;
      case REACT_SUSPENSE_LIST_TYPE:
        return type = createFiberImplClass(19, pendingProps, key, mode), type.elementType = REACT_SUSPENSE_LIST_TYPE, type.lanes = lanes, type;
      case REACT_OFFSCREEN_TYPE:
        return createFiberFromOffscreen(pendingProps, mode, lanes, key);
      default:
        if ("object" === typeof type && null !== type) switch (type.$$typeof) {
          case REACT_PROVIDER_TYPE:
          case REACT_CONTEXT_TYPE:
            fiberTag = 10;
            break a;
          case REACT_CONSUMER_TYPE:
            fiberTag = 9;
            break a;
          case REACT_FORWARD_REF_TYPE:
            fiberTag = 11;
            break a;
          case REACT_MEMO_TYPE:
            fiberTag = 14;
            break a;
          case REACT_LAZY_TYPE:
            fiberTag = 16;
            owner = null;
            break a;
        }
        fiberTag = 29;
        pendingProps = Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + ((null === type ? "null" : typeof type) + "."));
        owner = null;
    }
    key = createFiberImplClass(fiberTag, pendingProps, key, mode);
    key.elementType = type;
    key.type = owner;
    key.lanes = lanes;
    return key;
  }
  function createFiberFromFragment(elements, mode, lanes, key) {
    elements = createFiberImplClass(7, elements, key, mode);
    elements.lanes = lanes;
    return elements;
  }
  function createFiberFromOffscreen(pendingProps, mode, lanes, key) {
    pendingProps = createFiberImplClass(22, pendingProps, key, mode);
    pendingProps.elementType = REACT_OFFSCREEN_TYPE;
    pendingProps.lanes = lanes;
    var primaryChildInstance = {
      _visibility: 1,
      _pendingVisibility: 1,
      _pendingMarkers: null,
      _retryCache: null,
      _transitions: null,
      _current: null,
      detach: function detach() {
        var fiber = primaryChildInstance._current;
        if (null === fiber) throw Error("Calling Offscreen.detach before instance handle has been set.");
        if (0 === (primaryChildInstance._pendingVisibility & 2)) {
          var root = enqueueConcurrentRenderForLane(fiber, 2);
          null !== root && (primaryChildInstance._pendingVisibility |= 2, scheduleUpdateOnFiber(root, fiber, 2));
        }
      },
      attach: function attach() {
        var fiber = primaryChildInstance._current;
        if (null === fiber) throw Error("Calling Offscreen.detach before instance handle has been set.");
        if (0 !== (primaryChildInstance._pendingVisibility & 2)) {
          var root = enqueueConcurrentRenderForLane(fiber, 2);
          null !== root && (primaryChildInstance._pendingVisibility &= -3, scheduleUpdateOnFiber(root, fiber, 2));
        }
      }
    };
    pendingProps.stateNode = primaryChildInstance;
    return pendingProps;
  }
  function createFiberFromText(content, mode, lanes) {
    content = createFiberImplClass(6, content, null, mode);
    content.lanes = lanes;
    return content;
  }
  function createFiberFromPortal(portal, mode, lanes) {
    mode = createFiberImplClass(4, null !== portal.children ? portal.children : [], portal.key, mode);
    mode.lanes = lanes;
    mode.stateNode = {
      containerInfo: portal.containerInfo,
      pendingChildren: null,
      implementation: portal.implementation
    };
    return mode;
  }
  function FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onUncaughtError, onCaughtError, onRecoverableError, formState) {
    this.tag = tag;
    this.containerInfo = containerInfo;
    this.finishedWork = this.pingCache = this.current = this.pendingChildren = null;
    this.timeoutHandle = -1;
    this.callbackNode = this.next = this.pendingContext = this.context = this.cancelPendingCommit = null;
    this.callbackPriority = 0;
    this.expirationTimes = createLaneMap(-1);
    this.entangledLanes = this.shellSuspendCounter = this.errorRecoveryDisabledLanes = this.finishedLanes = this.expiredLanes = this.warmLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;
    this.entanglements = createLaneMap(0);
    this.hiddenUpdates = createLaneMap(null);
    this.identifierPrefix = identifierPrefix;
    this.onUncaughtError = onUncaughtError;
    this.onCaughtError = onCaughtError;
    this.onRecoverableError = onRecoverableError;
    this.pooledCache = null;
    this.pooledCacheLanes = 0;
    this.formState = formState;
    this.incompleteTransitions = new Map();
  }
  function createPortal$1(children, containerInfo, implementation) {
    var key = 3 < arguments.length && undefined !== arguments[3] ? arguments[3] : null;
    return {
      $$typeof: REACT_PORTAL_TYPE,
      key: null == key ? null : "" + key,
      children: children,
      containerInfo: containerInfo,
      implementation: implementation
    };
  }
  function findHostInstance(component) {
    var fiber = component._reactInternals;
    if (undefined === fiber) {
      if ("function" === typeof component.render) throw Error("Unable to find node on an unmounted component.");
      component = Object.keys(component).join(",");
      throw Error("Argument appears to not be a ReactComponent. Keys: " + component);
    }
    component = findCurrentFiberUsingSlowPath(fiber);
    component = null !== component ? findCurrentHostFiberImpl(component) : null;
    return null === component ? null : getPublicInstance(component.stateNode);
  }
  function updateContainer(element, container, parentComponent, callback) {
    parentComponent = container.current;
    var lane = requestUpdateLane(parentComponent);
    null === container.context ? container.context = emptyContextObject : container.pendingContext = emptyContextObject;
    container = createUpdate(lane);
    container.payload = {
      element: element
    };
    callback = undefined === callback ? null : callback;
    null !== callback && (container.callback = callback);
    element = enqueueUpdate(parentComponent, container, lane);
    null !== element && (scheduleUpdateOnFiber(element, parentComponent, lane), entangleTransitions(element, parentComponent, lane));
    return lane;
  }
  function getInspectorDataForInstance() {
    throw Error("getInspectorDataForInstance() is not available in production");
  }
  function shim$1() {
    throw Error("The current renderer does not support hydration. This error is likely caused by a bug in React. Please file an issue.");
  }
  function shim() {
    throw Error("The current renderer does not support Resources. This error is likely caused by a bug in React. Please file an issue.");
  }
  var _nativeFabricUIManage = nativeFabricUIManager,
    createNode = _nativeFabricUIManage.createNode,
    cloneNodeWithNewChildren = _nativeFabricUIManage.cloneNodeWithNewChildren,
    cloneNodeWithNewChildrenAndProps = _nativeFabricUIManage.cloneNodeWithNewChildrenAndProps,
    cloneNodeWithNewProps = _nativeFabricUIManage.cloneNodeWithNewProps,
    createChildNodeSet = _nativeFabricUIManage.createChildSet,
    appendChildNode = _nativeFabricUIManage.appendChild,
    appendChildNodeToSet = _nativeFabricUIManage.appendChildToSet,
    completeRoot = _nativeFabricUIManage.completeRoot,
    registerEventHandler = _nativeFabricUIManage.registerEventHandler,
    FabricDiscretePriority = _nativeFabricUIManage.unstable_DiscreteEventPriority,
    fabricGetCurrentEventPriority = _nativeFabricUIManage.unstable_getCurrentEventPriority,
    extraDevToolsConfig = {
      getInspectorDataForInstance: getInspectorDataForInstance,
      getInspectorDataForViewTag: function getInspectorDataForViewTag() {
        throw Error("getInspectorDataForViewTag() is not available in production");
      },
      getInspectorDataForViewAtPoint: function getInspectorDataForViewAtPoint() {
        throw Error("getInspectorDataForViewAtPoint() is not available in production.");
      }
    },
    getViewConfigForType = _$$_REQUIRE(_dependencyMap[2]).ReactNativeViewConfigRegistry.get,
    nextReactTag = 2;
  registerEventHandler && registerEventHandler(dispatchEvent);
  var PROD_HOST_CONTEXT = {
    isInAParentText: true
  };
  function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
    hostContext = nextReactTag;
    nextReactTag += 2;
    return {
      node: createNode(hostContext, "RCTRawText", rootContainerInstance, {
        text: text
      }, internalInstanceHandle)
    };
  }
  function getPublicInstance(instance) {
    return null != instance.canonical && null != instance.canonical.publicInstance ? instance.canonical.publicInstance : null != instance._nativeTag ? instance : null;
  }
  var currentUpdatePriority = 0;
  function resolveUpdatePriority() {
    if (0 !== currentUpdatePriority) return currentUpdatePriority;
    var currentEventPriority = fabricGetCurrentEventPriority ? fabricGetCurrentEventPriority() : null;
    if (null != currentEventPriority) switch (currentEventPriority) {
      case FabricDiscretePriority:
        return 2;
    }
    return 32;
  }
  var scheduleTimeout = setTimeout,
    cancelTimeout = clearTimeout;
  function cloneHiddenInstance(instance) {
    var node = instance.node;
    var JSCompiler_inline_result = fastAddProperties(null, {
      style: {
        display: "none"
      }
    }, instance.canonical.viewConfig.validAttributes);
    return {
      node: cloneNodeWithNewProps(node, JSCompiler_inline_result),
      canonical: instance.canonical
    };
  }
  var HostTransitionContext = {
      $$typeof: REACT_CONTEXT_TYPE,
      Provider: null,
      Consumer: null,
      _currentValue: null,
      _currentValue2: null,
      _threadCount: 0
    },
    supportsMicrotasks = "undefined" !== typeof RN$enableMicrotasksInReact && !!RN$enableMicrotasksInReact,
    scheduleMicrotask = "function" === typeof queueMicrotask ? queueMicrotask : scheduleTimeout;
  function getInstanceFromNode(node) {
    return null != node.canonical && null != node.canonical.internalInstanceHandle ? node.canonical.internalInstanceHandle : node;
  }
  getFiberCurrentPropsFromNode$1 = function getFiberCurrentPropsFromNode$1(instance) {
    return instance.canonical.currentProps;
  };
  getInstanceFromNode$1 = getInstanceFromNode;
  getNodeFromInstance$1 = function getNodeFromInstance$1(fiber) {
    fiber = getPublicInstance(fiber.stateNode);
    if (null == fiber) throw Error("Could not find host instance from fiber");
    return fiber;
  };
  ResponderEventPlugin.injection.injectGlobalResponderHandler({
    onChange: function onChange(from, to, blockNativeResponder) {
      from && from.stateNode && nativeFabricUIManager.setIsJSResponder(from.stateNode.node, false, blockNativeResponder || false);
      to && to.stateNode && nativeFabricUIManager.setIsJSResponder(to.stateNode.node, true, blockNativeResponder || false);
    }
  });
  if ("function" !== typeof _$$_REQUIRE(_dependencyMap[2]).ReactFiberErrorDialog.showErrorDialog) throw Error("Expected ReactFiberErrorDialog.showErrorDialog to be a function.");
  function nativeOnUncaughtError(error, errorInfo) {
    false !== _$$_REQUIRE(_dependencyMap[2]).ReactFiberErrorDialog.showErrorDialog({
      errorBoundary: null,
      error: error,
      componentStack: null != errorInfo.componentStack ? errorInfo.componentStack : ""
    }) && reportGlobalError(error);
  }
  function nativeOnCaughtError(error, errorInfo) {
    false !== _$$_REQUIRE(_dependencyMap[2]).ReactFiberErrorDialog.showErrorDialog({
      errorBoundary: errorInfo.errorBoundary,
      error: error,
      componentStack: null != errorInfo.componentStack ? errorInfo.componentStack : ""
    }) && console.error(error);
  }
  batchedUpdatesImpl = function batchedUpdatesImpl(fn, a) {
    var prevExecutionContext = executionContext;
    executionContext |= 1;
    try {
      return fn(a);
    } finally {
      executionContext = prevExecutionContext, 0 === executionContext && (workInProgressRootRenderTargetTime = _$$_REQUIRE(_dependencyMap[3]).unstable_now() + 500, flushSyncWorkAcrossRoots_impl(0, true));
    }
  };
  var roots = new Map(),
    internals$jscomp$inline_1147 = {
      bundleType: 0,
      version: "19.0.0",
      rendererPackageName: "react-native-renderer",
      currentDispatcherRef: ReactSharedInternals,
      findFiberByHostInstance: getInstanceFromNode,
      reconcilerVersion: "19.0.0"
    };
  null !== extraDevToolsConfig && (internals$jscomp$inline_1147.rendererConfig = extraDevToolsConfig);
  if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
    var hook$jscomp$inline_1463 = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (!hook$jscomp$inline_1463.isDisabled && hook$jscomp$inline_1463.supportsFiber) try {
      rendererID = hook$jscomp$inline_1463.inject(internals$jscomp$inline_1147), injectedHook = hook$jscomp$inline_1463;
    } catch (err) {}
  }
  exports.createPortal = function (children, containerTag) {
    return createPortal$1(children, containerTag, null, 2 < arguments.length && undefined !== arguments[2] ? arguments[2] : null);
  };
  exports.dispatchCommand = function (handle, command, args) {
    var nativeTag = null != handle._nativeTag ? handle._nativeTag : _$$_REQUIRE(_dependencyMap[2]).getNativeTagFromPublicInstance(handle);
    null != nativeTag && (handle = _$$_REQUIRE(_dependencyMap[2]).getNodeFromPublicInstance(handle), null != handle ? nativeFabricUIManager.dispatchCommand(handle, command, args) : _$$_REQUIRE(_dependencyMap[2]).UIManager.dispatchViewManagerCommand(nativeTag, command, args));
  };
  exports.findHostInstance_DEPRECATED = function (componentOrHandle) {
    return null == componentOrHandle ? null : componentOrHandle.canonical && componentOrHandle.canonical.publicInstance ? componentOrHandle.canonical.publicInstance : componentOrHandle._nativeTag ? componentOrHandle : findHostInstance(componentOrHandle);
  };
  exports.findNodeHandle = function (componentOrHandle) {
    if (null == componentOrHandle) return null;
    if ("number" === typeof componentOrHandle) return componentOrHandle;
    if (componentOrHandle._nativeTag) return componentOrHandle._nativeTag;
    if (null != componentOrHandle.canonical && null != componentOrHandle.canonical.nativeTag) return componentOrHandle.canonical.nativeTag;
    var nativeTag = _$$_REQUIRE(_dependencyMap[2]).getNativeTagFromPublicInstance(componentOrHandle);
    if (nativeTag) return nativeTag;
    componentOrHandle = findHostInstance(componentOrHandle);
    return null == componentOrHandle ? componentOrHandle : null != componentOrHandle._nativeTag ? componentOrHandle._nativeTag : _$$_REQUIRE(_dependencyMap[2]).getNativeTagFromPublicInstance(componentOrHandle);
  };
  exports.getInspectorDataForInstance = getInspectorDataForInstance;
  exports.getNodeFromInternalInstanceHandle = function (internalInstanceHandle) {
    return internalInstanceHandle && internalInstanceHandle.stateNode && internalInstanceHandle.stateNode.node;
  };
  exports.getPublicInstanceFromInternalInstanceHandle = function (internalInstanceHandle) {
    var instance = internalInstanceHandle.stateNode;
    return null == instance ? null : 6 === internalInstanceHandle.tag ? (null == instance.publicInstance && (instance.publicInstance = _$$_REQUIRE(_dependencyMap[2]).createPublicTextInstance(internalInstanceHandle)), instance.publicInstance) : getPublicInstance(internalInstanceHandle.stateNode);
  };
  exports.isChildPublicInstance = function () {
    throw Error("isChildPublicInstance() is not available in production.");
  };
  exports.render = function (element, containerTag, callback, concurrentRoot, options) {
    var root = roots.get(containerTag);
    if (!root) {
      root = nativeOnUncaughtError;
      var onCaughtError = nativeOnCaughtError,
        onRecoverableError = defaultOnRecoverableError;
      options && undefined !== options.onUncaughtError && (root = options.onUncaughtError);
      options && undefined !== options.onCaughtError && (onCaughtError = options.onCaughtError);
      options && undefined !== options.onRecoverableError && (onRecoverableError = options.onRecoverableError);
      concurrentRoot = concurrentRoot ? 1 : 0;
      options = new FiberRootNode(containerTag, concurrentRoot, false, "", root, onCaughtError, onRecoverableError, null);
      concurrentRoot = createFiberImplClass(3, null, null, 1 === concurrentRoot ? 1 : 0);
      options.current = concurrentRoot;
      concurrentRoot.stateNode = options;
      root = createCache();
      root.refCount++;
      options.pooledCache = root;
      root.refCount++;
      concurrentRoot.memoizedState = {
        element: null,
        isDehydrated: false,
        cache: root
      };
      initializeUpdateQueue(concurrentRoot);
      root = options;
      roots.set(containerTag, root);
    }
    updateContainer(element, root, null, callback);
    a: if (element = root.current, element.child) switch (element.child.tag) {
      case 27:
      case 5:
        element = getPublicInstance(element.child.stateNode);
        break a;
      default:
        element = element.child.stateNode;
    } else element = null;
    return element;
  };
  exports.sendAccessibilityEvent = function (handle, eventType) {
    var nativeTag = null != handle._nativeTag ? handle._nativeTag : _$$_REQUIRE(_dependencyMap[2]).getNativeTagFromPublicInstance(handle);
    null != nativeTag && (handle = _$$_REQUIRE(_dependencyMap[2]).getNodeFromPublicInstance(handle), null != handle ? nativeFabricUIManager.sendAccessibilityEvent(handle, eventType) : _$$_REQUIRE(_dependencyMap[2]).legacySendAccessibilityEvent(nativeTag, eventType));
  };
  exports.stopSurface = function (containerTag) {
    var root = roots.get(containerTag);
    root && updateContainer(null, root, null, function () {
      roots.delete(containerTag);
    });
  };
  exports.unmountComponentAtNode = function (containerTag) {
    this.stopSurface(containerTag);
  };
},60,[61,119,261,270]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  _$$_REQUIRE(_dependencyMap[0]);
},61,[62]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use client';
  'use strict';

  var start = Date.now();
  _$$_REQUIRE(_dependencyMap[0]);
  _$$_REQUIRE(_dependencyMap[1]).default();
  _$$_REQUIRE(_dependencyMap[2]);
  _$$_REQUIRE(_dependencyMap[3]);
  _$$_REQUIRE(_dependencyMap[4]);
  _$$_REQUIRE(_dependencyMap[5]);
  _$$_REQUIRE(_dependencyMap[6]);
  _$$_REQUIRE(_dependencyMap[7]);
  _$$_REQUIRE(_dependencyMap[8]);
  _$$_REQUIRE(_dependencyMap[9]);
  _$$_REQUIRE(_dependencyMap[10]);
  _$$_REQUIRE(_dependencyMap[11]);
  _$$_REQUIRE(_dependencyMap[12]);
  _$$_REQUIRE(_dependencyMap[13]).default.markPoint('initializeCore_start', _$$_REQUIRE(_dependencyMap[13]).default.currentTimestamp() - (Date.now() - start));
  _$$_REQUIRE(_dependencyMap[13]).default.markPoint('initializeCore_end');
},62,[63,64,132,145,150,158,169,172,220,225,226,230,233,186]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use client';
  'use strict';

  if (global.window === undefined) {
    global.window = global;
  }
  if (global.self === undefined) {
    global.self = global;
  }
  global.process = global.process || {};
  global.process.env = global.process.env || {};
  if (!global.process.env.NODE_ENV) {
    global.process.env.NODE_ENV = 'production';
  }
},63,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = setUpDOM;
  var initialized = false;
  function setUpDOM() {
    if (initialized) {
      return;
    }
    initialized = true;
    (0, _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal)('DOMRect', function () {
      return _$$_REQUIRE(_dependencyMap[1]).default;
    });
    (0, _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal)('DOMRectReadOnly', function () {
      return _$$_REQUIRE(_dependencyMap[2]).default;
    });
    (0, _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal)('DOMRectList', function () {
      return _$$_REQUIRE(_dependencyMap[3]).default;
    });
    (0, _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal)('HTMLCollection', function () {
      return _$$_REQUIRE(_dependencyMap[4]).default;
    });
    (0, _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal)('NodeList', function () {
      return _$$_REQUIRE(_dependencyMap[5]).default;
    });
    (0, _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal)('Node', function () {
      return _$$_REQUIRE(_dependencyMap[6]).default;
    });
    (0, _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal)('Document', function () {
      return _$$_REQUIRE(_dependencyMap[7]).default;
    });
    (0, _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal)('CharacterData', function () {
      return _$$_REQUIRE(_dependencyMap[8]).default;
    });
    (0, _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal)('Text', function () {
      return _$$_REQUIRE(_dependencyMap[9]).default;
    });
    (0, _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal)('Element', function () {
      return _$$_REQUIRE(_dependencyMap[10]).default;
    });
    (0, _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal)('HTMLElement', function () {
      return _$$_REQUIRE(_dependencyMap[11]).default;
    });
  }
},64,[65,66,67,68,70,71,72,82,130,131,80,83]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.polyfillGlobal = polyfillGlobal;
  exports.polyfillObjectProperty = polyfillObjectProperty;
  function polyfillObjectProperty(object, name, getValue) {
    var descriptor = Object.getOwnPropertyDescriptor(object, name);
    var _ref = descriptor || {},
      enumerable = _ref.enumerable,
      writable = _ref.writable,
      _ref$configurable = _ref.configurable,
      configurable = _ref$configurable === undefined ? false : _ref$configurable;
    if (descriptor && !configurable) {
      console.error('Failed to set polyfill. ' + name + ' is not configurable.');
      return;
    }
    _$$_REQUIRE(_dependencyMap[0]).default(object, name, {
      get: getValue,
      enumerable: enumerable !== false,
      writable: writable !== false
    });
  }
  function polyfillGlobal(name, getValue) {
    polyfillObjectProperty(global, name, getValue);
  }
},65,[42]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _DOMRectReadOnly2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var DOMRect = exports.default = /*#__PURE__*/function (_DOMRectReadOnly) {
    function DOMRect() {
      (0, _classCallCheck2.default)(this, DOMRect);
      return _callSuper(this, DOMRect, arguments);
    }
    (0, _inherits2.default)(DOMRect, _DOMRectReadOnly);
    return (0, _createClass2.default)(DOMRect, [{
      key: "x",
      get: function get() {
        return this.__getInternalX();
      },
      set: function set(x) {
        this.__setInternalX(x);
      }
    }, {
      key: "y",
      get: function get() {
        return this.__getInternalY();
      },
      set: function set(y) {
        this.__setInternalY(y);
      }
    }, {
      key: "width",
      get: function get() {
        return this.__getInternalWidth();
      },
      set: function set(width) {
        this.__setInternalWidth(width);
      }
    }, {
      key: "height",
      get: function get() {
        return this.__getInternalHeight();
      },
      set: function set(height) {
        this.__setInternalHeight(height);
      }
    }], [{
      key: "fromRect",
      value: function fromRect(rect) {
        if (!rect) {
          return new DOMRect();
        }
        return new DOMRect(rect.x, rect.y, rect.width, rect.height);
      }
    }]);
  }(_DOMRectReadOnly2.default);
},66,[1,12,13,23,25,28,67]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _classPrivateFieldLooseBase2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _classPrivateFieldLooseKey2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  function castToNumber(value) {
    return value ? Number(value) : 0;
  }
  var _x = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("x");
  var _y = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("y");
  var _width = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("width");
  var _height = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("height");
  var DOMRectReadOnly = exports.default = /*#__PURE__*/function () {
    function DOMRectReadOnly(x, y, width, height) {
      (0, _classCallCheck2.default)(this, DOMRectReadOnly);
      Object.defineProperty(this, _x, {
        writable: true,
        value: undefined
      });
      Object.defineProperty(this, _y, {
        writable: true,
        value: undefined
      });
      Object.defineProperty(this, _width, {
        writable: true,
        value: undefined
      });
      Object.defineProperty(this, _height, {
        writable: true,
        value: undefined
      });
      this.__setInternalX(x);
      this.__setInternalY(y);
      this.__setInternalWidth(width);
      this.__setInternalHeight(height);
    }
    return (0, _createClass2.default)(DOMRectReadOnly, [{
      key: "x",
      get: function get() {
        return (0, _classPrivateFieldLooseBase2.default)(this, _x)[_x];
      }
    }, {
      key: "y",
      get: function get() {
        return (0, _classPrivateFieldLooseBase2.default)(this, _y)[_y];
      }
    }, {
      key: "width",
      get: function get() {
        return (0, _classPrivateFieldLooseBase2.default)(this, _width)[_width];
      }
    }, {
      key: "height",
      get: function get() {
        return (0, _classPrivateFieldLooseBase2.default)(this, _height)[_height];
      }
    }, {
      key: "top",
      get: function get() {
        var height = (0, _classPrivateFieldLooseBase2.default)(this, _height)[_height];
        var y = (0, _classPrivateFieldLooseBase2.default)(this, _y)[_y];
        if (height < 0) {
          return y + height;
        }
        return y;
      }
    }, {
      key: "right",
      get: function get() {
        var width = (0, _classPrivateFieldLooseBase2.default)(this, _width)[_width];
        var x = (0, _classPrivateFieldLooseBase2.default)(this, _x)[_x];
        if (width < 0) {
          return x;
        }
        return x + width;
      }
    }, {
      key: "bottom",
      get: function get() {
        var height = (0, _classPrivateFieldLooseBase2.default)(this, _height)[_height];
        var y = (0, _classPrivateFieldLooseBase2.default)(this, _y)[_y];
        if (height < 0) {
          return y;
        }
        return y + height;
      }
    }, {
      key: "left",
      get: function get() {
        var width = (0, _classPrivateFieldLooseBase2.default)(this, _width)[_width];
        var x = (0, _classPrivateFieldLooseBase2.default)(this, _x)[_x];
        if (width < 0) {
          return x + width;
        }
        return x;
      }
    }, {
      key: "toJSON",
      value: function toJSON() {
        var x = this.x,
          y = this.y,
          width = this.width,
          height = this.height,
          top = this.top,
          left = this.left,
          bottom = this.bottom,
          right = this.right;
        return {
          x: x,
          y: y,
          width: width,
          height: height,
          top: top,
          left: left,
          bottom: bottom,
          right: right
        };
      }
    }, {
      key: "__getInternalX",
      value: function __getInternalX() {
        return (0, _classPrivateFieldLooseBase2.default)(this, _x)[_x];
      }
    }, {
      key: "__getInternalY",
      value: function __getInternalY() {
        return (0, _classPrivateFieldLooseBase2.default)(this, _y)[_y];
      }
    }, {
      key: "__getInternalWidth",
      value: function __getInternalWidth() {
        return (0, _classPrivateFieldLooseBase2.default)(this, _width)[_width];
      }
    }, {
      key: "__getInternalHeight",
      value: function __getInternalHeight() {
        return (0, _classPrivateFieldLooseBase2.default)(this, _height)[_height];
      }
    }, {
      key: "__setInternalX",
      value: function __setInternalX(x) {
        (0, _classPrivateFieldLooseBase2.default)(this, _x)[_x] = castToNumber(x);
      }
    }, {
      key: "__setInternalY",
      value: function __setInternalY(y) {
        (0, _classPrivateFieldLooseBase2.default)(this, _y)[_y] = castToNumber(y);
      }
    }, {
      key: "__setInternalWidth",
      value: function __setInternalWidth(width) {
        (0, _classPrivateFieldLooseBase2.default)(this, _width)[_width] = castToNumber(width);
      }
    }, {
      key: "__setInternalHeight",
      value: function __setInternalHeight(height) {
        (0, _classPrivateFieldLooseBase2.default)(this, _height)[_height] = castToNumber(height);
      }
    }], [{
      key: "fromRect",
      value: function fromRect(rect) {
        if (!rect) {
          return new DOMRectReadOnly();
        }
        return new DOMRectReadOnly(rect.x, rect.y, rect.width, rect.height);
      }
    }]);
  }();
},67,[1,12,13,31,32]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.createDOMRectList = createDOMRectList;
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _classPrivateFieldLooseBase2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _classPrivateFieldLooseKey2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _length = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("length");
  var DOMRectList = exports.default = /*#__PURE__*/function () {
    function DOMRectList(elements) {
      (0, _classCallCheck2.default)(this, DOMRectList);
      Object.defineProperty(this, _length, {
        writable: true,
        value: undefined
      });
      for (var i = 0; i < elements.length; i++) {
        Object.defineProperty(this, i, {
          value: elements[i],
          enumerable: true,
          configurable: false,
          writable: false
        });
      }
      (0, _classPrivateFieldLooseBase2.default)(this, _length)[_length] = elements.length;
    }
    return (0, _createClass2.default)(DOMRectList, [{
      key: "length",
      get: function get() {
        return (0, _classPrivateFieldLooseBase2.default)(this, _length)[_length];
      }
    }, {
      key: "item",
      value: function item(index) {
        if (index < 0 || index >= (0, _classPrivateFieldLooseBase2.default)(this, _length)[_length]) {
          return null;
        }
        var arrayLike = this;
        return arrayLike[index];
      }
    }, {
      key: Symbol.iterator,
      value: function value() {
        return (0, _$$_REQUIRE(_dependencyMap[5]).createValueIterator)(this);
      }
    }]);
  }();
  function createDOMRectList(elements) {
    return new DOMRectList(elements);
  }
},68,[1,12,13,31,32,69]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.createEntriesIterator = createEntriesIterator;
  exports.createKeyIterator = createKeyIterator;
  exports.createValueIterator = createValueIterator;
  function* createValueIterator(arrayLike) {
    for (var i = 0; i < arrayLike.length; i++) {
      yield arrayLike[i];
    }
  }
  function* createKeyIterator(arrayLike) {
    for (var i = 0; i < arrayLike.length; i++) {
      yield i;
    }
  }
  function* createEntriesIterator(arrayLike) {
    for (var i = 0; i < arrayLike.length; i++) {
      yield [i, arrayLike[i]];
    }
  }
},69,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.createHTMLCollection = createHTMLCollection;
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _classPrivateFieldLooseBase2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _classPrivateFieldLooseKey2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _length = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("length");
  var HTMLCollection = exports.default = /*#__PURE__*/function () {
    function HTMLCollection(elements) {
      (0, _classCallCheck2.default)(this, HTMLCollection);
      Object.defineProperty(this, _length, {
        writable: true,
        value: undefined
      });
      for (var i = 0; i < elements.length; i++) {
        Object.defineProperty(this, i, {
          value: elements[i],
          enumerable: true,
          configurable: false,
          writable: false
        });
      }
      (0, _classPrivateFieldLooseBase2.default)(this, _length)[_length] = elements.length;
    }
    return (0, _createClass2.default)(HTMLCollection, [{
      key: "length",
      get: function get() {
        return (0, _classPrivateFieldLooseBase2.default)(this, _length)[_length];
      }
    }, {
      key: "item",
      value: function item(index) {
        if (index < 0 || index >= (0, _classPrivateFieldLooseBase2.default)(this, _length)[_length]) {
          return null;
        }
        var arrayLike = this;
        return arrayLike[index];
      }
    }, {
      key: "namedItem",
      value: function namedItem(name) {
        return null;
      }
    }, {
      key: Symbol.iterator,
      value: function value() {
        return (0, _$$_REQUIRE(_dependencyMap[5]).createValueIterator)(this);
      }
    }]);
  }();
  function createHTMLCollection(elements) {
    return new HTMLCollection(elements);
  }
},70,[1,12,13,31,32,69]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.createNodeList = createNodeList;
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _classPrivateFieldLooseBase2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _classPrivateFieldLooseKey2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _length = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("length");
  var NodeList = exports.default = /*#__PURE__*/function () {
    function NodeList(elements) {
      (0, _classCallCheck2.default)(this, NodeList);
      Object.defineProperty(this, _length, {
        writable: true,
        value: undefined
      });
      for (var i = 0; i < elements.length; i++) {
        Object.defineProperty(this, i, {
          value: elements[i],
          writable: false
        });
      }
      (0, _classPrivateFieldLooseBase2.default)(this, _length)[_length] = elements.length;
    }
    return (0, _createClass2.default)(NodeList, [{
      key: "length",
      get: function get() {
        return (0, _classPrivateFieldLooseBase2.default)(this, _length)[_length];
      }
    }, {
      key: "item",
      value: function item(index) {
        if (index < 0 || index >= (0, _classPrivateFieldLooseBase2.default)(this, _length)[_length]) {
          return null;
        }
        var arrayLike = this;
        return arrayLike[index];
      }
    }, {
      key: "entries",
      value: function entries() {
        return (0, _$$_REQUIRE(_dependencyMap[5]).createEntriesIterator)(this);
      }
    }, {
      key: "forEach",
      value: function forEach(callbackFn, thisArg) {
        var arrayLike = this;
        for (var _index2 = 0; _index2 < (0, _classPrivateFieldLooseBase2.default)(this, _length)[_length]; _index2++) {
          if (thisArg == null) {
            callbackFn(arrayLike[_index2], _index2, this);
          } else {
            callbackFn.call(thisArg, arrayLike[_index2], _index2, this);
          }
        }
      }
    }, {
      key: "keys",
      value: function keys() {
        return (0, _$$_REQUIRE(_dependencyMap[5]).createKeyIterator)(this);
      }
    }, {
      key: "values",
      value: function values() {
        return (0, _$$_REQUIRE(_dependencyMap[5]).createValueIterator)(this);
      }
    }, {
      key: Symbol.iterator,
      value: function value() {
        return (0, _$$_REQUIRE(_dependencyMap[5]).createValueIterator)(this);
      }
    }]);
  }();
  function createNodeList(elements) {
    return new NodeList(elements);
  }
},71,[1,12,13,31,32,69]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  exports.getChildNodes = getChildNodes;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var ReactNativeFeatureFlags = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));
  var _NativeDOM = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var ReadOnlyNode = exports.default = /*#__PURE__*/function () {
    function ReadOnlyNode(instanceHandle, ownerDocument) {
      (0, _classCallCheck2.default)(this, ReadOnlyNode);
      (0, _$$_REQUIRE(_dependencyMap[6]).setOwnerDocument)(this, ownerDocument);
      (0, _$$_REQUIRE(_dependencyMap[6]).setInstanceHandle)(this, instanceHandle);
    }
    return (0, _createClass2.default)(ReadOnlyNode, [{
      key: "childNodes",
      get: function get() {
        var childNodes = getChildNodes(this);
        return (0, _$$_REQUIRE(_dependencyMap[7]).createNodeList)(childNodes);
      }
    }, {
      key: "firstChild",
      get: function get() {
        var childNodes = getChildNodes(this);
        if (childNodes.length === 0) {
          return null;
        }
        return childNodes[0];
      }
    }, {
      key: "isConnected",
      get: function get() {
        var shadowNode = (0, _$$_REQUIRE(_dependencyMap[6]).getNativeNodeReference)(this);
        if (shadowNode == null) {
          return false;
        }
        return _NativeDOM.default.isConnected(shadowNode);
      }
    }, {
      key: "lastChild",
      get: function get() {
        var childNodes = getChildNodes(this);
        if (childNodes.length === 0) {
          return null;
        }
        return childNodes[childNodes.length - 1];
      }
    }, {
      key: "nextSibling",
      get: function get() {
        var _getNodeSiblingsAndPo = getNodeSiblingsAndPosition(this),
          _getNodeSiblingsAndPo2 = (0, _slicedToArray2.default)(_getNodeSiblingsAndPo, 2),
          siblings = _getNodeSiblingsAndPo2[0],
          position = _getNodeSiblingsAndPo2[1];
        if (position === siblings.length - 1) {
          return null;
        }
        return siblings[position + 1];
      }
    }, {
      key: "nodeName",
      get: function get() {
        throw new TypeError('`nodeName` is abstract and must be implemented in a subclass of `ReadOnlyNode`');
      }
    }, {
      key: "nodeType",
      get: function get() {
        throw new TypeError('`nodeType` is abstract and must be implemented in a subclass of `ReadOnlyNode`');
      }
    }, {
      key: "nodeValue",
      get: function get() {
        throw new TypeError('`nodeValue` is abstract and must be implemented in a subclass of `ReadOnlyNode`');
      }
    }, {
      key: "ownerDocument",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[6]).getOwnerDocument)(this);
      }
    }, {
      key: "parentElement",
      get: function get() {
        var parentNode = this.parentNode;
        if (parentNode instanceof getReadOnlyElementClass()) {
          return parentNode;
        }
        return null;
      }
    }, {
      key: "parentNode",
      get: function get() {
        var _getPublicInstanceFro;
        var shadowNode = (0, _$$_REQUIRE(_dependencyMap[6]).getNativeNodeReference)(this);
        if (shadowNode == null) {
          return null;
        }
        var parentInstanceHandle = _NativeDOM.default.getParentNode(shadowNode);
        if (parentInstanceHandle == null) {
          return null;
        }
        return (_getPublicInstanceFro = (0, _$$_REQUIRE(_dependencyMap[6]).getPublicInstanceFromInstanceHandle)(parentInstanceHandle)) != null ? _getPublicInstanceFro : null;
      }
    }, {
      key: "previousSibling",
      get: function get() {
        var _getNodeSiblingsAndPo3 = getNodeSiblingsAndPosition(this),
          _getNodeSiblingsAndPo4 = (0, _slicedToArray2.default)(_getNodeSiblingsAndPo3, 2),
          siblings = _getNodeSiblingsAndPo4[0],
          position = _getNodeSiblingsAndPo4[1];
        if (position === 0) {
          return null;
        }
        return siblings[position - 1];
      }
    }, {
      key: "textContent",
      get: function get() {
        throw new TypeError('`textContent` is abstract and must be implemented in a subclass of `ReadOnlyNode`');
      }
    }, {
      key: "compareDocumentPosition",
      value: function compareDocumentPosition(otherNode) {
        if (otherNode === this) {
          return 0;
        }
        var shadowNode = (0, _$$_REQUIRE(_dependencyMap[6]).getNativeNodeReference)(this);
        var otherShadowNode = (0, _$$_REQUIRE(_dependencyMap[6]).getNativeNodeReference)(otherNode);
        if (shadowNode == null || otherShadowNode == null) {
          return ReadOnlyNode.DOCUMENT_POSITION_DISCONNECTED;
        }
        return _NativeDOM.default.compareDocumentPosition(shadowNode, otherShadowNode);
      }
    }, {
      key: "contains",
      value: function contains(otherNode) {
        if (otherNode === this) {
          return true;
        }
        var position = this.compareDocumentPosition(otherNode);
        return (position & ReadOnlyNode.DOCUMENT_POSITION_CONTAINED_BY) !== 0;
      }
    }, {
      key: "getRootNode",
      value: function getRootNode() {
        if (ReactNativeFeatureFlags.enableDOMDocumentAPI()) {
          if (this.isConnected) {
            var _this$ownerDocument;
            return (_this$ownerDocument = this.ownerDocument) != null ? _this$ownerDocument : this;
          }
          return this;
        } else {
          var lastKnownParent = this;
          var nextPossibleParent = this.parentNode;
          while (nextPossibleParent != null) {
            lastKnownParent = nextPossibleParent;
            nextPossibleParent = nextPossibleParent.parentNode;
          }
          return lastKnownParent;
        }
      }
    }, {
      key: "hasChildNodes",
      value: function hasChildNodes() {
        return getChildNodes(this).length > 0;
      }
    }]);
  }();
  ReadOnlyNode.ELEMENT_NODE = 1;
  ReadOnlyNode.ATTRIBUTE_NODE = 2;
  ReadOnlyNode.TEXT_NODE = 3;
  ReadOnlyNode.CDATA_SECTION_NODE = 4;
  ReadOnlyNode.ENTITY_REFERENCE_NODE = 5;
  ReadOnlyNode.ENTITY_NODE = 6;
  ReadOnlyNode.PROCESSING_INSTRUCTION_NODE = 7;
  ReadOnlyNode.COMMENT_NODE = 8;
  ReadOnlyNode.DOCUMENT_NODE = 9;
  ReadOnlyNode.DOCUMENT_TYPE_NODE = 10;
  ReadOnlyNode.DOCUMENT_FRAGMENT_NODE = 11;
  ReadOnlyNode.NOTATION_NODE = 12;
  ReadOnlyNode.DOCUMENT_POSITION_DISCONNECTED = 1;
  ReadOnlyNode.DOCUMENT_POSITION_PRECEDING = 2;
  ReadOnlyNode.DOCUMENT_POSITION_FOLLOWING = 4;
  ReadOnlyNode.DOCUMENT_POSITION_CONTAINS = 8;
  ReadOnlyNode.DOCUMENT_POSITION_CONTAINED_BY = 16;
  ReadOnlyNode.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = 32;
  function getChildNodes(node) {
    var shadowNode = (0, _$$_REQUIRE(_dependencyMap[6]).getNativeNodeReference)(node);
    if (shadowNode == null) {
      return [];
    }
    var childNodeInstanceHandles = _NativeDOM.default.getChildNodes(shadowNode);
    return childNodeInstanceHandles.map(function (instanceHandle) {
      return (0, _$$_REQUIRE(_dependencyMap[6]).getPublicInstanceFromInstanceHandle)(instanceHandle);
    }).filter(Boolean);
  }
  function getNodeSiblingsAndPosition(node) {
    var parent = node.parentNode;
    if (parent == null) {
      return [[node], 0];
    }
    var siblings = getChildNodes(parent);
    var position = siblings.indexOf(node);
    if (position === -1) {
      throw new TypeError("Missing node in parent's child node list");
    }
    return [siblings, position];
  }
  var ReadOnlyElementClass;
  function getReadOnlyElementClass() {
    if (ReadOnlyElementClass == null) {
      ReadOnlyElementClass = _$$_REQUIRE(_dependencyMap[8]).default;
    }
    return ReadOnlyElementClass;
  }
},72,[1,38,12,13,73,76,77,71,80]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.useTurboModules = exports.useTurboModuleInterop = exports.useRefsForTextInputState = exports.useRawPropsJsiValue = exports.useOptimizedEventBatchingOnAndroid = exports.useNativeViewConfigsInBridgelessMode = exports.useFabricInterop = exports.useEditTextStockAndroidFocusBehavior = exports.useAlwaysAvailableJSErrorHandling = exports.traceTurboModulePromiseRejectionsOnAndroid = exports.throwExceptionInsteadOfDeadlockOnTurboModuleSetupDuringSyncRenderIOS = exports.shouldUseSetNativePropsInFabric = exports.shouldUseRemoveClippedSubviewsAsDefaultOnIOS = exports.shouldUseAnimatedObjectForTransform = exports.scheduleAnimatedCleanupInMicrotask = exports.removeTurboModuleManagerDelegateMutex = exports.override = exports.lazyAnimationCallbacks = exports.jsOnlyTestFlag = exports.isLayoutAnimationEnabled = exports.fuseboxNetworkInspectionEnabled = exports.fuseboxEnabledRelease = exports.fixVirtualizeListCollapseWindowSize = exports.fixMountingCoordinatorReportedPendingTransactionsOnAndroid = exports.fixMappingOfEventPrioritiesBetweenFabricAndReact = exports.fixDifferentiatorEmittingUpdatesWithWrongParentTag = exports.excludeYogaFromRawProps = exports.enableViewRecyclingForView = exports.enableViewRecyclingForText = exports.enableViewRecycling = exports.enableViewCulling = exports.enableUIConsistency = exports.enableSynchronousStateUpdates = exports.enableReportEventPaintTime = exports.enablePropsUpdateReconciliationAndroid = exports.enablePreciseSchedulingForPremountItemsOnAndroid = exports.enableNewBackgroundAndBorderDrawables = exports.enableNativeCSSParsing = exports.enableLongTaskAPI = exports.enableLayoutAnimationsOnIOS = exports.enableLayoutAnimationsOnAndroid = exports.enableJSRuntimeGCOnMemoryPressureOnIOS = exports.enableImagePrefetchingAndroid = exports.enableIOSViewClipToPaddingBox = exports.enableFabricRenderer = exports.enableFabricLogs = exports.enableEagerRootViewAttachment = exports.enableDOMDocumentAPI = exports.enableCppPropsIteratorSetter = exports.enableBridgelessArchitecture = exports.enableAnimatedClearImmediateFix = exports.enableAccumulatedUpdatesInRawPropsAndroid = exports.enableAccessToHostTreeInFabric = exports.disableMountItemReorderingAndroid = exports.disableInteractionManager = exports.commonTestFlagWithoutNativeImplementation = exports.commonTestFlag = exports.avoidStateUpdateInAnimatedPropsMemo = exports.animatedShouldUseSingleOp = exports.animatedShouldDebounceQueueFlush = undefined;
  var jsOnlyTestFlag = exports.jsOnlyTestFlag = (0, _$$_REQUIRE(_dependencyMap[0]).createJavaScriptFlagGetter)('jsOnlyTestFlag', false);
  var animatedShouldDebounceQueueFlush = exports.animatedShouldDebounceQueueFlush = (0, _$$_REQUIRE(_dependencyMap[0]).createJavaScriptFlagGetter)('animatedShouldDebounceQueueFlush', false);
  var animatedShouldUseSingleOp = exports.animatedShouldUseSingleOp = (0, _$$_REQUIRE(_dependencyMap[0]).createJavaScriptFlagGetter)('animatedShouldUseSingleOp', false);
  var avoidStateUpdateInAnimatedPropsMemo = exports.avoidStateUpdateInAnimatedPropsMemo = (0, _$$_REQUIRE(_dependencyMap[0]).createJavaScriptFlagGetter)('avoidStateUpdateInAnimatedPropsMemo', false);
  var disableInteractionManager = exports.disableInteractionManager = (0, _$$_REQUIRE(_dependencyMap[0]).createJavaScriptFlagGetter)('disableInteractionManager', false);
  var enableAccessToHostTreeInFabric = exports.enableAccessToHostTreeInFabric = (0, _$$_REQUIRE(_dependencyMap[0]).createJavaScriptFlagGetter)('enableAccessToHostTreeInFabric', false);
  var enableAnimatedClearImmediateFix = exports.enableAnimatedClearImmediateFix = (0, _$$_REQUIRE(_dependencyMap[0]).createJavaScriptFlagGetter)('enableAnimatedClearImmediateFix', true);
  var enableDOMDocumentAPI = exports.enableDOMDocumentAPI = (0, _$$_REQUIRE(_dependencyMap[0]).createJavaScriptFlagGetter)('enableDOMDocumentAPI', false);
  var fixVirtualizeListCollapseWindowSize = exports.fixVirtualizeListCollapseWindowSize = (0, _$$_REQUIRE(_dependencyMap[0]).createJavaScriptFlagGetter)('fixVirtualizeListCollapseWindowSize', false);
  var isLayoutAnimationEnabled = exports.isLayoutAnimationEnabled = (0, _$$_REQUIRE(_dependencyMap[0]).createJavaScriptFlagGetter)('isLayoutAnimationEnabled', true);
  var scheduleAnimatedCleanupInMicrotask = exports.scheduleAnimatedCleanupInMicrotask = (0, _$$_REQUIRE(_dependencyMap[0]).createJavaScriptFlagGetter)('scheduleAnimatedCleanupInMicrotask', false);
  var shouldUseAnimatedObjectForTransform = exports.shouldUseAnimatedObjectForTransform = (0, _$$_REQUIRE(_dependencyMap[0]).createJavaScriptFlagGetter)('shouldUseAnimatedObjectForTransform', false);
  var shouldUseRemoveClippedSubviewsAsDefaultOnIOS = exports.shouldUseRemoveClippedSubviewsAsDefaultOnIOS = (0, _$$_REQUIRE(_dependencyMap[0]).createJavaScriptFlagGetter)('shouldUseRemoveClippedSubviewsAsDefaultOnIOS', false);
  var shouldUseSetNativePropsInFabric = exports.shouldUseSetNativePropsInFabric = (0, _$$_REQUIRE(_dependencyMap[0]).createJavaScriptFlagGetter)('shouldUseSetNativePropsInFabric', true);
  var useRefsForTextInputState = exports.useRefsForTextInputState = (0, _$$_REQUIRE(_dependencyMap[0]).createJavaScriptFlagGetter)('useRefsForTextInputState', false);
  var commonTestFlag = exports.commonTestFlag = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('commonTestFlag', false);
  var commonTestFlagWithoutNativeImplementation = exports.commonTestFlagWithoutNativeImplementation = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('commonTestFlagWithoutNativeImplementation', false);
  var disableMountItemReorderingAndroid = exports.disableMountItemReorderingAndroid = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('disableMountItemReorderingAndroid', false);
  var enableAccumulatedUpdatesInRawPropsAndroid = exports.enableAccumulatedUpdatesInRawPropsAndroid = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('enableAccumulatedUpdatesInRawPropsAndroid', false);
  var enableBridgelessArchitecture = exports.enableBridgelessArchitecture = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('enableBridgelessArchitecture', false);
  var enableCppPropsIteratorSetter = exports.enableCppPropsIteratorSetter = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('enableCppPropsIteratorSetter', false);
  var enableEagerRootViewAttachment = exports.enableEagerRootViewAttachment = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('enableEagerRootViewAttachment', false);
  var enableFabricLogs = exports.enableFabricLogs = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('enableFabricLogs', false);
  var enableFabricRenderer = exports.enableFabricRenderer = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('enableFabricRenderer', false);
  var enableIOSViewClipToPaddingBox = exports.enableIOSViewClipToPaddingBox = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('enableIOSViewClipToPaddingBox', false);
  var enableImagePrefetchingAndroid = exports.enableImagePrefetchingAndroid = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('enableImagePrefetchingAndroid', false);
  var enableJSRuntimeGCOnMemoryPressureOnIOS = exports.enableJSRuntimeGCOnMemoryPressureOnIOS = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('enableJSRuntimeGCOnMemoryPressureOnIOS', false);
  var enableLayoutAnimationsOnAndroid = exports.enableLayoutAnimationsOnAndroid = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('enableLayoutAnimationsOnAndroid', false);
  var enableLayoutAnimationsOnIOS = exports.enableLayoutAnimationsOnIOS = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('enableLayoutAnimationsOnIOS', true);
  var enableLongTaskAPI = exports.enableLongTaskAPI = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('enableLongTaskAPI', false);
  var enableNativeCSSParsing = exports.enableNativeCSSParsing = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('enableNativeCSSParsing', false);
  var enableNewBackgroundAndBorderDrawables = exports.enableNewBackgroundAndBorderDrawables = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('enableNewBackgroundAndBorderDrawables', false);
  var enablePreciseSchedulingForPremountItemsOnAndroid = exports.enablePreciseSchedulingForPremountItemsOnAndroid = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('enablePreciseSchedulingForPremountItemsOnAndroid', false);
  var enablePropsUpdateReconciliationAndroid = exports.enablePropsUpdateReconciliationAndroid = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('enablePropsUpdateReconciliationAndroid', false);
  var enableReportEventPaintTime = exports.enableReportEventPaintTime = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('enableReportEventPaintTime', false);
  var enableSynchronousStateUpdates = exports.enableSynchronousStateUpdates = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('enableSynchronousStateUpdates', false);
  var enableUIConsistency = exports.enableUIConsistency = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('enableUIConsistency', false);
  var enableViewCulling = exports.enableViewCulling = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('enableViewCulling', false);
  var enableViewRecycling = exports.enableViewRecycling = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('enableViewRecycling', false);
  var enableViewRecyclingForText = exports.enableViewRecyclingForText = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('enableViewRecyclingForText', true);
  var enableViewRecyclingForView = exports.enableViewRecyclingForView = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('enableViewRecyclingForView', true);
  var excludeYogaFromRawProps = exports.excludeYogaFromRawProps = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('excludeYogaFromRawProps', false);
  var fixDifferentiatorEmittingUpdatesWithWrongParentTag = exports.fixDifferentiatorEmittingUpdatesWithWrongParentTag = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('fixDifferentiatorEmittingUpdatesWithWrongParentTag', true);
  var fixMappingOfEventPrioritiesBetweenFabricAndReact = exports.fixMappingOfEventPrioritiesBetweenFabricAndReact = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('fixMappingOfEventPrioritiesBetweenFabricAndReact', false);
  var fixMountingCoordinatorReportedPendingTransactionsOnAndroid = exports.fixMountingCoordinatorReportedPendingTransactionsOnAndroid = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('fixMountingCoordinatorReportedPendingTransactionsOnAndroid', false);
  var fuseboxEnabledRelease = exports.fuseboxEnabledRelease = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('fuseboxEnabledRelease', false);
  var fuseboxNetworkInspectionEnabled = exports.fuseboxNetworkInspectionEnabled = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('fuseboxNetworkInspectionEnabled', false);
  var lazyAnimationCallbacks = exports.lazyAnimationCallbacks = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('lazyAnimationCallbacks', false);
  var removeTurboModuleManagerDelegateMutex = exports.removeTurboModuleManagerDelegateMutex = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('removeTurboModuleManagerDelegateMutex', false);
  var throwExceptionInsteadOfDeadlockOnTurboModuleSetupDuringSyncRenderIOS = exports.throwExceptionInsteadOfDeadlockOnTurboModuleSetupDuringSyncRenderIOS = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('throwExceptionInsteadOfDeadlockOnTurboModuleSetupDuringSyncRenderIOS', false);
  var traceTurboModulePromiseRejectionsOnAndroid = exports.traceTurboModulePromiseRejectionsOnAndroid = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('traceTurboModulePromiseRejectionsOnAndroid', false);
  var useAlwaysAvailableJSErrorHandling = exports.useAlwaysAvailableJSErrorHandling = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('useAlwaysAvailableJSErrorHandling', false);
  var useEditTextStockAndroidFocusBehavior = exports.useEditTextStockAndroidFocusBehavior = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('useEditTextStockAndroidFocusBehavior', true);
  var useFabricInterop = exports.useFabricInterop = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('useFabricInterop', false);
  var useNativeViewConfigsInBridgelessMode = exports.useNativeViewConfigsInBridgelessMode = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('useNativeViewConfigsInBridgelessMode', false);
  var useOptimizedEventBatchingOnAndroid = exports.useOptimizedEventBatchingOnAndroid = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('useOptimizedEventBatchingOnAndroid', false);
  var useRawPropsJsiValue = exports.useRawPropsJsiValue = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('useRawPropsJsiValue', false);
  var useTurboModuleInterop = exports.useTurboModuleInterop = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('useTurboModuleInterop', false);
  var useTurboModules = exports.useTurboModules = (0, _$$_REQUIRE(_dependencyMap[0]).createNativeFlagGetter)('useTurboModules', false);
  var override = exports.override = _$$_REQUIRE(_dependencyMap[0]).setOverrides;
},73,[74]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.createJavaScriptFlagGetter = createJavaScriptFlagGetter;
  exports.createNativeFlagGetter = createNativeFlagGetter;
  exports.getOverrides = getOverrides;
  exports.setOverrides = setOverrides;
  var _NativeReactNativeFeatureFlags = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var accessedFeatureFlags = new Set();
  var overrides;
  function createGetter(configName, customValueGetter, defaultValue) {
    var cachedValue;
    return function () {
      if (cachedValue == null) {
        var _customValueGetter;
        cachedValue = (_customValueGetter = customValueGetter()) != null ? _customValueGetter : defaultValue;
      }
      return cachedValue;
    };
  }
  function createJavaScriptFlagGetter(configName, defaultValue) {
    return createGetter(configName, function () {
      var _overrides, _overrides$configName;
      accessedFeatureFlags.add(configName);
      return (_overrides = overrides) == null ? undefined : (_overrides$configName = _overrides[configName]) == null ? undefined : _overrides$configName.call(_overrides, defaultValue);
    }, defaultValue);
  }
  function createNativeFlagGetter(configName, defaultValue) {
    var skipUnavailableNativeModuleError = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    return createGetter(configName, function () {
      var _NativeReactNativeFea;
      maybeLogUnavailableNativeModuleError(configName);
      return _NativeReactNativeFeatureFlags.default == null ? undefined : (_NativeReactNativeFea = _NativeReactNativeFeatureFlags.default[configName]) == null ? undefined : _NativeReactNativeFea.call(_NativeReactNativeFeatureFlags.default);
    }, defaultValue);
  }
  function getOverrides() {
    return overrides;
  }
  function setOverrides(newOverrides) {
    if (overrides != null) {
      throw new Error('Feature flags cannot be overridden more than once');
    }
    if (accessedFeatureFlags.size > 0) {
      var accessedFeatureFlagsStr = Array.from(accessedFeatureFlags).join(', ');
      throw new Error(`Feature flags were accessed before being overridden: ${accessedFeatureFlagsStr}`);
    }
    overrides = newOverrides;
  }
  var reportedConfigNames = new Set();
  function maybeLogUnavailableNativeModuleError(configName) {
    if (!_NativeReactNativeFeatureFlags.default && !reportedConfigNames.has(configName)) {
      reportedConfigNames.add(configName);
      console.error(`Could not access feature flag '${configName}' because native module method was not available`);
    }
  }
},74,[1,75]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var NativeReactNativeFeatureFlags = TurboModuleRegistry.get('NativeReactNativeFeatureFlagsCxx');
  var _default = exports.default = NativeReactNativeFeatureFlags;
},75,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));
  var _nullthrows = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var RawNativeDOM = TurboModuleRegistry.get('NativeDOMCxx');
  var NativeDOM = {
    compareDocumentPosition: function compareDocumentPosition(nativeNodeReference, otherNativeNodeReference) {
      return (0, _nullthrows.default)(RawNativeDOM).compareDocumentPosition(nativeNodeReference, otherNativeNodeReference);
    },
    getChildNodes: function getChildNodes(nativeNodeReference) {
      return (0, _nullthrows.default)(RawNativeDOM).getChildNodes(nativeNodeReference);
    },
    getParentNode: function getParentNode(nativeNodeReference) {
      return (0, _nullthrows.default)(RawNativeDOM).getParentNode(nativeNodeReference);
    },
    isConnected: function isConnected(nativeNodeReference) {
      return (0, _nullthrows.default)(RawNativeDOM).isConnected(nativeNodeReference);
    },
    getBorderWidth: function getBorderWidth(nativeNodeReference) {
      return (0, _nullthrows.default)(RawNativeDOM).getBorderWidth(nativeNodeReference);
    },
    getBoundingClientRect: function getBoundingClientRect(nativeNodeReference, includeTransform) {
      return (0, _nullthrows.default)(RawNativeDOM).getBoundingClientRect(nativeNodeReference, includeTransform);
    },
    getInnerSize: function getInnerSize(nativeNodeReference) {
      return (0, _nullthrows.default)(RawNativeDOM).getInnerSize(nativeNodeReference);
    },
    getScrollPosition: function getScrollPosition(nativeNodeReference) {
      return (0, _nullthrows.default)(RawNativeDOM).getScrollPosition(nativeNodeReference);
    },
    getScrollSize: function getScrollSize(nativeNodeReference) {
      return (0, _nullthrows.default)(RawNativeDOM).getScrollSize(nativeNodeReference);
    },
    getTagName: function getTagName(nativeNodeReference) {
      return (0, _nullthrows.default)(RawNativeDOM).getTagName(nativeNodeReference);
    },
    getTextContent: function getTextContent(nativeNodeReference) {
      return (0, _nullthrows.default)(RawNativeDOM).getTextContent(nativeNodeReference);
    },
    hasPointerCapture: function hasPointerCapture(nativeNodeReference, pointerId) {
      return (0, _nullthrows.default)(RawNativeDOM).hasPointerCapture(nativeNodeReference, pointerId);
    },
    releasePointerCapture: function releasePointerCapture(nativeNodeReference, pointerId) {
      return (0, _nullthrows.default)(RawNativeDOM).releasePointerCapture(nativeNodeReference, pointerId);
    },
    setPointerCapture: function setPointerCapture(nativeNodeReference, pointerId) {
      return (0, _nullthrows.default)(RawNativeDOM).setPointerCapture(nativeNodeReference, pointerId);
    },
    getOffset: function getOffset(nativeNodeReference) {
      return (0, _nullthrows.default)(RawNativeDOM).getOffset(nativeNodeReference);
    },
    linkRootNode: function linkRootNode(rootTag, instanceHandle) {
      return (0, _nullthrows.default)(RawNativeDOM == null ? undefined : RawNativeDOM.linkRootNode)(rootTag, instanceHandle);
    },
    measure: function measure(nativeNodeReference, callback) {
      return (0, _nullthrows.default)(RawNativeDOM).measure(nativeNodeReference, callback);
    },
    measureInWindow: function measureInWindow(nativeNodeReference, callback) {
      return (0, _nullthrows.default)(RawNativeDOM).measureInWindow(nativeNodeReference, callback);
    },
    measureLayout: function measureLayout(nativeNodeReference, relativeNode, onFail, onSuccess) {
      return (0, _nullthrows.default)(RawNativeDOM).measureLayout(nativeNodeReference, relativeNode, onFail, onSuccess);
    }
  };
  var _default = exports.default = NativeDOM;
},76,[1,36,45]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getInstanceHandle = getInstanceHandle;
  exports.getNativeElementReference = getNativeElementReference;
  exports.getNativeNodeReference = getNativeNodeReference;
  exports.getNativeTextReference = getNativeTextReference;
  exports.getOwnerDocument = getOwnerDocument;
  exports.getPublicInstanceFromInstanceHandle = getPublicInstanceFromInstanceHandle;
  exports.setInstanceHandle = setInstanceHandle;
  exports.setOwnerDocument = setOwnerDocument;
  var RendererProxy;
  function getRendererProxy() {
    if (RendererProxy == null) {
      RendererProxy = _$$_REQUIRE(_dependencyMap[0]);
    }
    return RendererProxy;
  }
  var INSTANCE_HANDLE_KEY = Symbol('internalInstanceHandle');
  var OWNER_DOCUMENT_KEY = Symbol('ownerDocument');
  function getInstanceHandle(node) {
    return node[INSTANCE_HANDLE_KEY];
  }
  function setInstanceHandle(node, instanceHandle) {
    node[INSTANCE_HANDLE_KEY] = instanceHandle;
  }
  function getOwnerDocument(node) {
    var _node$OWNER_DOCUMENT_;
    return (_node$OWNER_DOCUMENT_ = node[OWNER_DOCUMENT_KEY]) != null ? _node$OWNER_DOCUMENT_ : null;
  }
  function setOwnerDocument(node, ownerDocument) {
    node[OWNER_DOCUMENT_KEY] = ownerDocument;
  }
  function getPublicInstanceFromInstanceHandle(instanceHandle) {
    if ((0, _$$_REQUIRE(_dependencyMap[1]).isReactNativeDocumentInstanceHandle)(instanceHandle)) {
      return (0, _$$_REQUIRE(_dependencyMap[1]).getPublicInstanceFromReactNativeDocumentInstanceHandle)(instanceHandle);
    }
    if ((0, _$$_REQUIRE(_dependencyMap[2]).isReactNativeDocumentElementInstanceHandle)(instanceHandle)) {
      return (0, _$$_REQUIRE(_dependencyMap[2]).getPublicInstanceFromReactNativeDocumentElementInstanceHandle)(instanceHandle);
    }
    var mixedPublicInstance = getRendererProxy().getPublicInstanceFromInternalInstanceHandle(instanceHandle);
    return mixedPublicInstance;
  }
  function getNativeNodeReference(node) {
    var instanceHandle = getInstanceHandle(node);
    if ((0, _$$_REQUIRE(_dependencyMap[1]).isReactNativeDocumentInstanceHandle)(instanceHandle)) {
      return (0, _$$_REQUIRE(_dependencyMap[1]).getNativeNodeReferenceFromReactNativeDocumentInstanceHandle)(instanceHandle);
    }
    if ((0, _$$_REQUIRE(_dependencyMap[2]).isReactNativeDocumentElementInstanceHandle)(instanceHandle)) {
      return (0, _$$_REQUIRE(_dependencyMap[2]).getNativeElementReferenceFromReactNativeDocumentElementInstanceHandle)(instanceHandle);
    }
    return getRendererProxy().getNodeFromInternalInstanceHandle(instanceHandle);
  }
  function getNativeElementReference(node) {
    var instanceHandle = getInstanceHandle(node);
    return getRendererProxy().getNodeFromInternalInstanceHandle(instanceHandle);
  }
  function getNativeTextReference(node) {
    var instanceHandle = getInstanceHandle(node);
    return getRendererProxy().getNodeFromInternalInstanceHandle(instanceHandle);
  }
},77,[57,78,79]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.createReactNativeDocumentInstanceHandle = createReactNativeDocumentInstanceHandle;
  exports.getNativeNodeReferenceFromReactNativeDocumentInstanceHandle = getNativeNodeReferenceFromReactNativeDocumentInstanceHandle;
  exports.getPublicInstanceFromReactNativeDocumentInstanceHandle = getPublicInstanceFromReactNativeDocumentInstanceHandle;
  exports.isReactNativeDocumentInstanceHandle = isReactNativeDocumentInstanceHandle;
  var RendererProxy = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function createReactNativeDocumentInstanceHandle(rootTag) {
    return rootTag;
  }
  function getNativeNodeReferenceFromReactNativeDocumentInstanceHandle(instanceHandle) {
    return instanceHandle;
  }
  function getPublicInstanceFromReactNativeDocumentInstanceHandle(instanceHandle) {
    return RendererProxy.getPublicInstanceFromRootTag(Number(instanceHandle));
  }
  function isReactNativeDocumentInstanceHandle(instanceHandle) {
    return typeof instanceHandle === 'number' && instanceHandle % 10 === 1;
  }
},78,[57]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.createReactNativeDocumentElementInstanceHandle = createReactNativeDocumentElementInstanceHandle;
  exports.getNativeElementReferenceFromReactNativeDocumentElementInstanceHandle = getNativeElementReferenceFromReactNativeDocumentElementInstanceHandle;
  exports.getPublicInstanceFromReactNativeDocumentElementInstanceHandle = getPublicInstanceFromReactNativeDocumentElementInstanceHandle;
  exports.isReactNativeDocumentElementInstanceHandle = isReactNativeDocumentElementInstanceHandle;
  exports.setNativeElementReferenceForReactNativeDocumentElementInstanceHandle = setNativeElementReferenceForReactNativeDocumentElementInstanceHandle;
  exports.setPublicInstanceForReactNativeDocumentElementInstanceHandle = setPublicInstanceForReactNativeDocumentElementInstanceHandle;
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var ReactNativeDocumentElementInstanceHandleImpl = /*#__PURE__*/(0, _createClass2.default)(function ReactNativeDocumentElementInstanceHandleImpl() {
    (0, _classCallCheck2.default)(this, ReactNativeDocumentElementInstanceHandleImpl);
  });
  function createReactNativeDocumentElementInstanceHandle() {
    return new ReactNativeDocumentElementInstanceHandleImpl();
  }
  function getNativeElementReferenceFromReactNativeDocumentElementInstanceHandle(instanceHandle) {
    return instanceHandle.nativeElementReference;
  }
  function setNativeElementReferenceForReactNativeDocumentElementInstanceHandle(instanceHandle, nativeElementReference) {
    instanceHandle.nativeElementReference = nativeElementReference;
  }
  function getPublicInstanceFromReactNativeDocumentElementInstanceHandle(instanceHandle) {
    return instanceHandle.publicInstance;
  }
  function setPublicInstanceForReactNativeDocumentElementInstanceHandle(instanceHandle, publicInstance) {
    instanceHandle.publicInstance = publicInstance;
  }
  function isReactNativeDocumentElementInstanceHandle(instanceHandle) {
    return instanceHandle instanceof ReactNativeDocumentElementInstanceHandleImpl;
  }
},79,[1,13,12]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  exports.getBoundingClientRect = _getBoundingClientRect;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _DOMRect = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _ReadOnlyNode2 = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));
  var _NativeDOM = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var ReadOnlyElement = exports.default = /*#__PURE__*/function (_ReadOnlyNode) {
    function ReadOnlyElement() {
      (0, _classCallCheck2.default)(this, ReadOnlyElement);
      return _callSuper(this, ReadOnlyElement, arguments);
    }
    (0, _inherits2.default)(ReadOnlyElement, _ReadOnlyNode);
    return (0, _createClass2.default)(ReadOnlyElement, [{
      key: "childElementCount",
      get: function get() {
        return getChildElements(this).length;
      }
    }, {
      key: "children",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[9]).createHTMLCollection)(getChildElements(this));
      }
    }, {
      key: "clientHeight",
      get: function get() {
        var node = (0, _$$_REQUIRE(_dependencyMap[10]).getNativeElementReference)(this);
        if (node != null) {
          var innerSize = _NativeDOM.default.getInnerSize(node);
          return innerSize[1];
        }
        return 0;
      }
    }, {
      key: "clientLeft",
      get: function get() {
        var node = (0, _$$_REQUIRE(_dependencyMap[10]).getNativeElementReference)(this);
        if (node != null) {
          var borderSize = _NativeDOM.default.getBorderWidth(node);
          return borderSize[3];
        }
        return 0;
      }
    }, {
      key: "clientTop",
      get: function get() {
        var node = (0, _$$_REQUIRE(_dependencyMap[10]).getNativeElementReference)(this);
        if (node != null) {
          var borderSize = _NativeDOM.default.getBorderWidth(node);
          return borderSize[0];
        }
        return 0;
      }
    }, {
      key: "clientWidth",
      get: function get() {
        var node = (0, _$$_REQUIRE(_dependencyMap[10]).getNativeElementReference)(this);
        if (node != null) {
          var innerSize = _NativeDOM.default.getInnerSize(node);
          return innerSize[0];
        }
        return 0;
      }
    }, {
      key: "firstElementChild",
      get: function get() {
        var childElements = getChildElements(this);
        if (childElements.length === 0) {
          return null;
        }
        return childElements[0];
      }
    }, {
      key: "id",
      get: function get() {
        var _instanceHandle$state, _instanceHandle$state2, _ref, _props$id;
        var instanceHandle = (0, _$$_REQUIRE(_dependencyMap[10]).getInstanceHandle)(this);
        var props = instanceHandle == null ? undefined : (_instanceHandle$state = instanceHandle.stateNode) == null ? undefined : (_instanceHandle$state2 = _instanceHandle$state.canonical) == null ? undefined : _instanceHandle$state2.currentProps;
        return (_ref = (_props$id = props == null ? undefined : props.id) != null ? _props$id : props == null ? undefined : props.nativeID) != null ? _ref : '';
      }
    }, {
      key: "lastElementChild",
      get: function get() {
        var childElements = getChildElements(this);
        if (childElements.length === 0) {
          return null;
        }
        return childElements[childElements.length - 1];
      }
    }, {
      key: "nextElementSibling",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[11]).getElementSibling)(this, 'next');
      }
    }, {
      key: "nodeName",
      get: function get() {
        return this.tagName;
      }
    }, {
      key: "nodeType",
      get: function get() {
        return _ReadOnlyNode2.default.ELEMENT_NODE;
      }
    }, {
      key: "nodeValue",
      get: function get() {
        return null;
      },
      set: function set(value) {}
    }, {
      key: "previousElementSibling",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[11]).getElementSibling)(this, 'previous');
      }
    }, {
      key: "scrollHeight",
      get: function get() {
        var node = (0, _$$_REQUIRE(_dependencyMap[10]).getNativeElementReference)(this);
        if (node != null) {
          var scrollSize = _NativeDOM.default.getScrollSize(node);
          return scrollSize[1];
        }
        return 0;
      }
    }, {
      key: "scrollLeft",
      get: function get() {
        var node = (0, _$$_REQUIRE(_dependencyMap[10]).getNativeElementReference)(this);
        if (node != null) {
          var scrollPosition = _NativeDOM.default.getScrollPosition(node);
          return scrollPosition[0];
        }
        return 0;
      }
    }, {
      key: "scrollTop",
      get: function get() {
        var node = (0, _$$_REQUIRE(_dependencyMap[10]).getNativeElementReference)(this);
        if (node != null) {
          var scrollPosition = _NativeDOM.default.getScrollPosition(node);
          return scrollPosition[1];
        }
        return 0;
      }
    }, {
      key: "scrollWidth",
      get: function get() {
        var node = (0, _$$_REQUIRE(_dependencyMap[10]).getNativeElementReference)(this);
        if (node != null) {
          var scrollSize = _NativeDOM.default.getScrollSize(node);
          return scrollSize[0];
        }
        return 0;
      }
    }, {
      key: "tagName",
      get: function get() {
        var node = (0, _$$_REQUIRE(_dependencyMap[10]).getNativeElementReference)(this);
        if (node != null) {
          return _NativeDOM.default.getTagName(node);
        }
        return '';
      }
    }, {
      key: "textContent",
      get: function get() {
        var node = (0, _$$_REQUIRE(_dependencyMap[10]).getNativeElementReference)(this);
        if (node != null) {
          return _NativeDOM.default.getTextContent(node);
        }
        return '';
      }
    }, {
      key: "getBoundingClientRect",
      value: function getBoundingClientRect() {
        return _getBoundingClientRect(this, {
          includeTransform: true
        });
      }
    }, {
      key: "hasPointerCapture",
      value: function hasPointerCapture(pointerId) {
        var node = (0, _$$_REQUIRE(_dependencyMap[10]).getNativeElementReference)(this);
        if (node != null) {
          return _NativeDOM.default.hasPointerCapture(node, pointerId);
        }
        return false;
      }
    }, {
      key: "setPointerCapture",
      value: function setPointerCapture(pointerId) {
        var node = (0, _$$_REQUIRE(_dependencyMap[10]).getNativeElementReference)(this);
        if (node != null) {
          _NativeDOM.default.setPointerCapture(node, pointerId);
        }
      }
    }, {
      key: "releasePointerCapture",
      value: function releasePointerCapture(pointerId) {
        var node = (0, _$$_REQUIRE(_dependencyMap[10]).getNativeElementReference)(this);
        if (node != null) {
          _NativeDOM.default.releasePointerCapture(node, pointerId);
        }
      }
    }]);
  }(_ReadOnlyNode2.default);
  function getChildElements(node) {
    return (0, _ReadOnlyNode2.getChildNodes)(node).filter(function (childNode) {
      return childNode instanceof ReadOnlyElement;
    });
  }
  function _getBoundingClientRect(element, _ref2) {
    var includeTransform = _ref2.includeTransform;
    var node = (0, _$$_REQUIRE(_dependencyMap[10]).getNativeElementReference)(element);
    if (node != null) {
      var rect = _NativeDOM.default.getBoundingClientRect(node, includeTransform);
      return new _DOMRect.default(rect[0], rect[1], rect[2], rect[3]);
    }
    return new _DOMRect.default(0, 0, 0, 0);
  }
},80,[1,12,13,23,25,28,66,72,76,70,77,81]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getElementSibling = getElementSibling;
  var ReadOnlyElementClass;
  function getElementSibling(node, direction) {
    var _childNodes$position;
    var parent = node.parentNode;
    if (parent == null) {
      return null;
    }
    var childNodes = (0, _$$_REQUIRE(_dependencyMap[0]).getChildNodes)(parent);
    var startPosition = childNodes.indexOf(node);
    if (startPosition === -1) {
      return null;
    }
    var increment = direction === 'next' ? 1 : -1;
    var position = startPosition + increment;
    if (ReadOnlyElementClass == null) {
      ReadOnlyElementClass = _$$_REQUIRE(_dependencyMap[1]).default;
    }
    while (childNodes[position] != null && !(childNodes[position] instanceof ReadOnlyElementClass)) {
      position = position + increment;
    }
    return (_childNodes$position = childNodes[position]) != null ? _childNodes$position : null;
  }
},81,[72,80]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.createReactNativeDocument = createReactNativeDocument;
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _ReactNativeElement = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _ReadOnlyNode2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _NativeDOM = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var ReactNativeDocument = exports.default = /*#__PURE__*/function (_ReadOnlyNode) {
    function ReactNativeDocument(rootTag, instanceHandle) {
      var _this;
      (0, _classCallCheck2.default)(this, ReactNativeDocument);
      _this = _callSuper(this, ReactNativeDocument, [instanceHandle, null]);
      _this._documentElement = createDocumentElement(rootTag, _this);
      return _this;
    }
    (0, _inherits2.default)(ReactNativeDocument, _ReadOnlyNode);
    return (0, _createClass2.default)(ReactNativeDocument, [{
      key: "childElementCount",
      get: function get() {
        return 1;
      }
    }, {
      key: "children",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[9]).createHTMLCollection)([this.documentElement]);
      }
    }, {
      key: "documentElement",
      get: function get() {
        return this._documentElement;
      }
    }, {
      key: "firstElementChild",
      get: function get() {
        return this.documentElement;
      }
    }, {
      key: "lastElementChild",
      get: function get() {
        return this.documentElement;
      }
    }, {
      key: "nodeName",
      get: function get() {
        return '#document';
      }
    }, {
      key: "nodeType",
      get: function get() {
        return _ReadOnlyNode2.default.DOCUMENT_NODE;
      }
    }, {
      key: "nodeValue",
      get: function get() {
        return null;
      }
    }, {
      key: "textContent",
      get: function get() {
        return null;
      }
    }]);
  }(_ReadOnlyNode2.default);
  function createDocumentElement(rootTag, ownerDocument) {
    var instanceHandle = (0, _$$_REQUIRE(_dependencyMap[10]).createReactNativeDocumentElementInstanceHandle)();
    var rootTagIsNumber = rootTag;
    var viewConfig = null;
    var documentElement = new _ReactNativeElement.default(rootTagIsNumber, viewConfig, instanceHandle, ownerDocument);
    var rootShadowNode = _NativeDOM.default.linkRootNode(rootTag, instanceHandle);
    (0, _$$_REQUIRE(_dependencyMap[10]).setNativeElementReferenceForReactNativeDocumentElementInstanceHandle)(instanceHandle, rootShadowNode);
    (0, _$$_REQUIRE(_dependencyMap[10]).setPublicInstanceForReactNativeDocumentElementInstanceHandle)(instanceHandle, documentElement);
    return documentElement;
  }
  function createReactNativeDocument(rootTag) {
    var instanceHandle = (0, _$$_REQUIRE(_dependencyMap[11]).createReactNativeDocumentInstanceHandle)(rootTag);
    var document = new ReactNativeDocument(rootTag, instanceHandle);
    return document;
  }
},82,[1,12,13,23,25,28,83,72,76,70,79,78]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _TextInputState = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _warnForStyleProps = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _ReadOnlyElement2 = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));
  var _NativeDOM = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _nullthrows = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var noop = function noop() {};
  var ReactNativeElement = /*#__PURE__*/function (_ReadOnlyElement) {
    function ReactNativeElement(tag, viewConfig, instanceHandle, ownerDocument) {
      var _this;
      (0, _classCallCheck2.default)(this, ReactNativeElement);
      _this = _callSuper(this, ReactNativeElement, [instanceHandle, ownerDocument]);
      _this.__nativeTag = tag;
      _this.__internalInstanceHandle = instanceHandle;
      _this.__viewConfig = viewConfig;
      return _this;
    }
    (0, _inherits2.default)(ReactNativeElement, _ReadOnlyElement);
    return (0, _createClass2.default)(ReactNativeElement, [{
      key: "offsetHeight",
      get: function get() {
        return Math.round((0, _ReadOnlyElement2.getBoundingClientRect)(this, {
          includeTransform: false
        }).height);
      }
    }, {
      key: "offsetLeft",
      get: function get() {
        var node = (0, _$$_REQUIRE(_dependencyMap[11]).getNativeElementReference)(this);
        if (node != null) {
          var offset = _NativeDOM.default.getOffset(node);
          return Math.round(offset[2]);
        }
        return 0;
      }
    }, {
      key: "offsetParent",
      get: function get() {
        var node = (0, _$$_REQUIRE(_dependencyMap[11]).getNativeElementReference)(this);
        if (node != null) {
          var offset = _NativeDOM.default.getOffset(node);
          if (offset[0] != null) {
            var offsetParentInstanceHandle = offset[0];
            var offsetParent = (0, _$$_REQUIRE(_dependencyMap[11]).getPublicInstanceFromInstanceHandle)(offsetParentInstanceHandle);
            var offsetParentElement = offsetParent;
            return offsetParentElement;
          }
        }
        return null;
      }
    }, {
      key: "offsetTop",
      get: function get() {
        var node = (0, _$$_REQUIRE(_dependencyMap[11]).getNativeElementReference)(this);
        if (node != null) {
          var offset = _NativeDOM.default.getOffset(node);
          return Math.round(offset[1]);
        }
        return 0;
      }
    }, {
      key: "offsetWidth",
      get: function get() {
        return Math.round((0, _ReadOnlyElement2.getBoundingClientRect)(this, {
          includeTransform: false
        }).width);
      }
    }, {
      key: "blur",
      value: function blur() {
        _TextInputState.default.blurTextInput(this);
      }
    }, {
      key: "focus",
      value: function focus() {
        _TextInputState.default.focusTextInput(this);
      }
    }, {
      key: "measure",
      value: function measure(callback) {
        var node = (0, _$$_REQUIRE(_dependencyMap[11]).getNativeElementReference)(this);
        if (node != null) {
          var shadowNode = node;
          (0, _nullthrows.default)((0, _$$_REQUIRE(_dependencyMap[12]).getFabricUIManager)()).measure(shadowNode, callback);
        }
      }
    }, {
      key: "measureInWindow",
      value: function measureInWindow(callback) {
        var node = (0, _$$_REQUIRE(_dependencyMap[11]).getNativeElementReference)(this);
        if (node != null) {
          var shadowNode = node;
          (0, _nullthrows.default)((0, _$$_REQUIRE(_dependencyMap[12]).getFabricUIManager)()).measureInWindow(shadowNode, callback);
        }
      }
    }, {
      key: "measureLayout",
      value: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
        if (!(relativeToNativeNode instanceof ReactNativeElement)) {
          return;
        }
        var toStateNode = (0, _$$_REQUIRE(_dependencyMap[11]).getNativeElementReference)(this);
        var fromStateNode = (0, _$$_REQUIRE(_dependencyMap[11]).getNativeElementReference)(relativeToNativeNode);
        if (toStateNode != null && fromStateNode != null) {
          var toStateShadowNode = toStateNode;
          var fromStateShadowNode = fromStateNode;
          (0, _nullthrows.default)((0, _$$_REQUIRE(_dependencyMap[12]).getFabricUIManager)()).measureLayout(toStateShadowNode, fromStateShadowNode, onFail != null ? onFail : noop, onSuccess != null ? onSuccess : noop);
        }
      }
    }, {
      key: "setNativeProps",
      value: function setNativeProps(nativeProps) {
        var updatePayload = (0, _$$_REQUIRE(_dependencyMap[13]).create)(nativeProps, this.__viewConfig.validAttributes);
        var node = (0, _$$_REQUIRE(_dependencyMap[11]).getNativeElementReference)(this);
        if (node != null && updatePayload != null) {
          var shadowNode = node;
          (0, _nullthrows.default)((0, _$$_REQUIRE(_dependencyMap[12]).getFabricUIManager)()).setNativeProps(shadowNode, updatePayload);
        }
      }
    }]);
  }(_ReadOnlyElement2.default);
  function replaceConstructorWithoutSuper(ReactNativeElementClass) {
    function ReactNativeElement(tag, viewConfig, internalInstanceHandle, ownerDocument) {
      (0, _$$_REQUIRE(_dependencyMap[11]).setOwnerDocument)(this, ownerDocument);
      (0, _$$_REQUIRE(_dependencyMap[11]).setInstanceHandle)(this, internalInstanceHandle);
      this.__nativeTag = tag;
      this.__internalInstanceHandle = internalInstanceHandle;
      this.__viewConfig = viewConfig;
    }
    ReactNativeElement.prototype = ReactNativeElementClass.prototype;
    return ReactNativeElement;
  }
  var _default = exports.default = replaceConstructorWithoutSuper(ReactNativeElement);
},83,[1,12,13,23,25,28,84,126,80,76,45,77,47,127]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var currentlyFocusedInputRef = null;
  var inputs = new Set();
  function currentlyFocusedInput() {
    return currentlyFocusedInputRef;
  }
  function currentlyFocusedField() {
    return _$$_REQUIRE(_dependencyMap[0]).findNodeHandle(currentlyFocusedInputRef);
  }
  function focusInput(textField) {
    if (currentlyFocusedInputRef !== textField && textField != null) {
      currentlyFocusedInputRef = textField;
    }
  }
  function blurInput(textField) {
    if (currentlyFocusedInputRef === textField && textField != null) {
      currentlyFocusedInputRef = null;
    }
  }
  function focusField(textFieldID) {
    return;
  }
  function blurField(textFieldID) {
    return;
  }
  function focusTextInput(textField) {
    if (typeof textField === 'number') {
      return;
    }
    if (textField != null) {
      var _textField$currentPro;
      var fieldCanBeFocused = currentlyFocusedInputRef !== textField && ((_textField$currentPro = textField.currentProps) == null ? undefined : _textField$currentPro.editable) !== false;
      if (!fieldCanBeFocused) {
        return;
      }
      focusInput(textField);
      {
        _$$_REQUIRE(_dependencyMap[1]).Commands.focus(textField);
      }
    }
  }
  function blurTextInput(textField) {
    if (typeof textField === 'number') {
      return;
    }
    if (currentlyFocusedInputRef === textField && textField != null) {
      blurInput(textField);
      {
        _$$_REQUIRE(_dependencyMap[1]).Commands.blur(textField);
      }
    }
  }
  function registerInput(textField) {
    if (typeof textField === 'number') {
      return;
    }
    inputs.add(textField);
  }
  function unregisterInput(textField) {
    if (typeof textField === 'number') {
      return;
    }
    inputs.delete(textField);
  }
  function isTextInput(textField) {
    if (typeof textField === 'number') {
      return false;
    }
    return inputs.has(textField);
  }
  var TextInputState = {
    currentlyFocusedInput: currentlyFocusedInput,
    focusInput: focusInput,
    blurInput: blurInput,
    currentlyFocusedField: currentlyFocusedField,
    focusField: focusField,
    blurField: blurField,
    focusTextInput: focusTextInput,
    blurTextInput: blurTextInput,
    registerInput: registerInput,
    unregisterInput: unregisterInput,
    isTextInput: isTextInput
  };
  var _default = exports.default = TextInputState;
},84,[57,85]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.__INTERNAL_VIEW_CONFIG = exports.Commands = undefined;
  var NativeComponentRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));
  var _codegenNativeCommands = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var Commands = exports.Commands = (0, _codegenNativeCommands.default)({
    supportedCommands: ['focus', 'blur', 'setTextAndSelection']
  });
  var __INTERNAL_VIEW_CONFIG = exports.__INTERNAL_VIEW_CONFIG = {
    uiViewClassName: 'AndroidTextInput',
    bubblingEventTypes: {
      topBlur: {
        phasedRegistrationNames: {
          bubbled: 'onBlur',
          captured: 'onBlurCapture'
        }
      },
      topEndEditing: {
        phasedRegistrationNames: {
          bubbled: 'onEndEditing',
          captured: 'onEndEditingCapture'
        }
      },
      topFocus: {
        phasedRegistrationNames: {
          bubbled: 'onFocus',
          captured: 'onFocusCapture'
        }
      },
      topKeyPress: {
        phasedRegistrationNames: {
          bubbled: 'onKeyPress',
          captured: 'onKeyPressCapture'
        }
      },
      topSubmitEditing: {
        phasedRegistrationNames: {
          bubbled: 'onSubmitEditing',
          captured: 'onSubmitEditingCapture'
        }
      }
    },
    directEventTypes: {
      topScroll: {
        registrationName: 'onScroll'
      }
    },
    validAttributes: {
      maxFontSizeMultiplier: true,
      adjustsFontSizeToFit: true,
      minimumFontScale: true,
      autoFocus: true,
      placeholder: true,
      inlineImagePadding: true,
      contextMenuHidden: true,
      textShadowColor: {
        process: _$$_REQUIRE(_dependencyMap[3]).default
      },
      maxLength: true,
      selectTextOnFocus: true,
      textShadowRadius: true,
      underlineColorAndroid: {
        process: _$$_REQUIRE(_dependencyMap[3]).default
      },
      textDecorationLine: true,
      submitBehavior: true,
      textAlignVertical: true,
      fontStyle: true,
      textShadowOffset: true,
      selectionColor: {
        process: _$$_REQUIRE(_dependencyMap[3]).default
      },
      selectionHandleColor: {
        process: _$$_REQUIRE(_dependencyMap[3]).default
      },
      placeholderTextColor: {
        process: _$$_REQUIRE(_dependencyMap[3]).default
      },
      importantForAutofill: true,
      lineHeight: true,
      textTransform: true,
      returnKeyType: true,
      keyboardType: true,
      multiline: true,
      color: {
        process: _$$_REQUIRE(_dependencyMap[3]).default
      },
      autoComplete: true,
      numberOfLines: true,
      letterSpacing: true,
      returnKeyLabel: true,
      fontSize: true,
      onKeyPress: true,
      cursorColor: {
        process: _$$_REQUIRE(_dependencyMap[3]).default
      },
      text: true,
      showSoftInputOnFocus: true,
      textAlign: true,
      autoCapitalize: true,
      autoCorrect: true,
      caretHidden: true,
      secureTextEntry: true,
      textBreakStrategy: true,
      onScroll: true,
      onContentSizeChange: true,
      disableFullscreenUI: true,
      includeFontPadding: true,
      fontWeight: true,
      fontFamily: true,
      allowFontScaling: true,
      onSelectionChange: true,
      mostRecentEventCount: true,
      inlineImageLeft: true,
      editable: true,
      fontVariant: true,
      borderBottomRightRadius: true,
      borderBottomColor: {
        process: _$$_REQUIRE(_dependencyMap[3]).default
      },
      borderRadius: true,
      borderRightColor: {
        process: _$$_REQUIRE(_dependencyMap[3]).default
      },
      borderColor: {
        process: _$$_REQUIRE(_dependencyMap[3]).default
      },
      borderTopRightRadius: true,
      borderStyle: true,
      borderBottomLeftRadius: true,
      borderLeftColor: {
        process: _$$_REQUIRE(_dependencyMap[3]).default
      },
      borderTopLeftRadius: true,
      borderTopColor: {
        process: _$$_REQUIRE(_dependencyMap[3]).default
      }
    }
  };
  var AndroidTextInputNativeComponent = NativeComponentRegistry.get('AndroidTextInput', function () {
    return __INTERNAL_VIEW_CONFIG;
  });
  var _default = exports.default = AndroidTextInputNativeComponent;
},85,[1,86,125,89]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.get = get;
  exports.getWithFallback_DEPRECATED = getWithFallback_DEPRECATED;
  exports.setRuntimeConfigProvider = setRuntimeConfigProvider;
  exports.unstable_hasStaticViewConfig = unstable_hasStaticViewConfig;
  var _getNativeComponentAttributes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _UIManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var ReactNativeViewConfigRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));
  var StaticViewConfigValidator = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[6]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var getRuntimeConfig;
  function setRuntimeConfigProvider(runtimeConfigProvider) {
    if (getRuntimeConfig === undefined) {
      getRuntimeConfig = runtimeConfigProvider;
    }
  }
  function get(name, viewConfigProvider) {
    ReactNativeViewConfigRegistry.register(name, function () {
      var _getRuntimeConfig;
      var _ref = (_getRuntimeConfig = getRuntimeConfig == null ? undefined : getRuntimeConfig(name)) != null ? _getRuntimeConfig : {
          native: !global.RN$Bridgeless,
          verify: false
        },
        native = _ref.native,
        verify = _ref.verify;
      var viewConfig;
      if (native) {
        var _getNativeComponentAt;
        viewConfig = (_getNativeComponentAt = (0, _getNativeComponentAttributes.default)(name)) != null ? _getNativeComponentAt : (0, _$$_REQUIRE(_dependencyMap[7]).createViewConfig)(viewConfigProvider());
      } else {
        var _createViewConfig;
        viewConfig = (_createViewConfig = (0, _$$_REQUIRE(_dependencyMap[7]).createViewConfig)(viewConfigProvider())) != null ? _createViewConfig : (0, _getNativeComponentAttributes.default)(name);
      }
      (0, _invariant.default)(viewConfig != null, 'NativeComponentRegistry.get: both static and native view config are missing for native component "%s".', name);
      if (verify) {
        var nativeViewConfig = native ? viewConfig : (0, _getNativeComponentAttributes.default)(name);
        if (nativeViewConfig == null) {
          return viewConfig;
        }
        var staticViewConfig = native ? (0, _$$_REQUIRE(_dependencyMap[7]).createViewConfig)(viewConfigProvider()) : viewConfig;
        var validationOutput = StaticViewConfigValidator.validate(name, nativeViewConfig, staticViewConfig);
        if (validationOutput.type === 'invalid') {
          console.error(StaticViewConfigValidator.stringifyValidationResult(name, validationOutput));
        }
      }
      return viewConfig;
    });
    return name;
  }
  function getWithFallback_DEPRECATED(name, viewConfigProvider) {
    if (getRuntimeConfig == null) {
      if (hasNativeViewConfig(name)) {
        return get(name, viewConfigProvider);
      }
    } else {
      if (getRuntimeConfig(name) != null) {
        return get(name, viewConfigProvider);
      }
    }
    var FallbackNativeComponent = function FallbackNativeComponent(props) {
      return null;
    };
    FallbackNativeComponent.displayName = `Fallback(${name})`;
    return FallbackNativeComponent;
  }
  function hasNativeViewConfig(name) {
    (0, _invariant.default)(getRuntimeConfig == null, 'Unexpected invocation!');
    return _UIManager.default.getViewManagerConfig(name) != null;
  }
  function unstable_hasStaticViewConfig(name) {
    var _getRuntimeConfig2;
    var _ref2 = (_getRuntimeConfig2 = getRuntimeConfig == null ? undefined : getRuntimeConfig(name)) != null ? _getRuntimeConfig2 : {
        native: true
      },
      native = _ref2.native;
    return !native;
  }
},86,[1,87,44,117,118,20,119,121]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _processBoxShadow = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  function getNativeComponentAttributes(uiViewClassName) {
    var _bubblingEventTypes, _directEventTypes;
    var viewConfig = _$$_REQUIRE(_dependencyMap[2]).default.getViewManagerConfig(uiViewClassName);
    if (viewConfig == null) {
      return null;
    }
    var baseModuleName = viewConfig.baseModuleName,
      bubblingEventTypes = viewConfig.bubblingEventTypes,
      directEventTypes = viewConfig.directEventTypes;
    var nativeProps = viewConfig.NativeProps;
    bubblingEventTypes = (_bubblingEventTypes = bubblingEventTypes) != null ? _bubblingEventTypes : {};
    directEventTypes = (_directEventTypes = directEventTypes) != null ? _directEventTypes : {};
    while (baseModuleName) {
      var baseModule = _$$_REQUIRE(_dependencyMap[2]).default.getViewManagerConfig(baseModuleName);
      if (!baseModule) {
        baseModuleName = null;
      } else {
        bubblingEventTypes = Object.assign({}, baseModule.bubblingEventTypes, bubblingEventTypes);
        directEventTypes = Object.assign({}, baseModule.directEventTypes, directEventTypes);
        nativeProps = Object.assign({}, baseModule.NativeProps, nativeProps);
        baseModuleName = baseModule.baseModuleName;
      }
    }
    var validAttributes = {};
    for (var key in nativeProps) {
      var typeName = nativeProps[key];
      var diff = getDifferForType(typeName);
      var process = getProcessorForType(typeName);
      validAttributes[key] = diff == null ? process == null ? true : {
        process: process
      } : process == null ? {
        diff: diff
      } : {
        diff: diff,
        process: process
      };
    }
    validAttributes.style = _$$_REQUIRE(_dependencyMap[3]).default;
    Object.assign(viewConfig, {
      uiViewClassName: uiViewClassName,
      validAttributes: validAttributes,
      bubblingEventTypes: bubblingEventTypes,
      directEventTypes: directEventTypes
    });
    attachDefaultEventTypes(viewConfig);
    return viewConfig;
  }
  function attachDefaultEventTypes(viewConfig) {
    var constants = _$$_REQUIRE(_dependencyMap[2]).default.getConstants();
    if (constants.ViewManagerNames || constants.LazyViewManagersEnabled) {
      viewConfig = merge(viewConfig, _$$_REQUIRE(_dependencyMap[4])(_$$_REQUIRE(_dependencyMap[2]).default.getDefaultEventTypes)());
    } else {
      viewConfig.bubblingEventTypes = merge(viewConfig.bubblingEventTypes, constants.genericBubblingEventTypes);
      viewConfig.directEventTypes = merge(viewConfig.directEventTypes, constants.genericDirectEventTypes);
    }
  }
  function merge(destination, source) {
    if (!source) {
      return destination;
    }
    if (!destination) {
      return source;
    }
    for (var key in source) {
      if (!source.hasOwnProperty(key)) {
        continue;
      }
      var sourceValue = source[key];
      if (destination.hasOwnProperty(key)) {
        var destinationValue = destination[key];
        if (typeof sourceValue === 'object' && typeof destinationValue === 'object') {
          sourceValue = merge(destinationValue, sourceValue);
        }
      }
      destination[key] = sourceValue;
    }
    return destination;
  }
  function getDifferForType(typeName) {
    switch (typeName) {
      case 'CATransform3D':
        return _$$_REQUIRE(_dependencyMap[5]).default;
      case 'CGPoint':
        return _$$_REQUIRE(_dependencyMap[6]).default;
      case 'CGSize':
        return _$$_REQUIRE(_dependencyMap[7]).default;
      case 'UIEdgeInsets':
        return _$$_REQUIRE(_dependencyMap[8]).default;
      case 'Point':
        return _$$_REQUIRE(_dependencyMap[6]).default;
      case 'EdgeInsets':
        return _$$_REQUIRE(_dependencyMap[8]).default;
    }
    return null;
  }
  function getProcessorForType(typeName) {
    switch (typeName) {
      case 'CGColor':
      case 'UIColor':
        return _$$_REQUIRE(_dependencyMap[9]).default;
      case 'CGColorArray':
      case 'UIColorArray':
        return _$$_REQUIRE(_dependencyMap[10]).default;
      case 'CGImage':
      case 'UIImage':
      case 'RCTImageSource':
        return _$$_REQUIRE(_dependencyMap[11]).default;
      case 'BoxShadowArray':
        return _processBoxShadow.default;
      case 'FilterArray':
        return _$$_REQUIRE(_dependencyMap[12]).default;
      case 'Color':
        return _$$_REQUIRE(_dependencyMap[9]).default;
      case 'ColorArray':
        return _$$_REQUIRE(_dependencyMap[10]).default;
      case 'Filter':
        return _$$_REQUIRE(_dependencyMap[12]).default;
      case 'BackgroundImage':
        return _$$_REQUIRE(_dependencyMap[13]).default;
      case 'ImageSource':
        return _$$_REQUIRE(_dependencyMap[11]).default;
      case 'BoxShadow':
        return _processBoxShadow.default;
    }
    return null;
  }
  var _default = exports.default = getNativeComponentAttributes;
},87,[1,88,44,93,45,102,103,101,104,89,105,106,96,95]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = processBoxShadow;
  var _processColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  function processBoxShadow(rawBoxShadows) {
    var result = [];
    if (rawBoxShadows == null) {
      return result;
    }
    var boxShadowList = typeof rawBoxShadows === 'string' ? parseBoxShadowString(rawBoxShadows.replace(/\n/g, ' ')) : rawBoxShadows;
    for (var rawBoxShadow of boxShadowList) {
      var parsedBoxShadow = {
        offsetX: 0,
        offsetY: 0
      };
      var value = undefined;
      for (var arg in rawBoxShadow) {
        switch (arg) {
          case 'offsetX':
            value = typeof rawBoxShadow.offsetX === 'string' ? parseLength(rawBoxShadow.offsetX) : rawBoxShadow.offsetX;
            if (value == null) {
              return [];
            }
            parsedBoxShadow.offsetX = value;
            break;
          case 'offsetY':
            value = typeof rawBoxShadow.offsetY === 'string' ? parseLength(rawBoxShadow.offsetY) : rawBoxShadow.offsetY;
            if (value == null) {
              return [];
            }
            parsedBoxShadow.offsetY = value;
            break;
          case 'spreadDistance':
            value = typeof rawBoxShadow.spreadDistance === 'string' ? parseLength(rawBoxShadow.spreadDistance) : rawBoxShadow.spreadDistance;
            if (value == null) {
              return [];
            }
            parsedBoxShadow.spreadDistance = value;
            break;
          case 'blurRadius':
            value = typeof rawBoxShadow.blurRadius === 'string' ? parseLength(rawBoxShadow.blurRadius) : rawBoxShadow.blurRadius;
            if (value == null || value < 0) {
              return [];
            }
            parsedBoxShadow.blurRadius = value;
            break;
          case 'color':
            var color = (0, _processColor.default)(rawBoxShadow.color);
            if (color == null) {
              return [];
            }
            parsedBoxShadow.color = color;
            break;
          case 'inset':
            parsedBoxShadow.inset = rawBoxShadow.inset;
        }
      }
      result.push(parsedBoxShadow);
    }
    return result;
  }
  function parseBoxShadowString(rawBoxShadows) {
    var result = [];
    for (var rawBoxShadow of rawBoxShadows.split(/,(?![^()]*\))/).map(function (bS) {
      return bS.trim();
    }).filter(function (bS) {
      return bS !== '';
    })) {
      var boxShadow = {
        offsetX: 0,
        offsetY: 0
      };
      var offsetX = undefined;
      var offsetY = undefined;
      var keywordDetectedAfterLength = false;
      var lengthCount = 0;
      var args = rawBoxShadow.split(/\s+(?![^(]*\))/);
      for (var arg of args) {
        var processedColor = (0, _processColor.default)(arg);
        if (processedColor != null) {
          if (boxShadow.color != null) {
            return [];
          }
          if (offsetX != null) {
            keywordDetectedAfterLength = true;
          }
          boxShadow.color = arg;
          continue;
        }
        if (arg === 'inset') {
          if (boxShadow.inset != null) {
            return [];
          }
          if (offsetX != null) {
            keywordDetectedAfterLength = true;
          }
          boxShadow.inset = true;
          continue;
        }
        switch (lengthCount) {
          case 0:
            offsetX = arg;
            lengthCount++;
            break;
          case 1:
            if (keywordDetectedAfterLength) {
              return [];
            }
            offsetY = arg;
            lengthCount++;
            break;
          case 2:
            if (keywordDetectedAfterLength) {
              return [];
            }
            boxShadow.blurRadius = arg;
            lengthCount++;
            break;
          case 3:
            if (keywordDetectedAfterLength) {
              return [];
            }
            boxShadow.spreadDistance = arg;
            lengthCount++;
            break;
          default:
            return [];
        }
      }
      if (offsetX == null || offsetY == null) {
        return [];
      }
      boxShadow.offsetX = offsetX;
      boxShadow.offsetY = offsetY;
      result.push(boxShadow);
    }
    return result;
  }
  function parseLength(length) {
    var argsWithUnitsRegex = /([+-]?\d*(\.\d+)?)([\w\W]+)?/g;
    var match = argsWithUnitsRegex.exec(length);
    if (!match || Number.isNaN(match[1])) {
      return null;
    }
    if (match[3] != null && match[3] !== 'px') {
      return null;
    }
    if (match[3] == null && match[1] !== '0') {
      return null;
    }
    return Number(match[1]);
  }
},88,[1,89]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  function processColor(color) {
    if (color === undefined || color === null) {
      return color;
    }
    var normalizedColor = _$$_REQUIRE(_dependencyMap[0]).default(color);
    if (normalizedColor === null || normalizedColor === undefined) {
      return undefined;
    }
    if (typeof normalizedColor === 'object') {
      var processColorObject = _$$_REQUIRE(_dependencyMap[1]).processColorObject;
      var processedColorObj = processColorObject(normalizedColor);
      if (processedColorObj != null) {
        return processedColorObj;
      }
    }
    if (typeof normalizedColor !== 'number') {
      return null;
    }
    normalizedColor = (normalizedColor << 24 | normalizedColor >>> 8) >>> 0;
    {
      normalizedColor = normalizedColor | 0x0;
    }
    return normalizedColor;
  }
  var _default = exports.default = processColor;
},89,[90,92]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _normalizeColors = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  function normalizeColor(color) {
    if (typeof color === 'object' && color != null) {
      var _require = _$$_REQUIRE(_dependencyMap[2]),
        normalizeColorObject = _require.normalizeColorObject;
      var normalizedColor = normalizeColorObject(color);
      if (normalizedColor != null) {
        return normalizedColor;
      }
    }
    if (typeof color === 'string' || typeof color === 'number') {
      return (0, _normalizeColors.default)(color);
    }
  }
  var _default = exports.default = normalizeColor;
},90,[1,91,92]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /**
   * Copyright (c) Meta Platforms, Inc. and affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * @format
   * 
   */

  /* eslint no-bitwise: 0 */

  'use strict';

  function normalizeColor(color) {
    if (typeof color === 'number') {
      if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {
        return color;
      }
      return null;
    }
    if (typeof color !== 'string') {
      return null;
    }
    var matchers = getMatchers();
    var match;

    // Ordered based on occurrences on Facebook codebase
    if (match = matchers.hex6.exec(color)) {
      return parseInt(match[1] + 'ff', 16) >>> 0;
    }
    var colorFromKeyword = normalizeKeyword(color);
    if (colorFromKeyword != null) {
      return colorFromKeyword;
    }
    if (match = matchers.rgb.exec(color)) {
      return (parse255(match[1]) << 24 |
      // r
      parse255(match[2]) << 16 |
      // g
      parse255(match[3]) << 8 |
      // b
      0x000000ff) >>>
      // a
      0;
    }
    if (match = matchers.rgba.exec(color)) {
      // rgba(R G B / A) notation
      if (match[6] !== undefined) {
        return (parse255(match[6]) << 24 |
        // r
        parse255(match[7]) << 16 |
        // g
        parse255(match[8]) << 8 |
        // b
        parse1(match[9])) >>>
        // a
        0;
      }

      // rgba(R, G, B, A) notation
      return (parse255(match[2]) << 24 |
      // r
      parse255(match[3]) << 16 |
      // g
      parse255(match[4]) << 8 |
      // b
      parse1(match[5])) >>>
      // a
      0;
    }
    if (match = matchers.hex3.exec(color)) {
      return parseInt(match[1] + match[1] +
      // r
      match[2] + match[2] +
      // g
      match[3] + match[3] +
      // b
      'ff',
      // a
      16) >>> 0;
    }

    // https://drafts.csswg.org/css-color-4/#hex-notation
    if (match = matchers.hex8.exec(color)) {
      return parseInt(match[1], 16) >>> 0;
    }
    if (match = matchers.hex4.exec(color)) {
      return parseInt(match[1] + match[1] +
      // r
      match[2] + match[2] +
      // g
      match[3] + match[3] +
      // b
      match[4] + match[4],
      // a
      16) >>> 0;
    }
    if (match = matchers.hsl.exec(color)) {
      return (hslToRgb(parse360(match[1]),
      // h
      parsePercentage(match[2]),
      // s
      parsePercentage(match[3]) // l
      ) | 0x000000ff) >>>
      // a
      0;
    }
    if (match = matchers.hsla.exec(color)) {
      // hsla(H S L / A) notation
      if (match[6] !== undefined) {
        return (hslToRgb(parse360(match[6]),
        // h
        parsePercentage(match[7]),
        // s
        parsePercentage(match[8]) // l
        ) | parse1(match[9])) >>>
        // a
        0;
      }

      // hsla(H, S, L, A) notation
      return (hslToRgb(parse360(match[2]),
      // h
      parsePercentage(match[3]),
      // s
      parsePercentage(match[4]) // l
      ) | parse1(match[5])) >>>
      // a
      0;
    }
    if (match = matchers.hwb.exec(color)) {
      return (hwbToRgb(parse360(match[1]),
      // h
      parsePercentage(match[2]),
      // w
      parsePercentage(match[3]) // b
      ) | 0x000000ff) >>>
      // a
      0;
    }
    return null;
  }
  function hue2rgb(p, q, t) {
    if (t < 0) {
      t += 1;
    }
    if (t > 1) {
      t -= 1;
    }
    if (t < 0.16666666666666666) {
      return p + (q - p) * 6 * t;
    }
    if (t < 0.5) {
      return q;
    }
    if (t < 0.6666666666666666) {
      return p + (q - p) * (0.6666666666666666 - t) * 6;
    }
    return p;
  }
  function hslToRgb(h, s, l) {
    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
    var p = 2 * l - q;
    var r = hue2rgb(p, q, h + 0.3333333333333333);
    var g = hue2rgb(p, q, h);
    var b = hue2rgb(p, q, h - 0.3333333333333333);
    return Math.round(r * 255) << 24 | Math.round(g * 255) << 16 | Math.round(b * 255) << 8;
  }
  function hwbToRgb(h, w, b) {
    if (w + b >= 1) {
      var gray = Math.round(w * 255 / (w + b));
      return gray << 24 | gray << 16 | gray << 8;
    }
    var red = hue2rgb(0, 1, h + 0.3333333333333333) * (1 - w - b) + w;
    var green = hue2rgb(0, 1, h) * (1 - w - b) + w;
    var blue = hue2rgb(0, 1, h - 0.3333333333333333) * (1 - w - b) + w;
    return Math.round(red * 255) << 24 | Math.round(green * 255) << 16 | Math.round(blue * 255) << 8;
  }
  var NUMBER = '[-+]?\\d*\\.?\\d+';
  var PERCENTAGE = "[-+]?\\d*\\.?\\d+%";
  function call() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return '\\(\\s*(' + args.join(')\\s*,?\\s*(') + ')\\s*\\)';
  }
  function callModern() {
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }
    return '\\(\\s*(' + args.join(')\\s*(') + ')\\s*\\)';
  }
  function callWithSlashSeparator() {
    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }
    return '\\(\\s*(' + args.slice(0, args.length - 1).join(')\\s*,?\\s*(') + ')\\s*/\\s*(' + args[args.length - 1] + ')\\s*\\)';
  }
  function commaSeparatedCall() {
    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
      args[_key4] = arguments[_key4];
    }
    return '\\(\\s*(' + args.join(')\\s*,\\s*(') + ')\\s*\\)';
  }
  var cachedMatchers;
  function getMatchers() {
    if (cachedMatchers === undefined) {
      cachedMatchers = {
        rgb: new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER)),
        rgba: new RegExp('rgba(' + commaSeparatedCall(NUMBER, NUMBER, NUMBER, NUMBER) + '|' + callWithSlashSeparator(NUMBER, NUMBER, NUMBER, NUMBER) + ')'),
        hsl: new RegExp('hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE)),
        hsla: new RegExp('hsla(' + commaSeparatedCall(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER) + '|' + callWithSlashSeparator(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER) + ')'),
        hwb: new RegExp('hwb' + callModern(NUMBER, PERCENTAGE, PERCENTAGE)),
        hex3: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex4: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex6: /^#([0-9a-fA-F]{6})$/,
        hex8: /^#([0-9a-fA-F]{8})$/
      };
    }
    return cachedMatchers;
  }
  function parse255(str) {
    var int = parseInt(str, 10);
    if (int < 0) {
      return 0;
    }
    if (int > 255) {
      return 255;
    }
    return int;
  }
  function parse360(str) {
    var int = parseFloat(str);
    return (int % 360 + 360) % 360 / 360;
  }
  function parse1(str) {
    var num = parseFloat(str);
    if (num < 0) {
      return 0;
    }
    if (num > 1) {
      return 255;
    }
    return Math.round(num * 255);
  }
  function parsePercentage(str) {
    // parseFloat conveniently ignores the final %
    var int = parseFloat(str);
    if (int < 0) {
      return 0;
    }
    if (int > 100) {
      return 1;
    }
    return int / 100;
  }
  function normalizeKeyword(name) {
    // prettier-ignore
    switch (name) {
      case 'transparent':
        return 0x00000000;
      // http://www.w3.org/TR/css3-color/#svg-color
      case 'aliceblue':
        return 0xf0f8ffff;
      case 'antiquewhite':
        return 0xfaebd7ff;
      case 'aqua':
        return 0x00ffffff;
      case 'aquamarine':
        return 0x7fffd4ff;
      case 'azure':
        return 0xf0ffffff;
      case 'beige':
        return 0xf5f5dcff;
      case 'bisque':
        return 0xffe4c4ff;
      case 'black':
        return 0x000000ff;
      case 'blanchedalmond':
        return 0xffebcdff;
      case 'blue':
        return 0x0000ffff;
      case 'blueviolet':
        return 0x8a2be2ff;
      case 'brown':
        return 0xa52a2aff;
      case 'burlywood':
        return 0xdeb887ff;
      case 'burntsienna':
        return 0xea7e5dff;
      case 'cadetblue':
        return 0x5f9ea0ff;
      case 'chartreuse':
        return 0x7fff00ff;
      case 'chocolate':
        return 0xd2691eff;
      case 'coral':
        return 0xff7f50ff;
      case 'cornflowerblue':
        return 0x6495edff;
      case 'cornsilk':
        return 0xfff8dcff;
      case 'crimson':
        return 0xdc143cff;
      case 'cyan':
        return 0x00ffffff;
      case 'darkblue':
        return 0x00008bff;
      case 'darkcyan':
        return 0x008b8bff;
      case 'darkgoldenrod':
        return 0xb8860bff;
      case 'darkgray':
        return 0xa9a9a9ff;
      case 'darkgreen':
        return 0x006400ff;
      case 'darkgrey':
        return 0xa9a9a9ff;
      case 'darkkhaki':
        return 0xbdb76bff;
      case 'darkmagenta':
        return 0x8b008bff;
      case 'darkolivegreen':
        return 0x556b2fff;
      case 'darkorange':
        return 0xff8c00ff;
      case 'darkorchid':
        return 0x9932ccff;
      case 'darkred':
        return 0x8b0000ff;
      case 'darksalmon':
        return 0xe9967aff;
      case 'darkseagreen':
        return 0x8fbc8fff;
      case 'darkslateblue':
        return 0x483d8bff;
      case 'darkslategray':
        return 0x2f4f4fff;
      case 'darkslategrey':
        return 0x2f4f4fff;
      case 'darkturquoise':
        return 0x00ced1ff;
      case 'darkviolet':
        return 0x9400d3ff;
      case 'deeppink':
        return 0xff1493ff;
      case 'deepskyblue':
        return 0x00bfffff;
      case 'dimgray':
        return 0x696969ff;
      case 'dimgrey':
        return 0x696969ff;
      case 'dodgerblue':
        return 0x1e90ffff;
      case 'firebrick':
        return 0xb22222ff;
      case 'floralwhite':
        return 0xfffaf0ff;
      case 'forestgreen':
        return 0x228b22ff;
      case 'fuchsia':
        return 0xff00ffff;
      case 'gainsboro':
        return 0xdcdcdcff;
      case 'ghostwhite':
        return 0xf8f8ffff;
      case 'gold':
        return 0xffd700ff;
      case 'goldenrod':
        return 0xdaa520ff;
      case 'gray':
        return 0x808080ff;
      case 'green':
        return 0x008000ff;
      case 'greenyellow':
        return 0xadff2fff;
      case 'grey':
        return 0x808080ff;
      case 'honeydew':
        return 0xf0fff0ff;
      case 'hotpink':
        return 0xff69b4ff;
      case 'indianred':
        return 0xcd5c5cff;
      case 'indigo':
        return 0x4b0082ff;
      case 'ivory':
        return 0xfffff0ff;
      case 'khaki':
        return 0xf0e68cff;
      case 'lavender':
        return 0xe6e6faff;
      case 'lavenderblush':
        return 0xfff0f5ff;
      case 'lawngreen':
        return 0x7cfc00ff;
      case 'lemonchiffon':
        return 0xfffacdff;
      case 'lightblue':
        return 0xadd8e6ff;
      case 'lightcoral':
        return 0xf08080ff;
      case 'lightcyan':
        return 0xe0ffffff;
      case 'lightgoldenrodyellow':
        return 0xfafad2ff;
      case 'lightgray':
        return 0xd3d3d3ff;
      case 'lightgreen':
        return 0x90ee90ff;
      case 'lightgrey':
        return 0xd3d3d3ff;
      case 'lightpink':
        return 0xffb6c1ff;
      case 'lightsalmon':
        return 0xffa07aff;
      case 'lightseagreen':
        return 0x20b2aaff;
      case 'lightskyblue':
        return 0x87cefaff;
      case 'lightslategray':
        return 0x778899ff;
      case 'lightslategrey':
        return 0x778899ff;
      case 'lightsteelblue':
        return 0xb0c4deff;
      case 'lightyellow':
        return 0xffffe0ff;
      case 'lime':
        return 0x00ff00ff;
      case 'limegreen':
        return 0x32cd32ff;
      case 'linen':
        return 0xfaf0e6ff;
      case 'magenta':
        return 0xff00ffff;
      case 'maroon':
        return 0x800000ff;
      case 'mediumaquamarine':
        return 0x66cdaaff;
      case 'mediumblue':
        return 0x0000cdff;
      case 'mediumorchid':
        return 0xba55d3ff;
      case 'mediumpurple':
        return 0x9370dbff;
      case 'mediumseagreen':
        return 0x3cb371ff;
      case 'mediumslateblue':
        return 0x7b68eeff;
      case 'mediumspringgreen':
        return 0x00fa9aff;
      case 'mediumturquoise':
        return 0x48d1ccff;
      case 'mediumvioletred':
        return 0xc71585ff;
      case 'midnightblue':
        return 0x191970ff;
      case 'mintcream':
        return 0xf5fffaff;
      case 'mistyrose':
        return 0xffe4e1ff;
      case 'moccasin':
        return 0xffe4b5ff;
      case 'navajowhite':
        return 0xffdeadff;
      case 'navy':
        return 0x000080ff;
      case 'oldlace':
        return 0xfdf5e6ff;
      case 'olive':
        return 0x808000ff;
      case 'olivedrab':
        return 0x6b8e23ff;
      case 'orange':
        return 0xffa500ff;
      case 'orangered':
        return 0xff4500ff;
      case 'orchid':
        return 0xda70d6ff;
      case 'palegoldenrod':
        return 0xeee8aaff;
      case 'palegreen':
        return 0x98fb98ff;
      case 'paleturquoise':
        return 0xafeeeeff;
      case 'palevioletred':
        return 0xdb7093ff;
      case 'papayawhip':
        return 0xffefd5ff;
      case 'peachpuff':
        return 0xffdab9ff;
      case 'peru':
        return 0xcd853fff;
      case 'pink':
        return 0xffc0cbff;
      case 'plum':
        return 0xdda0ddff;
      case 'powderblue':
        return 0xb0e0e6ff;
      case 'purple':
        return 0x800080ff;
      case 'rebeccapurple':
        return 0x663399ff;
      case 'red':
        return 0xff0000ff;
      case 'rosybrown':
        return 0xbc8f8fff;
      case 'royalblue':
        return 0x4169e1ff;
      case 'saddlebrown':
        return 0x8b4513ff;
      case 'salmon':
        return 0xfa8072ff;
      case 'sandybrown':
        return 0xf4a460ff;
      case 'seagreen':
        return 0x2e8b57ff;
      case 'seashell':
        return 0xfff5eeff;
      case 'sienna':
        return 0xa0522dff;
      case 'silver':
        return 0xc0c0c0ff;
      case 'skyblue':
        return 0x87ceebff;
      case 'slateblue':
        return 0x6a5acdff;
      case 'slategray':
        return 0x708090ff;
      case 'slategrey':
        return 0x708090ff;
      case 'snow':
        return 0xfffafaff;
      case 'springgreen':
        return 0x00ff7fff;
      case 'steelblue':
        return 0x4682b4ff;
      case 'tan':
        return 0xd2b48cff;
      case 'teal':
        return 0x008080ff;
      case 'thistle':
        return 0xd8bfd8ff;
      case 'tomato':
        return 0xff6347ff;
      case 'turquoise':
        return 0x40e0d0ff;
      case 'violet':
        return 0xee82eeff;
      case 'wheat':
        return 0xf5deb3ff;
      case 'white':
        return 0xffffffff;
      case 'whitesmoke':
        return 0xf5f5f5ff;
      case 'yellow':
        return 0xffff00ff;
      case 'yellowgreen':
        return 0x9acd32ff;
    }
    return null;
  }
  module.exports = normalizeColor;
},91,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.processColorObject = exports.normalizeColorObject = exports.PlatformColor = undefined;
  var PlatformColor = exports.PlatformColor = function PlatformColor() {
    for (var _len = arguments.length, names = new Array(_len), _key = 0; _key < _len; _key++) {
      names[_key] = arguments[_key];
    }
    return {
      resource_paths: names
    };
  };
  var normalizeColorObject = exports.normalizeColorObject = function normalizeColorObject(color) {
    if ('resource_paths' in color) {
      return color;
    }
    return null;
  };
  var processColorObject = exports.processColorObject = function processColorObject(color) {
    return color;
  };
},92,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var ReactNativeFeatureFlags = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));
  var _NativeReactNativeFeatureFlags = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _processAspectRatio = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _processBackgroundImage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _processBoxShadow = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _processColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _processFilter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _processFontVariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _processTransform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _processTransformOrigin = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  var _sizesDiffer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var colorAttributes = {
    process: _processColor.default
  };
  var ReactNativeStyleAttributes = {
    alignContent: true,
    alignItems: true,
    alignSelf: true,
    aspectRatio: {
      process: _processAspectRatio.default
    },
    borderBottomWidth: true,
    borderEndWidth: true,
    borderLeftWidth: true,
    borderRightWidth: true,
    borderStartWidth: true,
    borderTopWidth: true,
    boxSizing: true,
    columnGap: true,
    borderWidth: true,
    bottom: true,
    direction: true,
    display: true,
    end: true,
    flex: true,
    flexBasis: true,
    flexDirection: true,
    flexGrow: true,
    flexShrink: true,
    flexWrap: true,
    gap: true,
    height: true,
    inset: true,
    insetBlock: true,
    insetBlockEnd: true,
    insetBlockStart: true,
    insetInline: true,
    insetInlineEnd: true,
    insetInlineStart: true,
    justifyContent: true,
    left: true,
    margin: true,
    marginBlock: true,
    marginBlockEnd: true,
    marginBlockStart: true,
    marginBottom: true,
    marginEnd: true,
    marginHorizontal: true,
    marginInline: true,
    marginInlineEnd: true,
    marginInlineStart: true,
    marginLeft: true,
    marginRight: true,
    marginStart: true,
    marginTop: true,
    marginVertical: true,
    maxHeight: true,
    maxWidth: true,
    minHeight: true,
    minWidth: true,
    overflow: true,
    padding: true,
    paddingBlock: true,
    paddingBlockEnd: true,
    paddingBlockStart: true,
    paddingBottom: true,
    paddingEnd: true,
    paddingHorizontal: true,
    paddingInline: true,
    paddingInlineEnd: true,
    paddingInlineStart: true,
    paddingLeft: true,
    paddingRight: true,
    paddingStart: true,
    paddingTop: true,
    paddingVertical: true,
    position: true,
    right: true,
    rowGap: true,
    start: true,
    top: true,
    width: true,
    zIndex: true,
    elevation: true,
    shadowColor: colorAttributes,
    shadowOffset: {
      diff: _sizesDiffer.default
    },
    shadowOpacity: true,
    shadowRadius: true,
    transform: {
      process: _processTransform.default
    },
    transformOrigin: {
      process: _processTransformOrigin.default
    },
    filter: _NativeReactNativeFeatureFlags.default != null && ReactNativeFeatureFlags.enableNativeCSSParsing() ? true : {
      process: _processFilter.default
    },
    mixBlendMode: true,
    isolation: true,
    boxShadow: _NativeReactNativeFeatureFlags.default != null && ReactNativeFeatureFlags.enableNativeCSSParsing() ? true : {
      process: _processBoxShadow.default
    },
    experimental_backgroundImage: {
      process: _processBackgroundImage.default
    },
    backfaceVisibility: true,
    backgroundColor: colorAttributes,
    borderBlockColor: colorAttributes,
    borderBlockEndColor: colorAttributes,
    borderBlockStartColor: colorAttributes,
    borderBottomColor: colorAttributes,
    borderBottomEndRadius: true,
    borderBottomLeftRadius: true,
    borderBottomRightRadius: true,
    borderBottomStartRadius: true,
    borderColor: colorAttributes,
    borderCurve: true,
    borderEndColor: colorAttributes,
    borderEndEndRadius: true,
    borderEndStartRadius: true,
    borderLeftColor: colorAttributes,
    borderRadius: true,
    borderRightColor: colorAttributes,
    borderStartColor: colorAttributes,
    borderStartEndRadius: true,
    borderStartStartRadius: true,
    borderStyle: true,
    borderTopColor: colorAttributes,
    borderTopEndRadius: true,
    borderTopLeftRadius: true,
    borderTopRightRadius: true,
    borderTopStartRadius: true,
    cursor: true,
    opacity: true,
    outlineColor: colorAttributes,
    outlineOffset: true,
    outlineStyle: true,
    outlineWidth: true,
    pointerEvents: true,
    color: colorAttributes,
    fontFamily: true,
    fontSize: true,
    fontStyle: true,
    fontVariant: {
      process: _processFontVariant.default
    },
    fontWeight: true,
    includeFontPadding: true,
    letterSpacing: true,
    lineHeight: true,
    textAlign: true,
    textAlignVertical: true,
    textDecorationColor: colorAttributes,
    textDecorationLine: true,
    textDecorationStyle: true,
    textShadowColor: colorAttributes,
    textShadowOffset: true,
    textShadowRadius: true,
    textTransform: true,
    userSelect: true,
    verticalAlign: true,
    writingDirection: true,
    overlayColor: colorAttributes,
    resizeMode: true,
    tintColor: colorAttributes,
    objectFit: true
  };
  var _default = exports.default = ReactNativeStyleAttributes;
},93,[1,73,75,94,95,88,89,96,97,98,100,101]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  function processAspectRatio(aspectRatio) {
    if (typeof aspectRatio === 'number') {
      return aspectRatio;
    }
    if (typeof aspectRatio !== 'string') {
      return;
    }
    var matches = aspectRatio.split('/').map(function (s) {
      return s.trim();
    });
    if (matches.includes('auto')) {
      return;
    }
    var hasNonNumericValues = matches.some(function (n) {
      return Number.isNaN(Number(n));
    });
    if (hasNonNumericValues) {
      return;
    }
    if (matches.length === 2) {
      return Number(matches[0]) / Number(matches[1]);
    }
    return Number(matches[0]);
  }
  var _default = exports.default = processAspectRatio;
},94,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = processBackgroundImage;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var DIRECTION_KEYWORD_REGEX = /^to\s+(?:top|bottom|left|right)(?:\s+(?:top|bottom|left|right))?/i;
  var ANGLE_UNIT_REGEX = /^([+-]?\d*\.?\d+)(deg|grad|rad|turn)$/i;
  var DEFAULT_DIRECTION = {
    type: 'angle',
    value: 180
  };
  function processBackgroundImage(backgroundImage) {
    var result = [];
    if (backgroundImage == null) {
      return result;
    }
    if (typeof backgroundImage === 'string') {
      result = parseCSSLinearGradient(backgroundImage.replace(/\n/g, ' '));
    } else if (Array.isArray(backgroundImage)) {
      for (var bgImage of backgroundImage) {
        var processedColorStops = [];
        for (var index = 0; index < bgImage.colorStops.length; index++) {
          var colorStop = bgImage.colorStops[index];
          var positions = colorStop.positions;
          if (colorStop.color == null && Array.isArray(positions) && positions.length === 1) {
            var position = positions[0];
            if (typeof position === 'number' || typeof position === 'string' && position.endsWith('%')) {
              processedColorStops.push({
                color: null,
                position: position
              });
            } else {
              return [];
            }
          } else {
            var processedColor = _$$_REQUIRE(_dependencyMap[2]).default(colorStop.color);
            if (processedColor == null) {
              return [];
            }
            if (positions != null && positions.length > 0) {
              for (var _position2 of positions) {
                if (typeof _position2 === 'number' || typeof _position2 === 'string' && _position2.endsWith('%')) {
                  processedColorStops.push({
                    color: processedColor,
                    position: _position2
                  });
                } else {
                  return [];
                }
              }
            } else {
              processedColorStops.push({
                color: processedColor,
                position: null
              });
            }
          }
        }
        var direction = DEFAULT_DIRECTION;
        var bgDirection = bgImage.direction != null ? bgImage.direction.toLowerCase() : null;
        if (bgDirection != null) {
          if (ANGLE_UNIT_REGEX.test(bgDirection)) {
            var parsedAngle = getAngleInDegrees(bgDirection);
            if (parsedAngle != null) {
              direction = {
                type: 'angle',
                value: parsedAngle
              };
            } else {
              return [];
            }
          } else if (DIRECTION_KEYWORD_REGEX.test(bgDirection)) {
            var parsedDirection = getDirectionForKeyword(bgDirection);
            if (parsedDirection != null) {
              direction = parsedDirection;
            } else {
              return [];
            }
          } else {
            return [];
          }
        }
        result = result.concat({
          type: 'linearGradient',
          direction: direction,
          colorStops: processedColorStops
        });
      }
    }
    return result;
  }
  function parseCSSLinearGradient(cssString) {
    var gradients = [];
    var match;
    var linearGradientRegex = /linear-gradient\s*\(((?:\([^)]*\)|[^())])*)\)/gi;
    while (match = linearGradientRegex.exec(cssString)) {
      var gradientContent = match[1];
      var parts = gradientContent.split(',');
      var direction = DEFAULT_DIRECTION;
      var trimmedDirection = parts[0].trim().toLowerCase();
      if (ANGLE_UNIT_REGEX.test(trimmedDirection)) {
        var parsedAngle = getAngleInDegrees(trimmedDirection);
        if (parsedAngle != null) {
          direction = {
            type: 'angle',
            value: parsedAngle
          };
          parts.shift();
        } else {
          return [];
        }
      } else if (DIRECTION_KEYWORD_REGEX.test(trimmedDirection)) {
        var parsedDirection = getDirectionForKeyword(trimmedDirection);
        if (parsedDirection != null) {
          direction = parsedDirection;
          parts.shift();
        } else {
          return [];
        }
      }
      var colorStopsString = parts.join(',');
      var colorStops = [];
      var stops = colorStopsString.split(/,(?![^(]*\))/);
      var prevStop = null;
      for (var i = 0; i < stops.length; i++) {
        var stop = stops[i];
        var trimmedStop = stop.trim().toLowerCase();
        var colorStopParts = trimmedStop.match(/\S+\([^)]*\)|\S+/g);
        if (colorStopParts == null) {
          return [];
        }
        if (colorStopParts.length === 3) {
          var color = colorStopParts[0];
          var position1 = getPositionFromCSSValue(colorStopParts[1]);
          var position2 = getPositionFromCSSValue(colorStopParts[2]);
          var processedColor = _$$_REQUIRE(_dependencyMap[2]).default(color);
          if (processedColor == null) {
            return [];
          }
          if (position1 == null || position2 == null) {
            return [];
          }
          colorStops.push({
            color: processedColor,
            position: position1
          });
          colorStops.push({
            color: processedColor,
            position: position2
          });
        } else if (colorStopParts.length === 2) {
          var _color = colorStopParts[0];
          var position = getPositionFromCSSValue(colorStopParts[1]);
          var _processedColor = _$$_REQUIRE(_dependencyMap[2]).default(_color);
          if (_processedColor == null) {
            return [];
          }
          if (position == null) {
            return [];
          }
          colorStops.push({
            color: _processedColor,
            position: position
          });
        } else if (colorStopParts.length === 1) {
          var _position3 = getPositionFromCSSValue(colorStopParts[0]);
          if (_position3 != null) {
            if (prevStop != null && prevStop.length === 1 && getPositionFromCSSValue(prevStop[0]) != null || i === stops.length - 1 || i === 0) {
              return [];
            }
            colorStops.push({
              color: null,
              position: _position3
            });
          } else {
            var _processedColor2 = _$$_REQUIRE(_dependencyMap[2]).default(colorStopParts[0]);
            if (_processedColor2 == null) {
              return [];
            }
            colorStops.push({
              color: _processedColor2,
              position: null
            });
          }
        } else {
          return [];
        }
        prevStop = colorStopParts;
      }
      gradients.push({
        type: 'linearGradient',
        direction: direction,
        colorStops: colorStops
      });
    }
    return gradients;
  }
  function getDirectionForKeyword(direction) {
    if (direction == null) {
      return null;
    }
    var normalized = direction.replace(/\s+/g, ' ').toLowerCase();
    switch (normalized) {
      case 'to top':
        return {
          type: 'angle',
          value: 0
        };
      case 'to right':
        return {
          type: 'angle',
          value: 90
        };
      case 'to bottom':
        return {
          type: 'angle',
          value: 180
        };
      case 'to left':
        return {
          type: 'angle',
          value: 270
        };
      case 'to top right':
      case 'to right top':
        return {
          type: 'keyword',
          value: 'to top right'
        };
      case 'to bottom right':
      case 'to right bottom':
        return {
          type: 'keyword',
          value: 'to bottom right'
        };
      case 'to top left':
      case 'to left top':
        return {
          type: 'keyword',
          value: 'to top left'
        };
      case 'to bottom left':
      case 'to left bottom':
        return {
          type: 'keyword',
          value: 'to bottom left'
        };
      default:
        return null;
    }
  }
  function getAngleInDegrees(angle) {
    if (angle == null) {
      return null;
    }
    var match = angle.match(ANGLE_UNIT_REGEX);
    if (!match) {
      return null;
    }
    var _match = (0, _slicedToArray2.default)(match, 3),
      value = _match[1],
      unit = _match[2];
    var numericValue = parseFloat(value);
    switch (unit) {
      case 'deg':
        return numericValue;
      case 'grad':
        return numericValue * 0.9;
      case 'rad':
        return numericValue * 180 / Math.PI;
      case 'turn':
        return numericValue * 360;
      default:
        return null;
    }
  }
  function getPositionFromCSSValue(position) {
    if (position.endsWith('px')) {
      return parseFloat(position);
    }
    if (position.endsWith('%')) {
      return position;
    }
  }
},95,[1,38,89]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = processFilter;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _processColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  function processFilter(filter) {
    var result = [];
    if (filter == null) {
      return result;
    }
    if (typeof filter === 'string') {
      filter = filter.replace(/\n/g, ' ');
      var regex = /([\w-]+)\(([^()]*|\([^()]*\)|[^()]*\([^()]*\)[^()]*)\)/g;
      var matches;
      while (matches = regex.exec(filter)) {
        var filterName = matches[1].toLowerCase();
        if (filterName === 'drop-shadow') {
          var dropShadow = parseDropShadow(matches[2]);
          if (dropShadow != null) {
            result.push({
              dropShadow: dropShadow
            });
          } else {
            return [];
          }
        } else {
          var camelizedName = filterName === 'drop-shadow' ? 'dropShadow' : filterName === 'hue-rotate' ? 'hueRotate' : filterName;
          var amount = _getFilterAmount(camelizedName, matches[2]);
          if (amount != null) {
            var filterFunction = {};
            filterFunction[camelizedName] = amount;
            result.push(filterFunction);
          } else {
            return [];
          }
        }
      }
    } else if (Array.isArray(filter)) {
      for (var _filterFunction2 of filter) {
        var _Object$entries$ = (0, _slicedToArray2.default)(Object.entries(_filterFunction2)[0], 2),
          _filterName = _Object$entries$[0],
          filterValue = _Object$entries$[1];
        if (_filterName === 'dropShadow') {
          var _dropShadow = parseDropShadow(filterValue);
          if (_dropShadow == null) {
            return [];
          }
          result.push({
            dropShadow: _dropShadow
          });
        } else {
          var _amount = _getFilterAmount(_filterName, filterValue);
          if (_amount != null) {
            var resultObject = {};
            resultObject[_filterName] = _amount;
            result.push(resultObject);
          } else {
            return [];
          }
        }
      }
    } else {
      throw new TypeError(`${typeof filter} filter is not a string or array`);
    }
    return result;
  }
  function _getFilterAmount(filterName, filterArgs) {
    var filterArgAsNumber;
    var unit;
    if (typeof filterArgs === 'string') {
      var argsWithUnitsRegex = new RegExp(/([+-]?\d*(\.\d+)?)([a-zA-Z%]+)?/g);
      var match = argsWithUnitsRegex.exec(filterArgs);
      if (!match || isNaN(Number(match[1]))) {
        return undefined;
      }
      filterArgAsNumber = Number(match[1]);
      unit = match[3];
    } else if (typeof filterArgs === 'number') {
      filterArgAsNumber = filterArgs;
    } else {
      return undefined;
    }
    switch (filterName) {
      case 'hueRotate':
        if (filterArgAsNumber === 0) {
          return 0;
        }
        if (unit !== 'deg' && unit !== 'rad') {
          return undefined;
        }
        return unit === 'rad' ? 180 * filterArgAsNumber / Math.PI : filterArgAsNumber;
      case 'blur':
        if (unit && unit !== 'px' || filterArgAsNumber < 0) {
          return undefined;
        }
        return filterArgAsNumber;
      case 'brightness':
      case 'contrast':
      case 'grayscale':
      case 'invert':
      case 'opacity':
      case 'saturate':
      case 'sepia':
        if (unit && unit !== '%' && unit !== 'px' || filterArgAsNumber < 0) {
          return undefined;
        }
        if (unit === '%') {
          filterArgAsNumber /= 100;
        }
        return filterArgAsNumber;
      default:
        return undefined;
    }
  }
  function parseDropShadow(rawDropShadow) {
    var dropShadow = typeof rawDropShadow === 'string' ? parseDropShadowString(rawDropShadow) : rawDropShadow;
    var parsedDropShadow = {
      offsetX: 0,
      offsetY: 0
    };
    var offsetX;
    var offsetY;
    for (var arg in dropShadow) {
      var value = undefined;
      switch (arg) {
        case 'offsetX':
          value = typeof dropShadow.offsetX === 'string' ? parseLength(dropShadow.offsetX) : dropShadow.offsetX;
          if (value == null) {
            return null;
          }
          offsetX = value;
          break;
        case 'offsetY':
          value = typeof dropShadow.offsetY === 'string' ? parseLength(dropShadow.offsetY) : dropShadow.offsetY;
          if (value == null) {
            return null;
          }
          offsetY = value;
          break;
        case 'standardDeviation':
          value = typeof dropShadow.standardDeviation === 'string' ? parseLength(dropShadow.standardDeviation) : dropShadow.standardDeviation;
          if (value == null || value < 0) {
            return null;
          }
          parsedDropShadow.standardDeviation = value;
          break;
        case 'color':
          var color = (0, _processColor.default)(dropShadow.color);
          if (color == null) {
            return null;
          }
          parsedDropShadow.color = color;
          break;
        default:
          return null;
      }
    }
    if (offsetX == null || offsetY == null) {
      return null;
    }
    parsedDropShadow.offsetX = offsetX;
    parsedDropShadow.offsetY = offsetY;
    return parsedDropShadow;
  }
  function parseDropShadowString(rawDropShadow) {
    var dropShadow = {
      offsetX: 0,
      offsetY: 0
    };
    var offsetX;
    var offsetY;
    var lengthCount = 0;
    var keywordDetectedAfterLength = false;
    for (var arg of rawDropShadow.split(/\s+(?![^(]*\))/)) {
      var processedColor = (0, _processColor.default)(arg);
      if (processedColor != null) {
        if (dropShadow.color != null) {
          return null;
        }
        if (offsetX != null) {
          keywordDetectedAfterLength = true;
        }
        dropShadow.color = arg;
        continue;
      }
      switch (lengthCount) {
        case 0:
          offsetX = arg;
          lengthCount++;
          break;
        case 1:
          if (keywordDetectedAfterLength) {
            return null;
          }
          offsetY = arg;
          lengthCount++;
          break;
        case 2:
          if (keywordDetectedAfterLength) {
            return null;
          }
          dropShadow.standardDeviation = arg;
          lengthCount++;
          break;
        default:
          return null;
      }
    }
    if (offsetX == null || offsetY == null) {
      return null;
    }
    dropShadow.offsetX = offsetX;
    dropShadow.offsetY = offsetY;
    return dropShadow;
  }
  function parseLength(length) {
    var argsWithUnitsRegex = /([+-]?\d*(\.\d+)?)([\w\W]+)?/g;
    var match = argsWithUnitsRegex.exec(length);
    if (!match || Number.isNaN(match[1])) {
      return null;
    }
    if (match[3] != null && match[3] !== 'px') {
      return null;
    }
    if (match[3] == null && match[1] !== '0') {
      return null;
    }
    return Number(match[1]);
  }
},96,[1,38,89]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  function processFontVariant(fontVariant) {
    if (Array.isArray(fontVariant)) {
      return fontVariant;
    }
    var match = fontVariant.split(' ').filter(Boolean);
    return match;
  }
  var _default = exports.default = processFontVariant;
},97,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  function processTransform(transform) {
    if (typeof transform === 'string') {
      var regex = new RegExp(/(\w+)\(([^)]+)\)/g);
      var transformArray = [];
      var matches;
      while (matches = regex.exec(transform)) {
        var _getKeyAndValueFromCS = _getKeyAndValueFromCSSTransform(matches[1], matches[2]),
          _key = _getKeyAndValueFromCS.key,
          value = _getKeyAndValueFromCS.value;
        if (value !== undefined) {
          transformArray.push((0, _defineProperty2.default)({}, _key, value));
        }
      }
      transform = transformArray;
    }
    return transform;
  }
  var _getKeyAndValueFromCSSTransform = function _getKeyAndValueFromCSSTransform(key, args) {
    var _args$match;
    var argsWithUnitsRegex = new RegExp(/([+-]?\d+(\.\d+)?)([a-zA-Z]+|%)?/g);
    switch (key) {
      case 'matrix':
        return {
          key: key,
          value: (_args$match = args.match(/[+-]?\d+(\.\d+)?/g)) == null ? undefined : _args$match.map(Number)
        };
      case 'translate':
      case 'translate3d':
        var parsedArgs = [];
        var missingUnitOfMeasurement = false;
        var matches;
        while (matches = argsWithUnitsRegex.exec(args)) {
          var _value = Number(matches[1]);
          var _unitOfMeasurement = matches[3];
          if (_value !== 0 && !_unitOfMeasurement) {
            missingUnitOfMeasurement = true;
          }
          if (_unitOfMeasurement === '%') {
            parsedArgs.push(`${_value}%`);
          } else {
            parsedArgs.push(_value);
          }
        }
        if (parsedArgs.length === 1) {
          parsedArgs.push(0);
        }
        return {
          key: 'translate',
          value: parsedArgs
        };
      case 'translateX':
      case 'translateY':
      case 'perspective':
        var argMatches = argsWithUnitsRegex.exec(args);
        if (!(argMatches != null && argMatches.length)) {
          return {
            key: key,
            value: undefined
          };
        }
        var value = Number(argMatches[1]);
        var unitOfMeasurement = argMatches[3];
        return {
          key: key,
          value: value
        };
      default:
        return {
          key: key,
          value: !isNaN(args) ? Number(args) : args
        };
    }
  };
  var _default = exports.default = processTransform;
},98,[1,99]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _defineProperty(e, r, t) {
    return (r = _$$_REQUIRE(_dependencyMap[0])(r)) in e ? Object.defineProperty(e, r, {
      value: t,
      enumerable: true,
      configurable: true,
      writable: true
    }) : e[r] = t, e;
  }
  module.exports = _defineProperty, module.exports.__esModule = true, module.exports["default"] = module.exports;
},99,[14]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = processTransformOrigin;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var INDEX_X = 0;
  var INDEX_Y = 1;
  var INDEX_Z = 2;
  function processTransformOrigin(transformOrigin) {
    if (typeof transformOrigin === 'string') {
      var transformOriginString = transformOrigin;
      var regex = /(top|bottom|left|right|center|\d+(?:%|px)|0)/gi;
      var transformOriginArray = ['50%', '50%', 0];
      var index = INDEX_X;
      var matches;
      outer: while (matches = regex.exec(transformOriginString)) {
        var nextIndex = index + 1;
        var value = matches[0];
        var valueLower = value.toLowerCase();
        switch (valueLower) {
          case 'left':
          case 'right':
            {
              (0, _invariant.default)(index === INDEX_X, 'Transform-origin %s can only be used for x-position', value);
              transformOriginArray[INDEX_X] = valueLower === 'left' ? 0 : '100%';
              break;
            }
          case 'top':
          case 'bottom':
            {
              (0, _invariant.default)(index !== INDEX_Z, 'Transform-origin %s can only be used for y-position', value);
              transformOriginArray[INDEX_Y] = valueLower === 'top' ? 0 : '100%';
              if (index === INDEX_X) {
                var horizontal = regex.exec(transformOriginString);
                if (horizontal == null) {
                  break outer;
                }
                switch (horizontal[0].toLowerCase()) {
                  case 'left':
                    transformOriginArray[INDEX_X] = 0;
                    break;
                  case 'right':
                    transformOriginArray[INDEX_X] = '100%';
                    break;
                  case 'center':
                    transformOriginArray[INDEX_X] = '50%';
                    break;
                  default:
                    (0, _invariant.default)(false, 'Could not parse transform-origin: %s', transformOriginString);
                }
                nextIndex = INDEX_Z;
              }
              break;
            }
          case 'center':
            {
              (0, _invariant.default)(index !== INDEX_Z, 'Transform-origin value %s cannot be used for z-position', value);
              transformOriginArray[index] = '50%';
              break;
            }
          default:
            {
              if (value.endsWith('%')) {
                transformOriginArray[index] = value;
              } else {
                transformOriginArray[index] = parseFloat(value);
              }
              break;
            }
        }
        index = nextIndex;
      }
      transformOrigin = transformOriginArray;
    }
    return transformOrigin;
  }
},100,[1,38,20]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var dummySize = {
    width: undefined,
    height: undefined
  };
  function sizesDiffer(one, two) {
    var defaultedOne = one || dummySize;
    var defaultedTwo = two || dummySize;
    return defaultedOne !== defaultedTwo && (defaultedOne.width !== defaultedTwo.width || defaultedOne.height !== defaultedTwo.height);
  }
  var _default = exports.default = sizesDiffer;
},101,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  function matricesDiffer(one, two) {
    if (one === two) {
      return false;
    }
    return !one || !two || one[12] !== two[12] || one[13] !== two[13] || one[14] !== two[14] || one[5] !== two[5] || one[10] !== two[10] || one[0] !== two[0] || one[1] !== two[1] || one[2] !== two[2] || one[3] !== two[3] || one[4] !== two[4] || one[6] !== two[6] || one[7] !== two[7] || one[8] !== two[8] || one[9] !== two[9] || one[11] !== two[11] || one[15] !== two[15];
  }
  var _default = exports.default = matricesDiffer;
},102,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var dummyPoint = {
    x: undefined,
    y: undefined
  };
  function pointsDiffer(one, two) {
    one = one || dummyPoint;
    two = two || dummyPoint;
    return one !== two && (one.x !== two.x || one.y !== two.y);
  }
  var _default = exports.default = pointsDiffer;
},103,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var dummyInsets = {
    top: undefined,
    left: undefined,
    right: undefined,
    bottom: undefined
  };
  function insetsDiffer(one, two) {
    one = one || dummyInsets;
    two = two || dummyInsets;
    return one !== two && (one.top !== two.top || one.left !== two.left || one.right !== two.right || one.bottom !== two.bottom);
  }
  var _default = exports.default = insetsDiffer;
},104,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _processColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var TRANSPARENT = 0;
  function processColorArray(colors) {
    return colors == null ? null : colors.map(processColorElement);
  }
  function processColorElement(color) {
    var value = (0, _processColor.default)(color);
    if (value == null) {
      console.error('Invalid value in color array:', color);
      return TRANSPARENT;
    }
    return value;
  }
  var _default = exports.default = processColorArray;
},105,[1,89]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _NativeSourceCode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _customSourceTransformers = [];
  var _serverURL;
  var _scriptURL;
  var _sourceCodeScriptURL;
  function getSourceCodeScriptURL() {
    if (_sourceCodeScriptURL != null) {
      return _sourceCodeScriptURL;
    }
    _sourceCodeScriptURL = _NativeSourceCode.default.getConstants().scriptURL;
    return _sourceCodeScriptURL;
  }
  function getDevServerURL() {
    if (_serverURL === undefined) {
      var sourceCodeScriptURL = getSourceCodeScriptURL();
      var match = sourceCodeScriptURL == null ? undefined : sourceCodeScriptURL.match(/^https?:\/\/.*?\//);
      if (match) {
        _serverURL = match[0];
      } else {
        _serverURL = null;
      }
    }
    return _serverURL;
  }
  function _coerceLocalScriptURL(scriptURL) {
    var normalizedScriptURL = scriptURL;
    if (normalizedScriptURL != null) {
      if (normalizedScriptURL.startsWith('assets://')) {
        return null;
      }
      normalizedScriptURL = normalizedScriptURL.substring(0, normalizedScriptURL.lastIndexOf('/') + 1);
      if (!normalizedScriptURL.includes('://')) {
        normalizedScriptURL = 'file://' + normalizedScriptURL;
      }
    }
    return normalizedScriptURL;
  }
  function getScriptURL() {
    if (_scriptURL === undefined) {
      _scriptURL = _coerceLocalScriptURL(getSourceCodeScriptURL());
    }
    return _scriptURL;
  }
  function setCustomSourceTransformer(transformer) {
    _customSourceTransformers = [transformer];
  }
  function addCustomSourceTransformer(transformer) {
    _customSourceTransformers.push(transformer);
  }
  function resolveAssetSource(source) {
    if (source == null || typeof source === 'object') {
      return source;
    }
    var asset = _$$_REQUIRE(_dependencyMap[2]).getAssetByID(source);
    if (!asset) {
      return null;
    }
    var resolver = new (_$$_REQUIRE(_dependencyMap[3]).default)(getDevServerURL(), getScriptURL(), asset);
    if (_customSourceTransformers) {
      for (var customSourceTransformer of _customSourceTransformers) {
        var transformedSource = customSourceTransformer(resolver);
        if (transformedSource != null) {
          return transformedSource;
        }
      }
    }
    return resolver.defaultAsset();
  }
  resolveAssetSource.pickScale = _$$_REQUIRE(_dependencyMap[4]).pickScale;
  resolveAssetSource.setCustomSourceTransformer = setCustomSourceTransformer;
  resolveAssetSource.addCustomSourceTransformer = addCustomSourceTransformer;
  var _default = exports.default = resolveAssetSource;
},106,[1,107,109,110,111]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeSourceCode = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeSourceCode).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeSourceCode[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeSourceCode[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeSourceCode.default;
},107,[108]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var NativeModule = TurboModuleRegistry.getEnforcing('SourceCode');
  var constants = null;
  var NativeSourceCode = {
    getConstants: function getConstants() {
      if (constants == null) {
        constants = NativeModule.getConstants();
      }
      return constants;
    }
  };
  var _default = exports.default = NativeSourceCode;
},108,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var assets = [];
  function registerAsset(asset) {
    return assets.push(asset);
  }
  function getAssetByID(assetId) {
    return assets[assetId - 1];
  }
  module.exports = {
    registerAsset: registerAsset,
    getAssetByID: getAssetByID
  };
},109,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  function getScaledAssetPath(asset) {
    var scale = _$$_REQUIRE(_dependencyMap[3]).pickScale(asset.scales, _$$_REQUIRE(_dependencyMap[4]).default.get());
    var scaleSuffix = scale === 1 ? '' : '@' + scale + 'x';
    var assetDir = _$$_REQUIRE(_dependencyMap[5]).getBasePath(asset);
    return assetDir + '/' + asset.name + scaleSuffix + '.' + asset.type;
  }
  function getAssetPathInDrawableFolder(asset) {
    var scale = _$$_REQUIRE(_dependencyMap[3]).pickScale(asset.scales, _$$_REQUIRE(_dependencyMap[4]).default.get());
    var drawableFolder = _$$_REQUIRE(_dependencyMap[5]).getAndroidResourceFolderName(asset, scale);
    var fileName = _$$_REQUIRE(_dependencyMap[5]).getAndroidResourceIdentifier(asset);
    return drawableFolder + '/' + fileName + '.' + asset.type;
  }
  function assetSupportsNetworkLoads(asset) {
    return !(asset.type === 'xml' && true);
  }
  var AssetSourceResolver = /*#__PURE__*/function () {
    function AssetSourceResolver(serverUrl, jsbundleUrl, asset) {
      (0, _classCallCheck2.default)(this, AssetSourceResolver);
      this.serverUrl = serverUrl;
      this.jsbundleUrl = jsbundleUrl;
      this.asset = asset;
    }
    return (0, _createClass2.default)(AssetSourceResolver, [{
      key: "isLoadedFromServer",
      value: function isLoadedFromServer() {
        return this.serverUrl != null && this.serverUrl !== '' && assetSupportsNetworkLoads(this.asset);
      }
    }, {
      key: "isLoadedFromFileSystem",
      value: function isLoadedFromFileSystem() {
        var _this$jsbundleUrl;
        return this.jsbundleUrl != null && ((_this$jsbundleUrl = this.jsbundleUrl) == null ? undefined : _this$jsbundleUrl.startsWith('file://'));
      }
    }, {
      key: "defaultAsset",
      value: function defaultAsset() {
        if (this.isLoadedFromServer()) {
          return this.assetServerURL();
        }
        if (this.asset.resolver != null) {
          return this.getAssetUsingResolver(this.asset.resolver);
        }
        {
          return this.isLoadedFromFileSystem() ? this.drawableFolderInBundle() : this.resourceIdentifierWithoutScale();
        }
      }
    }, {
      key: "getAssetUsingResolver",
      value: function getAssetUsingResolver(resolver) {
        switch (resolver) {
          case 'android':
            return this.isLoadedFromFileSystem() ? this.drawableFolderInBundle() : this.resourceIdentifierWithoutScale();
          case 'generic':
            return this.scaledAssetURLNearBundle();
          default:
            throw new Error("Don't know how to get asset via provided resolver: " + resolver + '\nAsset: ' + JSON.stringify(this.asset, null, '\t') + '\nPossible resolvers are:' + JSON.stringify(['android', 'generic'], null, '\t'));
        }
      }
    }, {
      key: "assetServerURL",
      value: function assetServerURL() {
        _$$_REQUIRE(_dependencyMap[6])(this.serverUrl != null, 'need server to load from');
        return this.fromSource(this.serverUrl + getScaledAssetPath(this.asset) + '?platform=' + "android" + '&hash=' + this.asset.hash);
      }
    }, {
      key: "scaledAssetPath",
      value: function scaledAssetPath() {
        return this.fromSource(getScaledAssetPath(this.asset));
      }
    }, {
      key: "scaledAssetURLNearBundle",
      value: function scaledAssetURLNearBundle() {
        var _this$jsbundleUrl2;
        var path = (_this$jsbundleUrl2 = this.jsbundleUrl) != null ? _this$jsbundleUrl2 : 'file://';
        return this.fromSource(path + getScaledAssetPath(this.asset).replace(/\.\.\//g, '_'));
      }
    }, {
      key: "resourceIdentifierWithoutScale",
      value: function resourceIdentifierWithoutScale() {
        _$$_REQUIRE(_dependencyMap[6])(true, 'resource identifiers work on Android');
        return this.fromSource(_$$_REQUIRE(_dependencyMap[5]).getAndroidResourceIdentifier(this.asset));
      }
    }, {
      key: "drawableFolderInBundle",
      value: function drawableFolderInBundle() {
        var _this$jsbundleUrl3;
        var path = (_this$jsbundleUrl3 = this.jsbundleUrl) != null ? _this$jsbundleUrl3 : 'file://';
        return this.fromSource(path + getAssetPathInDrawableFolder(this.asset));
      }
    }, {
      key: "fromSource",
      value: function fromSource(source) {
        return {
          __packager_asset: true,
          width: this.asset.width,
          height: this.asset.height,
          uri: source,
          scale: _$$_REQUIRE(_dependencyMap[3]).pickScale(this.asset.scales, _$$_REQUIRE(_dependencyMap[4]).default.get())
        };
      }
    }]);
  }();
  AssetSourceResolver.pickScale = _$$_REQUIRE(_dependencyMap[3]).pickScale;
  var _default = exports.default = AssetSourceResolver;
},110,[1,12,13,111,112,116,20]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getUrlCacheBreaker = getUrlCacheBreaker;
  exports.pickScale = pickScale;
  exports.setUrlCacheBreaker = setUrlCacheBreaker;
  var _PixelRatio = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var cacheBreaker;
  var warnIfCacheBreakerUnset = true;
  function pickScale(scales, deviceScale) {
    var requiredDeviceScale = deviceScale != null ? deviceScale : _PixelRatio.default.get();
    for (var i = 0; i < scales.length; i++) {
      if (scales[i] >= requiredDeviceScale) {
        return scales[i];
      }
    }
    return scales[scales.length - 1] || 1;
  }
  function setUrlCacheBreaker(appendage) {
    cacheBreaker = appendage;
  }
  function getUrlCacheBreaker() {
    if (cacheBreaker == null) {
      return '';
    }
    return cacheBreaker;
  }
},111,[1,112]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var PixelRatio = /*#__PURE__*/function () {
    function PixelRatio() {
      (0, _classCallCheck2.default)(this, PixelRatio);
    }
    return (0, _createClass2.default)(PixelRatio, null, [{
      key: "get",
      value: function get() {
        return _$$_REQUIRE(_dependencyMap[3]).default.get('window').scale;
      }
    }, {
      key: "getFontScale",
      value: function getFontScale() {
        return _$$_REQUIRE(_dependencyMap[3]).default.get('window').fontScale || PixelRatio.get();
      }
    }, {
      key: "getPixelSizeForLayoutSize",
      value: function getPixelSizeForLayoutSize(layoutSize) {
        return Math.round(layoutSize * PixelRatio.get());
      }
    }, {
      key: "roundToNearestPixel",
      value: function roundToNearestPixel(layoutSize) {
        var ratio = PixelRatio.get();
        return Math.round(layoutSize * ratio) / ratio;
      }
    }, {
      key: "startDetecting",
      value: function startDetecting() {}
    }]);
  }();
  var _default = exports.default = PixelRatio;
},112,[1,12,13,113]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _RCTDeviceEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _EventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _NativeDeviceInfo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var eventEmitter = new _EventEmitter.default();
  var dimensionsInitialized = false;
  var dimensions;
  var Dimensions = /*#__PURE__*/function () {
    function Dimensions() {
      (0, _classCallCheck2.default)(this, Dimensions);
    }
    return (0, _createClass2.default)(Dimensions, null, [{
      key: "get",
      value: function get(dim) {
        (0, _invariant.default)(dimensions[dim], 'No dimension set for key ' + dim);
        return dimensions[dim];
      }
    }, {
      key: "set",
      value: function set(dims) {
        var screen = dims.screen,
          window = dims.window;
        var windowPhysicalPixels = dims.windowPhysicalPixels;
        if (windowPhysicalPixels) {
          window = {
            width: windowPhysicalPixels.width / windowPhysicalPixels.scale,
            height: windowPhysicalPixels.height / windowPhysicalPixels.scale,
            scale: windowPhysicalPixels.scale,
            fontScale: windowPhysicalPixels.fontScale
          };
        }
        var screenPhysicalPixels = dims.screenPhysicalPixels;
        if (screenPhysicalPixels) {
          screen = {
            width: screenPhysicalPixels.width / screenPhysicalPixels.scale,
            height: screenPhysicalPixels.height / screenPhysicalPixels.scale,
            scale: screenPhysicalPixels.scale,
            fontScale: screenPhysicalPixels.fontScale
          };
        } else if (screen == null) {
          screen = window;
        }
        dimensions = {
          window: window,
          screen: screen
        };
        if (dimensionsInitialized) {
          eventEmitter.emit('change', dimensions);
        } else {
          dimensionsInitialized = true;
        }
      }
    }, {
      key: "addEventListener",
      value: function addEventListener(type, handler) {
        (0, _invariant.default)(type === 'change', 'Trying to subscribe to unknown event: "%s"', type);
        return eventEmitter.addListener(type, handler);
      }
    }]);
  }();
  _RCTDeviceEventEmitter.default.addListener('didUpdateDimensions', function (update) {
    Dimensions.set(update);
  });
  Dimensions.set(_NativeDeviceInfo.default.getConstants().Dimensions);
  var _default = exports.default = Dimensions;
},113,[1,12,13,22,30,114,20]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeDeviceInfo = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeDeviceInfo).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeDeviceInfo[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeDeviceInfo[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeDeviceInfo.default;
},114,[115]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var NativeModule = TurboModuleRegistry.getEnforcing('DeviceInfo');
  var constants = null;
  var NativeDeviceInfo = {
    getConstants: function getConstants() {
      if (constants == null) {
        constants = NativeModule.getConstants();
      }
      return constants;
    }
  };
  var _default = exports.default = NativeDeviceInfo;
},115,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var androidScaleSuffix = {
    '0.75': 'ldpi',
    '1': 'mdpi',
    '1.5': 'hdpi',
    '2': 'xhdpi',
    '3': 'xxhdpi',
    '4': 'xxxhdpi'
  };
  var ANDROID_BASE_DENSITY = 160;
  function getAndroidAssetSuffix(scale) {
    if (scale.toString() in androidScaleSuffix) {
      return androidScaleSuffix[scale.toString()];
    }
    if (Number.isFinite(scale) && scale > 0) {
      return Math.round(scale * ANDROID_BASE_DENSITY) + 'dpi';
    }
    throw new Error('no such scale ' + scale.toString());
  }
  var drawableFileTypes = new Set(['gif', 'jpeg', 'jpg', 'ktx', 'png', 'webp', 'xml']);
  function getAndroidResourceFolderName(asset, scale) {
    if (!drawableFileTypes.has(asset.type)) {
      return 'raw';
    }
    var suffix = getAndroidAssetSuffix(scale);
    if (!suffix) {
      throw new Error("Don't know which android drawable suffix to use for scale: " + scale + '\nAsset: ' + JSON.stringify(asset, null, '\t') + '\nPossible scales are:' + JSON.stringify(androidScaleSuffix, null, '\t'));
    }
    return 'drawable-' + suffix;
  }
  function getAndroidResourceIdentifier(asset) {
    return (getBasePath(asset) + '/' + asset.name).toLowerCase().replace(/\//g, '_').replace(/([^a-z0-9_])/g, '').replace(/^(?:assets|assetsunstable_path)_/, '');
  }
  function getBasePath(asset) {
    var basePath = asset.httpServerLocation;
    return basePath.startsWith('/') ? basePath.slice(1) : basePath;
  }
  module.exports = {
    getAndroidResourceFolderName: getAndroidResourceFolderName,
    getAndroidResourceIdentifier: getAndroidResourceIdentifier,
    getBasePath: getBasePath
  };
},116,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.customDirectEventTypes = exports.customBubblingEventTypes = undefined;
  exports.get = get;
  exports.register = register;
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var customBubblingEventTypes = exports.customBubblingEventTypes = {};
  var customDirectEventTypes = exports.customDirectEventTypes = {};
  var viewConfigCallbacks = new Map();
  var viewConfigs = new Map();
  function processEventTypes(viewConfig) {
    var bubblingEventTypes = viewConfig.bubblingEventTypes,
      directEventTypes = viewConfig.directEventTypes;
    if (bubblingEventTypes != null) {
      for (var _topLevelType2 in bubblingEventTypes) {
        if (customBubblingEventTypes[_topLevelType2] == null) {
          customBubblingEventTypes[_topLevelType2] = bubblingEventTypes[_topLevelType2];
        }
      }
    }
    if (directEventTypes != null) {
      for (var _topLevelType4 in directEventTypes) {
        if (customDirectEventTypes[_topLevelType4] == null) {
          customDirectEventTypes[_topLevelType4] = directEventTypes[_topLevelType4];
        }
      }
    }
  }
  function register(name, callback) {
    (0, _invariant.default)(!viewConfigCallbacks.has(name), 'Tried to register two views with the same name %s', name);
    (0, _invariant.default)(typeof callback === 'function', 'View config getter callback for component `%s` must be a function (received `%s`)', name, callback === null ? 'null' : typeof callback);
    viewConfigCallbacks.set(name, callback);
    return name;
  }
  function get(name) {
    var viewConfig = viewConfigs.get(name);
    if (viewConfig == null) {
      var callback = viewConfigCallbacks.get(name);
      if (typeof callback !== 'function') {
        (0, _invariant.default)(false, 'View config getter callback for component `%s` must be a function (received `%s`).%s', name, callback === null ? 'null' : typeof callback, typeof name[0] === 'string' && /[a-z]/.test(name[0]) ? ' Make sure to start component names with a capital letter.' : '');
      }
      viewConfig = callback();
      (0, _invariant.default)(viewConfig, 'View config not found for component `%s`', name);
      processEventTypes(viewConfig);
      viewConfigs.set(name, viewConfig);
      viewConfigCallbacks.set(name, null);
    }
    return viewConfig;
  }
},117,[1,20]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.stringifyValidationResult = stringifyValidationResult;
  exports.validate = validate;
  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var ReactNativeFeatureFlags = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function validate(name, nativeViewConfig, staticViewConfig) {
    var differences = [];
    accumulateDifferences(differences, [], {
      bubblingEventTypes: nativeViewConfig.bubblingEventTypes,
      directEventTypes: nativeViewConfig.directEventTypes,
      uiViewClassName: nativeViewConfig.uiViewClassName,
      validAttributes: nativeViewConfig.validAttributes
    }, {
      bubblingEventTypes: staticViewConfig.bubblingEventTypes,
      directEventTypes: staticViewConfig.directEventTypes,
      uiViewClassName: staticViewConfig.uiViewClassName,
      validAttributes: staticViewConfig.validAttributes
    });
    if (differences.length === 0) {
      return {
        type: 'valid'
      };
    }
    return {
      type: 'invalid',
      differences: differences
    };
  }
  function stringifyValidationResult(name, validationResult) {
    var differences = validationResult.differences;
    return [`StaticViewConfigValidator: Invalid static view config for '${name}'.`, ''].concat((0, _toConsumableArray2.default)(differences.map(function (difference) {
      var type = difference.type,
        path = difference.path;
      switch (type) {
        case 'missing':
          return `- '${path.join('.')}' is missing.`;
        case 'unequal':
          return `- '${path.join('.')}' is the wrong value.`;
      }
    })), ['']).join('\n');
  }
  function accumulateDifferences(differences, path, nativeObject, staticObject) {
    for (var nativeKey in nativeObject) {
      var nativeValue = nativeObject[nativeKey];
      if (!staticObject.hasOwnProperty(nativeKey)) {
        differences.push({
          path: [].concat((0, _toConsumableArray2.default)(path), [nativeKey]),
          type: 'missing',
          nativeValue: nativeValue
        });
        continue;
      }
      var staticValue = staticObject[nativeKey];
      var nativeValueIfObject = ifObject(nativeValue);
      if (nativeValueIfObject != null) {
        var staticValueIfObject = ifObject(staticValue);
        if (staticValueIfObject != null) {
          path.push(nativeKey);
          accumulateDifferences(differences, path, nativeValueIfObject, staticValueIfObject);
          path.pop();
          continue;
        }
      }
      if (nativeValue !== staticValue && !ReactNativeFeatureFlags.enableNativeCSSParsing()) {
        differences.push({
          path: [].concat((0, _toConsumableArray2.default)(path), [nativeKey]),
          type: 'unequal',
          nativeValue: nativeValue,
          staticValue: staticValue
        });
      }
    }
  }
  function ifObject(value) {
    return typeof value === 'object' && !Array.isArray(value) ? value : null;
  }
},118,[1,6,73]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  {
    module.exports = _$$_REQUIRE(_dependencyMap[0]);
  }
},119,[120]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /**
   * @license React
   * react.production.js
   *
   * Copyright (c) Meta Platforms, Inc. and affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  "use strict";

  var REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"),
    REACT_PORTAL_TYPE = Symbol.for("react.portal"),
    REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"),
    REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"),
    REACT_PROFILER_TYPE = Symbol.for("react.profiler"),
    REACT_CONSUMER_TYPE = Symbol.for("react.consumer"),
    REACT_CONTEXT_TYPE = Symbol.for("react.context"),
    REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"),
    REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"),
    REACT_MEMO_TYPE = Symbol.for("react.memo"),
    REACT_LAZY_TYPE = Symbol.for("react.lazy"),
    MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
  function getIteratorFn(maybeIterable) {
    if (null === maybeIterable || "object" !== typeof maybeIterable) return null;
    maybeIterable = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable["@@iterator"];
    return "function" === typeof maybeIterable ? maybeIterable : null;
  }
  var ReactNoopUpdateQueue = {
      isMounted: function isMounted() {
        return false;
      },
      enqueueForceUpdate: function enqueueForceUpdate() {},
      enqueueReplaceState: function enqueueReplaceState() {},
      enqueueSetState: function enqueueSetState() {}
    },
    assign = Object.assign,
    emptyObject = {};
  function Component(props, context, updater) {
    this.props = props;
    this.context = context;
    this.refs = emptyObject;
    this.updater = updater || ReactNoopUpdateQueue;
  }
  Component.prototype.isReactComponent = {};
  Component.prototype.setState = function (partialState, callback) {
    if ("object" !== typeof partialState && "function" !== typeof partialState && null != partialState) throw Error("takes an object of state variables to update or a function which returns an object of state variables.");
    this.updater.enqueueSetState(this, partialState, callback, "setState");
  };
  Component.prototype.forceUpdate = function (callback) {
    this.updater.enqueueForceUpdate(this, callback, "forceUpdate");
  };
  function ComponentDummy() {}
  ComponentDummy.prototype = Component.prototype;
  function PureComponent(props, context, updater) {
    this.props = props;
    this.context = context;
    this.refs = emptyObject;
    this.updater = updater || ReactNoopUpdateQueue;
  }
  var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
  pureComponentPrototype.constructor = PureComponent;
  assign(pureComponentPrototype, Component.prototype);
  pureComponentPrototype.isPureReactComponent = true;
  var isArrayImpl = Array.isArray,
    ReactSharedInternals = {
      H: null,
      A: null,
      T: null,
      S: null
    },
    hasOwnProperty = Object.prototype.hasOwnProperty;
  function ReactElement(type, key, self, source, owner, props) {
    self = props.ref;
    return {
      $$typeof: REACT_ELEMENT_TYPE,
      type: type,
      key: key,
      ref: undefined !== self ? self : null,
      props: props
    };
  }
  function cloneAndReplaceKey(oldElement, newKey) {
    return ReactElement(oldElement.type, newKey, undefined, undefined, undefined, oldElement.props);
  }
  function isValidElement(object) {
    return "object" === typeof object && null !== object && object.$$typeof === REACT_ELEMENT_TYPE;
  }
  function escape(key) {
    var escaperLookup = {
      "=": "=0",
      ":": "=2"
    };
    return "$" + key.replace(/[=:]/g, function (match) {
      return escaperLookup[match];
    });
  }
  var userProvidedKeyEscapeRegex = /\/+/g;
  function getElementKey(element, index) {
    return "object" === typeof element && null !== element && null != element.key ? escape("" + element.key) : index.toString(36);
  }
  function noop$1() {}
  function resolveThenable(thenable) {
    switch (thenable.status) {
      case "fulfilled":
        return thenable.value;
      case "rejected":
        throw thenable.reason;
      default:
        switch ("string" === typeof thenable.status ? thenable.then(noop$1, noop$1) : (thenable.status = "pending", thenable.then(function (fulfilledValue) {
          "pending" === thenable.status && (thenable.status = "fulfilled", thenable.value = fulfilledValue);
        }, function (error) {
          "pending" === thenable.status && (thenable.status = "rejected", thenable.reason = error);
        })), thenable.status) {
          case "fulfilled":
            return thenable.value;
          case "rejected":
            throw thenable.reason;
        }
    }
    throw thenable;
  }
  function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
    var type = typeof children;
    if ("undefined" === type || "boolean" === type) children = null;
    var invokeCallback = false;
    if (null === children) invokeCallback = true;else switch (type) {
      case "bigint":
      case "string":
      case "number":
        invokeCallback = true;
        break;
      case "object":
        switch (children.$$typeof) {
          case REACT_ELEMENT_TYPE:
          case REACT_PORTAL_TYPE:
            invokeCallback = true;
            break;
          case REACT_LAZY_TYPE:
            return invokeCallback = children._init, mapIntoArray(invokeCallback(children._payload), array, escapedPrefix, nameSoFar, callback);
        }
    }
    if (invokeCallback) return callback = callback(children), invokeCallback = "" === nameSoFar ? "." + getElementKey(children, 0) : nameSoFar, isArrayImpl(callback) ? (escapedPrefix = "", null != invokeCallback && (escapedPrefix = invokeCallback.replace(userProvidedKeyEscapeRegex, "$&/") + "/"), mapIntoArray(callback, array, escapedPrefix, "", function (c) {
      return c;
    })) : null != callback && (isValidElement(callback) && (callback = cloneAndReplaceKey(callback, escapedPrefix + (null == callback.key || children && children.key === callback.key ? "" : ("" + callback.key).replace(userProvidedKeyEscapeRegex, "$&/") + "/") + invokeCallback)), array.push(callback)), 1;
    invokeCallback = 0;
    var nextNamePrefix = "" === nameSoFar ? "." : nameSoFar + ":";
    if (isArrayImpl(children)) for (var i = 0; i < children.length; i++) nameSoFar = children[i], type = nextNamePrefix + getElementKey(nameSoFar, i), invokeCallback += mapIntoArray(nameSoFar, array, escapedPrefix, type, callback);else if (i = getIteratorFn(children), "function" === typeof i) for (children = i.call(children), i = 0; !(nameSoFar = children.next()).done;) nameSoFar = nameSoFar.value, type = nextNamePrefix + getElementKey(nameSoFar, i++), invokeCallback += mapIntoArray(nameSoFar, array, escapedPrefix, type, callback);else if ("object" === type) {
      if ("function" === typeof children.then) return mapIntoArray(resolveThenable(children), array, escapedPrefix, nameSoFar, callback);
      array = String(children);
      throw Error("Objects are not valid as a React child (found: " + ("[object Object]" === array ? "object with keys {" + Object.keys(children).join(", ") + "}" : array) + "). If you meant to render a collection of children, use an array instead.");
    }
    return invokeCallback;
  }
  function mapChildren(children, func, context) {
    if (null == children) return children;
    var result = [],
      count = 0;
    mapIntoArray(children, result, "", "", function (child) {
      return func.call(context, child, count++);
    });
    return result;
  }
  function lazyInitializer(payload) {
    if (-1 === payload._status) {
      var ctor = payload._result;
      ctor = ctor();
      ctor.then(function (moduleObject) {
        if (0 === payload._status || -1 === payload._status) payload._status = 1, payload._result = moduleObject;
      }, function (error) {
        if (0 === payload._status || -1 === payload._status) payload._status = 2, payload._result = error;
      });
      -1 === payload._status && (payload._status = 0, payload._result = ctor);
    }
    if (1 === payload._status) return payload._result.default;
    throw payload._result;
  }
  var reportGlobalError = "function" === typeof reportError ? reportError : function (error) {
    if ("object" === typeof window && "function" === typeof window.ErrorEvent) {
      var event = new window.ErrorEvent("error", {
        bubbles: true,
        cancelable: true,
        message: "object" === typeof error && null !== error && "string" === typeof error.message ? String(error.message) : String(error),
        error: error
      });
      if (!window.dispatchEvent(event)) return;
    } else if ("object" === typeof process && "function" === typeof process.emit) {
      process.emit("uncaughtException", error);
      return;
    }
    console.error(error);
  };
  function noop() {}
  exports.Children = {
    map: mapChildren,
    forEach: function forEach(children, forEachFunc, forEachContext) {
      mapChildren(children, function () {
        forEachFunc.apply(this, arguments);
      }, forEachContext);
    },
    count: function count(children) {
      var n = 0;
      mapChildren(children, function () {
        n++;
      });
      return n;
    },
    toArray: function toArray(children) {
      return mapChildren(children, function (child) {
        return child;
      }) || [];
    },
    only: function only(children) {
      if (!isValidElement(children)) throw Error("React.Children.only expected to receive a single React element child.");
      return children;
    }
  };
  exports.Component = Component;
  exports.Fragment = REACT_FRAGMENT_TYPE;
  exports.Profiler = REACT_PROFILER_TYPE;
  exports.PureComponent = PureComponent;
  exports.StrictMode = REACT_STRICT_MODE_TYPE;
  exports.Suspense = REACT_SUSPENSE_TYPE;
  exports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE = ReactSharedInternals;
  exports.act = function () {
    throw Error("act(...) is not supported in production builds of React.");
  };
  exports.cache = function (fn) {
    return function () {
      return fn.apply(null, arguments);
    };
  };
  exports.cloneElement = function (element, config, children) {
    if (null === element || undefined === element) throw Error("The argument must be a React element, but you passed " + element + ".");
    var props = assign({}, element.props),
      key = element.key,
      owner = undefined;
    if (null != config) for (propName in undefined !== config.ref && (owner = undefined), undefined !== config.key && (key = "" + config.key), config) !hasOwnProperty.call(config, propName) || "key" === propName || "__self" === propName || "__source" === propName || "ref" === propName && undefined === config.ref || (props[propName] = config[propName]);
    var propName = arguments.length - 2;
    if (1 === propName) props.children = children;else if (1 < propName) {
      for (var childArray = Array(propName), i = 0; i < propName; i++) childArray[i] = arguments[i + 2];
      props.children = childArray;
    }
    return ReactElement(element.type, key, undefined, undefined, owner, props);
  };
  exports.createContext = function (defaultValue) {
    defaultValue = {
      $$typeof: REACT_CONTEXT_TYPE,
      _currentValue: defaultValue,
      _currentValue2: defaultValue,
      _threadCount: 0,
      Provider: null,
      Consumer: null
    };
    defaultValue.Provider = defaultValue;
    defaultValue.Consumer = {
      $$typeof: REACT_CONSUMER_TYPE,
      _context: defaultValue
    };
    return defaultValue;
  };
  exports.createElement = function (type, config, children) {
    var propName,
      props = {},
      key = null;
    if (null != config) for (propName in undefined !== config.key && (key = "" + config.key), config) hasOwnProperty.call(config, propName) && "key" !== propName && "__self" !== propName && "__source" !== propName && (props[propName] = config[propName]);
    var childrenLength = arguments.length - 2;
    if (1 === childrenLength) props.children = children;else if (1 < childrenLength) {
      for (var childArray = Array(childrenLength), i = 0; i < childrenLength; i++) childArray[i] = arguments[i + 2];
      props.children = childArray;
    }
    if (type && type.defaultProps) for (propName in childrenLength = type.defaultProps, childrenLength) undefined === props[propName] && (props[propName] = childrenLength[propName]);
    return ReactElement(type, key, undefined, undefined, null, props);
  };
  exports.createRef = function () {
    return {
      current: null
    };
  };
  exports.forwardRef = function (render) {
    return {
      $$typeof: REACT_FORWARD_REF_TYPE,
      render: render
    };
  };
  exports.isValidElement = isValidElement;
  exports.lazy = function (ctor) {
    return {
      $$typeof: REACT_LAZY_TYPE,
      _payload: {
        _status: -1,
        _result: ctor
      },
      _init: lazyInitializer
    };
  };
  exports.memo = function (type, compare) {
    return {
      $$typeof: REACT_MEMO_TYPE,
      type: type,
      compare: undefined === compare ? null : compare
    };
  };
  exports.startTransition = function (scope) {
    var prevTransition = ReactSharedInternals.T,
      currentTransition = {};
    ReactSharedInternals.T = currentTransition;
    try {
      var returnValue = scope(),
        onStartTransitionFinish = ReactSharedInternals.S;
      null !== onStartTransitionFinish && onStartTransitionFinish(currentTransition, returnValue);
      "object" === typeof returnValue && null !== returnValue && "function" === typeof returnValue.then && returnValue.then(noop, reportGlobalError);
    } catch (error) {
      reportGlobalError(error);
    } finally {
      ReactSharedInternals.T = prevTransition;
    }
  };
  exports.unstable_useCacheRefresh = function () {
    return ReactSharedInternals.H.useCacheRefresh();
  };
  exports.use = function (usable) {
    return ReactSharedInternals.H.use(usable);
  };
  exports.useActionState = function (action, initialState, permalink) {
    return ReactSharedInternals.H.useActionState(action, initialState, permalink);
  };
  exports.useCallback = function (callback, deps) {
    return ReactSharedInternals.H.useCallback(callback, deps);
  };
  exports.useContext = function (Context) {
    return ReactSharedInternals.H.useContext(Context);
  };
  exports.useDebugValue = function () {};
  exports.useDeferredValue = function (value, initialValue) {
    return ReactSharedInternals.H.useDeferredValue(value, initialValue);
  };
  exports.useEffect = function (create, deps) {
    return ReactSharedInternals.H.useEffect(create, deps);
  };
  exports.useId = function () {
    return ReactSharedInternals.H.useId();
  };
  exports.useImperativeHandle = function (ref, create, deps) {
    return ReactSharedInternals.H.useImperativeHandle(ref, create, deps);
  };
  exports.useInsertionEffect = function (create, deps) {
    return ReactSharedInternals.H.useInsertionEffect(create, deps);
  };
  exports.useLayoutEffect = function (create, deps) {
    return ReactSharedInternals.H.useLayoutEffect(create, deps);
  };
  exports.useMemo = function (create, deps) {
    return ReactSharedInternals.H.useMemo(create, deps);
  };
  exports.useOptimistic = function (passthrough, reducer) {
    return ReactSharedInternals.H.useOptimistic(passthrough, reducer);
  };
  exports.useReducer = function (reducer, initialArg, init) {
    return ReactSharedInternals.H.useReducer(reducer, initialArg, init);
  };
  exports.useRef = function (initialValue) {
    return ReactSharedInternals.H.useRef(initialValue);
  };
  exports.useState = function (initialState) {
    return ReactSharedInternals.H.useState(initialState);
  };
  exports.useSyncExternalStore = function (subscribe, getSnapshot, getServerSnapshot) {
    return ReactSharedInternals.H.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
  };
  exports.useTransition = function () {
    return ReactSharedInternals.H.useTransition();
  };
  exports.version = "19.0.0";
},120,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.createViewConfig = createViewConfig;
  var _PlatformBaseViewConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  function createViewConfig(partialViewConfig) {
    return {
      uiViewClassName: partialViewConfig.uiViewClassName,
      Commands: {},
      bubblingEventTypes: composeIndexers(_PlatformBaseViewConfig.default.bubblingEventTypes, partialViewConfig.bubblingEventTypes),
      directEventTypes: composeIndexers(_PlatformBaseViewConfig.default.directEventTypes, partialViewConfig.directEventTypes),
      validAttributes: composeIndexers(_PlatformBaseViewConfig.default.validAttributes, partialViewConfig.validAttributes)
    };
  }
  function composeIndexers(maybeA, maybeB) {
    var _ref;
    return maybeA == null || maybeB == null ? (_ref = maybeA != null ? maybeA : maybeB) != null ? _ref : {} : Object.assign({}, maybeA, maybeB);
  }
},121,[1,122]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _BaseViewConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var PlatformBaseViewConfig = _BaseViewConfig.default;
  var _default = exports.default = PlatformBaseViewConfig;
},122,[1,123]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var ReactNativeFeatureFlags = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));
  var _NativeReactNativeFeatureFlags = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _ReactNativeStyleAttributes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var bubblingEventTypes = {
    topChange: {
      phasedRegistrationNames: {
        captured: 'onChangeCapture',
        bubbled: 'onChange'
      }
    },
    topSelect: {
      phasedRegistrationNames: {
        captured: 'onSelectCapture',
        bubbled: 'onSelect'
      }
    },
    topTouchEnd: {
      phasedRegistrationNames: {
        captured: 'onTouchEndCapture',
        bubbled: 'onTouchEnd'
      }
    },
    topTouchCancel: {
      phasedRegistrationNames: {
        captured: 'onTouchCancelCapture',
        bubbled: 'onTouchCancel'
      }
    },
    topTouchStart: {
      phasedRegistrationNames: {
        captured: 'onTouchStartCapture',
        bubbled: 'onTouchStart'
      }
    },
    topTouchMove: {
      phasedRegistrationNames: {
        captured: 'onTouchMoveCapture',
        bubbled: 'onTouchMove'
      }
    },
    topPointerCancel: {
      phasedRegistrationNames: {
        captured: 'onPointerCancelCapture',
        bubbled: 'onPointerCancel'
      }
    },
    topPointerDown: {
      phasedRegistrationNames: {
        captured: 'onPointerDownCapture',
        bubbled: 'onPointerDown'
      }
    },
    topPointerEnter: {
      phasedRegistrationNames: {
        captured: 'onPointerEnterCapture',
        bubbled: 'onPointerEnter',
        skipBubbling: true
      }
    },
    topPointerLeave: {
      phasedRegistrationNames: {
        captured: 'onPointerLeaveCapture',
        bubbled: 'onPointerLeave',
        skipBubbling: true
      }
    },
    topPointerMove: {
      phasedRegistrationNames: {
        captured: 'onPointerMoveCapture',
        bubbled: 'onPointerMove'
      }
    },
    topPointerUp: {
      phasedRegistrationNames: {
        captured: 'onPointerUpCapture',
        bubbled: 'onPointerUp'
      }
    },
    topPointerOut: {
      phasedRegistrationNames: {
        captured: 'onPointerOutCapture',
        bubbled: 'onPointerOut'
      }
    },
    topPointerOver: {
      phasedRegistrationNames: {
        captured: 'onPointerOverCapture',
        bubbled: 'onPointerOver'
      }
    },
    topClick: {
      phasedRegistrationNames: {
        captured: 'onClickCapture',
        bubbled: 'onClick'
      }
    }
  };
  var directEventTypes = {
    topAccessibilityAction: {
      registrationName: 'onAccessibilityAction'
    },
    onGestureHandlerEvent: (0, _$$_REQUIRE(_dependencyMap[4]).DynamicallyInjectedByGestureHandler)({
      registrationName: 'onGestureHandlerEvent'
    }),
    onGestureHandlerStateChange: (0, _$$_REQUIRE(_dependencyMap[4]).DynamicallyInjectedByGestureHandler)({
      registrationName: 'onGestureHandlerStateChange'
    }),
    topContentSizeChange: {
      registrationName: 'onContentSizeChange'
    },
    topScrollBeginDrag: {
      registrationName: 'onScrollBeginDrag'
    },
    topMessage: {
      registrationName: 'onMessage'
    },
    topSelectionChange: {
      registrationName: 'onSelectionChange'
    },
    topLoadingFinish: {
      registrationName: 'onLoadingFinish'
    },
    topMomentumScrollEnd: {
      registrationName: 'onMomentumScrollEnd'
    },
    topLoadingStart: {
      registrationName: 'onLoadingStart'
    },
    topLoadingError: {
      registrationName: 'onLoadingError'
    },
    topMomentumScrollBegin: {
      registrationName: 'onMomentumScrollBegin'
    },
    topScrollEndDrag: {
      registrationName: 'onScrollEndDrag'
    },
    topScroll: {
      registrationName: 'onScroll'
    },
    topLayout: {
      registrationName: 'onLayout'
    }
  };
  var validAttributesForNonEventProps = {
    backgroundColor: {
      process: _$$_REQUIRE(_dependencyMap[5]).default
    },
    transform: true,
    transformOrigin: true,
    experimental_backgroundImage: {
      process: _$$_REQUIRE(_dependencyMap[6]).default
    },
    boxShadow: _NativeReactNativeFeatureFlags.default != null && ReactNativeFeatureFlags.enableNativeCSSParsing() ? true : {
      process: _$$_REQUIRE(_dependencyMap[7]).default
    },
    filter: _NativeReactNativeFeatureFlags.default != null && ReactNativeFeatureFlags.enableNativeCSSParsing() ? true : {
      process: _$$_REQUIRE(_dependencyMap[8]).default
    },
    mixBlendMode: true,
    isolation: true,
    opacity: true,
    elevation: true,
    shadowColor: {
      process: _$$_REQUIRE(_dependencyMap[5]).default
    },
    zIndex: true,
    renderToHardwareTextureAndroid: true,
    testID: true,
    nativeID: true,
    accessibilityLabelledBy: true,
    accessibilityLabel: true,
    accessibilityHint: true,
    accessibilityRole: true,
    accessibilityCollection: true,
    accessibilityCollectionItem: true,
    accessibilityState: true,
    accessibilityActions: true,
    accessibilityValue: true,
    importantForAccessibility: true,
    role: true,
    rotation: true,
    scaleX: true,
    scaleY: true,
    translateX: true,
    translateY: true,
    accessibilityLiveRegion: true,
    width: true,
    minWidth: true,
    collapsable: true,
    collapsableChildren: true,
    maxWidth: true,
    height: true,
    minHeight: true,
    maxHeight: true,
    flex: true,
    flexGrow: true,
    rowGap: true,
    columnGap: true,
    gap: true,
    flexShrink: true,
    flexBasis: true,
    aspectRatio: true,
    flexDirection: true,
    flexWrap: true,
    alignSelf: true,
    alignItems: true,
    alignContent: true,
    justifyContent: true,
    overflow: true,
    display: true,
    boxSizing: true,
    margin: true,
    marginBlock: true,
    marginBlockEnd: true,
    marginBlockStart: true,
    marginBottom: true,
    marginEnd: true,
    marginHorizontal: true,
    marginInline: true,
    marginInlineEnd: true,
    marginInlineStart: true,
    marginLeft: true,
    marginRight: true,
    marginStart: true,
    marginTop: true,
    marginVertical: true,
    padding: true,
    paddingBlock: true,
    paddingBlockEnd: true,
    paddingBlockStart: true,
    paddingBottom: true,
    paddingEnd: true,
    paddingHorizontal: true,
    paddingInline: true,
    paddingInlineEnd: true,
    paddingInlineStart: true,
    paddingLeft: true,
    paddingRight: true,
    paddingStart: true,
    paddingTop: true,
    paddingVertical: true,
    borderWidth: true,
    borderStartWidth: true,
    borderEndWidth: true,
    borderTopWidth: true,
    borderBottomWidth: true,
    borderLeftWidth: true,
    borderRightWidth: true,
    outlineColor: {
      process: _$$_REQUIRE(_dependencyMap[5]).default
    },
    outlineOffset: true,
    outlineStyle: true,
    outlineWidth: true,
    start: true,
    end: true,
    left: true,
    right: true,
    top: true,
    bottom: true,
    inset: true,
    insetBlock: true,
    insetBlockEnd: true,
    insetBlockStart: true,
    insetInline: true,
    insetInlineEnd: true,
    insetInlineStart: true,
    position: true,
    style: _ReactNativeStyleAttributes.default,
    removeClippedSubviews: true,
    accessible: true,
    hasTVPreferredFocus: true,
    nextFocusDown: true,
    nextFocusForward: true,
    nextFocusLeft: true,
    nextFocusRight: true,
    nextFocusUp: true,
    borderRadius: true,
    borderTopLeftRadius: true,
    borderTopRightRadius: true,
    borderBottomRightRadius: true,
    borderBottomLeftRadius: true,
    borderTopStartRadius: true,
    borderTopEndRadius: true,
    borderBottomStartRadius: true,
    borderBottomEndRadius: true,
    borderEndEndRadius: true,
    borderEndStartRadius: true,
    borderStartEndRadius: true,
    borderStartStartRadius: true,
    borderStyle: true,
    hitSlop: true,
    pointerEvents: true,
    nativeBackgroundAndroid: true,
    nativeForegroundAndroid: true,
    needsOffscreenAlphaCompositing: true,
    borderColor: {
      process: _$$_REQUIRE(_dependencyMap[5]).default
    },
    borderLeftColor: {
      process: _$$_REQUIRE(_dependencyMap[5]).default
    },
    borderRightColor: {
      process: _$$_REQUIRE(_dependencyMap[5]).default
    },
    borderTopColor: {
      process: _$$_REQUIRE(_dependencyMap[5]).default
    },
    borderBottomColor: {
      process: _$$_REQUIRE(_dependencyMap[5]).default
    },
    borderStartColor: {
      process: _$$_REQUIRE(_dependencyMap[5]).default
    },
    borderEndColor: {
      process: _$$_REQUIRE(_dependencyMap[5]).default
    },
    borderBlockColor: {
      process: _$$_REQUIRE(_dependencyMap[5]).default
    },
    borderBlockEndColor: {
      process: _$$_REQUIRE(_dependencyMap[5]).default
    },
    borderBlockStartColor: {
      process: _$$_REQUIRE(_dependencyMap[5]).default
    },
    focusable: true,
    backfaceVisibility: true
  };
  var validAttributesForEventProps = {
    onLayout: true,
    onMoveShouldSetResponder: true,
    onMoveShouldSetResponderCapture: true,
    onStartShouldSetResponder: true,
    onStartShouldSetResponderCapture: true,
    onResponderGrant: true,
    onResponderReject: true,
    onResponderStart: true,
    onResponderEnd: true,
    onResponderRelease: true,
    onResponderMove: true,
    onResponderTerminate: true,
    onResponderTerminationRequest: true,
    onShouldBlockNativeResponder: true,
    onTouchStart: true,
    onTouchMove: true,
    onTouchEnd: true,
    onTouchCancel: true,
    onClick: true,
    onClickCapture: true,
    onPointerEnter: true,
    onPointerEnterCapture: true,
    onPointerLeave: true,
    onPointerLeaveCapture: true,
    onPointerMove: true,
    onPointerMoveCapture: true,
    onPointerOut: true,
    onPointerOutCapture: true,
    onPointerOver: true,
    onPointerOverCapture: true
  };
  var PlatformBaseViewConfigAndroid = {
    directEventTypes: directEventTypes,
    bubblingEventTypes: bubblingEventTypes,
    validAttributes: Object.assign({}, validAttributesForNonEventProps, validAttributesForEventProps)
  };
  var _default = exports.default = PlatformBaseViewConfigAndroid;
},123,[1,73,75,93,124,89,95,88,96]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ConditionallyIgnoredEventHandlers = ConditionallyIgnoredEventHandlers;
  exports.DynamicallyInjectedByGestureHandler = DynamicallyInjectedByGestureHandler;
  exports.isIgnored = isIgnored;
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var ignoredViewConfigProps = new WeakSet();
  function DynamicallyInjectedByGestureHandler(object) {
    ignoredViewConfigProps.add(object);
    return object;
  }
  function ConditionallyIgnoredEventHandlers(value) {
    if (_Platform.default.OS === 'ios') {
      return value;
    }
    return undefined;
  }
  function isIgnored(value) {
    if (typeof value === 'object' && value != null) {
      return ignoredViewConfigProps.has(value);
    }
    return false;
  }
},124,[1,33]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  function codegenNativeCommands(options) {
    var commandObj = {};
    options.supportedCommands.forEach(function (command) {
      commandObj[command] = function (ref) {
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }
        _$$_REQUIRE(_dependencyMap[0]).dispatchCommand(ref, command, args);
      };
    });
    return commandObj;
  }
  var _default = exports.default = codegenNativeCommands;
},125,[57]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = warnForStyleProps;
  function warnForStyleProps(props, validAttributes) {}
},126,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.create = create;
  exports.diff = diff;
  var _flattenStyle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _deepDiffer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var emptyObject = {};
  var removedKeys = null;
  var removedKeyCount = 0;
  var deepDifferOptions = {
    unsafelyIgnoreFunctions: true
  };
  function defaultDiffer(prevProp, nextProp) {
    if (typeof nextProp !== 'object' || nextProp === null) {
      return true;
    } else {
      return (0, _deepDiffer.default)(prevProp, nextProp, deepDifferOptions);
    }
  }
  function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {
    if (Array.isArray(node)) {
      var i = node.length;
      while (i-- && removedKeyCount > 0) {
        restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);
      }
    } else if (node && removedKeyCount > 0) {
      var obj = node;
      for (var propKey in removedKeys) {
        if (!removedKeys[propKey]) {
          continue;
        }
        var nextProp = obj[propKey];
        if (nextProp === undefined) {
          continue;
        }
        var attributeConfig = validAttributes[propKey];
        if (!attributeConfig) {
          continue;
        }
        if (typeof nextProp === 'function') {
          nextProp = true;
        }
        if (typeof nextProp === 'undefined') {
          nextProp = null;
        }
        if (typeof attributeConfig !== 'object') {
          updatePayload[propKey] = nextProp;
        } else if (typeof attributeConfig.diff === 'function' || typeof attributeConfig.process === 'function') {
          var nextValue = typeof attributeConfig.process === 'function' ? attributeConfig.process(nextProp) : nextProp;
          updatePayload[propKey] = nextValue;
        }
        removedKeys[propKey] = false;
        removedKeyCount--;
      }
    }
  }
  function diffNestedArrayProperty(updatePayload, prevArray, nextArray, validAttributes) {
    var minLength = prevArray.length < nextArray.length ? prevArray.length : nextArray.length;
    var i;
    for (i = 0; i < minLength; i++) {
      updatePayload = diffNestedProperty(updatePayload, prevArray[i], nextArray[i], validAttributes);
    }
    for (; i < prevArray.length; i++) {
      updatePayload = clearNestedProperty(updatePayload, prevArray[i], validAttributes);
    }
    for (; i < nextArray.length; i++) {
      updatePayload = addNestedProperty(updatePayload, nextArray[i], validAttributes);
    }
    return updatePayload;
  }
  function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {
    if (!updatePayload && prevProp === nextProp) {
      return updatePayload;
    }
    if (!prevProp || !nextProp) {
      if (nextProp) {
        return addNestedProperty(updatePayload, nextProp, validAttributes);
      }
      if (prevProp) {
        return clearNestedProperty(updatePayload, prevProp, validAttributes);
      }
      return updatePayload;
    }
    if (!Array.isArray(prevProp) && !Array.isArray(nextProp)) {
      return diffProperties(updatePayload, prevProp, nextProp, validAttributes);
    }
    if (Array.isArray(prevProp) && Array.isArray(nextProp)) {
      return diffNestedArrayProperty(updatePayload, prevProp, nextProp, validAttributes);
    }
    if (Array.isArray(prevProp)) {
      return diffProperties(updatePayload, (0, _flattenStyle.default)(prevProp), nextProp, validAttributes);
    }
    return diffProperties(updatePayload, prevProp, (0, _flattenStyle.default)(nextProp), validAttributes);
  }
  function addNestedProperty(updatePayload, nextProp, validAttributes) {
    if (!nextProp) {
      return updatePayload;
    }
    if (!Array.isArray(nextProp)) {
      return addProperties(updatePayload, nextProp, validAttributes);
    }
    for (var i = 0; i < nextProp.length; i++) {
      updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
    }
    return updatePayload;
  }
  function clearNestedProperty(updatePayload, prevProp, validAttributes) {
    if (!prevProp) {
      return updatePayload;
    }
    if (!Array.isArray(prevProp)) {
      return clearProperties(updatePayload, prevProp, validAttributes);
    }
    for (var i = 0; i < prevProp.length; i++) {
      updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
    }
    return updatePayload;
  }
  function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
    var attributeConfig;
    var nextProp;
    var prevProp;
    for (var propKey in nextProps) {
      attributeConfig = validAttributes[propKey];
      if (!attributeConfig) {
        continue;
      }
      prevProp = prevProps[propKey];
      nextProp = nextProps[propKey];
      if (typeof nextProp === 'function') {
        nextProp = true;
        if (typeof prevProp === 'function') {
          prevProp = true;
        }
      }
      if (typeof nextProp === 'undefined') {
        nextProp = null;
        if (typeof prevProp === 'undefined') {
          prevProp = null;
        }
      }
      if (removedKeys) {
        removedKeys[propKey] = false;
      }
      if (updatePayload && updatePayload[propKey] !== undefined) {
        if (typeof attributeConfig !== 'object') {
          updatePayload[propKey] = nextProp;
        } else if (typeof attributeConfig.diff === 'function' || typeof attributeConfig.process === 'function') {
          var nextValue = typeof attributeConfig.process === 'function' ? attributeConfig.process(nextProp) : nextProp;
          updatePayload[propKey] = nextValue;
        }
        continue;
      }
      if (prevProp === nextProp) {
        continue;
      }
      if (typeof attributeConfig !== 'object') {
        if (defaultDiffer(prevProp, nextProp)) {
          (updatePayload || (updatePayload = {}))[propKey] = nextProp;
        }
      } else if (typeof attributeConfig.diff === 'function' || typeof attributeConfig.process === 'function') {
        var shouldUpdate = prevProp === undefined || (typeof attributeConfig.diff === 'function' ? attributeConfig.diff(prevProp, nextProp) : defaultDiffer(prevProp, nextProp));
        if (shouldUpdate) {
          var _nextValue = typeof attributeConfig.process === 'function' ? attributeConfig.process(nextProp) : nextProp;
          (updatePayload || (updatePayload = {}))[propKey] = _nextValue;
        }
      } else {
        removedKeys = null;
        removedKeyCount = 0;
        updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig);
        if (removedKeyCount > 0 && updatePayload) {
          restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig);
          removedKeys = null;
        }
      }
    }
    for (var _propKey2 in prevProps) {
      if (nextProps[_propKey2] !== undefined) {
        continue;
      }
      attributeConfig = validAttributes[_propKey2];
      if (!attributeConfig) {
        continue;
      }
      if (updatePayload && updatePayload[_propKey2] !== undefined) {
        continue;
      }
      prevProp = prevProps[_propKey2];
      if (prevProp === undefined) {
        continue;
      }
      if (typeof attributeConfig !== 'object' || typeof attributeConfig.diff === 'function' || typeof attributeConfig.process === 'function') {
        (updatePayload || (updatePayload = {}))[_propKey2] = null;
        if (!removedKeys) {
          removedKeys = {};
        }
        if (!removedKeys[_propKey2]) {
          removedKeys[_propKey2] = true;
          removedKeyCount++;
        }
      } else {
        updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig);
      }
    }
    return updatePayload;
  }
  function addProperties(updatePayload, props, validAttributes) {
    return diffProperties(updatePayload, emptyObject, props, validAttributes);
  }
  function clearProperties(updatePayload, prevProps, validAttributes) {
    return diffProperties(updatePayload, prevProps, emptyObject, validAttributes);
  }
  function create(props, validAttributes) {
    return addProperties(null, props, validAttributes);
  }
  function diff(prevProps, nextProps, validAttributes) {
    return diffProperties(null, prevProps, nextProps, validAttributes);
  }
},127,[1,128,129]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  function flattenStyle(style) {
    if (style === null || typeof style !== 'object') {
      return undefined;
    }
    if (!Array.isArray(style)) {
      return style;
    }
    var result = {};
    for (var i = 0, styleLength = style.length; i < styleLength; ++i) {
      var computedStyle = flattenStyle(style[i]);
      if (computedStyle) {
        for (var key in computedStyle) {
          result[key] = computedStyle[key];
        }
      }
    }
    return result;
  }
  var _default = exports.default = flattenStyle;
},128,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var logListeners;
  function unstable_setLogListeners(listeners) {
    logListeners = listeners;
  }
  function deepDiffer(one, two) {
    var maxDepthOrOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;
    var maybeOptions = arguments.length > 3 ? arguments[3] : undefined;
    var options = typeof maxDepthOrOptions === 'number' ? maybeOptions : maxDepthOrOptions;
    var maxDepth = typeof maxDepthOrOptions === 'number' ? maxDepthOrOptions : -1;
    if (maxDepth === 0) {
      return true;
    }
    if (one === two) {
      return false;
    }
    if (typeof one === 'function' && typeof two === 'function') {
      var unsafelyIgnoreFunctions = options == null ? undefined : options.unsafelyIgnoreFunctions;
      if (unsafelyIgnoreFunctions == null) {
        if (logListeners && logListeners.onDifferentFunctionsIgnored && (!options || !('unsafelyIgnoreFunctions' in options))) {
          logListeners.onDifferentFunctionsIgnored(one.name, two.name);
        }
        unsafelyIgnoreFunctions = true;
      }
      return !unsafelyIgnoreFunctions;
    }
    if (typeof one !== 'object' || one === null) {
      return one !== two;
    }
    if (typeof two !== 'object' || two === null) {
      return true;
    }
    if (one.constructor !== two.constructor) {
      return true;
    }
    if (Array.isArray(one)) {
      var len = one.length;
      if (two.length !== len) {
        return true;
      }
      for (var ii = 0; ii < len; ii++) {
        if (deepDiffer(one[ii], two[ii], maxDepth - 1, options)) {
          return true;
        }
      }
    } else {
      for (var key in one) {
        if (deepDiffer(one[key], two[key], maxDepth - 1, options)) {
          return true;
        }
      }
      for (var twoKey in two) {
        if (one[twoKey] === undefined && two[twoKey] !== undefined) {
          return true;
        }
      }
    }
    return false;
  }
  deepDiffer.unstable_setLogListeners = unstable_setLogListeners;
  var _default = exports.default = deepDiffer;
},129,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _ReadOnlyNode2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _NativeDOM = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var ReadOnlyCharacterData = exports.default = /*#__PURE__*/function (_ReadOnlyNode) {
    function ReadOnlyCharacterData() {
      (0, _classCallCheck2.default)(this, ReadOnlyCharacterData);
      return _callSuper(this, ReadOnlyCharacterData, arguments);
    }
    (0, _inherits2.default)(ReadOnlyCharacterData, _ReadOnlyNode);
    return (0, _createClass2.default)(ReadOnlyCharacterData, [{
      key: "nextElementSibling",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[8]).getElementSibling)(this, 'next');
      }
    }, {
      key: "previousElementSibling",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[8]).getElementSibling)(this, 'previous');
      }
    }, {
      key: "data",
      get: function get() {
        var node = (0, _$$_REQUIRE(_dependencyMap[9]).getNativeTextReference)(this);
        if (node != null) {
          return _NativeDOM.default.getTextContent(node);
        }
        return '';
      }
    }, {
      key: "length",
      get: function get() {
        return this.data.length;
      }
    }, {
      key: "textContent",
      get: function get() {
        return this.data;
      }
    }, {
      key: "nodeValue",
      get: function get() {
        return this.data;
      }
    }, {
      key: "substringData",
      value: function substringData(offset, count) {
        var data = this.data;
        if (offset < 0) {
          throw new TypeError(`Failed to execute 'substringData' on 'CharacterData': The offset ${offset} is negative.`);
        }
        if (offset > data.length) {
          throw new TypeError(`Failed to execute 'substringData' on 'CharacterData': The offset ${offset} is greater than the node's length (${data.length}).`);
        }
        var adjustedCount = count < 0 || count > data.length ? data.length : count;
        return data.slice(offset, offset + adjustedCount);
      }
    }]);
  }(_ReadOnlyNode2.default);
},130,[1,12,13,23,25,28,72,76,81,77]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _ReadOnlyCharacterData = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _ReadOnlyNode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var ReadOnlyText = exports.default = /*#__PURE__*/function (_ReadOnlyCharacterDat) {
    function ReadOnlyText() {
      (0, _classCallCheck2.default)(this, ReadOnlyText);
      return _callSuper(this, ReadOnlyText, arguments);
    }
    (0, _inherits2.default)(ReadOnlyText, _ReadOnlyCharacterDat);
    return (0, _createClass2.default)(ReadOnlyText, [{
      key: "nodeName",
      get: function get() {
        return '#text';
      }
    }, {
      key: "nodeType",
      get: function get() {
        return _ReadOnlyNode.default.TEXT_NODE;
      }
    }]);
  }(_ReadOnlyCharacterData.default);
},131,[1,12,13,23,25,28,130,72]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  var _Performance = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _NativePerformance = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  if (_NativePerformance.default) {
    global.performance = new _Performance.default();
  } else {
    if (!global.performance) {
      global.performance = {
        mark: function mark() {},
        measure: function measure() {},
        now: function now() {
          var performanceNow = global.nativePerformanceNow || Date.now;
          return performanceNow();
        }
      };
    }
  }
},132,[1,133,137]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _readOnlyError2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _MemoryInfo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _ReactNativeStartupTiming = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _NativePerformance = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _ref, _NativePerformance$no;
  var getCurrentTimeStamp = (_ref = (_NativePerformance$no = _NativePerformance.default == null ? undefined : _NativePerformance.default.now) != null ? _NativePerformance$no : global.nativePerformanceNow) != null ? _ref : function () {
    return Date.now();
  };
  var ENTRY_TYPES_AVAILABLE_FROM_TIMELINE = ['mark', 'measure'];
  var Performance = exports.default = /*#__PURE__*/function () {
    function Performance() {
      (0, _classCallCheck2.default)(this, Performance);
      this.eventCounts = new (_$$_REQUIRE(_dependencyMap[8]).EventCounts)();
    }
    return (0, _createClass2.default)(Performance, [{
      key: "memory",
      get: function get() {
        if (_NativePerformance.default != null && _NativePerformance.default.getSimpleMemoryInfo) {
          var memoryInfo = _NativePerformance.default.getSimpleMemoryInfo();
          if (memoryInfo.hasOwnProperty('hermes_heapSize')) {
            var totalJSHeapSize = memoryInfo.hermes_heapSize,
              usedJSHeapSize = memoryInfo.hermes_allocatedBytes;
            return new _MemoryInfo.default({
              jsHeapSizeLimit: null,
              totalJSHeapSize: totalJSHeapSize,
              usedJSHeapSize: usedJSHeapSize
            });
          } else {
            return new _MemoryInfo.default();
          }
        }
        return new _MemoryInfo.default();
      }
    }, {
      key: "rnStartupTiming",
      get: function get() {
        if (_NativePerformance.default != null && _NativePerformance.default.getReactNativeStartupTiming) {
          var _NativePerformance$ge = _NativePerformance.default.getReactNativeStartupTiming(),
            startTime = _NativePerformance$ge.startTime,
            endTime = _NativePerformance$ge.endTime,
            initializeRuntimeStart = _NativePerformance$ge.initializeRuntimeStart,
            initializeRuntimeEnd = _NativePerformance$ge.initializeRuntimeEnd,
            executeJavaScriptBundleEntryPointStart = _NativePerformance$ge.executeJavaScriptBundleEntryPointStart,
            executeJavaScriptBundleEntryPointEnd = _NativePerformance$ge.executeJavaScriptBundleEntryPointEnd;
          return new _ReactNativeStartupTiming.default({
            startTime: startTime,
            endTime: endTime,
            initializeRuntimeStart: initializeRuntimeStart,
            initializeRuntimeEnd: initializeRuntimeEnd,
            executeJavaScriptBundleEntryPointStart: executeJavaScriptBundleEntryPointStart,
            executeJavaScriptBundleEntryPointEnd: executeJavaScriptBundleEntryPointEnd
          });
        }
        return new _ReactNativeStartupTiming.default();
      }
    }, {
      key: "mark",
      value: function mark(markName, markOptions) {
        var computedStartTime;
        if (_NativePerformance.default != null && _NativePerformance.default.markWithResult) {
          computedStartTime = _NativePerformance.default.markWithResult(markName, markOptions == null ? undefined : markOptions.startTime);
        } else {
          (0, _$$_REQUIRE(_dependencyMap[9]).warnNoNativePerformance)();
          computedStartTime = performance.now();
        }
        return new (_$$_REQUIRE(_dependencyMap[10]).PerformanceMark)(markName, {
          startTime: computedStartTime,
          detail: markOptions == null ? undefined : markOptions.detail
        });
      }
    }, {
      key: "clearMarks",
      value: function clearMarks(markName) {
        if (!(_NativePerformance.default != null && _NativePerformance.default.clearMarks)) {
          (0, _$$_REQUIRE(_dependencyMap[9]).warnNoNativePerformance)();
          return;
        }
        _NativePerformance.default.clearMarks(markName);
      }
    }, {
      key: "measure",
      value: function measure(measureName, startMarkOrOptions, endMark) {
        var _computedDuration, _options;
        var options;
        var startMarkName,
          endMarkName = endMark,
          duration,
          startTime = 0,
          endTime = 0;
        if (typeof startMarkOrOptions === 'string') {
          startMarkName = startMarkOrOptions;
          options = {};
        } else if (startMarkOrOptions !== undefined) {
          var _options$duration;
          options = startMarkOrOptions;
          if (endMark !== undefined) {
            throw new TypeError("Performance.measure: Can't have both options and endMark");
          }
          if (options.start === undefined && options.end === undefined) {
            throw new TypeError('Performance.measure: Must have at least one of start/end specified in options');
          }
          if (options.start !== undefined && options.end !== undefined && options.duration !== undefined) {
            throw new TypeError("Performance.measure: Can't have both start/end and duration explicitly in options");
          }
          if (typeof options.start === 'number') {
            startTime = options.start;
          } else {
            startMarkName = options.start;
          }
          if (typeof options.end === 'number') {
            endTime = options.end;
          } else {
            endMarkName = options.end;
          }
          duration = (_options$duration = options.duration) != null ? _options$duration : duration;
        }
        var computedStartTime = startTime;
        var computedDuration = duration;
        if (_NativePerformance.default != null && _NativePerformance.default.measureWithResult) {
          var _NativePerformance$me = _NativePerformance.default.measureWithResult(measureName, startTime, endTime, duration, startMarkName, endMarkName);
          var _NativePerformance$me2 = (0, _slicedToArray2.default)(_NativePerformance$me, 2);
          computedStartTime = _NativePerformance$me2[0];
          computedDuration = _NativePerformance$me2[1];
        } else {
          (0, _$$_REQUIRE(_dependencyMap[9]).warnNoNativePerformance)();
        }
        var measure = new (_$$_REQUIRE(_dependencyMap[10]).PerformanceMeasure)(measureName, {
          startTime: computedStartTime,
          duration: (_computedDuration = computedDuration) != null ? _computedDuration : 0,
          detail: (_options = options) == null ? undefined : _options.detail
        });
        return measure;
      }
    }, {
      key: "clearMeasures",
      value: function clearMeasures(measureName) {
        if (!(_NativePerformance.default != null && _NativePerformance.default.clearMeasures)) {
          (0, _$$_REQUIRE(_dependencyMap[9]).warnNoNativePerformance)();
          return;
        }
        _NativePerformance.default == null ? undefined : _NativePerformance.default.clearMeasures(measureName);
      }
    }, {
      key: "now",
      value: function now() {
        return getCurrentTimeStamp();
      }
    }, {
      key: "getEntries",
      value: function getEntries() {
        if (!(_NativePerformance.default != null && _NativePerformance.default.getEntries)) {
          (0, _$$_REQUIRE(_dependencyMap[9]).warnNoNativePerformance)();
          return [];
        }
        return _NativePerformance.default.getEntries().map(_$$_REQUIRE(_dependencyMap[11]).rawToPerformanceEntry);
      }
    }, {
      key: "getEntriesByType",
      value: function getEntriesByType(entryType) {
        if (entryType != null && !ENTRY_TYPES_AVAILABLE_FROM_TIMELINE.includes(entryType)) {
          console.warn('Deprecated API for given entry type.');
          return [];
        }
        if (!(_NativePerformance.default != null && _NativePerformance.default.getEntriesByType)) {
          (0, _$$_REQUIRE(_dependencyMap[9]).warnNoNativePerformance)();
          return [];
        }
        return _NativePerformance.default.getEntriesByType((0, _$$_REQUIRE(_dependencyMap[11]).performanceEntryTypeToRaw)(entryType)).map(_$$_REQUIRE(_dependencyMap[11]).rawToPerformanceEntry);
      }
    }, {
      key: "getEntriesByName",
      value: function getEntriesByName(entryName, entryType) {
        if (entryType != null && !ENTRY_TYPES_AVAILABLE_FROM_TIMELINE.includes(entryType)) {
          console.warn('Deprecated API for given entry type.');
          return [];
        }
        if (!(_NativePerformance.default != null && _NativePerformance.default.getEntriesByName)) {
          (0, _$$_REQUIRE(_dependencyMap[9]).warnNoNativePerformance)();
          return [];
        }
        return _NativePerformance.default.getEntriesByName(entryName, entryType != null ? (0, _$$_REQUIRE(_dependencyMap[11]).performanceEntryTypeToRaw)(entryType) : undefined).map(_$$_REQUIRE(_dependencyMap[11]).rawToPerformanceEntry);
      }
    }]);
  }();
},133,[1,134,38,12,13,135,136,137,138,140,142,143]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _readOnlyError(r) {
    throw new TypeError('"' + r + '" is read-only');
  }
  module.exports = _readOnlyError, module.exports.__esModule = true, module.exports["default"] = module.exports;
},134,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _classPrivateFieldLooseBase2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _classPrivateFieldLooseKey2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _jsHeapSizeLimit = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("jsHeapSizeLimit");
  var _totalJSHeapSize = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("totalJSHeapSize");
  var _usedJSHeapSize = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("usedJSHeapSize");
  var MemoryInfo = exports.default = /*#__PURE__*/function () {
    function MemoryInfo(memoryInfo) {
      (0, _classCallCheck2.default)(this, MemoryInfo);
      Object.defineProperty(this, _jsHeapSizeLimit, {
        writable: true,
        value: undefined
      });
      Object.defineProperty(this, _totalJSHeapSize, {
        writable: true,
        value: undefined
      });
      Object.defineProperty(this, _usedJSHeapSize, {
        writable: true,
        value: undefined
      });
      if (memoryInfo != null) {
        (0, _classPrivateFieldLooseBase2.default)(this, _jsHeapSizeLimit)[_jsHeapSizeLimit] = memoryInfo.jsHeapSizeLimit;
        (0, _classPrivateFieldLooseBase2.default)(this, _totalJSHeapSize)[_totalJSHeapSize] = memoryInfo.totalJSHeapSize;
        (0, _classPrivateFieldLooseBase2.default)(this, _usedJSHeapSize)[_usedJSHeapSize] = memoryInfo.usedJSHeapSize;
      }
    }
    return (0, _createClass2.default)(MemoryInfo, [{
      key: "jsHeapSizeLimit",
      get: function get() {
        return (0, _classPrivateFieldLooseBase2.default)(this, _jsHeapSizeLimit)[_jsHeapSizeLimit];
      }
    }, {
      key: "totalJSHeapSize",
      get: function get() {
        return (0, _classPrivateFieldLooseBase2.default)(this, _totalJSHeapSize)[_totalJSHeapSize];
      }
    }, {
      key: "usedJSHeapSize",
      get: function get() {
        return (0, _classPrivateFieldLooseBase2.default)(this, _usedJSHeapSize)[_usedJSHeapSize];
      }
    }]);
  }();
},135,[1,12,13,31,32]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _classPrivateFieldLooseBase2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _classPrivateFieldLooseKey2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _startTime = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("startTime");
  var _endTime = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("endTime");
  var _initializeRuntimeStart = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("initializeRuntimeStart");
  var _initializeRuntimeEnd = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("initializeRuntimeEnd");
  var _executeJavaScriptBundleEntryPointStart = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("executeJavaScriptBundleEntryPointStart");
  var _executeJavaScriptBundleEntryPointEnd = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("executeJavaScriptBundleEntryPointEnd");
  var ReactNativeStartupTiming = exports.default = /*#__PURE__*/function () {
    function ReactNativeStartupTiming(startUpTiming) {
      (0, _classCallCheck2.default)(this, ReactNativeStartupTiming);
      Object.defineProperty(this, _startTime, {
        writable: true,
        value: undefined
      });
      Object.defineProperty(this, _endTime, {
        writable: true,
        value: undefined
      });
      Object.defineProperty(this, _initializeRuntimeStart, {
        writable: true,
        value: undefined
      });
      Object.defineProperty(this, _initializeRuntimeEnd, {
        writable: true,
        value: undefined
      });
      Object.defineProperty(this, _executeJavaScriptBundleEntryPointStart, {
        writable: true,
        value: undefined
      });
      Object.defineProperty(this, _executeJavaScriptBundleEntryPointEnd, {
        writable: true,
        value: undefined
      });
      if (startUpTiming != null) {
        (0, _classPrivateFieldLooseBase2.default)(this, _startTime)[_startTime] = startUpTiming.startTime;
        (0, _classPrivateFieldLooseBase2.default)(this, _endTime)[_endTime] = startUpTiming.endTime;
        (0, _classPrivateFieldLooseBase2.default)(this, _initializeRuntimeStart)[_initializeRuntimeStart] = startUpTiming.initializeRuntimeStart;
        (0, _classPrivateFieldLooseBase2.default)(this, _initializeRuntimeEnd)[_initializeRuntimeEnd] = startUpTiming.initializeRuntimeEnd;
        (0, _classPrivateFieldLooseBase2.default)(this, _executeJavaScriptBundleEntryPointStart)[_executeJavaScriptBundleEntryPointStart] = startUpTiming.executeJavaScriptBundleEntryPointStart;
        (0, _classPrivateFieldLooseBase2.default)(this, _executeJavaScriptBundleEntryPointEnd)[_executeJavaScriptBundleEntryPointEnd] = startUpTiming.executeJavaScriptBundleEntryPointEnd;
      }
    }
    return (0, _createClass2.default)(ReactNativeStartupTiming, [{
      key: "startTime",
      get: function get() {
        return (0, _classPrivateFieldLooseBase2.default)(this, _startTime)[_startTime];
      }
    }, {
      key: "endTime",
      get: function get() {
        return (0, _classPrivateFieldLooseBase2.default)(this, _endTime)[_endTime];
      }
    }, {
      key: "initializeRuntimeStart",
      get: function get() {
        return (0, _classPrivateFieldLooseBase2.default)(this, _initializeRuntimeStart)[_initializeRuntimeStart];
      }
    }, {
      key: "initializeRuntimeEnd",
      get: function get() {
        return (0, _classPrivateFieldLooseBase2.default)(this, _initializeRuntimeEnd)[_initializeRuntimeEnd];
      }
    }, {
      key: "executeJavaScriptBundleEntryPointStart",
      get: function get() {
        return (0, _classPrivateFieldLooseBase2.default)(this, _executeJavaScriptBundleEntryPointStart)[_executeJavaScriptBundleEntryPointStart];
      }
    }, {
      key: "executeJavaScriptBundleEntryPointEnd",
      get: function get() {
        return (0, _classPrivateFieldLooseBase2.default)(this, _executeJavaScriptBundleEntryPointEnd)[_executeJavaScriptBundleEntryPointEnd];
      }
    }]);
  }();
},136,[1,12,13,31,32]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.get('NativePerformanceCxx');
},137,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PerformanceEventTiming = exports.EventCounts = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _classPrivateFieldLooseBase2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _classPrivateFieldLooseKey2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _NativePerformance = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && "function" == typeof p ? function (t) { return p.apply(e, t); } : p; }
  var _processingStart = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("processingStart");
  var _processingEnd = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("processingEnd");
  var _interactionId = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("interactionId");
  var PerformanceEventTiming = exports.PerformanceEventTiming = /*#__PURE__*/function (_PerformanceEntry) {
    function PerformanceEventTiming(init) {
      var _init$startTime, _init$duration, _init$processingStart, _init$processingEnd, _init$interactionId;
      var _this;
      (0, _classCallCheck2.default)(this, PerformanceEventTiming);
      _this = _callSuper(this, PerformanceEventTiming, [{
        name: init.name,
        entryType: 'event',
        startTime: (_init$startTime = init.startTime) != null ? _init$startTime : 0,
        duration: (_init$duration = init.duration) != null ? _init$duration : 0
      }]);
      Object.defineProperty(_this, _processingStart, {
        writable: true,
        value: undefined
      });
      Object.defineProperty(_this, _processingEnd, {
        writable: true,
        value: undefined
      });
      Object.defineProperty(_this, _interactionId, {
        writable: true,
        value: undefined
      });
      (0, _classPrivateFieldLooseBase2.default)(_this, _processingStart)[_processingStart] = (_init$processingStart = init.processingStart) != null ? _init$processingStart : 0;
      (0, _classPrivateFieldLooseBase2.default)(_this, _processingEnd)[_processingEnd] = (_init$processingEnd = init.processingEnd) != null ? _init$processingEnd : 0;
      (0, _classPrivateFieldLooseBase2.default)(_this, _interactionId)[_interactionId] = (_init$interactionId = init.interactionId) != null ? _init$interactionId : 0;
      return _this;
    }
    (0, _inherits2.default)(PerformanceEventTiming, _PerformanceEntry);
    return (0, _createClass2.default)(PerformanceEventTiming, [{
      key: "processingStart",
      get: function get() {
        return (0, _classPrivateFieldLooseBase2.default)(this, _processingStart)[_processingStart];
      }
    }, {
      key: "processingEnd",
      get: function get() {
        return (0, _classPrivateFieldLooseBase2.default)(this, _processingEnd)[_processingEnd];
      }
    }, {
      key: "interactionId",
      get: function get() {
        return (0, _classPrivateFieldLooseBase2.default)(this, _interactionId)[_interactionId];
      }
    }, {
      key: "toJSON",
      value: function toJSON() {
        return Object.assign({}, _superPropGet(PerformanceEventTiming, "toJSON", this, 3)([]), {
          processingStart: (0, _classPrivateFieldLooseBase2.default)(this, _processingStart)[_processingStart],
          processingEnd: (0, _classPrivateFieldLooseBase2.default)(this, _processingEnd)[_processingEnd],
          interactionId: (0, _classPrivateFieldLooseBase2.default)(this, _interactionId)[_interactionId]
        });
      }
    }]);
  }(_$$_REQUIRE(_dependencyMap[10]).PerformanceEntry);
  var cachedEventCounts;
  function getCachedEventCounts() {
    var _NativePerformance$ge;
    if (cachedEventCounts) {
      return cachedEventCounts;
    }
    if (!_NativePerformance.default || !(_NativePerformance.default != null && _NativePerformance.default.getEventCounts)) {
      (0, _$$_REQUIRE(_dependencyMap[11]).warnNoNativePerformance)();
      cachedEventCounts = new Map();
      return cachedEventCounts;
    }
    var eventCounts = new Map((_NativePerformance$ge = _NativePerformance.default.getEventCounts == null ? undefined : _NativePerformance.default.getEventCounts()) != null ? _NativePerformance$ge : []);
    cachedEventCounts = eventCounts;
    global.queueMicrotask(function () {
      cachedEventCounts = null;
    });
    return eventCounts;
  }
  var EventCounts = exports.EventCounts = /*#__PURE__*/function () {
    function EventCounts() {
      (0, _classCallCheck2.default)(this, EventCounts);
    }
    return (0, _createClass2.default)(EventCounts, [{
      key: "size",
      get: function get() {
        return getCachedEventCounts().size;
      }
    }, {
      key: "entries",
      value: function entries() {
        return getCachedEventCounts().entries();
      }
    }, {
      key: "forEach",
      value: function forEach(callback) {
        return getCachedEventCounts().forEach(callback);
      }
    }, {
      key: "get",
      value: function get(key) {
        return getCachedEventCounts().get(key);
      }
    }, {
      key: "has",
      value: function has(key) {
        return getCachedEventCounts().has(key);
      }
    }, {
      key: "keys",
      value: function keys() {
        return getCachedEventCounts().keys();
      }
    }, {
      key: "values",
      value: function values() {
        return getCachedEventCounts().values();
      }
    }]);
  }();
},138,[1,12,13,23,25,26,28,31,32,137,139,140]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PerformanceEntry = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _classPrivateFieldLooseBase2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _classPrivateFieldLooseKey2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _name = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("name");
  var _entryType = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("entryType");
  var _startTime = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("startTime");
  var _duration = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("duration");
  var PerformanceEntry = exports.PerformanceEntry = /*#__PURE__*/function () {
    function PerformanceEntry(init) {
      (0, _classCallCheck2.default)(this, PerformanceEntry);
      Object.defineProperty(this, _name, {
        writable: true,
        value: undefined
      });
      Object.defineProperty(this, _entryType, {
        writable: true,
        value: undefined
      });
      Object.defineProperty(this, _startTime, {
        writable: true,
        value: undefined
      });
      Object.defineProperty(this, _duration, {
        writable: true,
        value: undefined
      });
      (0, _classPrivateFieldLooseBase2.default)(this, _name)[_name] = init.name;
      (0, _classPrivateFieldLooseBase2.default)(this, _entryType)[_entryType] = init.entryType;
      (0, _classPrivateFieldLooseBase2.default)(this, _startTime)[_startTime] = init.startTime;
      (0, _classPrivateFieldLooseBase2.default)(this, _duration)[_duration] = init.duration;
    }
    return (0, _createClass2.default)(PerformanceEntry, [{
      key: "name",
      get: function get() {
        return (0, _classPrivateFieldLooseBase2.default)(this, _name)[_name];
      }
    }, {
      key: "entryType",
      get: function get() {
        return (0, _classPrivateFieldLooseBase2.default)(this, _entryType)[_entryType];
      }
    }, {
      key: "startTime",
      get: function get() {
        return (0, _classPrivateFieldLooseBase2.default)(this, _startTime)[_startTime];
      }
    }, {
      key: "duration",
      get: function get() {
        return (0, _classPrivateFieldLooseBase2.default)(this, _duration)[_duration];
      }
    }, {
      key: "toJSON",
      value: function toJSON() {
        return {
          name: (0, _classPrivateFieldLooseBase2.default)(this, _name)[_name],
          entryType: (0, _classPrivateFieldLooseBase2.default)(this, _entryType)[_entryType],
          startTime: (0, _classPrivateFieldLooseBase2.default)(this, _startTime)[_startTime],
          duration: (0, _classPrivateFieldLooseBase2.default)(this, _duration)[_duration]
        };
      }
    }]);
  }();
},139,[1,12,13,31,32]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.warnNoNativePerformance = warnNoNativePerformance;
  var _warnOnce = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  function warnNoNativePerformance() {
    (0, _warnOnce.default)('missing-native-performance', 'Missing native implementation of Performance');
  }
},140,[1,141]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var warnedKeys = {};
  function warnOnce(key, message) {
    if (warnedKeys[key]) {
      return;
    }
    console.warn(message);
    warnedKeys[key] = true;
  }
  var _default = exports.default = warnOnce;
},141,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PerformanceMeasure = exports.PerformanceMark = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _classPrivateFieldLooseBase2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _classPrivateFieldLooseKey2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var _detail = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("detail");
  var PerformanceMark = exports.PerformanceMark = /*#__PURE__*/function (_PerformanceEntry) {
    function PerformanceMark(markName, markOptions) {
      var _markOptions$startTim;
      var _this;
      (0, _classCallCheck2.default)(this, PerformanceMark);
      _this = _callSuper(this, PerformanceMark, [{
        name: markName,
        entryType: 'mark',
        startTime: (_markOptions$startTim = markOptions == null ? undefined : markOptions.startTime) != null ? _markOptions$startTim : performance.now(),
        duration: 0
      }]);
      Object.defineProperty(_this, _detail, {
        writable: true,
        value: undefined
      });
      if (markOptions) {
        (0, _classPrivateFieldLooseBase2.default)(_this, _detail)[_detail] = markOptions.detail;
      }
      return _this;
    }
    (0, _inherits2.default)(PerformanceMark, _PerformanceEntry);
    return (0, _createClass2.default)(PerformanceMark, [{
      key: "detail",
      get: function get() {
        return (0, _classPrivateFieldLooseBase2.default)(this, _detail)[_detail];
      }
    }]);
  }(_$$_REQUIRE(_dependencyMap[8]).PerformanceEntry);
  var _detail2 = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("detail");
  var PerformanceMeasure = exports.PerformanceMeasure = /*#__PURE__*/function (_PerformanceEntry2) {
    function PerformanceMeasure(measureName, measureOptions) {
      var _this2;
      (0, _classCallCheck2.default)(this, PerformanceMeasure);
      _this2 = _callSuper(this, PerformanceMeasure, [{
        name: measureName,
        entryType: 'measure',
        startTime: measureOptions.startTime,
        duration: measureOptions.duration
      }]);
      Object.defineProperty(_this2, _detail2, {
        writable: true,
        value: undefined
      });
      if (measureOptions) {
        (0, _classPrivateFieldLooseBase2.default)(_this2, _detail2)[_detail2] = measureOptions.detail;
      }
      return _this2;
    }
    (0, _inherits2.default)(PerformanceMeasure, _PerformanceEntry2);
    return (0, _createClass2.default)(PerformanceMeasure, [{
      key: "detail",
      get: function get() {
        return (0, _classPrivateFieldLooseBase2.default)(this, _detail2)[_detail2];
      }
    }]);
  }(_$$_REQUIRE(_dependencyMap[8]).PerformanceEntry);
},142,[1,12,13,23,25,28,31,32,139]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RawPerformanceEntryTypeValues = undefined;
  exports.performanceEntryTypeToRaw = performanceEntryTypeToRaw;
  exports.rawToPerformanceEntry = rawToPerformanceEntry;
  exports.rawToPerformanceEntryType = rawToPerformanceEntryType;
  var RawPerformanceEntryTypeValues = exports.RawPerformanceEntryTypeValues = {
    MARK: 1,
    MEASURE: 2,
    EVENT: 3,
    LONGTASK: 4
  };
  function rawToPerformanceEntry(entry) {
    if (entry.entryType === RawPerformanceEntryTypeValues.EVENT) {
      return new (_$$_REQUIRE(_dependencyMap[0]).PerformanceEventTiming)({
        name: entry.name,
        startTime: entry.startTime,
        duration: entry.duration,
        processingStart: entry.processingStart,
        processingEnd: entry.processingEnd,
        interactionId: entry.interactionId
      });
    } else if (entry.entryType === RawPerformanceEntryTypeValues.LONGTASK) {
      return new (_$$_REQUIRE(_dependencyMap[1]).PerformanceLongTaskTiming)({
        name: entry.name,
        entryType: rawToPerformanceEntryType(entry.entryType),
        startTime: entry.startTime,
        duration: entry.duration
      });
    } else if (entry.entryType === RawPerformanceEntryTypeValues.MARK) {
      return new (_$$_REQUIRE(_dependencyMap[2]).PerformanceMark)(entry.name, {
        startTime: entry.startTime
      });
    } else if (entry.entryType === RawPerformanceEntryTypeValues.MEASURE) {
      return new (_$$_REQUIRE(_dependencyMap[2]).PerformanceMeasure)(entry.name, {
        startTime: entry.startTime,
        duration: entry.duration
      });
    } else {
      return new (_$$_REQUIRE(_dependencyMap[3]).PerformanceEntry)({
        name: entry.name,
        entryType: rawToPerformanceEntryType(entry.entryType),
        startTime: entry.startTime,
        duration: entry.duration
      });
    }
  }
  function rawToPerformanceEntryType(type) {
    switch (type) {
      case RawPerformanceEntryTypeValues.MARK:
        return 'mark';
      case RawPerformanceEntryTypeValues.MEASURE:
        return 'measure';
      case RawPerformanceEntryTypeValues.EVENT:
        return 'event';
      case RawPerformanceEntryTypeValues.LONGTASK:
        return 'longtask';
      default:
        throw new TypeError(`rawToPerformanceEntryType: unexpected performance entry type received: ${type}`);
    }
  }
  function performanceEntryTypeToRaw(type) {
    switch (type) {
      case 'mark':
        return RawPerformanceEntryTypeValues.MARK;
      case 'measure':
        return RawPerformanceEntryTypeValues.MEASURE;
      case 'event':
        return RawPerformanceEntryTypeValues.EVENT;
      case 'longtask':
        return RawPerformanceEntryTypeValues.LONGTASK;
      default:
        type;
        throw new TypeError(`performanceEntryTypeToRaw: unexpected performance entry type received: ${type}`);
    }
  }
},143,[138,144,142,139]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskAttributionTiming = exports.PerformanceLongTaskTiming = undefined;
  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && "function" == typeof p ? function (t) { return p.apply(e, t); } : p; }
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var TaskAttributionTiming = exports.TaskAttributionTiming = /*#__PURE__*/function (_PerformanceEntry) {
    function TaskAttributionTiming() {
      (0, _classCallCheck2.default)(this, TaskAttributionTiming);
      return _callSuper(this, TaskAttributionTiming, arguments);
    }
    (0, _inherits2.default)(TaskAttributionTiming, _PerformanceEntry);
    return (0, _createClass2.default)(TaskAttributionTiming);
  }(_$$_REQUIRE(_dependencyMap[7]).PerformanceEntry);
  var EMPTY_ATTRIBUTION = Object.preventExtensions([]);
  var PerformanceLongTaskTiming = exports.PerformanceLongTaskTiming = /*#__PURE__*/function (_PerformanceEntry2) {
    function PerformanceLongTaskTiming() {
      (0, _classCallCheck2.default)(this, PerformanceLongTaskTiming);
      return _callSuper(this, PerformanceLongTaskTiming, arguments);
    }
    (0, _inherits2.default)(PerformanceLongTaskTiming, _PerformanceEntry2);
    return (0, _createClass2.default)(PerformanceLongTaskTiming, [{
      key: "attribution",
      get: function get() {
        return EMPTY_ATTRIBUTION;
      }
    }, {
      key: "toJSON",
      value: function toJSON() {
        return Object.assign({}, _superPropGet(PerformanceLongTaskTiming, "toJSON", this, 3)([]), {
          attribution: this.attribution
        });
      }
    }]);
  }(_$$_REQUIRE(_dependencyMap[7]).PerformanceEntry);
},144,[1,26,13,12,23,25,28,139]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _global, _global$HermesInterna;
  if ((_global = global) != null && (_global$HermesInterna = _global.HermesInternal) != null && _global$HermesInterna.hasPromise != null && _global$HermesInterna.hasPromise()) {
    var HermesPromise = global.Promise;
  } else {
    _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal('Promise', function () {
      return _$$_REQUIRE(_dependencyMap[1]).default;
    });
  }
},145,[65,146]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _es6Extensions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  _$$_REQUIRE(_dependencyMap[2]);
  var _default = exports.default = _es6Extensions.default;
},146,[1,147,149]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  //This file contains the ES6 extensions to the core Promises/A+ API
  module.exports = _$$_REQUIRE(_dependencyMap[0]);

  /* Static Functions */

  var TRUE = valuePromise(true);
  var FALSE = valuePromise(false);
  var NULL = valuePromise(null);
  var UNDEFINED = valuePromise(undefined);
  var ZERO = valuePromise(0);
  var EMPTYSTRING = valuePromise('');
  function valuePromise(value) {
    var p = new (_$$_REQUIRE(_dependencyMap[0]))(_$$_REQUIRE(_dependencyMap[0])._D);
    p._y = 1;
    p._z = value;
    return p;
  }
  _$$_REQUIRE(_dependencyMap[0]).resolve = function (value) {
    if (value instanceof _$$_REQUIRE(_dependencyMap[0])) return value;
    if (value === null) return NULL;
    if (value === undefined) return UNDEFINED;
    if (value === true) return TRUE;
    if (value === false) return FALSE;
    if (value === 0) return ZERO;
    if (value === '') return EMPTYSTRING;
    if (typeof value === 'object' || typeof value === 'function') {
      try {
        var then = value.then;
        if (typeof then === 'function') {
          return new (_$$_REQUIRE(_dependencyMap[0]))(then.bind(value));
        }
      } catch (ex) {
        return new (_$$_REQUIRE(_dependencyMap[0]))(function (resolve, reject) {
          reject(ex);
        });
      }
    }
    return valuePromise(value);
  };
  var _iterableToArray = function iterableToArray(iterable) {
    if (typeof Array.from === 'function') {
      // ES2015+, iterables exist
      _iterableToArray = Array.from;
      return Array.from(iterable);
    }

    // ES5, only arrays and array-likes exist
    _iterableToArray = function iterableToArray(x) {
      return Array.prototype.slice.call(x);
    };
    return Array.prototype.slice.call(iterable);
  };
  _$$_REQUIRE(_dependencyMap[0]).all = function (arr) {
    var args = _iterableToArray(arr);
    return new (_$$_REQUIRE(_dependencyMap[0]))(function (resolve, reject) {
      if (args.length === 0) return resolve([]);
      var remaining = args.length;
      function res(i, val) {
        if (val && (typeof val === 'object' || typeof val === 'function')) {
          if (val instanceof _$$_REQUIRE(_dependencyMap[0]) && val.then === _$$_REQUIRE(_dependencyMap[0]).prototype.then) {
            while (val._y === 3) {
              val = val._z;
            }
            if (val._y === 1) return res(i, val._z);
            if (val._y === 2) reject(val._z);
            val.then(function (val) {
              res(i, val);
            }, reject);
            return;
          } else {
            var then = val.then;
            if (typeof then === 'function') {
              var p = new (_$$_REQUIRE(_dependencyMap[0]))(then.bind(val));
              p.then(function (val) {
                res(i, val);
              }, reject);
              return;
            }
          }
        }
        args[i] = val;
        if (--remaining === 0) {
          resolve(args);
        }
      }
      for (var i = 0; i < args.length; i++) {
        res(i, args[i]);
      }
    });
  };
  function onSettledFulfill(value) {
    return {
      status: 'fulfilled',
      value: value
    };
  }
  function onSettledReject(reason) {
    return {
      status: 'rejected',
      reason: reason
    };
  }
  function mapAllSettled(item) {
    if (item && (typeof item === 'object' || typeof item === 'function')) {
      if (item instanceof _$$_REQUIRE(_dependencyMap[0]) && item.then === _$$_REQUIRE(_dependencyMap[0]).prototype.then) {
        return item.then(onSettledFulfill, onSettledReject);
      }
      var then = item.then;
      if (typeof then === 'function') {
        return new (_$$_REQUIRE(_dependencyMap[0]))(then.bind(item)).then(onSettledFulfill, onSettledReject);
      }
    }
    return onSettledFulfill(item);
  }
  _$$_REQUIRE(_dependencyMap[0]).allSettled = function (iterable) {
    return _$$_REQUIRE(_dependencyMap[0]).all(_iterableToArray(iterable).map(mapAllSettled));
  };
  _$$_REQUIRE(_dependencyMap[0]).reject = function (value) {
    return new (_$$_REQUIRE(_dependencyMap[0]))(function (resolve, reject) {
      reject(value);
    });
  };
  _$$_REQUIRE(_dependencyMap[0]).race = function (values) {
    return new (_$$_REQUIRE(_dependencyMap[0]))(function (resolve, reject) {
      _iterableToArray(values).forEach(function (value) {
        _$$_REQUIRE(_dependencyMap[0]).resolve(value).then(resolve, reject);
      });
    });
  };

  /* Prototype Methods */

  _$$_REQUIRE(_dependencyMap[0]).prototype['catch'] = function (onRejected) {
    return this.then(null, onRejected);
  };
  function getAggregateError(errors) {
    if (typeof AggregateError === 'function') {
      return new AggregateError(errors, 'All promises were rejected');
    }
    var error = new Error('All promises were rejected');
    error.name = 'AggregateError';
    error.errors = errors;
    return error;
  }
  _$$_REQUIRE(_dependencyMap[0]).any = function promiseAny(values) {
    return new (_$$_REQUIRE(_dependencyMap[0]))(function (resolve, reject) {
      var promises = _iterableToArray(values);
      var hasResolved = false;
      var rejectionReasons = [];
      function resolveOnce(value) {
        if (!hasResolved) {
          hasResolved = true;
          resolve(value);
        }
      }
      function rejectionCheck(reason) {
        rejectionReasons.push(reason);
        if (rejectionReasons.length === promises.length) {
          reject(getAggregateError(rejectionReasons));
        }
      }
      if (promises.length === 0) {
        reject(getAggregateError(rejectionReasons));
      } else {
        promises.forEach(function (value) {
          _$$_REQUIRE(_dependencyMap[0]).resolve(value).then(resolveOnce, rejectionCheck);
        });
      }
    });
  };
},147,[148]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function noop() {}

  // States:
  //
  // 0 - pending
  // 1 - fulfilled with _value
  // 2 - rejected with _value
  // 3 - adopted the state of another promise, _value
  //
  // once the state is no longer pending (0) it is immutable

  // All `_` prefixed properties will be reduced to `_{random number}`
  // at build time to obfuscate them and discourage their use.
  // We don't use symbols or Object.defineProperty to fully hide them
  // because the performance isn't good enough.

  // to avoid using try/catch inside critical functions, we
  // extract them to here.
  var LAST_ERROR = null;
  var IS_ERROR = {};
  function getThen(obj) {
    try {
      return obj.then;
    } catch (ex) {
      LAST_ERROR = ex;
      return IS_ERROR;
    }
  }
  function tryCallOne(fn, a) {
    try {
      return fn(a);
    } catch (ex) {
      LAST_ERROR = ex;
      return IS_ERROR;
    }
  }
  function tryCallTwo(fn, a, b) {
    try {
      fn(a, b);
    } catch (ex) {
      LAST_ERROR = ex;
      return IS_ERROR;
    }
  }
  module.exports = Promise;
  function Promise(fn) {
    if (typeof this !== 'object') {
      throw new TypeError('Promises must be constructed via new');
    }
    if (typeof fn !== 'function') {
      throw new TypeError('Promise constructor\'s argument is not a function');
    }
    this._x = 0;
    this._y = 0;
    this._z = null;
    this._A = null;
    if (fn === noop) return;
    doResolve(fn, this);
  }
  Promise._B = null;
  Promise._C = null;
  Promise._D = noop;
  Promise.prototype.then = function (onFulfilled, onRejected) {
    if (this.constructor !== Promise) {
      return safeThen(this, onFulfilled, onRejected);
    }
    var res = new Promise(noop);
    handle(this, new Handler(onFulfilled, onRejected, res));
    return res;
  };
  function safeThen(self, onFulfilled, onRejected) {
    return new self.constructor(function (resolve, reject) {
      var res = new Promise(noop);
      res.then(resolve, reject);
      handle(self, new Handler(onFulfilled, onRejected, res));
    });
  }
  function handle(self, deferred) {
    while (self._y === 3) {
      self = self._z;
    }
    if (Promise._B) {
      Promise._B(self);
    }
    if (self._y === 0) {
      if (self._x === 0) {
        self._x = 1;
        self._A = deferred;
        return;
      }
      if (self._x === 1) {
        self._x = 2;
        self._A = [self._A, deferred];
        return;
      }
      self._A.push(deferred);
      return;
    }
    handleResolved(self, deferred);
  }
  function handleResolved(self, deferred) {
    setImmediate(function () {
      var cb = self._y === 1 ? deferred.onFulfilled : deferred.onRejected;
      if (cb === null) {
        if (self._y === 1) {
          resolve(deferred.promise, self._z);
        } else {
          reject(deferred.promise, self._z);
        }
        return;
      }
      var ret = tryCallOne(cb, self._z);
      if (ret === IS_ERROR) {
        reject(deferred.promise, LAST_ERROR);
      } else {
        resolve(deferred.promise, ret);
      }
    });
  }
  function resolve(self, newValue) {
    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure
    if (newValue === self) {
      return reject(self, new TypeError('A promise cannot be resolved with itself.'));
    }
    if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {
      var then = getThen(newValue);
      if (then === IS_ERROR) {
        return reject(self, LAST_ERROR);
      }
      if (then === self.then && newValue instanceof Promise) {
        self._y = 3;
        self._z = newValue;
        finale(self);
        return;
      } else if (typeof then === 'function') {
        doResolve(then.bind(newValue), self);
        return;
      }
    }
    self._y = 1;
    self._z = newValue;
    finale(self);
  }
  function reject(self, newValue) {
    self._y = 2;
    self._z = newValue;
    if (Promise._C) {
      Promise._C(self, newValue);
    }
    finale(self);
  }
  function finale(self) {
    if (self._x === 1) {
      handle(self, self._A);
      self._A = null;
    }
    if (self._x === 2) {
      for (var i = 0; i < self._A.length; i++) {
        handle(self, self._A[i]);
      }
      self._A = null;
    }
  }
  function Handler(onFulfilled, onRejected, promise) {
    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;
    this.onRejected = typeof onRejected === 'function' ? onRejected : null;
    this.promise = promise;
  }

  /**
   * Take a potentially misbehaving resolver function and make sure
   * onFulfilled and onRejected are only called once.
   *
   * Makes no guarantees about asynchrony.
   */
  function doResolve(fn, promise) {
    var done = false;
    var res = tryCallTwo(fn, function (value) {
      if (done) return;
      done = true;
      resolve(promise, value);
    }, function (reason) {
      if (done) return;
      done = true;
      reject(promise, reason);
    });
    if (!done && res === IS_ERROR) {
      done = true;
      reject(promise, LAST_ERROR);
    }
  }
},148,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _$$_REQUIRE(_dependencyMap[0]);
  _$$_REQUIRE(_dependencyMap[0]).prototype.finally = function (f) {
    return this.then(function (value) {
      return _$$_REQUIRE(_dependencyMap[0]).resolve(f()).then(function () {
        return value;
      });
    }, function (err) {
      return _$$_REQUIRE(_dependencyMap[0]).resolve(f()).then(function () {
        throw err;
      });
    });
  };
},149,[148]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (global.RN$Bridgeless === true) {
    global.RN$enableMicrotasksInReact = true;
    _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal('queueMicrotask', function () {
      return _$$_REQUIRE(_dependencyMap[1]).default.queueMicrotask;
    });
    _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal('setImmediate', function () {
      return _$$_REQUIRE(_dependencyMap[2]).setImmediate;
    });
    _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal('clearImmediate', function () {
      return _$$_REQUIRE(_dependencyMap[2]).clearImmediate;
    });
    _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal('requestIdleCallback', function () {
      return _$$_REQUIRE(_dependencyMap[3]).default.requestIdleCallback;
    });
    _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal('cancelIdleCallback', function () {
      return _$$_REQUIRE(_dependencyMap[3]).default.cancelIdleCallback;
    });
  } else {
    var defineLazyTimer = function defineLazyTimer(name) {
      _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal(name, function () {
        return _$$_REQUIRE(_dependencyMap[4]).default[name];
      });
    };
    defineLazyTimer('setTimeout');
    defineLazyTimer('clearTimeout');
    defineLazyTimer('setInterval');
    defineLazyTimer('clearInterval');
    defineLazyTimer('requestAnimationFrame');
    defineLazyTimer('cancelAnimationFrame');
    defineLazyTimer('requestIdleCallback');
    defineLazyTimer('cancelIdleCallback');
    _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal('queueMicrotask', function () {
      return _$$_REQUIRE(_dependencyMap[5]).default;
    });
    _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal('setImmediate', function () {
      return _$$_REQUIRE(_dependencyMap[4]).default.queueReactNativeMicrotask;
    });
    _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal('clearImmediate', function () {
      return _$$_REQUIRE(_dependencyMap[4]).default.clearReactNativeMicrotask;
    });
  }
},150,[65,151,152,153,154,157]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.getEnforcing('NativeMicrotasksCxx');
},151,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.clearImmediate = clearImmediate;
  exports.setImmediate = setImmediate;
  var GUIID = 1;
  var clearedImmediates = new Set();
  function setImmediate(callback) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    if (arguments.length < 1) {
      throw new TypeError('setImmediate must be called with at least one argument (a function to call)');
    }
    if (typeof callback !== 'function') {
      throw new TypeError('The first argument to setImmediate must be a function.');
    }
    var id = GUIID++;
    if (clearedImmediates.has(id)) {
      clearedImmediates.delete(id);
    }
    global.queueMicrotask(function () {
      if (!clearedImmediates.has(id)) {
        callback.apply(undefined, args);
      } else {
        clearedImmediates.delete(id);
      }
    });
    return id;
  }
  function clearImmediate(immediateID) {
    clearedImmediates.add(immediateID);
  }
},152,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.getEnforcing('NativeIdleCallbacksCxx');
},153,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _NativeTiming = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var FRAME_DURATION = 16.666666666666668;
  var IDLE_CALLBACK_FRAME_DEADLINE = 1;
  var callbacks = [];
  var types = [];
  var timerIDs = [];
  var freeIdxs = [];
  var reactNativeMicrotasks = [];
  var requestIdleCallbacks = [];
  var requestIdleCallbackTimeouts = {};
  var GUID = 1;
  var errors = [];
  var hasEmittedTimeDriftWarning = false;
  function _getFreeIndex() {
    var freeIdx = freeIdxs.pop();
    if (freeIdx === undefined) {
      return timerIDs.length;
    }
    return freeIdx;
  }
  function _allocateCallback(func, type) {
    var id = GUID++;
    var freeIndex = _getFreeIndex();
    timerIDs[freeIndex] = id;
    callbacks[freeIndex] = func;
    types[freeIndex] = type;
    return id;
  }
  function _callTimer(timerID, frameTime, didTimeout) {
    if (timerID > GUID) {
      console.warn('Tried to call timer with ID %s but no such timer exists.', timerID);
    }
    var timerIndex = timerIDs.indexOf(timerID);
    if (timerIndex === -1) {
      return;
    }
    var type = types[timerIndex];
    var callback = callbacks[timerIndex];
    if (!callback || !type) {
      console.error('No callback found for timerID ' + timerID);
      return;
    }
    if (type !== 'setInterval') {
      _clearIndex(timerIndex);
    }
    try {
      if (type === 'setTimeout' || type === 'setInterval' || type === 'queueReactNativeMicrotask') {
        callback();
      } else if (type === 'requestAnimationFrame') {
        callback(global.performance.now());
      } else if (type === 'requestIdleCallback') {
        callback({
          timeRemaining: function timeRemaining() {
            return Math.max(0, FRAME_DURATION - (global.performance.now() - frameTime));
          },
          didTimeout: !!didTimeout
        });
      } else {
        console.error('Tried to call a callback with invalid type: ' + type);
      }
    } catch (e) {
      errors.push(e);
    }
  }
  function _callReactNativeMicrotasksPass() {
    if (reactNativeMicrotasks.length === 0) {
      return false;
    }
    var passReactNativeMicrotasks = reactNativeMicrotasks;
    reactNativeMicrotasks = [];
    for (var i = 0; i < passReactNativeMicrotasks.length; ++i) {
      _callTimer(passReactNativeMicrotasks[i], 0);
    }
    return reactNativeMicrotasks.length > 0;
  }
  function _clearIndex(i) {
    timerIDs[i] = null;
    callbacks[i] = null;
    types[i] = null;
    freeIdxs.push(i);
  }
  function _freeCallback(timerID) {
    if (timerID == null) {
      return;
    }
    var index = timerIDs.indexOf(timerID);
    if (index !== -1) {
      var type = types[index];
      _clearIndex(index);
      if (type !== 'queueReactNativeMicrotask' && type !== 'requestIdleCallback') {
        deleteTimer(timerID);
      }
    }
  }
  var JSTimers = {
    setTimeout: function setTimeout(func, duration) {
      for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
        args[_key - 2] = arguments[_key];
      }
      var id = _allocateCallback(function () {
        return func.apply(undefined, args);
      }, 'setTimeout');
      createTimer(id, duration || 0, Date.now(), false);
      return id;
    },
    setInterval: function setInterval(func, duration) {
      for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }
      var id = _allocateCallback(function () {
        return func.apply(undefined, args);
      }, 'setInterval');
      createTimer(id, duration || 0, Date.now(), true);
      return id;
    },
    queueReactNativeMicrotask: function queueReactNativeMicrotask(func) {
      for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
        args[_key3 - 1] = arguments[_key3];
      }
      var id = _allocateCallback(function () {
        return func.apply(undefined, args);
      }, 'queueReactNativeMicrotask');
      reactNativeMicrotasks.push(id);
      return id;
    },
    requestAnimationFrame: function requestAnimationFrame(func) {
      var id = _allocateCallback(func, 'requestAnimationFrame');
      createTimer(id, 1, Date.now(), false);
      return id;
    },
    requestIdleCallback: function requestIdleCallback(func, options) {
      if (requestIdleCallbacks.length === 0) {
        setSendIdleEvents(true);
      }
      var timeout = options && options.timeout;
      var id = _allocateCallback(timeout != null ? function (deadline) {
        var timeoutId = requestIdleCallbackTimeouts[id];
        if (timeoutId) {
          JSTimers.clearTimeout(timeoutId);
          delete requestIdleCallbackTimeouts[id];
        }
        return func(deadline);
      } : func, 'requestIdleCallback');
      requestIdleCallbacks.push(id);
      if (timeout != null) {
        var timeoutId = JSTimers.setTimeout(function () {
          var index = requestIdleCallbacks.indexOf(id);
          if (index > -1) {
            requestIdleCallbacks.splice(index, 1);
            _callTimer(id, global.performance.now(), true);
          }
          delete requestIdleCallbackTimeouts[id];
          if (requestIdleCallbacks.length === 0) {
            setSendIdleEvents(false);
          }
        }, timeout);
        requestIdleCallbackTimeouts[id] = timeoutId;
      }
      return id;
    },
    cancelIdleCallback: function cancelIdleCallback(timerID) {
      _freeCallback(timerID);
      var index = requestIdleCallbacks.indexOf(timerID);
      if (index !== -1) {
        requestIdleCallbacks.splice(index, 1);
      }
      var timeoutId = requestIdleCallbackTimeouts[timerID];
      if (timeoutId) {
        JSTimers.clearTimeout(timeoutId);
        delete requestIdleCallbackTimeouts[timerID];
      }
      if (requestIdleCallbacks.length === 0) {
        setSendIdleEvents(false);
      }
    },
    clearTimeout: function clearTimeout(timerID) {
      _freeCallback(timerID);
    },
    clearInterval: function clearInterval(timerID) {
      _freeCallback(timerID);
    },
    clearReactNativeMicrotask: function clearReactNativeMicrotask(timerID) {
      _freeCallback(timerID);
      var index = reactNativeMicrotasks.indexOf(timerID);
      if (index !== -1) {
        reactNativeMicrotasks.splice(index, 1);
      }
    },
    cancelAnimationFrame: function cancelAnimationFrame(timerID) {
      _freeCallback(timerID);
    },
    callTimers: function callTimers(timersToCall) {
      _$$_REQUIRE(_dependencyMap[2])(timersToCall.length !== 0, 'Cannot call `callTimers` with an empty list of IDs.');
      errors.length = 0;
      for (var i = 0; i < timersToCall.length; i++) {
        _callTimer(timersToCall[i], 0);
      }
      var errorCount = errors.length;
      if (errorCount > 0) {
        if (errorCount > 1) {
          for (var ii = 1; ii < errorCount; ii++) {
            JSTimers.setTimeout(function (error) {
              throw error;
            }.bind(null, errors[ii]), 0);
          }
        }
        throw errors[0];
      }
    },
    callIdleCallbacks: function callIdleCallbacks(frameTime) {
      if (FRAME_DURATION - (Date.now() - frameTime) < IDLE_CALLBACK_FRAME_DEADLINE) {
        return;
      }
      errors.length = 0;
      if (requestIdleCallbacks.length > 0) {
        var passIdleCallbacks = requestIdleCallbacks;
        requestIdleCallbacks = [];
        for (var i = 0; i < passIdleCallbacks.length; ++i) {
          _callTimer(passIdleCallbacks[i], frameTime);
        }
      }
      if (requestIdleCallbacks.length === 0) {
        setSendIdleEvents(false);
      }
      errors.forEach(function (error) {
        return JSTimers.setTimeout(function () {
          throw error;
        }, 0);
      });
    },
    callReactNativeMicrotasks: function callReactNativeMicrotasks() {
      errors.length = 0;
      while (_callReactNativeMicrotasksPass()) {}
      errors.forEach(function (error) {
        return JSTimers.setTimeout(function () {
          throw error;
        }, 0);
      });
    },
    emitTimeDriftWarning: function emitTimeDriftWarning(warningMessage) {
      if (hasEmittedTimeDriftWarning) {
        return;
      }
      hasEmittedTimeDriftWarning = true;
      console.warn(warningMessage);
    }
  };
  function createTimer(callbackID, duration, jsSchedulingTime, repeats) {
    _$$_REQUIRE(_dependencyMap[2])(_NativeTiming.default, 'NativeTiming is available');
    _NativeTiming.default.createTimer(callbackID, duration, jsSchedulingTime, repeats);
  }
  function deleteTimer(timerID) {
    _$$_REQUIRE(_dependencyMap[2])(_NativeTiming.default, 'NativeTiming is available');
    _NativeTiming.default.deleteTimer(timerID);
  }
  function setSendIdleEvents(sendIdleEvents) {
    _$$_REQUIRE(_dependencyMap[2])(_NativeTiming.default, 'NativeTiming is available');
    _NativeTiming.default.setSendIdleEvents(sendIdleEvents);
  }
  var ExportedJSTimers;
  if (!_NativeTiming.default) {
    console.warn("Timing native module is not available, can't set timers.");
    ExportedJSTimers = {
      callReactNativeMicrotasks: JSTimers.callReactNativeMicrotasks,
      queueReactNativeMicrotask: JSTimers.queueReactNativeMicrotask
    };
  } else {
    ExportedJSTimers = JSTimers;
  }
  _$$_REQUIRE(_dependencyMap[3]).default.setReactNativeMicrotasksCallback(JSTimers.callReactNativeMicrotasks);
  var _default = exports.default = ExportedJSTimers;
},154,[1,155,20,4]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeTiming = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeTiming).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeTiming[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeTiming[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeTiming.default;
},155,[156]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.get('Timing');
},156,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = queueMicrotask;
  var resolvedPromise;
  function queueMicrotask(callback) {
    if (arguments.length < 1) {
      throw new TypeError('queueMicrotask must be called with at least one argument (a function to call)');
    }
    if (typeof callback !== 'function') {
      throw new TypeError('The argument to queueMicrotask must be a function.');
    }
    (resolvedPromise || (resolvedPromise = Promise.resolve())).then(callback).catch(function (error) {
      return setTimeout(function () {
        throw error;
      }, 0);
    });
  }
},157,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (global.RN$useAlwaysAvailableJSErrorHandling !== true) {
    var ExceptionsManager = _$$_REQUIRE(_dependencyMap[0]).default;
    ExceptionsManager.installConsoleErrorReporter();
    if (!global.__fbDisableExceptionsManager) {
      var handleError = function handleError(e, isFatal) {
        try {
          ExceptionsManager.handleException(e, isFatal);
        } catch (ee) {
          console.log('Failed to print error: ', ee.message);
          throw e;
        }
      };
      var ErrorUtils = _$$_REQUIRE(_dependencyMap[1]).default;
      ErrorUtils.setGlobalHandler(handleError);
    }
  }
},158,[159,18]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.SyntheticError = undefined;
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _wrapNativeSuper2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var SyntheticError = exports.SyntheticError = /*#__PURE__*/function (_Error) {
    function SyntheticError() {
      var _this;
      (0, _classCallCheck2.default)(this, SyntheticError);
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _callSuper(this, SyntheticError, [].concat(args));
      _this.name = '';
      return _this;
    }
    (0, _inherits2.default)(SyntheticError, _Error);
    return (0, _createClass2.default)(SyntheticError);
  }(/*#__PURE__*/(0, _wrapNativeSuper2.default)(Error));
  var userExceptionDecorator;
  var inUserExceptionDecorator = false;
  var decoratedExtraDataKey = 'RN$ErrorExtraDataKey';
  function unstable_setExceptionDecorator(exceptionDecorator) {
    userExceptionDecorator = exceptionDecorator;
  }
  function preprocessException(data) {
    if (userExceptionDecorator && !inUserExceptionDecorator) {
      inUserExceptionDecorator = true;
      try {
        return userExceptionDecorator(data);
      } catch (_unused) {} finally {
        inUserExceptionDecorator = false;
      }
    }
    return data;
  }
  var exceptionID = 0;
  function reportException(e, isFatal, reportToConsole) {
    var parseErrorStack = _$$_REQUIRE(_dependencyMap[7]).default;
    var stack = parseErrorStack(e == null ? undefined : e.stack);
    var currentExceptionID = ++exceptionID;
    var originalMessage = e.message || '';
    var message = originalMessage;
    if (e.componentStack != null) {
      message += `\n\nThis error is located at:${e.componentStack}`;
    }
    var namePrefix = e.name == null || e.name === '' ? '' : `${e.name}: `;
    if (!message.startsWith(namePrefix)) {
      message = namePrefix + message;
    }
    message = e.jsEngine == null ? message : `${message}, js engine: ${e.jsEngine}`;
    var extraData = Object.assign({}, e[decoratedExtraDataKey], {
      jsEngine: e.jsEngine,
      rawStack: e.stack
    });
    if (e.cause != null && typeof e.cause === 'object') {
      extraData.stackSymbols = e.cause.stackSymbols;
      extraData.stackReturnAddresses = e.cause.stackReturnAddresses;
      extraData.stackElements = e.cause.stackElements;
    }
    var data = preprocessException({
      message: message,
      originalMessage: message === originalMessage ? null : originalMessage,
      name: e.name == null || e.name === '' ? null : e.name,
      componentStack: typeof e.componentStack === 'string' ? e.componentStack : null,
      stack: stack,
      id: currentExceptionID,
      isFatal: isFatal,
      extraData: extraData
    });
    if (reportToConsole) {
      console.error(data.message);
    }
    if (isFatal || e.type !== 'warn') {
      var NativeExceptionsManager = _$$_REQUIRE(_dependencyMap[8]).default;
      if (NativeExceptionsManager) {
        if (isFatal) {
          if (global.RN$hasHandledFatalException != null && global.RN$hasHandledFatalException()) {
            return;
          }
          global.RN$notifyOfFatalException == null ? undefined : global.RN$notifyOfFatalException();
        }
        NativeExceptionsManager.reportException(data);
      }
    }
  }
  var inExceptionHandler = false;
  function handleException(e, isFatal) {
    var reportToConsole = true;
    if (!global.RN$handleException || !global.RN$handleException(e, isFatal, reportToConsole)) {
      var error;
      if (e instanceof Error) {
        error = e;
      } else {
        error = new SyntheticError(e);
      }
      try {
        inExceptionHandler = true;
        reportException(error, isFatal, reportToConsole);
      } finally {
        inExceptionHandler = false;
      }
    }
  }
  function reactConsoleErrorHandler() {
    var _console;
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }
    (_console = console)._errorOriginal.apply(_console, args);
    if (!console.reportErrorsAsExceptions) {
      return;
    }
    if (inExceptionHandler || global.RN$inExceptionHandler != null && global.RN$inExceptionHandler()) {
      return;
    }
    var error;
    var firstArg = args[0];
    if (firstArg != null && firstArg.stack) {
      error = firstArg;
    } else {
      var stringifySafe = _$$_REQUIRE(_dependencyMap[9]).default;
      if (typeof firstArg === 'string' && firstArg.startsWith('Warning: ')) {
        return;
      }
      var message = args.map(function (arg) {
        return typeof arg === 'string' ? arg : stringifySafe(arg);
      }).join(' ');
      error = new SyntheticError(message);
      error.name = 'console.error';
    }
    var isFatal = false;
    var reportToConsole = false;
    if (!global.RN$handleException || !global.RN$handleException(error, isFatal, reportToConsole)) {
      reportException(error, isFatal, reportToConsole);
    }
  }
  function installConsoleErrorReporter() {
    if (console._errorOriginal) {
      return;
    }
    console._errorOriginal = console.error.bind(console);
    console.error = reactConsoleErrorHandler;
    if (console.reportErrorsAsExceptions === undefined) {
      console.reportErrorsAsExceptions = true;
    }
  }
  var ExceptionsManager = {
    decoratedExtraDataKey: decoratedExtraDataKey,
    handleException: handleException,
    installConsoleErrorReporter: installConsoleErrorReporter,
    SyntheticError: SyntheticError,
    unstable_setExceptionDecorator: unstable_setExceptionDecorator
  };
  var _default = exports.default = ExceptionsManager;
},159,[1,13,12,23,25,28,160,164,167,19]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _wrapNativeSuper(t) {
    var r = "function" == typeof Map ? new Map() : undefined;
    return module.exports = _wrapNativeSuper = function _wrapNativeSuper(t) {
      if (null === t || !_$$_REQUIRE(_dependencyMap[0])(t)) return t;
      if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function");
      if (undefined !== r) {
        if (r.has(t)) return r.get(t);
        r.set(t, Wrapper);
      }
      function Wrapper() {
        return _$$_REQUIRE(_dependencyMap[1])(t, arguments, _$$_REQUIRE(_dependencyMap[2])(this).constructor);
      }
      return Wrapper.prototype = Object.create(t.prototype, {
        constructor: {
          value: Wrapper,
          enumerable: false,
          writable: true,
          configurable: true
        }
      }), _$$_REQUIRE(_dependencyMap[3])(Wrapper, t);
    }, module.exports.__esModule = true, module.exports["default"] = module.exports, _wrapNativeSuper(t);
  }
  module.exports = _wrapNativeSuper, module.exports.__esModule = true, module.exports["default"] = module.exports;
},160,[161,162,25,29]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _isNativeFunction(t) {
    try {
      return -1 !== Function.toString.call(t).indexOf("[native code]");
    } catch (n) {
      return "function" == typeof t;
    }
  }
  module.exports = _isNativeFunction, module.exports.__esModule = true, module.exports["default"] = module.exports;
},161,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _construct(t, e, r) {
    if (_$$_REQUIRE(_dependencyMap[0])()) return Reflect.construct.apply(null, arguments);
    var o = [null];
    o.push.apply(o, e);
    var p = new (t.bind.apply(t, o))();
    return r && _$$_REQUIRE(_dependencyMap[1])(p, r.prototype), p;
  }
  module.exports = _construct, module.exports.__esModule = true, module.exports["default"] = module.exports;
},162,[163,29]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _isNativeReflectConstruct() {
    try {
      var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    } catch (t) {}
    return (module.exports = _isNativeReflectConstruct = function _isNativeReflectConstruct() {
      return !!t;
    }, module.exports.__esModule = true, module.exports["default"] = module.exports)();
  }
  module.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports["default"] = module.exports;
},163,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = parseErrorStack;
  function convertHermesStack(stack) {
    var frames = [];
    for (var entry of stack.entries) {
      if (entry.type !== 'FRAME') {
        continue;
      }
      var location = entry.location,
        functionName = entry.functionName;
      if (location.type === 'NATIVE' || location.type === 'INTERNAL_BYTECODE') {
        continue;
      }
      frames.push({
        methodName: functionName,
        file: location.sourceUrl,
        lineNumber: location.line1Based,
        column: location.type === 'SOURCE' ? location.column1Based - 1 : location.virtualOffset0Based
      });
    }
    return frames;
  }
  function parseErrorStack(errorStack) {
    if (errorStack == null) {
      return [];
    }
    var stacktraceParser = _$$_REQUIRE(_dependencyMap[0]);
    var parsedStack = Array.isArray(errorStack) ? errorStack : global.HermesInternal ? convertHermesStack(_$$_REQUIRE(_dependencyMap[1]).default(errorStack)) : stacktraceParser.parse(errorStack).map(function (frame) {
      return Object.assign({}, frame, {
        column: frame.column != null ? frame.column - 1 : null
      });
    });
    return parsedStack;
  }
},164,[165,166]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, '__esModule', {
    value: true
  });
  var UNKNOWN_FUNCTION = '<unknown>';
  /**
   * This parses the different stack traces and puts them into one format
   * This borrows heavily from TraceKit (https://github.com/csnover/TraceKit)
   */

  function parse(stackString) {
    var lines = stackString.split('\n');
    return lines.reduce(function (stack, line) {
      var parseResult = parseChrome(line) || parseWinjs(line) || parseGecko(line) || parseNode(line) || parseJSC(line);
      if (parseResult) {
        stack.push(parseResult);
      }
      return stack;
    }, []);
  }
  var chromeRe = /^\s*at (.*?) ?\(((?:file|https?|blob|chrome-extension|native|eval|webpack|rsc|<anonymous>|\/|[a-z]:\\|\\\\).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i;
  var chromeEvalRe = /\((\S*)(?::(\d+))(?::(\d+))\)/;
  function parseChrome(line) {
    var parts = chromeRe.exec(line);
    if (!parts) {
      return null;
    }
    var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line

    var isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line

    var submatch = chromeEvalRe.exec(parts[2]);
    if (isEval && submatch != null) {
      // throw out eval line/column and use top-most line/column number
      parts[2] = submatch[1]; // url

      parts[3] = submatch[2]; // line

      parts[4] = submatch[3]; // column
    }
    return {
      file: !isNative ? parts[2] : null,
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: isNative ? [parts[2]] : [],
      lineNumber: parts[3] ? +parts[3] : null,
      column: parts[4] ? +parts[4] : null
    };
  }
  var winjsRe = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:file|ms-appx|https?|webpack|rsc|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i;
  function parseWinjs(line) {
    var parts = winjsRe.exec(line);
    if (!parts) {
      return null;
    }
    return {
      file: parts[2],
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: [],
      lineNumber: +parts[3],
      column: parts[4] ? +parts[4] : null
    };
  }
  var geckoRe = /^\s*(.*?)(?:\((.*?)\))?(?:^|@)((?:file|https?|blob|chrome|webpack|rsc|resource|\[native).*?|[^@]*bundle)(?::(\d+))?(?::(\d+))?\s*$/i;
  var geckoEvalRe = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i;
  function parseGecko(line) {
    var parts = geckoRe.exec(line);
    if (!parts) {
      return null;
    }
    var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;
    var submatch = geckoEvalRe.exec(parts[3]);
    if (isEval && submatch != null) {
      // throw out eval line/column and use top-most line number
      parts[3] = submatch[1];
      parts[4] = submatch[2];
      parts[5] = null; // no column when eval
    }
    return {
      file: parts[3],
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: parts[2] ? parts[2].split(',') : [],
      lineNumber: parts[4] ? +parts[4] : null,
      column: parts[5] ? +parts[5] : null
    };
  }
  var javaScriptCoreRe = /^\s*(?:([^@]*)(?:\((.*?)\))?@)?(\S.*?):(\d+)(?::(\d+))?\s*$/i;
  function parseJSC(line) {
    var parts = javaScriptCoreRe.exec(line);
    if (!parts) {
      return null;
    }
    return {
      file: parts[3],
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: [],
      lineNumber: +parts[4],
      column: parts[5] ? +parts[5] : null
    };
  }
  var nodeRe = /^\s*at (?:((?:\[object object\])?[^\\/]+(?: \[as \S+\])?) )?\(?(.*?):(\d+)(?::(\d+))?\)?\s*$/i;
  function parseNode(line) {
    var parts = nodeRe.exec(line);
    if (!parts) {
      return null;
    }
    return {
      file: parts[2],
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: [],
      lineNumber: +parts[3],
      column: parts[4] ? +parts[4] : null
    };
  }
  exports.parse = parse;
},165,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = parseHermesStack;
  var RE_FRAME = /^ {4}at (.+?)(?: \((native)\)?| \((address at )?(.*?):(\d+):(\d+)\))$/;
  var RE_SKIPPED = /^ {4}... skipping (\d+) frames$/;
  var RE_COMPONENT_NO_STACK = /^ {4}at .*$/;
  function isInternalBytecodeSourceUrl(sourceUrl) {
    return sourceUrl === 'InternalBytecode.js';
  }
  function parseLine(line) {
    var asFrame = line.match(RE_FRAME);
    if (asFrame) {
      return {
        type: 'FRAME',
        functionName: asFrame[1],
        location: asFrame[2] === 'native' ? {
          type: 'NATIVE'
        } : asFrame[3] === 'address at ' ? isInternalBytecodeSourceUrl(asFrame[4]) ? {
          type: 'INTERNAL_BYTECODE',
          sourceUrl: asFrame[4],
          line1Based: Number.parseInt(asFrame[5], 10),
          virtualOffset0Based: Number.parseInt(asFrame[6], 10)
        } : {
          type: 'BYTECODE',
          sourceUrl: asFrame[4],
          line1Based: Number.parseInt(asFrame[5], 10),
          virtualOffset0Based: Number.parseInt(asFrame[6], 10)
        } : {
          type: 'SOURCE',
          sourceUrl: asFrame[4],
          line1Based: Number.parseInt(asFrame[5], 10),
          column1Based: Number.parseInt(asFrame[6], 10)
        }
      };
    }
    var asSkipped = line.match(RE_SKIPPED);
    if (asSkipped) {
      return {
        type: 'SKIPPED',
        count: Number.parseInt(asSkipped[1], 10)
      };
    }
  }
  function parseHermesStack(stack) {
    var lines = stack.split(/\n/);
    var entries = [];
    var lastMessageLine = -1;
    for (var i = 0; i < lines.length; ++i) {
      var line = lines[i];
      if (!line) {
        continue;
      }
      var entry = parseLine(line);
      if (entry) {
        entries.push(entry);
        continue;
      }
      if (RE_COMPONENT_NO_STACK.test(line)) {
        continue;
      }
      lastMessageLine = i;
      entries = [];
    }
    var message = lines.slice(0, lastMessageLine + 1).join('\n');
    return {
      message: message,
      entries: entries
    };
  }
},166,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeExceptionsManager = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeExceptionsManager).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeExceptionsManager[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeExceptionsManager[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeExceptionsManager.default;
},167,[168]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var NativeModule = TurboModuleRegistry.getEnforcing('ExceptionsManager');
  var ExceptionsManager = {
    reportFatalException: function reportFatalException(message, stack, exceptionId) {
      NativeModule.reportFatalException(message, stack, exceptionId);
    },
    reportSoftException: function reportSoftException(message, stack, exceptionId) {
      NativeModule.reportSoftException(message, stack, exceptionId);
    },
    dismissRedbox: function dismissRedbox() {
      if (NativeModule.dismissRedbox) {
        NativeModule.dismissRedbox();
      }
    },
    reportException: function reportException(data) {
      if (NativeModule.reportException) {
        NativeModule.reportException(data);
        return;
      }
      if (data.isFatal) {
        ExceptionsManager.reportFatalException(data.message, data.stack, data.id);
      } else {
        ExceptionsManager.reportSoftException(data.message, data.stack, data.id);
      }
    }
  };
  var _default = exports.default = ExceptionsManager;
},168,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var hasNativeGenerator;
  try {
    hasNativeGenerator = _$$_REQUIRE(_dependencyMap[0]).hasNativeConstructor(function* () {}, 'GeneratorFunction');
  } catch (_unused) {
    hasNativeGenerator = false;
  }
  if (!hasNativeGenerator) {
    _$$_REQUIRE(_dependencyMap[1]).polyfillGlobal('regeneratorRuntime', function () {
      delete global.regeneratorRuntime;
      return _$$_REQUIRE(_dependencyMap[2]);
    });
  }
},169,[170,65,171]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.hasNativeConstructor = hasNativeConstructor;
  exports.isNativeFunction = isNativeFunction;
  function isNativeFunction(f) {
    return typeof f === 'function' && f.toString().indexOf('[native code]') > -1;
  }
  function hasNativeConstructor(o, expectedName) {
    var con = Object.getPrototypeOf(o).constructor;
    return con.name === expectedName && isNativeFunction(con);
  }
},170,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /**
   * Copyright (c) 2014-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  var runtime = function (exports) {
    "use strict";

    var Op = Object.prototype;
    var hasOwn = Op.hasOwnProperty;
    var defineProperty = Object.defineProperty || function (obj, key, desc) {
      obj[key] = desc.value;
    };
    var undefined; // More compressible than void 0.
    var $Symbol = typeof Symbol === "function" ? Symbol : {};
    var iteratorSymbol = $Symbol.iterator || "@@iterator";
    var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
    var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
    function define(obj, key, value) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
      return obj[key];
    }
    try {
      // IE 8 has a broken Object.defineProperty that only works on DOM objects.
      define({}, "");
    } catch (err) {
      define = function define(obj, key, value) {
        return obj[key] = value;
      };
    }
    function wrap(innerFn, outerFn, self, tryLocsList) {
      // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
      var generator = Object.create(protoGenerator.prototype);
      var context = new Context(tryLocsList || []);

      // The ._invoke method unifies the implementations of the .next,
      // .throw, and .return methods.
      defineProperty(generator, "_invoke", {
        value: makeInvokeMethod(innerFn, self, context)
      });
      return generator;
    }
    exports.wrap = wrap;

    // Try/catch helper to minimize deoptimizations. Returns a completion
    // record like context.tryEntries[i].completion. This interface could
    // have been (and was previously) designed to take a closure to be
    // invoked without arguments, but in all the cases we care about we
    // already have an existing method we want to call, so there's no need
    // to create a new function object. We can even get away with assuming
    // the method takes exactly one argument, since that happens to be true
    // in every case, so we don't have to touch the arguments object. The
    // only additional allocation required is the completion record, which
    // has a stable shape and so hopefully should be cheap to allocate.
    function tryCatch(fn, obj, arg) {
      try {
        return {
          type: "normal",
          arg: fn.call(obj, arg)
        };
      } catch (err) {
        return {
          type: "throw",
          arg: err
        };
      }
    }
    var GenStateSuspendedStart = "suspendedStart";
    var GenStateSuspendedYield = "suspendedYield";
    var GenStateExecuting = "executing";
    var GenStateCompleted = "completed";

    // Returning this object from the innerFn has the same effect as
    // breaking out of the dispatch switch statement.
    var ContinueSentinel = {};

    // Dummy constructor functions that we use as the .constructor and
    // .constructor.prototype properties for functions that return Generator
    // objects. For full spec compliance, you may wish to configure your
    // minifier not to mangle the names of these two functions.
    function Generator() {}
    function GeneratorFunction() {}
    function GeneratorFunctionPrototype() {}

    // This is a polyfill for %IteratorPrototype% for environments that
    // don't natively support it.
    var IteratorPrototype = {};
    define(IteratorPrototype, iteratorSymbol, function () {
      return this;
    });
    var getProto = Object.getPrototypeOf;
    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
      // This environment has a native %IteratorPrototype%; use it instead
      // of the polyfill.
      IteratorPrototype = NativeIteratorPrototype;
    }
    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
    GeneratorFunction.prototype = GeneratorFunctionPrototype;
    defineProperty(Gp, "constructor", {
      value: GeneratorFunctionPrototype,
      configurable: true
    });
    defineProperty(GeneratorFunctionPrototype, "constructor", {
      value: GeneratorFunction,
      configurable: true
    });
    GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction");

    // Helper for defining the .next, .throw, and .return methods of the
    // Iterator interface in terms of a single ._invoke method.
    function defineIteratorMethods(prototype) {
      ["next", "throw", "return"].forEach(function (method) {
        define(prototype, method, function (arg) {
          return this._invoke(method, arg);
        });
      });
    }
    exports.isGeneratorFunction = function (genFun) {
      var ctor = typeof genFun === "function" && genFun.constructor;
      return ctor ? ctor === GeneratorFunction ||
      // For the native GeneratorFunction constructor, the best we can
      // do is to check its .name property.
      (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
    };
    exports.mark = function (genFun) {
      if (Object.setPrototypeOf) {
        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
      } else {
        genFun.__proto__ = GeneratorFunctionPrototype;
        define(genFun, toStringTagSymbol, "GeneratorFunction");
      }
      genFun.prototype = Object.create(Gp);
      return genFun;
    };

    // Within the body of any async function, `await x` is transformed to
    // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
    // `hasOwn.call(value, "__await")` to determine if the yielded value is
    // meant to be awaited.
    exports.awrap = function (arg) {
      return {
        __await: arg
      };
    };
    function AsyncIterator(generator, PromiseImpl) {
      function invoke(method, arg, resolve, reject) {
        var record = tryCatch(generator[method], generator, arg);
        if (record.type === "throw") {
          reject(record.arg);
        } else {
          var result = record.arg;
          var value = result.value;
          if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
            return PromiseImpl.resolve(value.__await).then(function (value) {
              invoke("next", value, resolve, reject);
            }, function (err) {
              invoke("throw", err, resolve, reject);
            });
          }
          return PromiseImpl.resolve(value).then(function (unwrapped) {
            // When a yielded Promise is resolved, its final value becomes
            // the .value of the Promise<{value,done}> result for the
            // current iteration.
            result.value = unwrapped;
            resolve(result);
          }, function (error) {
            // If a rejected Promise was yielded, throw the rejection back
            // into the async generator function so it can be handled there.
            return invoke("throw", error, resolve, reject);
          });
        }
      }
      var previousPromise;
      function enqueue(method, arg) {
        function callInvokeWithMethodAndArg() {
          return new PromiseImpl(function (resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }
        return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(callInvokeWithMethodAndArg,
        // Avoid propagating failures to Promises returned by later
        // invocations of the iterator.
        callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }

      // Define the unified helper method that is used to implement .next,
      // .throw, and .return (see defineIteratorMethods).
      defineProperty(this, "_invoke", {
        value: enqueue
      });
    }
    defineIteratorMethods(AsyncIterator.prototype);
    define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
      return this;
    });
    exports.AsyncIterator = AsyncIterator;

    // Note that simple async functions are implemented on top of
    // AsyncIterator objects; they just return a Promise for the value of
    // the final result produced by the iterator.
    exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
      if (PromiseImpl === undefined) PromiseImpl = Promise;
      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
      return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function (result) {
        return result.done ? result.value : iter.next();
      });
    };
    function makeInvokeMethod(innerFn, self, context) {
      var state = GenStateSuspendedStart;
      return function invoke(method, arg) {
        if (state === GenStateExecuting) {
          throw new Error("Generator is already running");
        }
        if (state === GenStateCompleted) {
          if (method === "throw") {
            throw arg;
          }

          // Be forgiving, per 25.3.3.3.3 of the spec:
          // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
          return doneResult();
        }
        context.method = method;
        context.arg = arg;
        while (true) {
          var delegate = context.delegate;
          if (delegate) {
            var delegateResult = maybeInvokeDelegate(delegate, context);
            if (delegateResult) {
              if (delegateResult === ContinueSentinel) continue;
              return delegateResult;
            }
          }
          if (context.method === "next") {
            // Setting context._sent for legacy support of Babel's
            // function.sent implementation.
            context.sent = context._sent = context.arg;
          } else if (context.method === "throw") {
            if (state === GenStateSuspendedStart) {
              state = GenStateCompleted;
              throw context.arg;
            }
            context.dispatchException(context.arg);
          } else if (context.method === "return") {
            context.abrupt("return", context.arg);
          }
          state = GenStateExecuting;
          var record = tryCatch(innerFn, self, context);
          if (record.type === "normal") {
            // If an exception is thrown from innerFn, we leave state ===
            // GenStateExecuting and loop back for another invocation.
            state = context.done ? GenStateCompleted : GenStateSuspendedYield;
            if (record.arg === ContinueSentinel) {
              continue;
            }
            return {
              value: record.arg,
              done: context.done
            };
          } else if (record.type === "throw") {
            state = GenStateCompleted;
            // Dispatch the exception by looping back around to the
            // context.dispatchException(context.arg) call above.
            context.method = "throw";
            context.arg = record.arg;
          }
        }
      };
    }

    // Call delegate.iterator[context.method](context.arg) and handle the
    // result, either by returning a { value, done } result from the
    // delegate iterator, or by modifying context.method and context.arg,
    // setting context.delegate to null, and returning the ContinueSentinel.
    function maybeInvokeDelegate(delegate, context) {
      var methodName = context.method;
      var method = delegate.iterator[methodName];
      if (method === undefined) {
        // A .throw or .return when the delegate iterator has no .throw
        // method, or a missing .next mehtod, always terminate the
        // yield* loop.
        context.delegate = null;

        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (methodName === "throw" && delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);
          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }
        if (methodName !== "return") {
          context.method = "throw";
          context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method");
        }
        return ContinueSentinel;
      }
      var record = tryCatch(method, delegate.iterator, context.arg);
      if (record.type === "throw") {
        context.method = "throw";
        context.arg = record.arg;
        context.delegate = null;
        return ContinueSentinel;
      }
      var info = record.arg;
      if (!info) {
        context.method = "throw";
        context.arg = new TypeError("iterator result is not an object");
        context.delegate = null;
        return ContinueSentinel;
      }
      if (info.done) {
        // Assign the result of the finished delegate to the temporary
        // variable specified by delegate.resultName (see delegateYield).
        context[delegate.resultName] = info.value;

        // Resume execution at the desired location (see delegateYield).
        context.next = delegate.nextLoc;

        // If context.method was "throw" but the delegate handled the
        // exception, let the outer generator proceed normally. If
        // context.method was "next", forget context.arg since it has been
        // "consumed" by the delegate iterator. If context.method was
        // "return", allow the original .return call to continue in the
        // outer generator.
        if (context.method !== "return") {
          context.method = "next";
          context.arg = undefined;
        }
      } else {
        // Re-yield the result returned by the delegate method.
        return info;
      }

      // The delegate iterator is finished, so forget it and continue with
      // the outer generator.
      context.delegate = null;
      return ContinueSentinel;
    }

    // Define Generator.prototype.{next,throw,return} in terms of the
    // unified ._invoke helper method.
    defineIteratorMethods(Gp);
    define(Gp, toStringTagSymbol, "Generator");

    // A Generator should always return itself as the iterator object when the
    // @@iterator function is called on it. Some browsers' implementations of the
    // iterator prototype chain incorrectly implement this, causing the Generator
    // object to not be returned from this call. This ensures that doesn't happen.
    // See https://github.com/facebook/regenerator/issues/274 for more details.
    define(Gp, iteratorSymbol, function () {
      return this;
    });
    define(Gp, "toString", function () {
      return "[object Generator]";
    });
    function pushTryEntry(locs) {
      var entry = {
        tryLoc: locs[0]
      };
      if (1 in locs) {
        entry.catchLoc = locs[1];
      }
      if (2 in locs) {
        entry.finallyLoc = locs[2];
        entry.afterLoc = locs[3];
      }
      this.tryEntries.push(entry);
    }
    function resetTryEntry(entry) {
      var record = entry.completion || {};
      record.type = "normal";
      delete record.arg;
      entry.completion = record;
    }
    function Context(tryLocsList) {
      // The root entry object (effectively a try statement without a catch
      // or a finally block) gives us a place to store values thrown from
      // locations where there is no enclosing try statement.
      this.tryEntries = [{
        tryLoc: "root"
      }];
      tryLocsList.forEach(pushTryEntry, this);
      this.reset(true);
    }
    exports.keys = function (val) {
      var object = Object(val);
      var keys = [];
      for (var key in object) {
        keys.push(key);
      }
      keys.reverse();

      // Rather than returning an object with a next method, we keep
      // things simple and return the next function itself.
      return function next() {
        while (keys.length) {
          var key = keys.pop();
          if (key in object) {
            next.value = key;
            next.done = false;
            return next;
          }
        }

        // To avoid creating an additional object, we just hang the .value
        // and .done properties off the next function object itself. This
        // also ensures that the minifier will not anonymize the function.
        next.done = true;
        return next;
      };
    };
    function values(iterable) {
      if (iterable) {
        var iteratorMethod = iterable[iteratorSymbol];
        if (iteratorMethod) {
          return iteratorMethod.call(iterable);
        }
        if (typeof iterable.next === "function") {
          return iterable;
        }
        if (!isNaN(iterable.length)) {
          var i = -1,
            next = function next() {
              while (++i < iterable.length) {
                if (hasOwn.call(iterable, i)) {
                  next.value = iterable[i];
                  next.done = false;
                  return next;
                }
              }
              next.value = undefined;
              next.done = true;
              return next;
            };
          return next.next = next;
        }
      }

      // Return an iterator with no values.
      return {
        next: doneResult
      };
    }
    exports.values = values;
    function doneResult() {
      return {
        value: undefined,
        done: true
      };
    }
    Context.prototype = {
      constructor: Context,
      reset: function reset(skipTempReset) {
        this.prev = 0;
        this.next = 0;
        // Resetting context._sent for legacy support of Babel's
        // function.sent implementation.
        this.sent = this._sent = undefined;
        this.done = false;
        this.delegate = null;
        this.method = "next";
        this.arg = undefined;
        this.tryEntries.forEach(resetTryEntry);
        if (!skipTempReset) {
          for (var name in this) {
            // Not sure about the optimal order of these conditions:
            if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
              this[name] = undefined;
            }
          }
        }
      },
      stop: function stop() {
        this.done = true;
        var rootEntry = this.tryEntries[0];
        var rootRecord = rootEntry.completion;
        if (rootRecord.type === "throw") {
          throw rootRecord.arg;
        }
        return this.rval;
      },
      dispatchException: function dispatchException(exception) {
        if (this.done) {
          throw exception;
        }
        var context = this;
        function handle(loc, caught) {
          record.type = "throw";
          record.arg = exception;
          context.next = loc;
          if (caught) {
            // If the dispatched exception was caught by a catch block,
            // then let that catch block handle the exception normally.
            context.method = "next";
            context.arg = undefined;
          }
          return !!caught;
        }
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          var record = entry.completion;
          if (entry.tryLoc === "root") {
            // Exception thrown outside of any try block that could handle
            // it, so set the completion value of the entire function to
            // throw the exception.
            return handle("end");
          }
          if (entry.tryLoc <= this.prev) {
            var hasCatch = hasOwn.call(entry, "catchLoc");
            var hasFinally = hasOwn.call(entry, "finallyLoc");
            if (hasCatch && hasFinally) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              } else if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else if (hasCatch) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              }
            } else if (hasFinally) {
              if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else {
              throw new Error("try statement without catch or finally");
            }
          }
        }
      },
      abrupt: function abrupt(type, arg) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
            var finallyEntry = entry;
            break;
          }
        }
        if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
          // Ignore the finally entry if control is not jumping to a
          // location outside the try/catch block.
          finallyEntry = null;
        }
        var record = finallyEntry ? finallyEntry.completion : {};
        record.type = type;
        record.arg = arg;
        if (finallyEntry) {
          this.method = "next";
          this.next = finallyEntry.finallyLoc;
          return ContinueSentinel;
        }
        return this.complete(record);
      },
      complete: function complete(record, afterLoc) {
        if (record.type === "throw") {
          throw record.arg;
        }
        if (record.type === "break" || record.type === "continue") {
          this.next = record.arg;
        } else if (record.type === "return") {
          this.rval = this.arg = record.arg;
          this.method = "return";
          this.next = "end";
        } else if (record.type === "normal" && afterLoc) {
          this.next = afterLoc;
        }
        return ContinueSentinel;
      },
      finish: function finish(finallyLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          if (entry.finallyLoc === finallyLoc) {
            this.complete(entry.completion, entry.afterLoc);
            resetTryEntry(entry);
            return ContinueSentinel;
          }
        }
      },
      "catch": function _catch(tryLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          if (entry.tryLoc === tryLoc) {
            var record = entry.completion;
            if (record.type === "throw") {
              var thrown = record.arg;
              resetTryEntry(entry);
            }
            return thrown;
          }
        }

        // The context.catch method must only be called with a location
        // argument that corresponds to a known catch block.
        throw new Error("illegal catch attempt");
      },
      delegateYield: function delegateYield(iterable, resultName, nextLoc) {
        this.delegate = {
          iterator: values(iterable),
          resultName: resultName,
          nextLoc: nextLoc
        };
        if (this.method === "next") {
          // Deliberately forget the last sent value so that we don't
          // accidentally pass it on to the delegate.
          this.arg = undefined;
        }
        return ContinueSentinel;
      }
    };

    // Regardless of whether this script is executing as a CommonJS module
    // or not, return the runtime object so that we can declare the variable
    // regeneratorRuntime in the outer scope, which allows this module to be
    // injected easily by `bin/regenerator --include-runtime script.js`.
    return exports;
  }(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
  typeof module === "object" ? module.exports : {});
  try {
    regeneratorRuntime = runtime;
  } catch (accidentalStrictMode) {
    // This module should not be running in strict mode, so the above
    // assignment should always work unless something is misconfigured. Just
    // in case runtime.js accidentally runs in strict mode, in modern engines
    // we can explicitly access globalThis. In older engines we can escape
    // strict mode using a global Function call. This could conceivably fail
    // if a Content Security Policy forbids using Function, but in that case
    // the proper solution is to fix the accidental strict mode problem. If
    // you've misconfigured your bundler to force strict mode and applied a
    // CSP to forbid Function, and you're not willing to fix either of those
    // problems, please detail your unique predicament in a GitHub issue.
    if (typeof globalThis === "object") {
      globalThis.regeneratorRuntime = runtime;
    } else {
      Function("r", "regeneratorRuntime = r")(runtime);
    }
  }
},171,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal('XMLHttpRequest', function () {
    return _$$_REQUIRE(_dependencyMap[1]).default;
  });
  _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal('FormData', function () {
    return _$$_REQUIRE(_dependencyMap[2]).default;
  });
  _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal('fetch', function () {
    return _$$_REQUIRE(_dependencyMap[3]).fetch;
  });
  _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal('Headers', function () {
    return _$$_REQUIRE(_dependencyMap[3]).Headers;
  });
  _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal('Request', function () {
    return _$$_REQUIRE(_dependencyMap[3]).Request;
  });
  _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal('Response', function () {
    return _$$_REQUIRE(_dependencyMap[3]).Response;
  });
  _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal('WebSocket', function () {
    return _$$_REQUIRE(_dependencyMap[4]).default;
  });
  _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal('Blob', function () {
    return _$$_REQUIRE(_dependencyMap[5]).default;
  });
  _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal('File', function () {
    return _$$_REQUIRE(_dependencyMap[6]).default;
  });
  _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal('FileReader', function () {
    return _$$_REQUIRE(_dependencyMap[7]).default;
  });
  _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal('URL', function () {
    return _$$_REQUIRE(_dependencyMap[8]).URL;
  });
  _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal('URLSearchParams', function () {
    return _$$_REQUIRE(_dependencyMap[8]).URLSearchParams;
  });
  _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal('AbortController', function () {
    return _$$_REQUIRE(_dependencyMap[9]).AbortController;
  });
  _$$_REQUIRE(_dependencyMap[0]).polyfillGlobal('AbortSignal', function () {
    return _$$_REQUIRE(_dependencyMap[9]).AbortSignal;
  });
},172,[65,173,193,199,201,183,211,212,217,219]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var useBuiltInEventTarget = global.RN$useBuiltInEventTarget == null ? undefined : global.RN$useBuiltInEventTarget();
  var _default = exports.default = useBuiltInEventTarget ? _$$_REQUIRE(_dependencyMap[0]).default : _$$_REQUIRE(_dependencyMap[1]).default;
},173,[174,197]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _Event = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _EventTarget3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _ProgressEvent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && "function" == typeof p ? function (t) { return p.apply(e, t); } : p; }
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var DEBUG_NETWORK_SEND_DELAY = false;
  var LABEL_FOR_MISSING_URL_FOR_PROFILING = 'Unknown URL';
  if (_$$_REQUIRE(_dependencyMap[11]).default.isAvailable) {
    _$$_REQUIRE(_dependencyMap[11]).default.addNetworkingHandler();
  }
  var UNSENT = 0;
  var OPENED = 1;
  var HEADERS_RECEIVED = 2;
  var LOADING = 3;
  var DONE = 4;
  var SUPPORTED_RESPONSE_TYPES = {
    arraybuffer: typeof global.ArrayBuffer === 'function',
    blob: typeof global.Blob === 'function',
    document: false,
    json: true,
    text: true,
    '': true
  };
  var XMLHttpRequestEventTarget = /*#__PURE__*/function (_EventTarget) {
    function XMLHttpRequestEventTarget() {
      (0, _classCallCheck2.default)(this, XMLHttpRequestEventTarget);
      return _callSuper(this, XMLHttpRequestEventTarget, arguments);
    }
    (0, _inherits2.default)(XMLHttpRequestEventTarget, _EventTarget);
    return (0, _createClass2.default)(XMLHttpRequestEventTarget, [{
      key: "onload",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[12]).getEventHandlerAttribute)(this, 'load');
      },
      set: function set(listener) {
        (0, _$$_REQUIRE(_dependencyMap[12]).setEventHandlerAttribute)(this, 'load', listener);
      }
    }, {
      key: "onloadstart",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[12]).getEventHandlerAttribute)(this, 'loadstart');
      },
      set: function set(listener) {
        (0, _$$_REQUIRE(_dependencyMap[12]).setEventHandlerAttribute)(this, 'loadstart', listener);
      }
    }, {
      key: "onprogress",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[12]).getEventHandlerAttribute)(this, 'progress');
      },
      set: function set(listener) {
        (0, _$$_REQUIRE(_dependencyMap[12]).setEventHandlerAttribute)(this, 'progress', listener);
      }
    }, {
      key: "ontimeout",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[12]).getEventHandlerAttribute)(this, 'timeout');
      },
      set: function set(listener) {
        (0, _$$_REQUIRE(_dependencyMap[12]).setEventHandlerAttribute)(this, 'timeout', listener);
      }
    }, {
      key: "onerror",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[12]).getEventHandlerAttribute)(this, 'error');
      },
      set: function set(listener) {
        (0, _$$_REQUIRE(_dependencyMap[12]).setEventHandlerAttribute)(this, 'error', listener);
      }
    }, {
      key: "onabort",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[12]).getEventHandlerAttribute)(this, 'abort');
      },
      set: function set(listener) {
        (0, _$$_REQUIRE(_dependencyMap[12]).setEventHandlerAttribute)(this, 'abort', listener);
      }
    }, {
      key: "onloadend",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[12]).getEventHandlerAttribute)(this, 'loadend');
      },
      set: function set(listener) {
        (0, _$$_REQUIRE(_dependencyMap[12]).setEventHandlerAttribute)(this, 'loadend', listener);
      }
    }]);
  }(_EventTarget3.default);
  var XMLHttpRequest = /*#__PURE__*/function (_EventTarget2) {
    function XMLHttpRequest() {
      var _this;
      (0, _classCallCheck2.default)(this, XMLHttpRequest);
      _this = _callSuper(this, XMLHttpRequest);
      _this.UNSENT = UNSENT;
      _this.OPENED = OPENED;
      _this.HEADERS_RECEIVED = HEADERS_RECEIVED;
      _this.LOADING = LOADING;
      _this.DONE = DONE;
      _this.readyState = UNSENT;
      _this.status = 0;
      _this.timeout = 0;
      _this.withCredentials = true;
      _this.upload = new XMLHttpRequestEventTarget();
      _this._aborted = false;
      _this._hasError = false;
      _this._method = null;
      _this._perfKey = null;
      _this._response = '';
      _this._url = null;
      _this._timedOut = false;
      _this._trackingName = null;
      _this._incrementalEvents = false;
      _this._startTime = null;
      _this._performanceLogger = _$$_REQUIRE(_dependencyMap[13]).default;
      _this._reset();
      return _this;
    }
    (0, _inherits2.default)(XMLHttpRequest, _EventTarget2);
    return (0, _createClass2.default)(XMLHttpRequest, [{
      key: "_reset",
      value: function _reset() {
        this.readyState = this.UNSENT;
        this.responseHeaders = undefined;
        this.status = 0;
        delete this.responseURL;
        this._requestId = null;
        this._cachedResponse = undefined;
        this._hasError = false;
        this._headers = {};
        this._response = '';
        this._responseType = '';
        this._sent = false;
        this._lowerCaseResponseHeaders = {};
        this._clearSubscriptions();
        this._timedOut = false;
      }
    }, {
      key: "responseType",
      get: function get() {
        return this._responseType;
      },
      set: function set(responseType) {
        if (this._sent) {
          throw new Error("Failed to set the 'responseType' property on 'XMLHttpRequest': The response type cannot be set after the request has been sent.");
        }
        if (!SUPPORTED_RESPONSE_TYPES.hasOwnProperty(responseType)) {
          console.warn(`The provided value '${responseType}' is not a valid 'responseType'.`);
          return;
        }
        _$$_REQUIRE(_dependencyMap[14])(SUPPORTED_RESPONSE_TYPES[responseType] || responseType === 'document', `The provided value '${responseType}' is unsupported in this environment.`);
        if (responseType === 'blob') {
          _$$_REQUIRE(_dependencyMap[14])(_$$_REQUIRE(_dependencyMap[11]).default.isAvailable, 'Native module BlobModule is required for blob support');
        }
        this._responseType = responseType;
      }
    }, {
      key: "responseText",
      get: function get() {
        if (this._responseType !== '' && this._responseType !== 'text') {
          throw new Error("The 'responseText' property is only available if 'responseType' " + `is set to '' or 'text', but it is '${this._responseType}'.`);
        }
        if (this.readyState < LOADING) {
          return '';
        }
        return this._response;
      }
    }, {
      key: "response",
      get: function get() {
        var responseType = this.responseType;
        if (responseType === '' || responseType === 'text') {
          return this.readyState < LOADING || this._hasError ? '' : this._response;
        }
        if (this.readyState !== DONE) {
          return null;
        }
        if (this._cachedResponse !== undefined) {
          return this._cachedResponse;
        }
        switch (responseType) {
          case 'document':
            this._cachedResponse = null;
            break;
          case 'arraybuffer':
            this._cachedResponse = _$$_REQUIRE(_dependencyMap[15]).toByteArray(this._response).buffer;
            break;
          case 'blob':
            if (typeof this._response === 'object' && this._response) {
              this._cachedResponse = _$$_REQUIRE(_dependencyMap[11]).default.createFromOptions(this._response);
            } else if (this._response === '') {
              this._cachedResponse = _$$_REQUIRE(_dependencyMap[11]).default.createFromParts([]);
            } else {
              throw new Error('Invalid response for blob - expecting object, was ' + `${typeof this._response}: ${this._response.trim()}`);
            }
            break;
          case 'json':
            try {
              this._cachedResponse = JSON.parse(this._response);
            } catch (_) {
              this._cachedResponse = null;
            }
            break;
          default:
            this._cachedResponse = null;
        }
        return this._cachedResponse;
      }
    }, {
      key: "__didCreateRequest",
      value: function __didCreateRequest(requestId) {
        this._requestId = requestId;
        XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.requestSent(requestId, this._url || '', this._method || 'GET', this._headers);
      }
    }, {
      key: "__didUploadProgress",
      value: function __didUploadProgress(requestId, progress, total) {
        if (requestId === this._requestId) {
          (0, _$$_REQUIRE(_dependencyMap[16]).dispatchTrustedEvent)(this.upload, new _ProgressEvent.default('progress', {
            lengthComputable: true,
            loaded: progress,
            total: total
          }));
        }
      }
    }, {
      key: "__didReceiveResponse",
      value: function __didReceiveResponse(requestId, status, responseHeaders, responseURL) {
        if (requestId === this._requestId) {
          this._perfKey != null && this._performanceLogger.stopTimespan(this._perfKey);
          this.status = status;
          this.setResponseHeaders(responseHeaders);
          this.setReadyState(this.HEADERS_RECEIVED);
          if (responseURL || responseURL === '') {
            this.responseURL = responseURL;
          } else {
            delete this.responseURL;
          }
          XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.responseReceived(requestId, responseURL || this._url || '', status, responseHeaders || {});
        }
      }
    }, {
      key: "__didReceiveData",
      value: function __didReceiveData(requestId, response) {
        if (requestId !== this._requestId) {
          return;
        }
        this._response = response;
        this._cachedResponse = undefined;
        this.setReadyState(this.LOADING);
        XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.dataReceived(requestId, response);
      }
    }, {
      key: "__didReceiveIncrementalData",
      value: function __didReceiveIncrementalData(requestId, responseText, progress, total) {
        if (requestId !== this._requestId) {
          return;
        }
        if (!this._response) {
          this._response = responseText;
        } else {
          this._response += responseText;
        }
        if (XMLHttpRequest._profiling) {
          performance.mark('Track:XMLHttpRequest:Incremental Data: ' + this._getMeasureURL());
        }
        XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.dataReceived(requestId, responseText);
        this.setReadyState(this.LOADING);
        this.__didReceiveDataProgress(requestId, progress, total);
      }
    }, {
      key: "__didReceiveDataProgress",
      value: function __didReceiveDataProgress(requestId, loaded, total) {
        if (requestId !== this._requestId) {
          return;
        }
        (0, _$$_REQUIRE(_dependencyMap[16]).dispatchTrustedEvent)(this, new _ProgressEvent.default('progress', {
          lengthComputable: total >= 0,
          loaded: loaded,
          total: total
        }));
      }
    }, {
      key: "__didCompleteResponse",
      value: function __didCompleteResponse(requestId, error, timeOutError) {
        if (requestId === this._requestId) {
          if (error) {
            if (this._responseType === '' || this._responseType === 'text') {
              this._response = error;
            }
            this._hasError = true;
            if (timeOutError) {
              this._timedOut = true;
            }
          }
          this._clearSubscriptions();
          this._requestId = null;
          this.setReadyState(this.DONE);
          if (XMLHttpRequest._profiling && this._startTime != null) {
            var start = this._startTime;
            performance.measure('Track:XMLHttpRequest:' + this._getMeasureURL(), {
              start: start,
              end: performance.now()
            });
          }
          if (error) {
            XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.loadingFailed(requestId, error);
          } else {
            XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.loadingFinished(requestId, this._response.length);
          }
        }
      }
    }, {
      key: "_clearSubscriptions",
      value: function _clearSubscriptions() {
        (this._subscriptions || []).forEach(function (sub) {
          if (sub) {
            sub.remove();
          }
        });
        this._subscriptions = [];
      }
    }, {
      key: "getAllResponseHeaders",
      value: function getAllResponseHeaders() {
        if (!this.responseHeaders) {
          return null;
        }
        var responseHeaders = this.responseHeaders;
        var unsortedHeaders = new Map();
        for (var rawHeaderName of Object.keys(responseHeaders)) {
          var headerValue = responseHeaders[rawHeaderName];
          var lowerHeaderName = rawHeaderName.toLowerCase();
          var header = unsortedHeaders.get(lowerHeaderName);
          if (header) {
            header.headerValue += ', ' + headerValue;
            unsortedHeaders.set(lowerHeaderName, header);
          } else {
            unsortedHeaders.set(lowerHeaderName, {
              lowerHeaderName: lowerHeaderName,
              upperHeaderName: rawHeaderName.toUpperCase(),
              headerValue: headerValue
            });
          }
        }
        var sortedHeaders = (0, _toConsumableArray2.default)(unsortedHeaders.values()).sort(function (a, b) {
          if (a.upperHeaderName < b.upperHeaderName) {
            return -1;
          }
          if (a.upperHeaderName > b.upperHeaderName) {
            return 1;
          }
          return 0;
        });
        return sortedHeaders.map(function (header) {
          return header.lowerHeaderName + ': ' + header.headerValue;
        }).join('\r\n') + '\r\n';
      }
    }, {
      key: "getResponseHeader",
      value: function getResponseHeader(header) {
        var value = this._lowerCaseResponseHeaders[header.toLowerCase()];
        return value !== undefined ? value : null;
      }
    }, {
      key: "setRequestHeader",
      value: function setRequestHeader(header, value) {
        if (this.readyState !== this.OPENED) {
          throw new Error('Request has not been opened');
        }
        this._headers[header.toLowerCase()] = String(value);
      }
    }, {
      key: "setTrackingName",
      value: function setTrackingName(trackingName) {
        this._trackingName = trackingName;
        return this;
      }
    }, {
      key: "setPerformanceLogger",
      value: function setPerformanceLogger(performanceLogger) {
        this._performanceLogger = performanceLogger;
        return this;
      }
    }, {
      key: "open",
      value: function open(method, url, async) {
        if (this.readyState !== this.UNSENT) {
          throw new Error('Cannot open, already sending');
        }
        if (async !== undefined && !async) {
          throw new Error('Synchronous http requests are not supported');
        }
        if (!url) {
          throw new Error('Cannot load an empty url');
        }
        this._method = method.toUpperCase();
        this._url = url;
        this._aborted = false;
        this.setReadyState(this.OPENED);
      }
    }, {
      key: "send",
      value: function send(data) {
        var _this2 = this;
        if (this.readyState !== this.OPENED) {
          throw new Error('Request has not been opened');
        }
        if (this._sent) {
          throw new Error('Request has already been sent');
        }
        this._sent = true;
        var incrementalEvents = this._incrementalEvents || !!this.onreadystatechange || !!this.onprogress;
        this._subscriptions.push(_$$_REQUIRE(_dependencyMap[17]).default.addListener('didSendNetworkData', function (args) {
          return _this2.__didUploadProgress.apply(_this2, (0, _toConsumableArray2.default)(args));
        }));
        this._subscriptions.push(_$$_REQUIRE(_dependencyMap[17]).default.addListener('didReceiveNetworkResponse', function (args) {
          return _this2.__didReceiveResponse.apply(_this2, (0, _toConsumableArray2.default)(args));
        }));
        this._subscriptions.push(_$$_REQUIRE(_dependencyMap[17]).default.addListener('didReceiveNetworkData', function (args) {
          return _this2.__didReceiveData.apply(_this2, (0, _toConsumableArray2.default)(args));
        }));
        this._subscriptions.push(_$$_REQUIRE(_dependencyMap[17]).default.addListener('didReceiveNetworkIncrementalData', function (args) {
          return _this2.__didReceiveIncrementalData.apply(_this2, (0, _toConsumableArray2.default)(args));
        }));
        this._subscriptions.push(_$$_REQUIRE(_dependencyMap[17]).default.addListener('didReceiveNetworkDataProgress', function (args) {
          return _this2.__didReceiveDataProgress.apply(_this2, (0, _toConsumableArray2.default)(args));
        }));
        this._subscriptions.push(_$$_REQUIRE(_dependencyMap[17]).default.addListener('didCompleteNetworkResponse', function (args) {
          return _this2.__didCompleteResponse.apply(_this2, (0, _toConsumableArray2.default)(args));
        }));
        var nativeResponseType = 'text';
        if (this._responseType === 'arraybuffer') {
          nativeResponseType = 'base64';
        }
        if (this._responseType === 'blob') {
          nativeResponseType = 'blob';
        }
        var doSend = function doSend() {
          var _this2$_trackingName;
          var friendlyName = (_this2$_trackingName = _this2._trackingName) != null ? _this2$_trackingName : _this2._url;
          _this2._perfKey = 'network_XMLHttpRequest_' + String(friendlyName);
          _this2._performanceLogger.startTimespan(_this2._perfKey);
          _this2._startTime = performance.now();
          _$$_REQUIRE(_dependencyMap[14])(_this2._method, 'XMLHttpRequest method needs to be defined (%s).', friendlyName);
          _$$_REQUIRE(_dependencyMap[14])(_this2._url, 'XMLHttpRequest URL needs to be defined (%s).', friendlyName);
          _$$_REQUIRE(_dependencyMap[17]).default.sendRequest(_this2._method, _this2._trackingName, _this2._url, _this2._headers, data, nativeResponseType, incrementalEvents, _this2.timeout, _this2.__didCreateRequest.bind(_this2), _this2.withCredentials);
        };
        {
          doSend();
        }
      }
    }, {
      key: "abort",
      value: function abort() {
        this._aborted = true;
        if (this._requestId) {
          _$$_REQUIRE(_dependencyMap[17]).default.abortRequest(this._requestId);
        }
        if (!(this.readyState === this.UNSENT || this.readyState === this.OPENED && !this._sent || this.readyState === this.DONE)) {
          this._reset();
          this.setReadyState(this.DONE);
        }
        this._reset();
      }
    }, {
      key: "setResponseHeaders",
      value: function setResponseHeaders(responseHeaders) {
        this.responseHeaders = responseHeaders || null;
        var headers = responseHeaders || {};
        this._lowerCaseResponseHeaders = Object.keys(headers).reduce(function (lcaseHeaders, headerName) {
          lcaseHeaders[headerName.toLowerCase()] = headers[headerName];
          return lcaseHeaders;
        }, {});
      }
    }, {
      key: "setReadyState",
      value: function setReadyState(newState) {
        this.readyState = newState;
        (0, _$$_REQUIRE(_dependencyMap[16]).dispatchTrustedEvent)(this, new _Event.default('readystatechange'));
        if (newState === this.DONE) {
          if (this._aborted) {
            (0, _$$_REQUIRE(_dependencyMap[16]).dispatchTrustedEvent)(this, new _Event.default('abort'));
          } else if (this._hasError) {
            if (this._timedOut) {
              (0, _$$_REQUIRE(_dependencyMap[16]).dispatchTrustedEvent)(this, new _Event.default('timeout'));
            } else {
              (0, _$$_REQUIRE(_dependencyMap[16]).dispatchTrustedEvent)(this, new _Event.default('error'));
            }
          } else {
            (0, _$$_REQUIRE(_dependencyMap[16]).dispatchTrustedEvent)(this, new _Event.default('load'));
          }
          (0, _$$_REQUIRE(_dependencyMap[16]).dispatchTrustedEvent)(this, new _Event.default('loadend'));
        }
      }
    }, {
      key: "addEventListener",
      value: function addEventListener(type, listener) {
        if (type === 'readystatechange' || type === 'progress') {
          this._incrementalEvents = true;
        }
        _superPropGet(XMLHttpRequest, "addEventListener", this, 3)([type, listener]);
      }
    }, {
      key: "_getMeasureURL",
      value: function _getMeasureURL() {
        var _ref, _this$_trackingName;
        return (_ref = (_this$_trackingName = this._trackingName) != null ? _this$_trackingName : this._url) != null ? _ref : LABEL_FOR_MISSING_URL_FOR_PROFILING;
      }
    }, {
      key: "onabort",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[12]).getEventHandlerAttribute)(this, 'abort');
      },
      set: function set(listener) {
        (0, _$$_REQUIRE(_dependencyMap[12]).setEventHandlerAttribute)(this, 'abort', listener);
      }
    }, {
      key: "onerror",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[12]).getEventHandlerAttribute)(this, 'error');
      },
      set: function set(listener) {
        (0, _$$_REQUIRE(_dependencyMap[12]).setEventHandlerAttribute)(this, 'error', listener);
      }
    }, {
      key: "onload",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[12]).getEventHandlerAttribute)(this, 'load');
      },
      set: function set(listener) {
        (0, _$$_REQUIRE(_dependencyMap[12]).setEventHandlerAttribute)(this, 'load', listener);
      }
    }, {
      key: "onloadstart",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[12]).getEventHandlerAttribute)(this, 'loadstart');
      },
      set: function set(listener) {
        (0, _$$_REQUIRE(_dependencyMap[12]).setEventHandlerAttribute)(this, 'loadstart', listener);
      }
    }, {
      key: "onprogress",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[12]).getEventHandlerAttribute)(this, 'progress');
      },
      set: function set(listener) {
        (0, _$$_REQUIRE(_dependencyMap[12]).setEventHandlerAttribute)(this, 'progress', listener);
      }
    }, {
      key: "ontimeout",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[12]).getEventHandlerAttribute)(this, 'timeout');
      },
      set: function set(listener) {
        (0, _$$_REQUIRE(_dependencyMap[12]).setEventHandlerAttribute)(this, 'timeout', listener);
      }
    }, {
      key: "onloadend",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[12]).getEventHandlerAttribute)(this, 'loadend');
      },
      set: function set(listener) {
        (0, _$$_REQUIRE(_dependencyMap[12]).setEventHandlerAttribute)(this, 'loadend', listener);
      }
    }, {
      key: "onreadystatechange",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[12]).getEventHandlerAttribute)(this, 'readystatechange');
      },
      set: function set(listener) {
        (0, _$$_REQUIRE(_dependencyMap[12]).setEventHandlerAttribute)(this, 'readystatechange', listener);
      }
    }], [{
      key: "__setInterceptor_DO_NOT_USE",
      value: function __setInterceptor_DO_NOT_USE(interceptor) {
        XMLHttpRequest._interceptor = interceptor;
      }
    }, {
      key: "enableProfiling",
      value: function enableProfiling(_enableProfiling) {
        XMLHttpRequest._profiling = _enableProfiling;
      }
    }]);
  }(_EventTarget3.default);
  XMLHttpRequest.UNSENT = UNSENT;
  XMLHttpRequest.OPENED = OPENED;
  XMLHttpRequest.HEADERS_RECEIVED = HEADERS_RECEIVED;
  XMLHttpRequest.LOADING = LOADING;
  XMLHttpRequest.DONE = DONE;
  XMLHttpRequest._interceptor = null;
  XMLHttpRequest._profiling = false;
  var _default = exports.default = XMLHttpRequest;
},174,[1,6,26,12,13,23,25,28,175,177,179,180,185,186,20,189,178,190]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var Event = exports.default = /*#__PURE__*/function () {
    function Event(type, options) {
      (0, _classCallCheck2.default)(this, Event);
      this._defaultPrevented = false;
      this._timeStamp = performance.now();
      this[_$$_REQUIRE(_dependencyMap[3]).COMPOSED_PATH_KEY] = [];
      this[_$$_REQUIRE(_dependencyMap[3]).CURRENT_TARGET_KEY] = null;
      this[_$$_REQUIRE(_dependencyMap[3]).EVENT_PHASE_KEY] = Event.NONE;
      this[_$$_REQUIRE(_dependencyMap[3]).IN_PASSIVE_LISTENER_FLAG_KEY] = false;
      this[_$$_REQUIRE(_dependencyMap[3]).IS_TRUSTED_KEY] = false;
      this[_$$_REQUIRE(_dependencyMap[3]).STOP_IMMEDIATE_PROPAGATION_FLAG_KEY] = false;
      this[_$$_REQUIRE(_dependencyMap[3]).STOP_PROPAGATION_FLAG_KEY] = false;
      this[_$$_REQUIRE(_dependencyMap[3]).TARGET_KEY] = null;
      if (arguments.length < 1) {
        throw new TypeError("Failed to construct 'Event': 1 argument required, but only 0 present.");
      }
      var typeOfOptions = typeof options;
      if (options != null && typeOfOptions !== 'object' && typeOfOptions !== 'function') {
        throw new TypeError("Failed to construct 'Event': The provided value is not of type 'EventInit'.");
      }
      this._type = String(type);
      this._bubbles = Boolean(options == null ? undefined : options.bubbles);
      this._cancelable = Boolean(options == null ? undefined : options.cancelable);
      this._composed = Boolean(options == null ? undefined : options.composed);
    }
    return (0, _createClass2.default)(Event, [{
      key: "bubbles",
      get: function get() {
        return this._bubbles;
      }
    }, {
      key: "cancelable",
      get: function get() {
        return this._cancelable;
      }
    }, {
      key: "composed",
      get: function get() {
        return this._composed;
      }
    }, {
      key: "currentTarget",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[3]).getCurrentTarget)(this);
      }
    }, {
      key: "defaultPrevented",
      get: function get() {
        return this._defaultPrevented;
      }
    }, {
      key: "eventPhase",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[3]).getEventPhase)(this);
      }
    }, {
      key: "isTrusted",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[3]).getIsTrusted)(this);
      }
    }, {
      key: "target",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[3]).getTarget)(this);
      }
    }, {
      key: "timeStamp",
      get: function get() {
        return this._timeStamp;
      }
    }, {
      key: "type",
      get: function get() {
        return this._type;
      }
    }, {
      key: "composedPath",
      value: function composedPath() {
        return (0, _$$_REQUIRE(_dependencyMap[3]).getComposedPath)(this).slice();
      }
    }, {
      key: "preventDefault",
      value: function preventDefault() {
        if (!this._cancelable) {
          return;
        }
        if ((0, _$$_REQUIRE(_dependencyMap[3]).getInPassiveListenerFlag)(this)) {
          console.error(new Error('Unable to preventDefault inside passive event listener invocation.'));
          return;
        }
        this._defaultPrevented = true;
      }
    }, {
      key: "stopImmediatePropagation",
      value: function stopImmediatePropagation() {
        (0, _$$_REQUIRE(_dependencyMap[3]).setStopPropagationFlag)(this, true);
        (0, _$$_REQUIRE(_dependencyMap[3]).setStopImmediatePropagationFlag)(this, true);
      }
    }, {
      key: "stopPropagation",
      value: function stopPropagation() {
        (0, _$$_REQUIRE(_dependencyMap[3]).setStopPropagationFlag)(this, true);
      }
    }]);
  }();
  Object.defineProperty(Event, 'NONE', {
    enumerable: true,
    value: 0
  });
  Object.defineProperty(Event.prototype, 'NONE', {
    enumerable: true,
    value: 0
  });
  Object.defineProperty(Event, 'CAPTURING_PHASE', {
    enumerable: true,
    value: 1
  });
  Object.defineProperty(Event.prototype, 'CAPTURING_PHASE', {
    enumerable: true,
    value: 1
  });
  Object.defineProperty(Event, 'AT_TARGET', {
    enumerable: true,
    value: 2
  });
  Object.defineProperty(Event.prototype, 'AT_TARGET', {
    enumerable: true,
    value: 2
  });
  Object.defineProperty(Event, 'BUBBLING_PHASE', {
    enumerable: true,
    value: 3
  });
  Object.defineProperty(Event.prototype, 'BUBBLING_PHASE', {
    enumerable: true,
    value: 3
  });
},175,[1,12,13,176]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TARGET_KEY = exports.STOP_PROPAGATION_FLAG_KEY = exports.STOP_IMMEDIATE_PROPAGATION_FLAG_KEY = exports.IS_TRUSTED_KEY = exports.IN_PASSIVE_LISTENER_FLAG_KEY = exports.EVENT_PHASE_KEY = exports.CURRENT_TARGET_KEY = exports.COMPOSED_PATH_KEY = undefined;
  exports.getComposedPath = getComposedPath;
  exports.getCurrentTarget = getCurrentTarget;
  exports.getEventPhase = getEventPhase;
  exports.getInPassiveListenerFlag = getInPassiveListenerFlag;
  exports.getIsTrusted = getIsTrusted;
  exports.getStopImmediatePropagationFlag = getStopImmediatePropagationFlag;
  exports.getStopPropagationFlag = getStopPropagationFlag;
  exports.getTarget = getTarget;
  exports.setComposedPath = setComposedPath;
  exports.setCurrentTarget = setCurrentTarget;
  exports.setEventPhase = setEventPhase;
  exports.setInPassiveListenerFlag = setInPassiveListenerFlag;
  exports.setIsTrusted = setIsTrusted;
  exports.setStopImmediatePropagationFlag = setStopImmediatePropagationFlag;
  exports.setStopPropagationFlag = setStopPropagationFlag;
  exports.setTarget = setTarget;
  var COMPOSED_PATH_KEY = exports.COMPOSED_PATH_KEY = Symbol('composedPath');
  var CURRENT_TARGET_KEY = exports.CURRENT_TARGET_KEY = Symbol('currentTarget');
  var EVENT_PHASE_KEY = exports.EVENT_PHASE_KEY = Symbol('eventPhase');
  var IN_PASSIVE_LISTENER_FLAG_KEY = exports.IN_PASSIVE_LISTENER_FLAG_KEY = Symbol('inPassiveListenerFlag');
  var IS_TRUSTED_KEY = exports.IS_TRUSTED_KEY = Symbol('isTrusted');
  var STOP_IMMEDIATE_PROPAGATION_FLAG_KEY = exports.STOP_IMMEDIATE_PROPAGATION_FLAG_KEY = Symbol('stopPropagationFlag');
  var STOP_PROPAGATION_FLAG_KEY = exports.STOP_PROPAGATION_FLAG_KEY = Symbol('stopPropagationFlag');
  var TARGET_KEY = exports.TARGET_KEY = Symbol('target');
  function getCurrentTarget(event) {
    return event[CURRENT_TARGET_KEY];
  }
  function setCurrentTarget(event, currentTarget) {
    event[CURRENT_TARGET_KEY] = currentTarget;
  }
  function getComposedPath(event) {
    return event[COMPOSED_PATH_KEY];
  }
  function setComposedPath(event, composedPath) {
    event[COMPOSED_PATH_KEY] = composedPath;
  }
  function getEventPhase(event) {
    return event[EVENT_PHASE_KEY];
  }
  function setEventPhase(event, eventPhase) {
    event[EVENT_PHASE_KEY] = eventPhase;
  }
  function getInPassiveListenerFlag(event) {
    return event[IN_PASSIVE_LISTENER_FLAG_KEY];
  }
  function setInPassiveListenerFlag(event, value) {
    event[IN_PASSIVE_LISTENER_FLAG_KEY] = value;
  }
  function getIsTrusted(event) {
    return event[IS_TRUSTED_KEY];
  }
  function setIsTrusted(event, isTrusted) {
    event[IS_TRUSTED_KEY] = isTrusted;
  }
  function getStopImmediatePropagationFlag(event) {
    return event[STOP_IMMEDIATE_PROPAGATION_FLAG_KEY];
  }
  function setStopImmediatePropagationFlag(event, value) {
    event[STOP_IMMEDIATE_PROPAGATION_FLAG_KEY] = value;
  }
  function getStopPropagationFlag(event) {
    return event[STOP_PROPAGATION_FLAG_KEY];
  }
  function setStopPropagationFlag(event, value) {
    event[STOP_PROPAGATION_FLAG_KEY] = value;
  }
  function getTarget(event) {
    return event[TARGET_KEY];
  }
  function setTarget(event, target) {
    event[TARGET_KEY] = target;
  }
},176,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _Event = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var EventTarget = exports.default = /*#__PURE__*/function () {
    function EventTarget() {
      (0, _classCallCheck2.default)(this, EventTarget);
    }
    return (0, _createClass2.default)(EventTarget, [{
      key: "addEventListener",
      value: function addEventListener(type, callback) {
        var _signal, _listenersByType;
        var optionsOrUseCapture = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
        if (arguments.length < 2) {
          throw new TypeError(`Failed to execute 'addEventListener' on 'EventTarget': 2 arguments required, but only ${arguments.length} present.`);
        }
        if (callback == null) {
          return;
        }
        validateCallback(callback, 'addEventListener');
        var processedType = String(type);
        var capture;
        var passive;
        var once;
        var signal;
        if (optionsOrUseCapture != null && (typeof optionsOrUseCapture === 'object' || typeof optionsOrUseCapture === 'function')) {
          capture = Boolean(optionsOrUseCapture.capture);
          passive = optionsOrUseCapture.passive == null ? getDefaultPassiveValue(processedType, this) : Boolean(optionsOrUseCapture.passive);
          once = Boolean(optionsOrUseCapture.once);
          signal = optionsOrUseCapture.signal;
          if (signal !== undefined && !(signal instanceof AbortSignal)) {
            throw new TypeError("Failed to execute 'addEventListener' on 'EventTarget': Failed to read the 'signal' property from 'AddEventListenerOptions': Failed to convert value to 'AbortSignal'.");
          }
        } else {
          capture = Boolean(optionsOrUseCapture);
          passive = false;
          once = false;
          signal = null;
        }
        if ((_signal = signal) != null && _signal.aborted) {
          return;
        }
        var listenersByType = getListenersForPhase(this, capture);
        var listeners = (_listenersByType = listenersByType) == null ? undefined : _listenersByType.get(processedType);
        if (listeners == null) {
          if (listenersByType == null) {
            listenersByType = new Map();
            setListenersMap(this, capture, listenersByType);
          }
          listeners = new Map();
          listenersByType.set(processedType, listeners);
        } else if (listeners.has(callback)) {
          return;
        }
        var listener = {
          callback: callback,
          passive: passive,
          once: once,
          removed: false
        };
        listeners.set(callback, listener);
        var nonNullListeners = listeners;
        if (signal != null) {
          signal.addEventListener('abort', function () {
            listener.removed = true;
            if (nonNullListeners.get(callback) === listener) {
              nonNullListeners.delete(callback);
            }
          }, {
            once: true
          });
        }
      }
    }, {
      key: "removeEventListener",
      value: function removeEventListener(type, callback) {
        var optionsOrUseCapture = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
        if (arguments.length < 2) {
          throw new TypeError(`Failed to execute 'removeEventListener' on 'EventTarget': 2 arguments required, but only ${arguments.length} present.`);
        }
        if (callback == null) {
          return;
        }
        validateCallback(callback, 'removeEventListener');
        var processedType = String(type);
        var capture = typeof optionsOrUseCapture === 'boolean' ? optionsOrUseCapture : Boolean(optionsOrUseCapture.capture);
        var listenersByType = getListenersForPhase(this, capture);
        var listeners = listenersByType == null ? undefined : listenersByType.get(processedType);
        if (listeners == null) {
          return;
        }
        var listener = listeners.get(callback);
        if (listener != null) {
          listener.removed = true;
          listeners.delete(callback);
        }
      }
    }, {
      key: "dispatchEvent",
      value: function dispatchEvent(event) {
        if (!(event instanceof _Event.default)) {
          throw new TypeError("Failed to execute 'dispatchEvent' on 'EventTarget': parameter 1 is not of type 'Event'.");
        }
        if (getEventDispatchFlag(event)) {
          throw new Error("Failed to execute 'dispatchEvent' on 'EventTarget': The event is already being dispatched.");
        }
        (0, _$$_REQUIRE(_dependencyMap[4]).setIsTrusted)(event, false);
        dispatch(this, event);
        return !event.defaultPrevented;
      }
    }, {
      key: _$$_REQUIRE(_dependencyMap[5]).EVENT_TARGET_GET_THE_PARENT_KEY,
      value: function value() {
        return null;
      }
    }, {
      key: _$$_REQUIRE(_dependencyMap[5]).INTERNAL_DISPATCH_METHOD_KEY,
      value: function value(event) {
        dispatch(this, event);
      }
    }]);
  }();
  function validateCallback(callback, methodName) {
    if (typeof callback !== 'function' && typeof callback !== 'object') {
      throw new TypeError(`Failed to execute '${methodName}' on 'EventTarget': parameter 2 is not of type 'Object'.`);
    }
  }
  function getDefaultPassiveValue(type, eventTarget) {
    return false;
  }
  function dispatch(eventTarget, event) {
    setEventDispatchFlag(event, true);
    var eventPath = getEventPath(eventTarget, event);
    (0, _$$_REQUIRE(_dependencyMap[4]).setComposedPath)(event, eventPath);
    (0, _$$_REQUIRE(_dependencyMap[4]).setTarget)(event, eventTarget);
    for (var i = eventPath.length - 1; i >= 0; i--) {
      if ((0, _$$_REQUIRE(_dependencyMap[4]).getStopPropagationFlag)(event)) {
        break;
      }
      var target = eventPath[i];
      (0, _$$_REQUIRE(_dependencyMap[4]).setEventPhase)(event, target === eventTarget ? _Event.default.AT_TARGET : _Event.default.CAPTURING_PHASE);
      invoke(target, event, _Event.default.CAPTURING_PHASE);
    }
    for (var _target2 of eventPath) {
      if ((0, _$$_REQUIRE(_dependencyMap[4]).getStopPropagationFlag)(event)) {
        break;
      }
      if (!event.bubbles && _target2 !== eventTarget) {
        break;
      }
      (0, _$$_REQUIRE(_dependencyMap[4]).setEventPhase)(event, _target2 === eventTarget ? _Event.default.AT_TARGET : _Event.default.BUBBLING_PHASE);
      invoke(_target2, event, _Event.default.BUBBLING_PHASE);
    }
    (0, _$$_REQUIRE(_dependencyMap[4]).setEventPhase)(event, _Event.default.NONE);
    (0, _$$_REQUIRE(_dependencyMap[4]).setCurrentTarget)(event, null);
    (0, _$$_REQUIRE(_dependencyMap[4]).setComposedPath)(event, []);
    setEventDispatchFlag(event, false);
    (0, _$$_REQUIRE(_dependencyMap[4]).setStopImmediatePropagationFlag)(event, false);
    (0, _$$_REQUIRE(_dependencyMap[4]).setStopPropagationFlag)(event, false);
  }
  function getEventPath(eventTarget, event) {
    var path = [];
    var target = eventTarget;
    while (target != null) {
      path.push(target);
      target = target[_$$_REQUIRE(_dependencyMap[5]).EVENT_TARGET_GET_THE_PARENT_KEY]();
    }
    return path;
  }
  function invoke(eventTarget, event, eventPhase) {
    var listenersByType = getListenersForPhase(eventTarget, eventPhase === _Event.default.CAPTURING_PHASE);
    (0, _$$_REQUIRE(_dependencyMap[4]).setCurrentTarget)(event, eventTarget);
    var maybeListeners = listenersByType == null ? undefined : listenersByType.get(event.type);
    if (maybeListeners == null) {
      return;
    }
    var listeners = Array.from(maybeListeners.values());
    (0, _$$_REQUIRE(_dependencyMap[4]).setCurrentTarget)(event, eventTarget);
    for (var listener of listeners) {
      if (listener.removed) {
        continue;
      }
      if (listener.once) {
        eventTarget.removeEventListener(event.type, listener.callback, eventPhase === _Event.default.CAPTURING_PHASE);
      }
      if (listener.passive) {
        (0, _$$_REQUIRE(_dependencyMap[4]).setInPassiveListenerFlag)(event, true);
      }
      var currentEvent = global.event;
      global.event = event;
      var callback = listener.callback;
      try {
        if (typeof callback === 'function') {
          callback.call(eventTarget, event);
        } else if (typeof callback.handleEvent === 'function') {
          callback.handleEvent(event);
        }
      } catch (error) {
        console.error(error);
      }
      if (listener.passive) {
        (0, _$$_REQUIRE(_dependencyMap[4]).setInPassiveListenerFlag)(event, false);
      }
      global.event = currentEvent;
      if ((0, _$$_REQUIRE(_dependencyMap[4]).getStopImmediatePropagationFlag)(event)) {
        break;
      }
    }
  }
  var CAPTURING_LISTENERS_KEY = Symbol('capturingListeners');
  var BUBBLING_LISTENERS_KEY = Symbol('bubblingListeners');
  function getListenersForPhase(eventTarget, isCapture) {
    return isCapture ? eventTarget[CAPTURING_LISTENERS_KEY] : eventTarget[BUBBLING_LISTENERS_KEY];
  }
  function setListenersMap(eventTarget, isCapture, listenersMap) {
    if (isCapture) {
      eventTarget[CAPTURING_LISTENERS_KEY] = listenersMap;
    } else {
      eventTarget[BUBBLING_LISTENERS_KEY] = listenersMap;
    }
  }
  var EVENT_DISPATCH_FLAG = Symbol('Event.dispatch');
  function getEventDispatchFlag(event) {
    return event[EVENT_DISPATCH_FLAG];
  }
  function setEventDispatchFlag(event, value) {
    event[EVENT_DISPATCH_FLAG] = value;
  }
},177,[1,12,13,175,176,178]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.INTERNAL_DISPATCH_METHOD_KEY = exports.EVENT_TARGET_GET_THE_PARENT_KEY = undefined;
  exports.dispatchTrustedEvent = dispatchTrustedEvent;
  var EVENT_TARGET_GET_THE_PARENT_KEY = exports.EVENT_TARGET_GET_THE_PARENT_KEY = Symbol('EventTarget[get the parent]');
  var INTERNAL_DISPATCH_METHOD_KEY = exports.INTERNAL_DISPATCH_METHOD_KEY = Symbol('EventTarget[dispatch]');
  function dispatchTrustedEvent(eventTarget, event) {
    (0, _$$_REQUIRE(_dependencyMap[0]).setIsTrusted)(event, true);
    return eventTarget[INTERNAL_DISPATCH_METHOD_KEY](event);
  }
},178,[176]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _Event2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var ProgressEvent = exports.default = /*#__PURE__*/function (_Event) {
    function ProgressEvent(type, options) {
      var _this;
      (0, _classCallCheck2.default)(this, ProgressEvent);
      _this = _callSuper(this, ProgressEvent, [type, options]);
      _this._lengthComputable = Boolean(options == null ? undefined : options.lengthComputable);
      _this._loaded = Number(options == null ? undefined : options.loaded) || 0;
      _this._total = Number(options == null ? undefined : options.total) || 0;
      return _this;
    }
    (0, _inherits2.default)(ProgressEvent, _Event);
    return (0, _createClass2.default)(ProgressEvent, [{
      key: "lengthComputable",
      get: function get() {
        return this._lengthComputable;
      }
    }, {
      key: "loaded",
      get: function get() {
        return this._loaded;
      }
    }, {
      key: "total",
      get: function get() {
        return this._total;
      }
    }]);
  }(_Event2.default);
},179,[1,12,13,23,25,28,175]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _NativeBlobModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  function uuidv4() {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
      var r = Math.random() * 16 | 0,
        v = c == 'x' ? r : r & 0x3 | 0x8;
      return v.toString(16);
    });
  }
  function createBlobCollector(blobId) {
    if (global.__blobCollectorProvider == null) {
      return null;
    } else {
      return global.__blobCollectorProvider(blobId);
    }
  }
  var BlobManager = /*#__PURE__*/function () {
    function BlobManager() {
      (0, _classCallCheck2.default)(this, BlobManager);
    }
    return (0, _createClass2.default)(BlobManager, null, [{
      key: "createFromParts",
      value: function createFromParts(parts, options) {
        (0, _invariant.default)(_NativeBlobModule.default, 'NativeBlobModule is available.');
        var blobId = uuidv4();
        var items = parts.map(function (part) {
          if (part instanceof ArrayBuffer || ArrayBuffer.isView(part)) {
            throw new Error("Creating blobs from 'ArrayBuffer' and 'ArrayBufferView' are not supported");
          }
          if (part instanceof _$$_REQUIRE(_dependencyMap[5]).default) {
            return {
              data: part.data,
              type: 'blob'
            };
          } else {
            return {
              data: String(part),
              type: 'string'
            };
          }
        });
        var size = items.reduce(function (acc, curr) {
          if (curr.type === 'string') {
            return acc + global.unescape(encodeURI(curr.data)).length;
          } else {
            return acc + curr.data.size;
          }
        }, 0);
        _NativeBlobModule.default.createFromParts(items, blobId);
        return BlobManager.createFromOptions({
          blobId: blobId,
          offset: 0,
          size: size,
          type: options ? options.type : '',
          lastModified: options ? options.lastModified : Date.now()
        });
      }
    }, {
      key: "createFromOptions",
      value: function createFromOptions(options) {
        _$$_REQUIRE(_dependencyMap[6]).register(options.blobId);
        return Object.assign(Object.create(_$$_REQUIRE(_dependencyMap[5]).default.prototype), {
          data: options.__collector == null ? Object.assign({}, options, {
            __collector: createBlobCollector(options.blobId)
          }) : options
        });
      }
    }, {
      key: "release",
      value: function release(blobId) {
        (0, _invariant.default)(_NativeBlobModule.default, 'NativeBlobModule is available.');
        _$$_REQUIRE(_dependencyMap[6]).unregister(blobId);
        if (_$$_REQUIRE(_dependencyMap[6]).has(blobId)) {
          return;
        }
        _NativeBlobModule.default.release(blobId);
      }
    }, {
      key: "addNetworkingHandler",
      value: function addNetworkingHandler() {
        (0, _invariant.default)(_NativeBlobModule.default, 'NativeBlobModule is available.');
        _NativeBlobModule.default.addNetworkingHandler();
      }
    }, {
      key: "addWebSocketHandler",
      value: function addWebSocketHandler(socketId) {
        (0, _invariant.default)(_NativeBlobModule.default, 'NativeBlobModule is available.');
        _NativeBlobModule.default.addWebSocketHandler(socketId);
      }
    }, {
      key: "removeWebSocketHandler",
      value: function removeWebSocketHandler(socketId) {
        (0, _invariant.default)(_NativeBlobModule.default, 'NativeBlobModule is available.');
        _NativeBlobModule.default.removeWebSocketHandler(socketId);
      }
    }, {
      key: "sendOverSocket",
      value: function sendOverSocket(blob, socketId) {
        (0, _invariant.default)(_NativeBlobModule.default, 'NativeBlobModule is available.');
        _NativeBlobModule.default.sendOverSocket(blob.data, socketId);
      }
    }]);
  }();
  BlobManager.isAvailable = !!_NativeBlobModule.default;
  var _default = exports.default = BlobManager;
},180,[1,12,13,181,20,183,184]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeBlobModule = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeBlobModule).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeBlobModule[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeBlobModule[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeBlobModule.default;
},181,[182]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var NativeModule = TurboModuleRegistry.get('BlobModule');
  var constants = null;
  var NativeBlobModule = null;
  if (NativeModule != null) {
    NativeBlobModule = {
      getConstants: function getConstants() {
        if (constants == null) {
          constants = NativeModule.getConstants();
        }
        return constants;
      },
      addNetworkingHandler: function addNetworkingHandler() {
        NativeModule.addNetworkingHandler();
      },
      addWebSocketHandler: function addWebSocketHandler(id) {
        NativeModule.addWebSocketHandler(id);
      },
      removeWebSocketHandler: function removeWebSocketHandler(id) {
        NativeModule.removeWebSocketHandler(id);
      },
      sendOverSocket: function sendOverSocket(blob, socketID) {
        NativeModule.sendOverSocket(blob, socketID);
      },
      createFromParts: function createFromParts(parts, withId) {
        NativeModule.createFromParts(parts, withId);
      },
      release: function release(blobId) {
        NativeModule.release(blobId);
      }
    };
  }
  var _default = exports.default = NativeBlobModule;
},182,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var Blob = /*#__PURE__*/function () {
    function Blob() {
      var parts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      var options = arguments.length > 1 ? arguments[1] : undefined;
      (0, _classCallCheck2.default)(this, Blob);
      var BlobManager = _$$_REQUIRE(_dependencyMap[3]).default;
      this.data = BlobManager.createFromParts(parts, options).data;
    }
    return (0, _createClass2.default)(Blob, [{
      key: "data",
      get: function get() {
        if (!this._data) {
          throw new Error('Blob has been closed and is no longer available');
        }
        return this._data;
      },
      set: function set(data) {
        this._data = data;
      }
    }, {
      key: "slice",
      value: function slice(start, end) {
        var contentType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
        var BlobManager = _$$_REQUIRE(_dependencyMap[3]).default;
        var _this$data = this.data,
          offset = _this$data.offset,
          size = _this$data.size;
        if (typeof start === 'number') {
          if (start > size) {
            start = size;
          }
          offset += start;
          size -= start;
          if (typeof end === 'number') {
            if (end < 0) {
              end = this.size + end;
            }
            if (end > this.size) {
              end = this.size;
            }
            size = end - start;
          }
        }
        return BlobManager.createFromOptions({
          blobId: this.data.blobId,
          offset: offset,
          size: size,
          type: contentType,
          __collector: this.data.__collector
        });
      }
    }, {
      key: "close",
      value: function close() {
        var BlobManager = _$$_REQUIRE(_dependencyMap[3]).default;
        BlobManager.release(this.data.blobId);
        this.data = null;
      }
    }, {
      key: "size",
      get: function get() {
        return this.data.size;
      }
    }, {
      key: "type",
      get: function get() {
        return this.data.type || '';
      }
    }]);
  }();
  var _default = exports.default = Blob;
},183,[1,12,13,180]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.unregister = exports.register = exports.has = undefined;
  var registry = new Map();
  var register = exports.register = function register(id) {
    var used = registry.get(id);
    if (used != null) {
      registry.set(id, used + 1);
    } else {
      registry.set(id, 1);
    }
  };
  var unregister = exports.unregister = function unregister(id) {
    var used = registry.get(id);
    if (used != null) {
      if (used <= 1) {
        registry.delete(id);
      } else {
        registry.set(id, used - 1);
      }
    }
  };
  var has = exports.has = function has(id) {
    return registry.get(id) || false;
  };
},184,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getEventHandlerAttribute = getEventHandlerAttribute;
  exports.setEventHandlerAttribute = setEventHandlerAttribute;
  var EVENT_HANDLER_CONTENT_ATTRIBUTE_MAP_KEY = Symbol('eventHandlerAttributeMap');
  function getEventHandlerAttributeMap(target) {
    return target[EVENT_HANDLER_CONTENT_ATTRIBUTE_MAP_KEY];
  }
  function setEventHandlerAttributeMap(target, map) {
    target[EVENT_HANDLER_CONTENT_ATTRIBUTE_MAP_KEY] = map;
  }
  function getEventHandlerAttribute(target, type) {
    var _getEventHandlerAttri;
    var listener = (_getEventHandlerAttri = getEventHandlerAttributeMap(target)) == null ? undefined : _getEventHandlerAttri.get(type);
    return listener != null ? listener.handleEvent : null;
  }
  function setEventHandlerAttribute(target, type, callback) {
    var map = getEventHandlerAttributeMap(target);
    if (map != null) {
      var currentListener = map.get(type);
      if (currentListener) {
        target.removeEventListener(type, currentListener);
        map.delete(type);
      }
    }
    if (callback != null && (typeof callback === 'function' || typeof callback === 'object')) {
      var listener = {
        handleEvent: callback
      };
      try {
        target.addEventListener(type, listener);
        if (map == null) {
          map = new Map();
          setEventHandlerAttributeMap(target, map);
        }
        map.set(type, listener);
      } catch (e) {}
    }
    if (map != null && map.size === 0) {
      setEventHandlerAttributeMap(target, null);
    }
  }
},185,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _createPerformanceLogger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var GlobalPerformanceLogger = (0, _createPerformanceLogger.default)();
  var _default = exports.default = GlobalPerformanceLogger;
},186,[1,187]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = createPerformanceLogger;
  exports.getCurrentTimestamp = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _infoLog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _global$nativeQPLTime;
  var PRINT_TO_CONSOLE = false;
  var getCurrentTimestamp = exports.getCurrentTimestamp = (_global$nativeQPLTime = global.nativeQPLTimestamp) != null ? _global$nativeQPLTime : function () {
    return global.performance.now();
  };
  var PerformanceLogger = /*#__PURE__*/function () {
    function PerformanceLogger() {
      (0, _classCallCheck2.default)(this, PerformanceLogger);
      this._timespans = {};
      this._extras = {};
      this._points = {};
      this._pointExtras = {};
      this._closed = false;
    }
    return (0, _createClass2.default)(PerformanceLogger, [{
      key: "addTimespan",
      value: function addTimespan(key, startTime, endTime, startExtras, endExtras) {
        if (this._closed) {
          return;
        }
        if (this._timespans[key]) {
          return;
        }
        this._timespans[key] = {
          startTime: startTime,
          endTime: endTime,
          totalTime: endTime - (startTime || 0),
          startExtras: startExtras,
          endExtras: endExtras
        };
      }
    }, {
      key: "append",
      value: function append(performanceLogger) {
        this._timespans = Object.assign({}, performanceLogger.getTimespans(), this._timespans);
        this._extras = Object.assign({}, performanceLogger.getExtras(), this._extras);
        this._points = Object.assign({}, performanceLogger.getPoints(), this._points);
        this._pointExtras = Object.assign({}, performanceLogger.getPointExtras(), this._pointExtras);
      }
    }, {
      key: "clear",
      value: function clear() {
        this._timespans = {};
        this._extras = {};
        this._points = {};
      }
    }, {
      key: "clearCompleted",
      value: function clearCompleted() {
        for (var _key2 in this._timespans) {
          var _this$_timespans$_key;
          if (((_this$_timespans$_key = this._timespans[_key2]) == null ? undefined : _this$_timespans$_key.totalTime) != null) {
            delete this._timespans[_key2];
          }
        }
        this._extras = {};
        this._points = {};
      }
    }, {
      key: "close",
      value: function close() {
        this._closed = true;
      }
    }, {
      key: "currentTimestamp",
      value: function currentTimestamp() {
        return getCurrentTimestamp();
      }
    }, {
      key: "getExtras",
      value: function getExtras() {
        return this._extras;
      }
    }, {
      key: "getPoints",
      value: function getPoints() {
        return this._points;
      }
    }, {
      key: "getPointExtras",
      value: function getPointExtras() {
        return this._pointExtras;
      }
    }, {
      key: "getTimespans",
      value: function getTimespans() {
        return this._timespans;
      }
    }, {
      key: "hasTimespan",
      value: function hasTimespan(key) {
        return !!this._timespans[key];
      }
    }, {
      key: "isClosed",
      value: function isClosed() {
        return this._closed;
      }
    }, {
      key: "logEverything",
      value: function logEverything() {}
    }, {
      key: "markPoint",
      value: function markPoint(key) {
        var timestamp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentTimestamp();
        var extras = arguments.length > 2 ? arguments[2] : undefined;
        if (this._closed) {
          return;
        }
        if (this._points[key] != null) {
          return;
        }
        this._points[key] = timestamp;
        if (extras) {
          this._pointExtras[key] = extras;
        }
      }
    }, {
      key: "removeExtra",
      value: function removeExtra(key) {
        var value = this._extras[key];
        delete this._extras[key];
        return value;
      }
    }, {
      key: "setExtra",
      value: function setExtra(key, value) {
        if (this._closed) {
          return;
        }
        if (this._extras.hasOwnProperty(key)) {
          return;
        }
        this._extras[key] = value;
      }
    }, {
      key: "startTimespan",
      value: function startTimespan(key) {
        var timestamp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentTimestamp();
        var extras = arguments.length > 2 ? arguments[2] : undefined;
        if (this._closed) {
          return;
        }
        if (this._timespans[key]) {
          return;
        }
        this._timespans[key] = {
          startTime: timestamp,
          startExtras: extras
        };
      }
    }, {
      key: "stopTimespan",
      value: function stopTimespan(key) {
        var timestamp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentTimestamp();
        var extras = arguments.length > 2 ? arguments[2] : undefined;
        if (this._closed) {
          return;
        }
        var timespan = this._timespans[key];
        if (!timespan || timespan.startTime == null) {
          return;
        }
        if (timespan.endTime != null) {
          return;
        }
        timespan.endExtras = extras;
        timespan.endTime = timestamp;
        timespan.totalTime = timespan.endTime - (timespan.startTime || 0);
      }
    }]);
  }();
  function createPerformanceLogger() {
    return new PerformanceLogger();
  }
},187,[1,12,13,188]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  function infoLog() {
    var _console;
    return (_console = console).log.apply(_console, arguments);
  }
  var _default = exports.default = infoLog;
},188,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  exports.byteLength = byteLength;
  exports.toByteArray = toByteArray;
  exports.fromByteArray = fromByteArray;
  var lookup = [];
  var revLookup = [];
  var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;
  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
  for (var i = 0, len = code.length; i < len; ++i) {
    lookup[i] = code[i];
    revLookup[code.charCodeAt(i)] = i;
  }

  // Support decoding URL-safe base64 strings, as Node.js does.
  // See: https://en.wikipedia.org/wiki/Base64#URL_applications
  revLookup['-'.charCodeAt(0)] = 62;
  revLookup['_'.charCodeAt(0)] = 63;
  function getLens(b64) {
    var len = b64.length;
    if (len % 4 > 0) {
      throw new Error('Invalid string. Length must be a multiple of 4');
    }

    // Trim off extra bytes after placeholder bytes are found
    // See: https://github.com/beatgammit/base64-js/issues/42
    var validLen = b64.indexOf('=');
    if (validLen === -1) validLen = len;
    var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;
    return [validLen, placeHoldersLen];
  }

  // base64 is 4/3 + up to two characters of the original data
  function byteLength(b64) {
    var lens = getLens(b64);
    var validLen = lens[0];
    var placeHoldersLen = lens[1];
    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
  }
  function _byteLength(b64, validLen, placeHoldersLen) {
    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
  }
  function toByteArray(b64) {
    var tmp;
    var lens = getLens(b64);
    var validLen = lens[0];
    var placeHoldersLen = lens[1];
    var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));
    var curByte = 0;

    // if there are placeholders, only get up to the last complete 4 chars
    var len = placeHoldersLen > 0 ? validLen - 4 : validLen;
    var i;
    for (i = 0; i < len; i += 4) {
      tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];
      arr[curByte++] = tmp >> 16 & 0xFF;
      arr[curByte++] = tmp >> 8 & 0xFF;
      arr[curByte++] = tmp & 0xFF;
    }
    if (placeHoldersLen === 2) {
      tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;
      arr[curByte++] = tmp & 0xFF;
    }
    if (placeHoldersLen === 1) {
      tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;
      arr[curByte++] = tmp >> 8 & 0xFF;
      arr[curByte++] = tmp & 0xFF;
    }
    return arr;
  }
  function tripletToBase64(num) {
    return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];
  }
  function encodeChunk(uint8, start, end) {
    var tmp;
    var output = [];
    for (var i = start; i < end; i += 3) {
      tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);
      output.push(tripletToBase64(tmp));
    }
    return output.join('');
  }
  function fromByteArray(uint8) {
    var tmp;
    var len = uint8.length;
    var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes
    var parts = [];
    var maxChunkLength = 16383; // must be multiple of 3

    // go through the array every three bytes, we'll deal with trailing stuff later
    for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
      parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));
    }

    // pad the end with zeros, but make sure to not forget the extra bytes
    if (extraBytes === 1) {
      tmp = uint8[len - 1];
      parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');
    } else if (extraBytes === 2) {
      tmp = (uint8[len - 2] << 8) + uint8[len - 1];
      parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');
    }
    return parts.join('');
  }
},189,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _NativeEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _convertRequestBody = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _NativeNetworkingAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  function convertHeadersMapToArray(headers) {
    var headerArray = [];
    for (var name in headers) {
      headerArray.push([name, headers[name]]);
    }
    return headerArray;
  }
  var _requestId = 1;
  function generateRequestId() {
    return _requestId++;
  }
  var emitter = new _NativeEventEmitter.default(_Platform.default.OS !== 'ios' ? null : _NativeNetworkingAndroid.default);
  var RCTNetworking = {
    addListener: function addListener(eventType, listener, context) {
      return emitter.addListener(eventType, listener, context);
    },
    sendRequest: function sendRequest(method, trackingName, url, headers, data, responseType, incrementalUpdates, timeout, callback, withCredentials) {
      var body = (0, _convertRequestBody.default)(data);
      if (body && body.formData) {
        body.formData = body.formData.map(function (part) {
          return Object.assign({}, part, {
            headers: convertHeadersMapToArray(part.headers)
          });
        });
      }
      var requestId = generateRequestId();
      _NativeNetworkingAndroid.default.sendRequest(method, url, requestId, convertHeadersMapToArray(headers), Object.assign({}, body, {
        trackingName: trackingName
      }), responseType, incrementalUpdates, timeout, withCredentials);
      callback(requestId);
    },
    abortRequest: function abortRequest(requestId) {
      _NativeNetworkingAndroid.default.abortRequest(requestId);
    },
    clearCookies: function clearCookies(callback) {
      _NativeNetworkingAndroid.default.clearCookies(callback);
    }
  };
  var _default = exports.default = RCTNetworking;
},190,[1,191,33,192,195]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _RCTDeviceEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var NativeEventEmitter = exports.default = /*#__PURE__*/function () {
    function NativeEventEmitter(nativeModule) {
      (0, _classCallCheck2.default)(this, NativeEventEmitter);
      if (_Platform.default.OS === 'ios') {
        (0, _invariant.default)(nativeModule != null, '`new NativeEventEmitter()` requires a non-null argument.');
      }
      var hasAddListener = !!nativeModule && typeof nativeModule.addListener === 'function';
      var hasRemoveListeners = !!nativeModule && typeof nativeModule.removeListeners === 'function';
      if (nativeModule && hasAddListener && hasRemoveListeners) {
        this._nativeModule = nativeModule;
      } else if (nativeModule != null) {
        if (!hasAddListener) {
          console.warn('`new NativeEventEmitter()` was called with a non-null argument without the required `addListener` method.');
        }
        if (!hasRemoveListeners) {
          console.warn('`new NativeEventEmitter()` was called with a non-null argument without the required `removeListeners` method.');
        }
      }
    }
    return (0, _createClass2.default)(NativeEventEmitter, [{
      key: "addListener",
      value: function addListener(eventType, listener, context) {
        var _this$_nativeModule,
          _this = this;
        (_this$_nativeModule = this._nativeModule) == null ? undefined : _this$_nativeModule.addListener(eventType);
        var subscription = _RCTDeviceEventEmitter.default.addListener(eventType, listener, context);
        return {
          remove: function remove() {
            if (subscription != null) {
              var _this$_nativeModule2;
              (_this$_nativeModule2 = _this._nativeModule) == null ? undefined : _this$_nativeModule2.removeListeners(1);
              subscription.remove();
              subscription = null;
            }
          }
        };
      }
    }, {
      key: "emit",
      value: function emit(eventType) {
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }
        _RCTDeviceEventEmitter.default.emit.apply(_RCTDeviceEventEmitter.default, [eventType].concat(args));
      }
    }, {
      key: "removeAllListeners",
      value: function removeAllListeners(eventType) {
        var _this$_nativeModule3;
        (0, _invariant.default)(eventType != null, '`NativeEventEmitter.removeAllListener()` requires a non-null argument.');
        (_this$_nativeModule3 = this._nativeModule) == null ? undefined : _this$_nativeModule3.removeListeners(this.listenerCount(eventType));
        _RCTDeviceEventEmitter.default.removeAllListeners(eventType);
      }
    }, {
      key: "listenerCount",
      value: function listenerCount(eventType) {
        return _RCTDeviceEventEmitter.default.listenerCount(eventType);
      }
    }]);
  }();
},191,[1,12,13,33,22,20]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  function convertRequestBody(body) {
    if (typeof body === 'string') {
      return {
        string: body
      };
    }
    if (body instanceof _$$_REQUIRE(_dependencyMap[0]).default) {
      return {
        blob: body.data
      };
    }
    if (body instanceof _$$_REQUIRE(_dependencyMap[1]).default) {
      return {
        formData: body.getParts()
      };
    }
    if (body instanceof ArrayBuffer || ArrayBuffer.isView(body)) {
      return {
        base64: _$$_REQUIRE(_dependencyMap[2]).default(body)
      };
    }
    return body;
  }
  var _default = exports.default = convertRequestBody;
},192,[183,193,194]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  function encodeFilename(filename) {
    return encodeURIComponent(filename.replace(/\//g, '_'));
  }
  var FormData = /*#__PURE__*/function () {
    function FormData() {
      (0, _classCallCheck2.default)(this, FormData);
      this._parts = [];
    }
    return (0, _createClass2.default)(FormData, [{
      key: "append",
      value: function append(key, value) {
        this._parts.push([key, value]);
      }
    }, {
      key: "getAll",
      value: function getAll(key) {
        return this._parts.filter(function (_ref) {
          var _ref2 = (0, _slicedToArray2.default)(_ref, 1),
            name = _ref2[0];
          return name === key;
        }).map(function (_ref3) {
          var _ref4 = (0, _slicedToArray2.default)(_ref3, 2),
            value = _ref4[1];
          return value;
        });
      }
    }, {
      key: "getParts",
      value: function getParts() {
        return this._parts.map(function (_ref5) {
          var _ref6 = (0, _slicedToArray2.default)(_ref5, 2),
            name = _ref6[0],
            value = _ref6[1];
          var contentDisposition = 'form-data; name="' + name + '"';
          var headers = {
            'content-disposition': contentDisposition
          };
          if (typeof value === 'object' && !Array.isArray(value) && value) {
            if (typeof value.name === 'string') {
              headers['content-disposition'] += `; filename="${encodeFilename(value.name)}"`;
            }
            if (typeof value.type === 'string') {
              headers['content-type'] = value.type;
            }
            return Object.assign({}, value, {
              headers: headers,
              fieldName: name
            });
          }
          return {
            string: String(value),
            headers: headers,
            fieldName: name
          };
        });
      }
    }]);
  }();
  var _default = exports.default = FormData;
},193,[1,38,12,13]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  function binaryToBase64(data) {
    if (data instanceof ArrayBuffer) {
      data = new Uint8Array(data);
    }
    if (data instanceof Uint8Array) {
      return _$$_REQUIRE(_dependencyMap[0]).fromByteArray(data);
    }
    if (!ArrayBuffer.isView(data)) {
      throw new Error('data must be ArrayBuffer or typed array');
    }
    var _ref = data,
      buffer = _ref.buffer,
      byteOffset = _ref.byteOffset,
      byteLength = _ref.byteLength;
    return _$$_REQUIRE(_dependencyMap[0]).fromByteArray(new Uint8Array(buffer, byteOffset, byteLength));
  }
  var _default = exports.default = binaryToBase64;
},194,[189]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeNetworkingAndroid = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeNetworkingAndroid).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeNetworkingAndroid[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeNetworkingAndroid[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeNetworkingAndroid.default;
},195,[196]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.getEnforcing('Networking');
},196,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _eventTargetShim = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && "function" == typeof p ? function (t) { return p.apply(e, t); } : p; }
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var DEBUG_NETWORK_SEND_DELAY = false;
  var LABEL_FOR_MISSING_URL_FOR_PROFILING = 'Unknown URL';
  if (_$$_REQUIRE(_dependencyMap[9]).default.isAvailable) {
    _$$_REQUIRE(_dependencyMap[9]).default.addNetworkingHandler();
  }
  var UNSENT = 0;
  var OPENED = 1;
  var HEADERS_RECEIVED = 2;
  var LOADING = 3;
  var DONE = 4;
  var SUPPORTED_RESPONSE_TYPES = {
    arraybuffer: typeof global.ArrayBuffer === 'function',
    blob: typeof global.Blob === 'function',
    document: false,
    json: true,
    text: true,
    '': true
  };
  var REQUEST_EVENTS = ['abort', 'error', 'load', 'loadstart', 'progress', 'timeout', 'loadend'];
  var XHR_EVENTS = REQUEST_EVENTS.concat('readystatechange');
  var XMLHttpRequestEventTarget = /*#__PURE__*/function (_ref) {
    function XMLHttpRequestEventTarget() {
      (0, _classCallCheck2.default)(this, XMLHttpRequestEventTarget);
      return _callSuper(this, XMLHttpRequestEventTarget, arguments);
    }
    (0, _inherits2.default)(XMLHttpRequestEventTarget, _ref);
    return (0, _createClass2.default)(XMLHttpRequestEventTarget);
  }(_eventTargetShim.default.apply(undefined, REQUEST_EVENTS));
  var XMLHttpRequest = /*#__PURE__*/function (_ref2) {
    function XMLHttpRequest() {
      var _this;
      (0, _classCallCheck2.default)(this, XMLHttpRequest);
      _this = _callSuper(this, XMLHttpRequest);
      _this.UNSENT = UNSENT;
      _this.OPENED = OPENED;
      _this.HEADERS_RECEIVED = HEADERS_RECEIVED;
      _this.LOADING = LOADING;
      _this.DONE = DONE;
      _this.readyState = UNSENT;
      _this.status = 0;
      _this.timeout = 0;
      _this.withCredentials = true;
      _this.upload = new XMLHttpRequestEventTarget();
      _this._aborted = false;
      _this._hasError = false;
      _this._method = null;
      _this._perfKey = null;
      _this._response = '';
      _this._url = null;
      _this._timedOut = false;
      _this._trackingName = null;
      _this._incrementalEvents = false;
      _this._startTime = null;
      _this._performanceLogger = _$$_REQUIRE(_dependencyMap[10]).default;
      _this._reset();
      return _this;
    }
    (0, _inherits2.default)(XMLHttpRequest, _ref2);
    return (0, _createClass2.default)(XMLHttpRequest, [{
      key: "_reset",
      value: function _reset() {
        this.readyState = this.UNSENT;
        this.responseHeaders = undefined;
        this.status = 0;
        delete this.responseURL;
        this._requestId = null;
        this._cachedResponse = undefined;
        this._hasError = false;
        this._headers = {};
        this._response = '';
        this._responseType = '';
        this._sent = false;
        this._lowerCaseResponseHeaders = {};
        this._clearSubscriptions();
        this._timedOut = false;
      }
    }, {
      key: "responseType",
      get: function get() {
        return this._responseType;
      },
      set: function set(responseType) {
        if (this._sent) {
          throw new Error("Failed to set the 'responseType' property on 'XMLHttpRequest': The response type cannot be set after the request has been sent.");
        }
        if (!SUPPORTED_RESPONSE_TYPES.hasOwnProperty(responseType)) {
          console.warn(`The provided value '${responseType}' is not a valid 'responseType'.`);
          return;
        }
        _$$_REQUIRE(_dependencyMap[11])(SUPPORTED_RESPONSE_TYPES[responseType] || responseType === 'document', `The provided value '${responseType}' is unsupported in this environment.`);
        if (responseType === 'blob') {
          _$$_REQUIRE(_dependencyMap[11])(_$$_REQUIRE(_dependencyMap[9]).default.isAvailable, 'Native module BlobModule is required for blob support');
        }
        this._responseType = responseType;
      }
    }, {
      key: "responseText",
      get: function get() {
        if (this._responseType !== '' && this._responseType !== 'text') {
          throw new Error("The 'responseText' property is only available if 'responseType' " + `is set to '' or 'text', but it is '${this._responseType}'.`);
        }
        if (this.readyState < LOADING) {
          return '';
        }
        return this._response;
      }
    }, {
      key: "response",
      get: function get() {
        var responseType = this.responseType;
        if (responseType === '' || responseType === 'text') {
          return this.readyState < LOADING || this._hasError ? '' : this._response;
        }
        if (this.readyState !== DONE) {
          return null;
        }
        if (this._cachedResponse !== undefined) {
          return this._cachedResponse;
        }
        switch (responseType) {
          case 'document':
            this._cachedResponse = null;
            break;
          case 'arraybuffer':
            this._cachedResponse = _$$_REQUIRE(_dependencyMap[12]).toByteArray(this._response).buffer;
            break;
          case 'blob':
            if (typeof this._response === 'object' && this._response) {
              this._cachedResponse = _$$_REQUIRE(_dependencyMap[9]).default.createFromOptions(this._response);
            } else if (this._response === '') {
              this._cachedResponse = _$$_REQUIRE(_dependencyMap[9]).default.createFromParts([]);
            } else {
              throw new Error('Invalid response for blob - expecting object, was ' + `${typeof this._response}: ${this._response.trim()}`);
            }
            break;
          case 'json':
            try {
              this._cachedResponse = JSON.parse(this._response);
            } catch (_) {
              this._cachedResponse = null;
            }
            break;
          default:
            this._cachedResponse = null;
        }
        return this._cachedResponse;
      }
    }, {
      key: "__didCreateRequest",
      value: function __didCreateRequest(requestId) {
        this._requestId = requestId;
        XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.requestSent(requestId, this._url || '', this._method || 'GET', this._headers);
      }
    }, {
      key: "__didUploadProgress",
      value: function __didUploadProgress(requestId, progress, total) {
        if (requestId === this._requestId) {
          this.upload.dispatchEvent({
            type: 'progress',
            lengthComputable: true,
            loaded: progress,
            total: total
          });
        }
      }
    }, {
      key: "__didReceiveResponse",
      value: function __didReceiveResponse(requestId, status, responseHeaders, responseURL) {
        if (requestId === this._requestId) {
          this._perfKey != null && this._performanceLogger.stopTimespan(this._perfKey);
          this.status = status;
          this.setResponseHeaders(responseHeaders);
          this.setReadyState(this.HEADERS_RECEIVED);
          if (responseURL || responseURL === '') {
            this.responseURL = responseURL;
          } else {
            delete this.responseURL;
          }
          XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.responseReceived(requestId, responseURL || this._url || '', status, responseHeaders || {});
        }
      }
    }, {
      key: "__didReceiveData",
      value: function __didReceiveData(requestId, response) {
        if (requestId !== this._requestId) {
          return;
        }
        this._response = response;
        this._cachedResponse = undefined;
        this.setReadyState(this.LOADING);
        XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.dataReceived(requestId, response);
      }
    }, {
      key: "__didReceiveIncrementalData",
      value: function __didReceiveIncrementalData(requestId, responseText, progress, total) {
        if (requestId !== this._requestId) {
          return;
        }
        if (!this._response) {
          this._response = responseText;
        } else {
          this._response += responseText;
        }
        if (XMLHttpRequest._profiling) {
          performance.mark('Track:XMLHttpRequest:Incremental Data: ' + this._getMeasureURL());
        }
        XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.dataReceived(requestId, responseText);
        this.setReadyState(this.LOADING);
        this.__didReceiveDataProgress(requestId, progress, total);
      }
    }, {
      key: "__didReceiveDataProgress",
      value: function __didReceiveDataProgress(requestId, loaded, total) {
        if (requestId !== this._requestId) {
          return;
        }
        this.dispatchEvent({
          type: 'progress',
          lengthComputable: total >= 0,
          loaded: loaded,
          total: total
        });
      }
    }, {
      key: "__didCompleteResponse",
      value: function __didCompleteResponse(requestId, error, timeOutError) {
        if (requestId === this._requestId) {
          if (error) {
            if (this._responseType === '' || this._responseType === 'text') {
              this._response = error;
            }
            this._hasError = true;
            if (timeOutError) {
              this._timedOut = true;
            }
          }
          this._clearSubscriptions();
          this._requestId = null;
          this.setReadyState(this.DONE);
          if (XMLHttpRequest._profiling && this._startTime != null) {
            var start = this._startTime;
            performance.measure('Track:XMLHttpRequest:' + this._getMeasureURL(), {
              start: start,
              end: performance.now()
            });
          }
          if (error) {
            XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.loadingFailed(requestId, error);
          } else {
            XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.loadingFinished(requestId, this._response.length);
          }
        }
      }
    }, {
      key: "_clearSubscriptions",
      value: function _clearSubscriptions() {
        (this._subscriptions || []).forEach(function (sub) {
          if (sub) {
            sub.remove();
          }
        });
        this._subscriptions = [];
      }
    }, {
      key: "getAllResponseHeaders",
      value: function getAllResponseHeaders() {
        if (!this.responseHeaders) {
          return null;
        }
        var responseHeaders = this.responseHeaders;
        var unsortedHeaders = new Map();
        for (var rawHeaderName of Object.keys(responseHeaders)) {
          var headerValue = responseHeaders[rawHeaderName];
          var lowerHeaderName = rawHeaderName.toLowerCase();
          var header = unsortedHeaders.get(lowerHeaderName);
          if (header) {
            header.headerValue += ', ' + headerValue;
            unsortedHeaders.set(lowerHeaderName, header);
          } else {
            unsortedHeaders.set(lowerHeaderName, {
              lowerHeaderName: lowerHeaderName,
              upperHeaderName: rawHeaderName.toUpperCase(),
              headerValue: headerValue
            });
          }
        }
        var sortedHeaders = (0, _toConsumableArray2.default)(unsortedHeaders.values()).sort(function (a, b) {
          if (a.upperHeaderName < b.upperHeaderName) {
            return -1;
          }
          if (a.upperHeaderName > b.upperHeaderName) {
            return 1;
          }
          return 0;
        });
        return sortedHeaders.map(function (header) {
          return header.lowerHeaderName + ': ' + header.headerValue;
        }).join('\r\n') + '\r\n';
      }
    }, {
      key: "getResponseHeader",
      value: function getResponseHeader(header) {
        var value = this._lowerCaseResponseHeaders[header.toLowerCase()];
        return value !== undefined ? value : null;
      }
    }, {
      key: "setRequestHeader",
      value: function setRequestHeader(header, value) {
        if (this.readyState !== this.OPENED) {
          throw new Error('Request has not been opened');
        }
        this._headers[header.toLowerCase()] = String(value);
      }
    }, {
      key: "setTrackingName",
      value: function setTrackingName(trackingName) {
        this._trackingName = trackingName;
        return this;
      }
    }, {
      key: "setPerformanceLogger",
      value: function setPerformanceLogger(performanceLogger) {
        this._performanceLogger = performanceLogger;
        return this;
      }
    }, {
      key: "open",
      value: function open(method, url, async) {
        if (this.readyState !== this.UNSENT) {
          throw new Error('Cannot open, already sending');
        }
        if (async !== undefined && !async) {
          throw new Error('Synchronous http requests are not supported');
        }
        if (!url) {
          throw new Error('Cannot load an empty url');
        }
        this._method = method.toUpperCase();
        this._url = url;
        this._aborted = false;
        this.setReadyState(this.OPENED);
      }
    }, {
      key: "send",
      value: function send(data) {
        var _this2 = this;
        if (this.readyState !== this.OPENED) {
          throw new Error('Request has not been opened');
        }
        if (this._sent) {
          throw new Error('Request has already been sent');
        }
        this._sent = true;
        var incrementalEvents = this._incrementalEvents || !!this.onreadystatechange || !!this.onprogress;
        this._subscriptions.push(_$$_REQUIRE(_dependencyMap[13]).default.addListener('didSendNetworkData', function (args) {
          return _this2.__didUploadProgress.apply(_this2, (0, _toConsumableArray2.default)(args));
        }));
        this._subscriptions.push(_$$_REQUIRE(_dependencyMap[13]).default.addListener('didReceiveNetworkResponse', function (args) {
          return _this2.__didReceiveResponse.apply(_this2, (0, _toConsumableArray2.default)(args));
        }));
        this._subscriptions.push(_$$_REQUIRE(_dependencyMap[13]).default.addListener('didReceiveNetworkData', function (args) {
          return _this2.__didReceiveData.apply(_this2, (0, _toConsumableArray2.default)(args));
        }));
        this._subscriptions.push(_$$_REQUIRE(_dependencyMap[13]).default.addListener('didReceiveNetworkIncrementalData', function (args) {
          return _this2.__didReceiveIncrementalData.apply(_this2, (0, _toConsumableArray2.default)(args));
        }));
        this._subscriptions.push(_$$_REQUIRE(_dependencyMap[13]).default.addListener('didReceiveNetworkDataProgress', function (args) {
          return _this2.__didReceiveDataProgress.apply(_this2, (0, _toConsumableArray2.default)(args));
        }));
        this._subscriptions.push(_$$_REQUIRE(_dependencyMap[13]).default.addListener('didCompleteNetworkResponse', function (args) {
          return _this2.__didCompleteResponse.apply(_this2, (0, _toConsumableArray2.default)(args));
        }));
        var nativeResponseType = 'text';
        if (this._responseType === 'arraybuffer') {
          nativeResponseType = 'base64';
        }
        if (this._responseType === 'blob') {
          nativeResponseType = 'blob';
        }
        var doSend = function doSend() {
          var _this2$_trackingName;
          var friendlyName = (_this2$_trackingName = _this2._trackingName) != null ? _this2$_trackingName : _this2._url;
          _this2._perfKey = 'network_XMLHttpRequest_' + String(friendlyName);
          _this2._performanceLogger.startTimespan(_this2._perfKey);
          _this2._startTime = performance.now();
          _$$_REQUIRE(_dependencyMap[11])(_this2._method, 'XMLHttpRequest method needs to be defined (%s).', friendlyName);
          _$$_REQUIRE(_dependencyMap[11])(_this2._url, 'XMLHttpRequest URL needs to be defined (%s).', friendlyName);
          _$$_REQUIRE(_dependencyMap[13]).default.sendRequest(_this2._method, _this2._trackingName, _this2._url, _this2._headers, data, nativeResponseType, incrementalEvents, _this2.timeout, _this2.__didCreateRequest.bind(_this2), _this2.withCredentials);
        };
        {
          doSend();
        }
      }
    }, {
      key: "abort",
      value: function abort() {
        this._aborted = true;
        if (this._requestId) {
          _$$_REQUIRE(_dependencyMap[13]).default.abortRequest(this._requestId);
        }
        if (!(this.readyState === this.UNSENT || this.readyState === this.OPENED && !this._sent || this.readyState === this.DONE)) {
          this._reset();
          this.setReadyState(this.DONE);
        }
        this._reset();
      }
    }, {
      key: "setResponseHeaders",
      value: function setResponseHeaders(responseHeaders) {
        this.responseHeaders = responseHeaders || null;
        var headers = responseHeaders || {};
        this._lowerCaseResponseHeaders = Object.keys(headers).reduce(function (lcaseHeaders, headerName) {
          lcaseHeaders[headerName.toLowerCase()] = headers[headerName];
          return lcaseHeaders;
        }, {});
      }
    }, {
      key: "setReadyState",
      value: function setReadyState(newState) {
        this.readyState = newState;
        this.dispatchEvent({
          type: 'readystatechange'
        });
        if (newState === this.DONE) {
          if (this._aborted) {
            this.dispatchEvent({
              type: 'abort'
            });
          } else if (this._hasError) {
            if (this._timedOut) {
              this.dispatchEvent({
                type: 'timeout'
              });
            } else {
              this.dispatchEvent({
                type: 'error'
              });
            }
          } else {
            this.dispatchEvent({
              type: 'load'
            });
          }
          this.dispatchEvent({
            type: 'loadend'
          });
        }
      }
    }, {
      key: "addEventListener",
      value: function addEventListener(type, listener) {
        if (type === 'readystatechange' || type === 'progress') {
          this._incrementalEvents = true;
        }
        _superPropGet(XMLHttpRequest, "addEventListener", this, 3)([type, listener]);
      }
    }, {
      key: "_getMeasureURL",
      value: function _getMeasureURL() {
        var _ref3, _this$_trackingName;
        return (_ref3 = (_this$_trackingName = this._trackingName) != null ? _this$_trackingName : this._url) != null ? _ref3 : LABEL_FOR_MISSING_URL_FOR_PROFILING;
      }
    }], [{
      key: "__setInterceptor_DO_NOT_USE",
      value: function __setInterceptor_DO_NOT_USE(interceptor) {
        XMLHttpRequest._interceptor = interceptor;
      }
    }, {
      key: "enableProfiling",
      value: function enableProfiling(_enableProfiling) {
        XMLHttpRequest._profiling = _enableProfiling;
      }
    }]);
  }(_eventTargetShim.default.apply(undefined, (0, _toConsumableArray2.default)(XHR_EVENTS)));
  XMLHttpRequest.UNSENT = UNSENT;
  XMLHttpRequest.OPENED = OPENED;
  XMLHttpRequest.HEADERS_RECEIVED = HEADERS_RECEIVED;
  XMLHttpRequest.LOADING = LOADING;
  XMLHttpRequest.DONE = DONE;
  XMLHttpRequest._interceptor = null;
  XMLHttpRequest._profiling = false;
  var _default = exports.default = XMLHttpRequest;
},197,[1,6,26,13,12,23,25,28,198,180,186,20,189,190]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /**
   * @author Toru Nagashima <https://github.com/mysticatea>
   * @copyright 2015 Toru Nagashima. All rights reserved.
   * See LICENSE file in root directory for full license.
   */
  'use strict';

  Object.defineProperty(exports, '__esModule', {
    value: true
  });

  /**
   * @typedef {object} PrivateData
   * @property {EventTarget} eventTarget The event target.
   * @property {{type:string}} event The original event object.
   * @property {number} eventPhase The current event phase.
   * @property {EventTarget|null} currentTarget The current event target.
   * @property {boolean} canceled The flag to prevent default.
   * @property {boolean} stopped The flag to stop propagation.
   * @property {boolean} immediateStopped The flag to stop propagation immediately.
   * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.
   * @property {number} timeStamp The unix time.
   * @private
   */

  /**
   * Private data for event wrappers.
   * @type {WeakMap<Event, PrivateData>}
   * @private
   */
  var privateData = new WeakMap();

  /**
   * Cache for wrapper classes.
   * @type {WeakMap<Object, Function>}
   * @private
   */
  var wrappers = new WeakMap();

  /**
   * Get private data.
   * @param {Event} event The event object to get private data.
   * @returns {PrivateData} The private data of the event.
   * @private
   */
  function pd(event) {
    var retv = privateData.get(event);
    console.assert(retv != null, "'this' is expected an Event object, but got", event);
    return retv;
  }

  /**
   * https://dom.spec.whatwg.org/#set-the-canceled-flag
   * @param data {PrivateData} private data.
   */
  function setCancelFlag(data) {
    if (data.passiveListener != null) {
      if (typeof console !== "undefined" && typeof console.error === "function") {
        console.error("Unable to preventDefault inside passive event listener invocation.", data.passiveListener);
      }
      return;
    }
    if (!data.event.cancelable) {
      return;
    }
    data.canceled = true;
    if (typeof data.event.preventDefault === "function") {
      data.event.preventDefault();
    }
  }

  /**
   * @see https://dom.spec.whatwg.org/#interface-event
   * @private
   */
  /**
   * The event wrapper.
   * @constructor
   * @param {EventTarget} eventTarget The event target of this dispatching.
   * @param {Event|{type:string}} event The original event to wrap.
   */
  function Event(eventTarget, event) {
    privateData.set(this, {
      eventTarget: eventTarget,
      event: event,
      eventPhase: 2,
      currentTarget: eventTarget,
      canceled: false,
      stopped: false,
      immediateStopped: false,
      passiveListener: null,
      timeStamp: event.timeStamp || Date.now()
    });

    // https://heycam.github.io/webidl/#Unforgeable
    Object.defineProperty(this, "isTrusted", {
      value: false,
      enumerable: true
    });

    // Define accessors
    var keys = Object.keys(event);
    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];
      if (!(key in this)) {
        Object.defineProperty(this, key, defineRedirectDescriptor(key));
      }
    }
  }

  // Should be enumerable, but class methods are not enumerable.
  Event.prototype = {
    /**
     * The type of this event.
     * @type {string}
     */
    get type() {
      return pd(this).event.type;
    },
    /**
     * The target of this event.
     * @type {EventTarget}
     */
    get target() {
      return pd(this).eventTarget;
    },
    /**
     * The target of this event.
     * @type {EventTarget}
     */
    get currentTarget() {
      return pd(this).currentTarget;
    },
    /**
     * @returns {EventTarget[]} The composed path of this event.
     */
    composedPath: function composedPath() {
      var currentTarget = pd(this).currentTarget;
      if (currentTarget == null) {
        return [];
      }
      return [currentTarget];
    },
    /**
     * Constant of NONE.
     * @type {number}
     */
    get NONE() {
      return 0;
    },
    /**
     * Constant of CAPTURING_PHASE.
     * @type {number}
     */
    get CAPTURING_PHASE() {
      return 1;
    },
    /**
     * Constant of AT_TARGET.
     * @type {number}
     */
    get AT_TARGET() {
      return 2;
    },
    /**
     * Constant of BUBBLING_PHASE.
     * @type {number}
     */
    get BUBBLING_PHASE() {
      return 3;
    },
    /**
     * The target of this event.
     * @type {number}
     */
    get eventPhase() {
      return pd(this).eventPhase;
    },
    /**
     * Stop event bubbling.
     * @returns {void}
     */
    stopPropagation: function stopPropagation() {
      var data = pd(this);
      data.stopped = true;
      if (typeof data.event.stopPropagation === "function") {
        data.event.stopPropagation();
      }
    },
    /**
     * Stop event bubbling.
     * @returns {void}
     */
    stopImmediatePropagation: function stopImmediatePropagation() {
      var data = pd(this);
      data.stopped = true;
      data.immediateStopped = true;
      if (typeof data.event.stopImmediatePropagation === "function") {
        data.event.stopImmediatePropagation();
      }
    },
    /**
     * The flag to be bubbling.
     * @type {boolean}
     */
    get bubbles() {
      return Boolean(pd(this).event.bubbles);
    },
    /**
     * The flag to be cancelable.
     * @type {boolean}
     */
    get cancelable() {
      return Boolean(pd(this).event.cancelable);
    },
    /**
     * Cancel this event.
     * @returns {void}
     */
    preventDefault: function preventDefault() {
      setCancelFlag(pd(this));
    },
    /**
     * The flag to indicate cancellation state.
     * @type {boolean}
     */
    get defaultPrevented() {
      return pd(this).canceled;
    },
    /**
     * The flag to be composed.
     * @type {boolean}
     */
    get composed() {
      return Boolean(pd(this).event.composed);
    },
    /**
     * The unix time of this event.
     * @type {number}
     */
    get timeStamp() {
      return pd(this).timeStamp;
    },
    /**
     * The target of this event.
     * @type {EventTarget}
     * @deprecated
     */
    get srcElement() {
      return pd(this).eventTarget;
    },
    /**
     * The flag to stop event bubbling.
     * @type {boolean}
     * @deprecated
     */
    get cancelBubble() {
      return pd(this).stopped;
    },
    set cancelBubble(value) {
      if (!value) {
        return;
      }
      var data = pd(this);
      data.stopped = true;
      if (typeof data.event.cancelBubble === "boolean") {
        data.event.cancelBubble = true;
      }
    },
    /**
     * The flag to indicate cancellation state.
     * @type {boolean}
     * @deprecated
     */
    get returnValue() {
      return !pd(this).canceled;
    },
    set returnValue(value) {
      if (!value) {
        setCancelFlag(pd(this));
      }
    },
    /**
     * Initialize this event object. But do nothing under event dispatching.
     * @param {string} type The event type.
     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.
     * @param {boolean} [cancelable=false] The flag to be possible to cancel.
     * @deprecated
     */
    initEvent: function initEvent() {
      // Do nothing.
    }
  };

  // `constructor` is not enumerable.
  Object.defineProperty(Event.prototype, "constructor", {
    value: Event,
    configurable: true,
    writable: true
  });

  // Ensure `event instanceof window.Event` is `true`.
  if (typeof window !== "undefined" && typeof window.Event !== "undefined") {
    Object.setPrototypeOf(Event.prototype, window.Event.prototype);

    // Make association for wrappers.
    wrappers.set(window.Event.prototype, Event);
  }

  /**
   * Get the property descriptor to redirect a given property.
   * @param {string} key Property name to define property descriptor.
   * @returns {PropertyDescriptor} The property descriptor to redirect the property.
   * @private
   */
  function defineRedirectDescriptor(key) {
    return {
      get: function get() {
        return pd(this).event[key];
      },
      set: function set(value) {
        pd(this).event[key] = value;
      },
      configurable: true,
      enumerable: true
    };
  }

  /**
   * Get the property descriptor to call a given method property.
   * @param {string} key Property name to define property descriptor.
   * @returns {PropertyDescriptor} The property descriptor to call the method property.
   * @private
   */
  function defineCallDescriptor(key) {
    return {
      value: function value() {
        var event = pd(this).event;
        return event[key].apply(event, arguments);
      },
      configurable: true,
      enumerable: true
    };
  }

  /**
   * Define new wrapper class.
   * @param {Function} BaseEvent The base wrapper class.
   * @param {Object} proto The prototype of the original event.
   * @returns {Function} The defined wrapper class.
   * @private
   */
  function defineWrapper(BaseEvent, proto) {
    var keys = Object.keys(proto);
    if (keys.length === 0) {
      return BaseEvent;
    }

    /** CustomEvent */
    function CustomEvent(eventTarget, event) {
      BaseEvent.call(this, eventTarget, event);
    }
    CustomEvent.prototype = Object.create(BaseEvent.prototype, {
      constructor: {
        value: CustomEvent,
        configurable: true,
        writable: true
      }
    });

    // Define accessors.
    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];
      if (!(key in BaseEvent.prototype)) {
        var descriptor = Object.getOwnPropertyDescriptor(proto, key);
        var isFunc = typeof descriptor.value === "function";
        Object.defineProperty(CustomEvent.prototype, key, isFunc ? defineCallDescriptor(key) : defineRedirectDescriptor(key));
      }
    }
    return CustomEvent;
  }

  /**
   * Get the wrapper class of a given prototype.
   * @param {Object} proto The prototype of the original event to get its wrapper.
   * @returns {Function} The wrapper class.
   * @private
   */
  function getWrapper(proto) {
    if (proto == null || proto === Object.prototype) {
      return Event;
    }
    var wrapper = wrappers.get(proto);
    if (wrapper == null) {
      wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto);
      wrappers.set(proto, wrapper);
    }
    return wrapper;
  }

  /**
   * Wrap a given event to management a dispatching.
   * @param {EventTarget} eventTarget The event target of this dispatching.
   * @param {Object} event The event to wrap.
   * @returns {Event} The wrapper instance.
   * @private
   */
  function wrapEvent(eventTarget, event) {
    var Wrapper = getWrapper(Object.getPrototypeOf(event));
    return new Wrapper(eventTarget, event);
  }

  /**
   * Get the immediateStopped flag of a given event.
   * @param {Event} event The event to get.
   * @returns {boolean} The flag to stop propagation immediately.
   * @private
   */
  function isStopped(event) {
    return pd(event).immediateStopped;
  }

  /**
   * Set the current event phase of a given event.
   * @param {Event} event The event to set current target.
   * @param {number} eventPhase New event phase.
   * @returns {void}
   * @private
   */
  function setEventPhase(event, eventPhase) {
    pd(event).eventPhase = eventPhase;
  }

  /**
   * Set the current target of a given event.
   * @param {Event} event The event to set current target.
   * @param {EventTarget|null} currentTarget New current target.
   * @returns {void}
   * @private
   */
  function setCurrentTarget(event, currentTarget) {
    pd(event).currentTarget = currentTarget;
  }

  /**
   * Set a passive listener of a given event.
   * @param {Event} event The event to set current target.
   * @param {Function|null} passiveListener New passive listener.
   * @returns {void}
   * @private
   */
  function setPassiveListener(event, passiveListener) {
    pd(event).passiveListener = passiveListener;
  }

  /**
   * @typedef {object} ListenerNode
   * @property {Function} listener
   * @property {1|2|3} listenerType
   * @property {boolean} passive
   * @property {boolean} once
   * @property {ListenerNode|null} next
   * @private
   */

  /**
   * @type {WeakMap<object, Map<string, ListenerNode>>}
   * @private
   */
  var listenersMap = new WeakMap();

  // Listener types
  var CAPTURE = 1;
  var BUBBLE = 2;
  var ATTRIBUTE = 3;

  /**
   * Check whether a given value is an object or not.
   * @param {any} x The value to check.
   * @returns {boolean} `true` if the value is an object.
   */
  function isObject(x) {
    return x !== null && typeof x === "object"; //eslint-disable-line no-restricted-syntax
  }

  /**
   * Get listeners.
   * @param {EventTarget} eventTarget The event target to get.
   * @returns {Map<string, ListenerNode>} The listeners.
   * @private
   */
  function getListeners(eventTarget) {
    var listeners = listenersMap.get(eventTarget);
    if (listeners == null) {
      throw new TypeError("'this' is expected an EventTarget object, but got another value.");
    }
    return listeners;
  }

  /**
   * Get the property descriptor for the event attribute of a given event.
   * @param {string} eventName The event name to get property descriptor.
   * @returns {PropertyDescriptor} The property descriptor.
   * @private
   */
  function defineEventAttributeDescriptor(eventName) {
    return {
      get: function get() {
        var listeners = getListeners(this);
        var node = listeners.get(eventName);
        while (node != null) {
          if (node.listenerType === ATTRIBUTE) {
            return node.listener;
          }
          node = node.next;
        }
        return null;
      },
      set: function set(listener) {
        if (typeof listener !== "function" && !isObject(listener)) {
          listener = null; // eslint-disable-line no-param-reassign
        }
        var listeners = getListeners(this);

        // Traverse to the tail while removing old value.
        var prev = null;
        var node = listeners.get(eventName);
        while (node != null) {
          if (node.listenerType === ATTRIBUTE) {
            // Remove old value.
            if (prev !== null) {
              prev.next = node.next;
            } else if (node.next !== null) {
              listeners.set(eventName, node.next);
            } else {
              listeners.delete(eventName);
            }
          } else {
            prev = node;
          }
          node = node.next;
        }

        // Add new value.
        if (listener !== null) {
          var newNode = {
            listener: listener,
            listenerType: ATTRIBUTE,
            passive: false,
            once: false,
            next: null
          };
          if (prev === null) {
            listeners.set(eventName, newNode);
          } else {
            prev.next = newNode;
          }
        }
      },
      configurable: true,
      enumerable: true
    };
  }

  /**
   * Define an event attribute (e.g. `eventTarget.onclick`).
   * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.
   * @param {string} eventName The event name to define.
   * @returns {void}
   */
  function defineEventAttribute(eventTargetPrototype, eventName) {
    Object.defineProperty(eventTargetPrototype, `on${eventName}`, defineEventAttributeDescriptor(eventName));
  }

  /**
   * Define a custom EventTarget with event attributes.
   * @param {string[]} eventNames Event names for event attributes.
   * @returns {EventTarget} The custom EventTarget.
   * @private
   */
  function defineCustomEventTarget(eventNames) {
    /** CustomEventTarget */
    function CustomEventTarget() {
      EventTarget.call(this);
    }
    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {
      constructor: {
        value: CustomEventTarget,
        configurable: true,
        writable: true
      }
    });
    for (var i = 0; i < eventNames.length; ++i) {
      defineEventAttribute(CustomEventTarget.prototype, eventNames[i]);
    }
    return CustomEventTarget;
  }

  /**
   * EventTarget.
   *
   * - This is constructor if no arguments.
   * - This is a function which returns a CustomEventTarget constructor if there are arguments.
   *
   * For example:
   *
   *     class A extends EventTarget {}
   *     class B extends EventTarget("message") {}
   *     class C extends EventTarget("message", "error") {}
   *     class D extends EventTarget(["message", "error"]) {}
   */
  function EventTarget() {
    /*eslint-disable consistent-return */
    if (this instanceof EventTarget) {
      listenersMap.set(this, new Map());
      return;
    }
    if (arguments.length === 1 && Array.isArray(arguments[0])) {
      return defineCustomEventTarget(arguments[0]);
    }
    if (arguments.length > 0) {
      var types = new Array(arguments.length);
      for (var i = 0; i < arguments.length; ++i) {
        types[i] = arguments[i];
      }
      return defineCustomEventTarget(types);
    }
    throw new TypeError("Cannot call a class as a function");
    /*eslint-enable consistent-return */
  }

  // Should be enumerable, but class methods are not enumerable.
  EventTarget.prototype = {
    /**
     * Add a given listener to this event target.
     * @param {string} eventName The event name to add.
     * @param {Function} listener The listener to add.
     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.
     * @returns {void}
     */
    addEventListener: function addEventListener(eventName, listener, options) {
      if (listener == null) {
        return;
      }
      if (typeof listener !== "function" && !isObject(listener)) {
        throw new TypeError("'listener' should be a function or an object.");
      }
      var listeners = getListeners(this);
      var optionsIsObj = isObject(options);
      var capture = optionsIsObj ? Boolean(options.capture) : Boolean(options);
      var listenerType = capture ? CAPTURE : BUBBLE;
      var newNode = {
        listener: listener,
        listenerType: listenerType,
        passive: optionsIsObj && Boolean(options.passive),
        once: optionsIsObj && Boolean(options.once),
        next: null
      };

      // Set it as the first node if the first node is null.
      var node = listeners.get(eventName);
      if (node === undefined) {
        listeners.set(eventName, newNode);
        return;
      }

      // Traverse to the tail while checking duplication..
      var prev = null;
      while (node != null) {
        if (node.listener === listener && node.listenerType === listenerType) {
          // Should ignore duplication.
          return;
        }
        prev = node;
        node = node.next;
      }

      // Add it.
      prev.next = newNode;
    },
    /**
     * Remove a given listener from this event target.
     * @param {string} eventName The event name to remove.
     * @param {Function} listener The listener to remove.
     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.
     * @returns {void}
     */
    removeEventListener: function removeEventListener(eventName, listener, options) {
      if (listener == null) {
        return;
      }
      var listeners = getListeners(this);
      var capture = isObject(options) ? Boolean(options.capture) : Boolean(options);
      var listenerType = capture ? CAPTURE : BUBBLE;
      var prev = null;
      var node = listeners.get(eventName);
      while (node != null) {
        if (node.listener === listener && node.listenerType === listenerType) {
          if (prev !== null) {
            prev.next = node.next;
          } else if (node.next !== null) {
            listeners.set(eventName, node.next);
          } else {
            listeners.delete(eventName);
          }
          return;
        }
        prev = node;
        node = node.next;
      }
    },
    /**
     * Dispatch a given event.
     * @param {Event|{type:string}} event The event to dispatch.
     * @returns {boolean} `false` if canceled.
     */
    dispatchEvent: function dispatchEvent(event) {
      if (event == null || typeof event.type !== "string") {
        throw new TypeError('"event.type" should be a string.');
      }

      // If listeners aren't registered, terminate.
      var listeners = getListeners(this);
      var eventName = event.type;
      var node = listeners.get(eventName);
      if (node == null) {
        return true;
      }

      // Since we cannot rewrite several properties, so wrap object.
      var wrappedEvent = wrapEvent(this, event);

      // This doesn't process capturing phase and bubbling phase.
      // This isn't participating in a tree.
      var prev = null;
      while (node != null) {
        // Remove this listener if it's once
        if (node.once) {
          if (prev !== null) {
            prev.next = node.next;
          } else if (node.next !== null) {
            listeners.set(eventName, node.next);
          } else {
            listeners.delete(eventName);
          }
        } else {
          prev = node;
        }

        // Call this listener
        setPassiveListener(wrappedEvent, node.passive ? node.listener : null);
        if (typeof node.listener === "function") {
          try {
            node.listener.call(this, wrappedEvent);
          } catch (err) {
            if (typeof console !== "undefined" && typeof console.error === "function") {
              console.error(err);
            }
          }
        } else if (node.listenerType !== ATTRIBUTE && typeof node.listener.handleEvent === "function") {
          node.listener.handleEvent(wrappedEvent);
        }

        // Break if `event.stopImmediatePropagation` was called.
        if (isStopped(wrappedEvent)) {
          break;
        }
        node = node.next;
      }
      setPassiveListener(wrappedEvent, null);
      setEventPhase(wrappedEvent, 0);
      setCurrentTarget(wrappedEvent, null);
      return !wrappedEvent.defaultPrevented;
    }
  };

  // `constructor` is not enumerable.
  Object.defineProperty(EventTarget.prototype, "constructor", {
    value: EventTarget,
    configurable: true,
    writable: true
  });

  // Ensure `eventTarget instanceof window.EventTarget` is `true`.
  if (typeof window !== "undefined" && typeof window.EventTarget !== "undefined") {
    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype);
  }
  exports.defineEventAttribute = defineEventAttribute;
  exports.EventTarget = EventTarget;
  exports.default = EventTarget;
  module.exports = EventTarget;
  module.exports.EventTarget = module.exports["default"] = EventTarget;
  module.exports.defineEventAttribute = defineEventAttribute;
},198,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.fetch = exports.Response = exports.Request = exports.Headers = undefined;
  _$$_REQUIRE(_dependencyMap[0]);
  var fetch = exports.fetch = global.fetch;
  var Headers = exports.Headers = global.Headers;
  var Request = exports.Request = global.Request;
  var Response = exports.Response = global.Response;
},199,[200]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  (function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global.WHATWGFetch = {});
  })(this, function (exports) {
    'use strict';

    /* eslint-disable no-prototype-builtins */
    var g = typeof globalThis !== 'undefined' && globalThis || typeof self !== 'undefined' && self ||
    // eslint-disable-next-line no-undef
    typeof global !== 'undefined' && global || {};
    var support = {
      searchParams: 'URLSearchParams' in g,
      iterable: 'Symbol' in g && 'iterator' in Symbol,
      blob: 'FileReader' in g && 'Blob' in g && function () {
        try {
          new Blob();
          return true;
        } catch (e) {
          return false;
        }
      }(),
      formData: 'FormData' in g,
      arrayBuffer: 'ArrayBuffer' in g
    };
    function isDataView(obj) {
      return obj && DataView.prototype.isPrototypeOf(obj);
    }
    if (support.arrayBuffer) {
      var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];
      var isArrayBufferView = ArrayBuffer.isView || function (obj) {
        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;
      };
    }
    function normalizeName(name) {
      if (typeof name !== 'string') {
        name = String(name);
      }
      if (/[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(name) || name === '') {
        throw new TypeError('Invalid character in header field name: "' + name + '"');
      }
      return name.toLowerCase();
    }
    function normalizeValue(value) {
      if (typeof value !== 'string') {
        value = String(value);
      }
      return value;
    }

    // Build a destructive iterator for the value list
    function iteratorFor(items) {
      var iterator = {
        next: function next() {
          var value = items.shift();
          return {
            done: value === undefined,
            value: value
          };
        }
      };
      if (support.iterable) {
        iterator[Symbol.iterator] = function () {
          return iterator;
        };
      }
      return iterator;
    }
    function Headers(headers) {
      this.map = {};
      if (headers instanceof Headers) {
        headers.forEach(function (value, name) {
          this.append(name, value);
        }, this);
      } else if (Array.isArray(headers)) {
        headers.forEach(function (header) {
          if (header.length != 2) {
            throw new TypeError('Headers constructor: expected name/value pair to be length 2, found' + header.length);
          }
          this.append(header[0], header[1]);
        }, this);
      } else if (headers) {
        Object.getOwnPropertyNames(headers).forEach(function (name) {
          this.append(name, headers[name]);
        }, this);
      }
    }
    Headers.prototype.append = function (name, value) {
      name = normalizeName(name);
      value = normalizeValue(value);
      var oldValue = this.map[name];
      this.map[name] = oldValue ? oldValue + ', ' + value : value;
    };
    Headers.prototype['delete'] = function (name) {
      delete this.map[normalizeName(name)];
    };
    Headers.prototype.get = function (name) {
      name = normalizeName(name);
      return this.has(name) ? this.map[name] : null;
    };
    Headers.prototype.has = function (name) {
      return this.map.hasOwnProperty(normalizeName(name));
    };
    Headers.prototype.set = function (name, value) {
      this.map[normalizeName(name)] = normalizeValue(value);
    };
    Headers.prototype.forEach = function (callback, thisArg) {
      for (var name in this.map) {
        if (this.map.hasOwnProperty(name)) {
          callback.call(thisArg, this.map[name], name, this);
        }
      }
    };
    Headers.prototype.keys = function () {
      var items = [];
      this.forEach(function (value, name) {
        items.push(name);
      });
      return iteratorFor(items);
    };
    Headers.prototype.values = function () {
      var items = [];
      this.forEach(function (value) {
        items.push(value);
      });
      return iteratorFor(items);
    };
    Headers.prototype.entries = function () {
      var items = [];
      this.forEach(function (value, name) {
        items.push([name, value]);
      });
      return iteratorFor(items);
    };
    if (support.iterable) {
      Headers.prototype[Symbol.iterator] = Headers.prototype.entries;
    }
    function consumed(body) {
      if (body._noBody) return;
      if (body.bodyUsed) {
        return Promise.reject(new TypeError('Already read'));
      }
      body.bodyUsed = true;
    }
    function fileReaderReady(reader) {
      return new Promise(function (resolve, reject) {
        reader.onload = function () {
          resolve(reader.result);
        };
        reader.onerror = function () {
          reject(reader.error);
        };
      });
    }
    function readBlobAsArrayBuffer(blob) {
      var reader = new FileReader();
      var promise = fileReaderReady(reader);
      reader.readAsArrayBuffer(blob);
      return promise;
    }
    function readBlobAsText(blob) {
      var reader = new FileReader();
      var promise = fileReaderReady(reader);
      var match = /charset=([A-Za-z0-9_-]+)/.exec(blob.type);
      var encoding = match ? match[1] : 'utf-8';
      reader.readAsText(blob, encoding);
      return promise;
    }
    function readArrayBufferAsText(buf) {
      var view = new Uint8Array(buf);
      var chars = new Array(view.length);
      for (var i = 0; i < view.length; i++) {
        chars[i] = String.fromCharCode(view[i]);
      }
      return chars.join('');
    }
    function bufferClone(buf) {
      if (buf.slice) {
        return buf.slice(0);
      } else {
        var view = new Uint8Array(buf.byteLength);
        view.set(new Uint8Array(buf));
        return view.buffer;
      }
    }
    function Body() {
      this.bodyUsed = false;
      this._initBody = function (body) {
        /*
          fetch-mock wraps the Response object in an ES6 Proxy to
          provide useful test harness features such as flush. However, on
          ES5 browsers without fetch or Proxy support pollyfills must be used;
          the proxy-pollyfill is unable to proxy an attribute unless it exists
          on the object before the Proxy is created. This change ensures
          Response.bodyUsed exists on the instance, while maintaining the
          semantic of setting Request.bodyUsed in the constructor before
          _initBody is called.
        */
        // eslint-disable-next-line no-self-assign
        this.bodyUsed = this.bodyUsed;
        this._bodyInit = body;
        if (!body) {
          this._noBody = true;
          this._bodyText = '';
        } else if (typeof body === 'string') {
          this._bodyText = body;
        } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
          this._bodyBlob = body;
        } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
          this._bodyFormData = body;
        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
          this._bodyText = body.toString();
        } else if (support.arrayBuffer && support.blob && isDataView(body)) {
          this._bodyArrayBuffer = bufferClone(body.buffer);
          // IE 10-11 can't handle a DataView body.
          this._bodyInit = new Blob([this._bodyArrayBuffer]);
        } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
          this._bodyArrayBuffer = bufferClone(body);
        } else {
          this._bodyText = body = Object.prototype.toString.call(body);
        }
        if (!this.headers.get('content-type')) {
          if (typeof body === 'string') {
            this.headers.set('content-type', 'text/plain;charset=UTF-8');
          } else if (this._bodyBlob && this._bodyBlob.type) {
            this.headers.set('content-type', this._bodyBlob.type);
          } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
            this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
          }
        }
      };
      if (support.blob) {
        this.blob = function () {
          var rejected = consumed(this);
          if (rejected) {
            return rejected;
          }
          if (this._bodyBlob) {
            return Promise.resolve(this._bodyBlob);
          } else if (this._bodyArrayBuffer) {
            return Promise.resolve(new Blob([this._bodyArrayBuffer]));
          } else if (this._bodyFormData) {
            throw new Error('could not read FormData body as blob');
          } else {
            return Promise.resolve(new Blob([this._bodyText]));
          }
        };
      }
      this.arrayBuffer = function () {
        if (this._bodyArrayBuffer) {
          var isConsumed = consumed(this);
          if (isConsumed) {
            return isConsumed;
          } else if (ArrayBuffer.isView(this._bodyArrayBuffer)) {
            return Promise.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset, this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength));
          } else {
            return Promise.resolve(this._bodyArrayBuffer);
          }
        } else if (support.blob) {
          return this.blob().then(readBlobAsArrayBuffer);
        } else {
          throw new Error('could not read as ArrayBuffer');
        }
      };
      this.text = function () {
        var rejected = consumed(this);
        if (rejected) {
          return rejected;
        }
        if (this._bodyBlob) {
          return readBlobAsText(this._bodyBlob);
        } else if (this._bodyArrayBuffer) {
          return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as text');
        } else {
          return Promise.resolve(this._bodyText);
        }
      };
      if (support.formData) {
        this.formData = function () {
          return this.text().then(decode);
        };
      }
      this.json = function () {
        return this.text().then(JSON.parse);
      };
      return this;
    }

    // HTTP methods whose capitalization should be normalized
    var methods = ['CONNECT', 'DELETE', 'GET', 'HEAD', 'OPTIONS', 'PATCH', 'POST', 'PUT', 'TRACE'];
    function normalizeMethod(method) {
      var upcased = method.toUpperCase();
      return methods.indexOf(upcased) > -1 ? upcased : method;
    }
    function Request(input, options) {
      if (!(this instanceof Request)) {
        throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
      }
      options = options || {};
      var body = options.body;
      if (input instanceof Request) {
        if (input.bodyUsed) {
          throw new TypeError('Already read');
        }
        this.url = input.url;
        this.credentials = input.credentials;
        if (!options.headers) {
          this.headers = new Headers(input.headers);
        }
        this.method = input.method;
        this.mode = input.mode;
        this.signal = input.signal;
        if (!body && input._bodyInit != null) {
          body = input._bodyInit;
          input.bodyUsed = true;
        }
      } else {
        this.url = String(input);
      }
      this.credentials = options.credentials || this.credentials || 'same-origin';
      if (options.headers || !this.headers) {
        this.headers = new Headers(options.headers);
      }
      this.method = normalizeMethod(options.method || this.method || 'GET');
      this.mode = options.mode || this.mode || null;
      this.signal = options.signal || this.signal || function () {
        if ('AbortController' in g) {
          var ctrl = new AbortController();
          return ctrl.signal;
        }
      }();
      this.referrer = null;
      if ((this.method === 'GET' || this.method === 'HEAD') && body) {
        throw new TypeError('Body not allowed for GET or HEAD requests');
      }
      this._initBody(body);
      if (this.method === 'GET' || this.method === 'HEAD') {
        if (options.cache === 'no-store' || options.cache === 'no-cache') {
          // Search for a '_' parameter in the query string
          var reParamSearch = /([?&])_=[^&]*/;
          if (reParamSearch.test(this.url)) {
            // If it already exists then set the value with the current time
            this.url = this.url.replace(reParamSearch, '$1_=' + new Date().getTime());
          } else {
            // Otherwise add a new '_' parameter to the end with the current time
            var reQueryString = /\?/;
            this.url += (reQueryString.test(this.url) ? '&' : '?') + '_=' + new Date().getTime();
          }
        }
      }
    }
    Request.prototype.clone = function () {
      return new Request(this, {
        body: this._bodyInit
      });
    };
    function decode(body) {
      var form = new FormData();
      body.trim().split('&').forEach(function (bytes) {
        if (bytes) {
          var split = bytes.split('=');
          var name = split.shift().replace(/\+/g, ' ');
          var value = split.join('=').replace(/\+/g, ' ');
          form.append(decodeURIComponent(name), decodeURIComponent(value));
        }
      });
      return form;
    }
    function parseHeaders(rawHeaders) {
      var headers = new Headers();
      // Replace instances of \r\n and \n followed by at least one space or horizontal tab with a space
      // https://tools.ietf.org/html/rfc7230#section-3.2
      var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, ' ');
      // Avoiding split via regex to work around a common IE11 bug with the core-js 3.6.0 regex polyfill
      // https://github.com/github/fetch/issues/748
      // https://github.com/zloirock/core-js/issues/751
      preProcessedHeaders.split('\r').map(function (header) {
        return header.indexOf('\n') === 0 ? header.substr(1, header.length) : header;
      }).forEach(function (line) {
        var parts = line.split(':');
        var key = parts.shift().trim();
        if (key) {
          var value = parts.join(':').trim();
          try {
            headers.append(key, value);
          } catch (error) {
            console.warn('Response ' + error.message);
          }
        }
      });
      return headers;
    }
    Body.call(Request.prototype);
    function Response(bodyInit, options) {
      if (!(this instanceof Response)) {
        throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
      }
      if (!options) {
        options = {};
      }
      this.type = 'default';
      this.status = options.status === undefined ? 200 : options.status;
      if (this.status < 200 || this.status > 599) {
        throw new RangeError("Failed to construct 'Response': The status provided (0) is outside the range [200, 599].");
      }
      this.ok = this.status >= 200 && this.status < 300;
      this.statusText = options.statusText === undefined ? '' : '' + options.statusText;
      this.headers = new Headers(options.headers);
      this.url = options.url || '';
      this._initBody(bodyInit);
    }
    Body.call(Response.prototype);
    Response.prototype.clone = function () {
      return new Response(this._bodyInit, {
        status: this.status,
        statusText: this.statusText,
        headers: new Headers(this.headers),
        url: this.url
      });
    };
    Response.error = function () {
      var response = new Response(null, {
        status: 200,
        statusText: ''
      });
      response.ok = false;
      response.status = 0;
      response.type = 'error';
      return response;
    };
    var redirectStatuses = [301, 302, 303, 307, 308];
    Response.redirect = function (url, status) {
      if (redirectStatuses.indexOf(status) === -1) {
        throw new RangeError('Invalid status code');
      }
      return new Response(null, {
        status: status,
        headers: {
          location: url
        }
      });
    };
    exports.DOMException = g.DOMException;
    try {
      new exports.DOMException();
    } catch (err) {
      exports.DOMException = function (message, name) {
        this.message = message;
        this.name = name;
        var error = Error(message);
        this.stack = error.stack;
      };
      exports.DOMException.prototype = Object.create(Error.prototype);
      exports.DOMException.prototype.constructor = exports.DOMException;
    }
    function fetch(input, init) {
      return new Promise(function (resolve, reject) {
        var request = new Request(input, init);
        if (request.signal && request.signal.aborted) {
          return reject(new exports.DOMException('Aborted', 'AbortError'));
        }
        var xhr = new XMLHttpRequest();
        function abortXhr() {
          xhr.abort();
        }
        xhr.onload = function () {
          var options = {
            statusText: xhr.statusText,
            headers: parseHeaders(xhr.getAllResponseHeaders() || '')
          };
          // This check if specifically for when a user fetches a file locally from the file system
          // Only if the status is out of a normal range
          if (request.url.indexOf('file://') === 0 && (xhr.status < 200 || xhr.status > 599)) {
            options.status = 200;
          } else {
            options.status = xhr.status;
          }
          options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');
          var body = 'response' in xhr ? xhr.response : xhr.responseText;
          setTimeout(function () {
            resolve(new Response(body, options));
          }, 0);
        };
        xhr.onerror = function () {
          setTimeout(function () {
            reject(new TypeError('Network request failed'));
          }, 0);
        };
        xhr.ontimeout = function () {
          setTimeout(function () {
            reject(new TypeError('Network request timed out'));
          }, 0);
        };
        xhr.onabort = function () {
          setTimeout(function () {
            reject(new exports.DOMException('Aborted', 'AbortError'));
          }, 0);
        };
        function fixUrl(url) {
          try {
            return url === '' && g.location.href ? g.location.href : url;
          } catch (e) {
            return url;
          }
        }
        xhr.open(request.method, fixUrl(request.url), true);
        if (request.credentials === 'include') {
          xhr.withCredentials = true;
        } else if (request.credentials === 'omit') {
          xhr.withCredentials = false;
        }
        if ('responseType' in xhr) {
          if (support.blob) {
            xhr.responseType = 'blob';
          } else if (support.arrayBuffer) {
            xhr.responseType = 'arraybuffer';
          }
        }
        if (init && typeof init.headers === 'object' && !(init.headers instanceof Headers || g.Headers && init.headers instanceof g.Headers)) {
          var names = [];
          Object.getOwnPropertyNames(init.headers).forEach(function (name) {
            names.push(normalizeName(name));
            xhr.setRequestHeader(name, normalizeValue(init.headers[name]));
          });
          request.headers.forEach(function (value, name) {
            if (names.indexOf(name) === -1) {
              xhr.setRequestHeader(name, value);
            }
          });
        } else {
          request.headers.forEach(function (value, name) {
            xhr.setRequestHeader(name, value);
          });
        }
        if (request.signal) {
          request.signal.addEventListener('abort', abortXhr);
          xhr.onreadystatechange = function () {
            // DONE (success or failure)
            if (xhr.readyState === 4) {
              request.signal.removeEventListener('abort', abortXhr);
            }
          };
        }
        xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);
      });
    }
    fetch.polyfill = true;
    if (!g.fetch) {
      g.fetch = fetch;
      g.Headers = Headers;
      g.Request = Request;
      g.Response = Response;
    }
    exports.Headers = Headers;
    exports.Request = Request;
    exports.Response = Response;
    exports.fetch = fetch;
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
  });
},200,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var useBuiltInEventTarget = global.RN$useBuiltInEventTarget == null ? undefined : global.RN$useBuiltInEventTarget();
  var _default = exports.default = useBuiltInEventTarget ? _$$_REQUIRE(_dependencyMap[0]).default : _$$_REQUIRE(_dependencyMap[1]).default;
},201,[202,209]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _Event = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _EventTarget2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _MessageEvent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _CloseEvent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  var _Blob = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));
  var _BlobManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));
  var _NativeEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));
  var _binaryToBase = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));
  var _NativeWebSocketModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));
  var _base64Js = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));
  var _excluded = ["headers"];
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var CONNECTING = 0;
  var OPEN = 1;
  var CLOSING = 2;
  var CLOSED = 3;
  var CLOSE_NORMAL = 1000;
  var CLOSE_ABNORMAL = 1006;
  var nextWebSocketId = 0;
  var WebSocket = /*#__PURE__*/function (_EventTarget) {
    function WebSocket(url, protocols, options) {
      var _this;
      (0, _classCallCheck2.default)(this, WebSocket);
      _this = _callSuper(this, WebSocket);
      _this.CONNECTING = CONNECTING;
      _this.OPEN = OPEN;
      _this.CLOSING = CLOSING;
      _this.CLOSED = CLOSED;
      _this.readyState = CONNECTING;
      _this.url = url;
      if (typeof protocols === 'string') {
        protocols = [protocols];
      }
      var _ref = options || {},
        _ref$headers = _ref.headers,
        headers = _ref$headers === undefined ? {} : _ref$headers,
        unrecognized = (0, _objectWithoutProperties2.default)(_ref, _excluded);
      if (unrecognized && typeof unrecognized.origin === 'string') {
        console.warn('Specifying `origin` as a WebSocket connection option is deprecated. Include it under `headers` instead.');
        headers.origin = unrecognized.origin;
        delete unrecognized.origin;
      }
      if (Object.keys(unrecognized).length > 0) {
        console.warn('Unrecognized WebSocket connection option(s) `' + Object.keys(unrecognized).join('`, `') + '`. ' + 'Did you mean to put these under `headers`?');
      }
      if (!Array.isArray(protocols)) {
        protocols = null;
      }
      _this._eventEmitter = new _NativeEventEmitter.default(_Platform.default.OS !== 'ios' ? null : _NativeWebSocketModule.default);
      _this._socketId = nextWebSocketId++;
      _this._registerEvents();
      _NativeWebSocketModule.default.connect(url, protocols, {
        headers: headers
      }, _this._socketId);
      return _this;
    }
    (0, _inherits2.default)(WebSocket, _EventTarget);
    return (0, _createClass2.default)(WebSocket, [{
      key: "binaryType",
      get: function get() {
        return this._binaryType;
      },
      set: function set(binaryType) {
        if (binaryType !== 'blob' && binaryType !== 'arraybuffer') {
          throw new Error("binaryType must be either 'blob' or 'arraybuffer'");
        }
        if (this._binaryType === 'blob' || binaryType === 'blob') {
          (0, _invariant.default)(_BlobManager.default.isAvailable, 'Native module BlobModule is required for blob support');
          if (binaryType === 'blob') {
            _BlobManager.default.addWebSocketHandler(this._socketId);
          } else {
            _BlobManager.default.removeWebSocketHandler(this._socketId);
          }
        }
        this._binaryType = binaryType;
      }
    }, {
      key: "close",
      value: function close(code, reason) {
        if (this.readyState === this.CLOSING || this.readyState === this.CLOSED) {
          return;
        }
        this.readyState = this.CLOSING;
        this._close(code, reason);
      }
    }, {
      key: "send",
      value: function send(data) {
        if (this.readyState === this.CONNECTING) {
          throw new Error('INVALID_STATE_ERR');
        }
        if (data instanceof _Blob.default) {
          (0, _invariant.default)(_BlobManager.default.isAvailable, 'Native module BlobModule is required for blob support');
          _BlobManager.default.sendOverSocket(data, this._socketId);
          return;
        }
        if (typeof data === 'string') {
          _NativeWebSocketModule.default.send(data, this._socketId);
          return;
        }
        if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {
          _NativeWebSocketModule.default.sendBinary((0, _binaryToBase.default)(data), this._socketId);
          return;
        }
        throw new Error('Unsupported data type');
      }
    }, {
      key: "ping",
      value: function ping() {
        if (this.readyState === this.CONNECTING) {
          throw new Error('INVALID_STATE_ERR');
        }
        _NativeWebSocketModule.default.ping(this._socketId);
      }
    }, {
      key: "_close",
      value: function _close(code, reason) {
        var statusCode = typeof code === 'number' ? code : CLOSE_NORMAL;
        var closeReason = typeof reason === 'string' ? reason : '';
        _NativeWebSocketModule.default.close(statusCode, closeReason, this._socketId);
        if (_BlobManager.default.isAvailable && this._binaryType === 'blob') {
          _BlobManager.default.removeWebSocketHandler(this._socketId);
        }
      }
    }, {
      key: "_unregisterEvents",
      value: function _unregisterEvents() {
        this._subscriptions.forEach(function (e) {
          return e.remove();
        });
        this._subscriptions = [];
      }
    }, {
      key: "_registerEvents",
      value: function _registerEvents() {
        var _this2 = this;
        this._subscriptions = [this._eventEmitter.addListener('websocketMessage', function (ev) {
          if (ev.id !== _this2._socketId) {
            return;
          }
          var data = ev.data;
          switch (ev.type) {
            case 'binary':
              data = _base64Js.default.toByteArray(ev.data).buffer;
              break;
            case 'blob':
              data = _BlobManager.default.createFromOptions(ev.data);
              break;
          }
          _this2.dispatchEvent(new _MessageEvent.default('message', {
            data: data
          }));
        }), this._eventEmitter.addListener('websocketOpen', function (ev) {
          if (ev.id !== _this2._socketId) {
            return;
          }
          _this2.readyState = _this2.OPEN;
          _this2.protocol = ev.protocol;
          _this2.dispatchEvent(new _Event.default('open'));
        }), this._eventEmitter.addListener('websocketClosed', function (ev) {
          if (ev.id !== _this2._socketId) {
            return;
          }
          _this2.readyState = _this2.CLOSED;
          _this2.dispatchEvent(new _CloseEvent.default('close', {
            code: ev.code,
            reason: ev.reason
          }));
          _this2._unregisterEvents();
          _this2.close();
        }), this._eventEmitter.addListener('websocketFailed', function (ev) {
          if (ev.id !== _this2._socketId) {
            return;
          }
          _this2.readyState = _this2.CLOSED;
          _this2.dispatchEvent(new _Event.default('error'));
          _this2.dispatchEvent(new _CloseEvent.default('close', {
            code: CLOSE_ABNORMAL,
            reason: ev.message
          }));
          _this2._unregisterEvents();
          _this2.close();
        })];
      }
    }, {
      key: "onclose",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[19]).getEventHandlerAttribute)(this, 'close');
      },
      set: function set(listener) {
        (0, _$$_REQUIRE(_dependencyMap[19]).setEventHandlerAttribute)(this, 'close', listener);
      }
    }, {
      key: "onerror",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[19]).getEventHandlerAttribute)(this, 'error');
      },
      set: function set(listener) {
        (0, _$$_REQUIRE(_dependencyMap[19]).setEventHandlerAttribute)(this, 'error', listener);
      }
    }, {
      key: "onmessage",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[19]).getEventHandlerAttribute)(this, 'message');
      },
      set: function set(listener) {
        (0, _$$_REQUIRE(_dependencyMap[19]).setEventHandlerAttribute)(this, 'message', listener);
      }
    }, {
      key: "onopen",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[19]).getEventHandlerAttribute)(this, 'open');
      },
      set: function set(listener) {
        (0, _$$_REQUIRE(_dependencyMap[19]).setEventHandlerAttribute)(this, 'open', listener);
      }
    }]);
  }(_EventTarget2.default);
  WebSocket.CONNECTING = CONNECTING;
  WebSocket.OPEN = OPEN;
  WebSocket.CLOSING = CLOSING;
  WebSocket.CLOSED = CLOSED;
  var _default = exports.default = WebSocket;
},202,[1,203,12,13,23,25,28,175,177,205,206,183,180,191,194,33,207,189,20,185]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _objectWithoutProperties(e, t) {
    if (null == e) return {};
    var o,
      r,
      i = _$$_REQUIRE(_dependencyMap[0])(e, t);
    if (Object.getOwnPropertySymbols) {
      var n = Object.getOwnPropertySymbols(e);
      for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);
    }
    return i;
  }
  module.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports["default"] = module.exports;
},203,[204]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _objectWithoutPropertiesLoose(r, e) {
    if (null == r) return {};
    var t = {};
    for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
      if (-1 !== e.indexOf(n)) continue;
      t[n] = r[n];
    }
    return t;
  }
  module.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports["default"] = module.exports;
},204,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _Event2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var MessageEvent = exports.default = /*#__PURE__*/function (_Event) {
    function MessageEvent(type, options) {
      var _options$origin, _options$lastEventId;
      var _this;
      (0, _classCallCheck2.default)(this, MessageEvent);
      _this = _callSuper(this, MessageEvent, [type, options]);
      _this._data = options == null ? undefined : options.data;
      _this._origin = String((_options$origin = options == null ? undefined : options.origin) != null ? _options$origin : '');
      _this._lastEventId = String((_options$lastEventId = options == null ? undefined : options.lastEventId) != null ? _options$lastEventId : '');
      return _this;
    }
    (0, _inherits2.default)(MessageEvent, _Event);
    return (0, _createClass2.default)(MessageEvent, [{
      key: "data",
      get: function get() {
        return this._data;
      }
    }, {
      key: "origin",
      get: function get() {
        return this._origin;
      }
    }, {
      key: "lastEventId",
      get: function get() {
        return this._lastEventId;
      }
    }]);
  }(_Event2.default);
},205,[1,12,13,23,25,28,175]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _Event2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var CloseEvent = exports.default = /*#__PURE__*/function (_Event) {
    function CloseEvent(type, options) {
      var _this;
      (0, _classCallCheck2.default)(this, CloseEvent);
      _this = _callSuper(this, CloseEvent, [type, options]);
      _this._wasClean = Boolean(options == null ? undefined : options.wasClean);
      _this._code = Number(options == null ? undefined : options.code) || 0;
      _this._reason = (options == null ? undefined : options.reason) != null ? String(options.reason) : '';
      return _this;
    }
    (0, _inherits2.default)(CloseEvent, _Event);
    return (0, _createClass2.default)(CloseEvent, [{
      key: "wasClean",
      get: function get() {
        return this._wasClean;
      }
    }, {
      key: "code",
      get: function get() {
        return this._code;
      }
    }, {
      key: "reason",
      get: function get() {
        return this._reason;
      }
    }]);
  }(_Event2.default);
},206,[1,12,13,23,25,28,175]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeWebSocketModule = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeWebSocketModule).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeWebSocketModule[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeWebSocketModule[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeWebSocketModule.default;
},207,[208]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.getEnforcing('WebSocketModule');
},208,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _Blob = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _BlobManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _NativeEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _binaryToBase = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));
  var _NativeWebSocketModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));
  var _WebSocketEvent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));
  var _base64Js = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));
  var _eventTargetShim = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));
  var _excluded = ["headers"];
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var CONNECTING = 0;
  var OPEN = 1;
  var CLOSING = 2;
  var CLOSED = 3;
  var CLOSE_NORMAL = 1000;
  var CLOSE_ABNORMAL = 1006;
  var WEBSOCKET_EVENTS = ['close', 'error', 'message', 'open'];
  var nextWebSocketId = 0;
  var WebSocket = /*#__PURE__*/function (_ref) {
    function WebSocket(url, protocols, options) {
      var _this;
      (0, _classCallCheck2.default)(this, WebSocket);
      _this = _callSuper(this, WebSocket);
      _this.CONNECTING = CONNECTING;
      _this.OPEN = OPEN;
      _this.CLOSING = CLOSING;
      _this.CLOSED = CLOSED;
      _this.readyState = CONNECTING;
      _this.url = url;
      if (typeof protocols === 'string') {
        protocols = [protocols];
      }
      var _ref2 = options || {},
        _ref2$headers = _ref2.headers,
        headers = _ref2$headers === undefined ? {} : _ref2$headers,
        unrecognized = (0, _objectWithoutProperties2.default)(_ref2, _excluded);
      if (unrecognized && typeof unrecognized.origin === 'string') {
        console.warn('Specifying `origin` as a WebSocket connection option is deprecated. Include it under `headers` instead.');
        headers.origin = unrecognized.origin;
        delete unrecognized.origin;
      }
      if (Object.keys(unrecognized).length > 0) {
        console.warn('Unrecognized WebSocket connection option(s) `' + Object.keys(unrecognized).join('`, `') + '`. ' + 'Did you mean to put these under `headers`?');
      }
      if (!Array.isArray(protocols)) {
        protocols = null;
      }
      _this._eventEmitter = new _NativeEventEmitter.default(_Platform.default.OS !== 'ios' ? null : _NativeWebSocketModule.default);
      _this._socketId = nextWebSocketId++;
      _this._registerEvents();
      _NativeWebSocketModule.default.connect(url, protocols, {
        headers: headers
      }, _this._socketId);
      return _this;
    }
    (0, _inherits2.default)(WebSocket, _ref);
    return (0, _createClass2.default)(WebSocket, [{
      key: "binaryType",
      get: function get() {
        return this._binaryType;
      },
      set: function set(binaryType) {
        if (binaryType !== 'blob' && binaryType !== 'arraybuffer') {
          throw new Error("binaryType must be either 'blob' or 'arraybuffer'");
        }
        if (this._binaryType === 'blob' || binaryType === 'blob') {
          (0, _invariant.default)(_BlobManager.default.isAvailable, 'Native module BlobModule is required for blob support');
          if (binaryType === 'blob') {
            _BlobManager.default.addWebSocketHandler(this._socketId);
          } else {
            _BlobManager.default.removeWebSocketHandler(this._socketId);
          }
        }
        this._binaryType = binaryType;
      }
    }, {
      key: "close",
      value: function close(code, reason) {
        if (this.readyState === this.CLOSING || this.readyState === this.CLOSED) {
          return;
        }
        this.readyState = this.CLOSING;
        this._close(code, reason);
      }
    }, {
      key: "send",
      value: function send(data) {
        if (this.readyState === this.CONNECTING) {
          throw new Error('INVALID_STATE_ERR');
        }
        if (data instanceof _Blob.default) {
          (0, _invariant.default)(_BlobManager.default.isAvailable, 'Native module BlobModule is required for blob support');
          _BlobManager.default.sendOverSocket(data, this._socketId);
          return;
        }
        if (typeof data === 'string') {
          _NativeWebSocketModule.default.send(data, this._socketId);
          return;
        }
        if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {
          _NativeWebSocketModule.default.sendBinary((0, _binaryToBase.default)(data), this._socketId);
          return;
        }
        throw new Error('Unsupported data type');
      }
    }, {
      key: "ping",
      value: function ping() {
        if (this.readyState === this.CONNECTING) {
          throw new Error('INVALID_STATE_ERR');
        }
        _NativeWebSocketModule.default.ping(this._socketId);
      }
    }, {
      key: "_close",
      value: function _close(code, reason) {
        var statusCode = typeof code === 'number' ? code : CLOSE_NORMAL;
        var closeReason = typeof reason === 'string' ? reason : '';
        _NativeWebSocketModule.default.close(statusCode, closeReason, this._socketId);
        if (_BlobManager.default.isAvailable && this._binaryType === 'blob') {
          _BlobManager.default.removeWebSocketHandler(this._socketId);
        }
      }
    }, {
      key: "_unregisterEvents",
      value: function _unregisterEvents() {
        this._subscriptions.forEach(function (e) {
          return e.remove();
        });
        this._subscriptions = [];
      }
    }, {
      key: "_registerEvents",
      value: function _registerEvents() {
        var _this2 = this;
        this._subscriptions = [this._eventEmitter.addListener('websocketMessage', function (ev) {
          if (ev.id !== _this2._socketId) {
            return;
          }
          var data = ev.data;
          switch (ev.type) {
            case 'binary':
              data = _base64Js.default.toByteArray(ev.data).buffer;
              break;
            case 'blob':
              data = _BlobManager.default.createFromOptions(ev.data);
              break;
          }
          _this2.dispatchEvent(new _WebSocketEvent.default('message', {
            data: data
          }));
        }), this._eventEmitter.addListener('websocketOpen', function (ev) {
          if (ev.id !== _this2._socketId) {
            return;
          }
          _this2.readyState = _this2.OPEN;
          _this2.protocol = ev.protocol;
          _this2.dispatchEvent(new _WebSocketEvent.default('open'));
        }), this._eventEmitter.addListener('websocketClosed', function (ev) {
          if (ev.id !== _this2._socketId) {
            return;
          }
          _this2.readyState = _this2.CLOSED;
          _this2.dispatchEvent(new _WebSocketEvent.default('close', {
            code: ev.code,
            reason: ev.reason
          }));
          _this2._unregisterEvents();
          _this2.close();
        }), this._eventEmitter.addListener('websocketFailed', function (ev) {
          if (ev.id !== _this2._socketId) {
            return;
          }
          _this2.readyState = _this2.CLOSED;
          _this2.dispatchEvent(new _WebSocketEvent.default('error', {
            message: ev.message
          }));
          _this2.dispatchEvent(new _WebSocketEvent.default('close', {
            code: CLOSE_ABNORMAL,
            reason: ev.message
          }));
          _this2._unregisterEvents();
          _this2.close();
        })];
      }
    }]);
  }(_eventTargetShim.default.apply(undefined, WEBSOCKET_EVENTS));
  WebSocket.CONNECTING = CONNECTING;
  WebSocket.OPEN = OPEN;
  WebSocket.CLOSING = CLOSING;
  WebSocket.CLOSED = CLOSED;
  var _default = exports.default = WebSocket;
},209,[1,203,12,13,23,25,28,183,180,191,194,33,207,210,189,198,20]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var WebSocketEvent = /*#__PURE__*/(0, _createClass2.default)(function WebSocketEvent(type, eventInitDict) {
    (0, _classCallCheck2.default)(this, WebSocketEvent);
    this.type = type.toString();
    Object.assign(this, eventInitDict);
  });
  var _default = exports.default = WebSocketEvent;
},210,[1,13,12]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _Blob2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var File = /*#__PURE__*/function (_Blob) {
    function File(parts, name, options) {
      var _this;
      (0, _classCallCheck2.default)(this, File);
      _$$_REQUIRE(_dependencyMap[7])(parts != null && name != null, 'Failed to construct `File`: Must pass both `parts` and `name` arguments.');
      _this = _callSuper(this, File, [parts, options]);
      _this.data.name = name;
      return _this;
    }
    (0, _inherits2.default)(File, _Blob);
    return (0, _createClass2.default)(File, [{
      key: "name",
      get: function get() {
        _$$_REQUIRE(_dependencyMap[7])(this.data.name != null, 'Files must have a name set.');
        return this.data.name;
      }
    }, {
      key: "lastModified",
      get: function get() {
        return this.data.lastModified || 0;
      }
    }]);
  }(_Blob2.default);
  var _default = exports.default = File;
},211,[1,12,13,23,25,28,183,20]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var useBuiltInEventTarget = global.RN$useBuiltInEventTarget == null ? undefined : global.RN$useBuiltInEventTarget();
  var _default = exports.default = useBuiltInEventTarget ? _$$_REQUIRE(_dependencyMap[0]).default : _$$_REQUIRE(_dependencyMap[1]).default;
},212,[213,216]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _Event = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _EventTarget2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _NativeFileReaderModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var EMPTY = 0;
  var LOADING = 1;
  var DONE = 2;
  var FileReader = /*#__PURE__*/function (_EventTarget) {
    function FileReader() {
      var _this;
      (0, _classCallCheck2.default)(this, FileReader);
      _this = _callSuper(this, FileReader);
      _this.EMPTY = EMPTY;
      _this.LOADING = LOADING;
      _this.DONE = DONE;
      _this._aborted = false;
      _this._reset();
      return _this;
    }
    (0, _inherits2.default)(FileReader, _EventTarget);
    return (0, _createClass2.default)(FileReader, [{
      key: "_reset",
      value: function _reset() {
        this._readyState = EMPTY;
        this._error = null;
        this._result = null;
      }
    }, {
      key: "_setReadyState",
      value: function _setReadyState(newState) {
        this._readyState = newState;
        this.dispatchEvent(new _Event.default('readystatechange'));
        if (newState === DONE) {
          if (this._aborted) {
            this.dispatchEvent(new _Event.default('abort'));
          } else if (this._error) {
            this.dispatchEvent(new _Event.default('error'));
          } else {
            this.dispatchEvent(new _Event.default('load'));
          }
          this.dispatchEvent(new _Event.default('loadend'));
        }
      }
    }, {
      key: "readAsArrayBuffer",
      value: function readAsArrayBuffer(blob) {
        var _this2 = this;
        this._aborted = false;
        if (blob == null) {
          throw new TypeError("Failed to execute 'readAsArrayBuffer' on 'FileReader': parameter 1 is not of type 'Blob'");
        }
        _NativeFileReaderModule.default.readAsDataURL(blob.data).then(function (text) {
          if (_this2._aborted) {
            return;
          }
          var base64 = text.split(',')[1];
          var typedArray = (0, _$$_REQUIRE(_dependencyMap[9]).toByteArray)(base64);
          _this2._result = typedArray.buffer;
          _this2._setReadyState(DONE);
        }, function (error) {
          if (_this2._aborted) {
            return;
          }
          _this2._error = error;
          _this2._setReadyState(DONE);
        });
      }
    }, {
      key: "readAsDataURL",
      value: function readAsDataURL(blob) {
        var _this3 = this;
        this._aborted = false;
        if (blob == null) {
          throw new TypeError("Failed to execute 'readAsDataURL' on 'FileReader': parameter 1 is not of type 'Blob'");
        }
        _NativeFileReaderModule.default.readAsDataURL(blob.data).then(function (text) {
          if (_this3._aborted) {
            return;
          }
          _this3._result = text;
          _this3._setReadyState(DONE);
        }, function (error) {
          if (_this3._aborted) {
            return;
          }
          _this3._error = error;
          _this3._setReadyState(DONE);
        });
      }
    }, {
      key: "readAsText",
      value: function readAsText(blob) {
        var _this4 = this;
        var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'UTF-8';
        this._aborted = false;
        if (blob == null) {
          throw new TypeError("Failed to execute 'readAsText' on 'FileReader': parameter 1 is not of type 'Blob'");
        }
        _NativeFileReaderModule.default.readAsText(blob.data, encoding).then(function (text) {
          if (_this4._aborted) {
            return;
          }
          _this4._result = text;
          _this4._setReadyState(DONE);
        }, function (error) {
          if (_this4._aborted) {
            return;
          }
          _this4._error = error;
          _this4._setReadyState(DONE);
        });
      }
    }, {
      key: "abort",
      value: function abort() {
        this._aborted = true;
        if (this._readyState !== EMPTY && this._readyState !== DONE) {
          this._reset();
          this._setReadyState(DONE);
        }
        this._reset();
      }
    }, {
      key: "readyState",
      get: function get() {
        return this._readyState;
      }
    }, {
      key: "error",
      get: function get() {
        return this._error;
      }
    }, {
      key: "result",
      get: function get() {
        return this._result;
      }
    }, {
      key: "onabort",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[10]).getEventHandlerAttribute)(this, 'abort');
      },
      set: function set(listener) {
        (0, _$$_REQUIRE(_dependencyMap[10]).setEventHandlerAttribute)(this, 'abort', listener);
      }
    }, {
      key: "onerror",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[10]).getEventHandlerAttribute)(this, 'error');
      },
      set: function set(listener) {
        (0, _$$_REQUIRE(_dependencyMap[10]).setEventHandlerAttribute)(this, 'error', listener);
      }
    }, {
      key: "onload",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[10]).getEventHandlerAttribute)(this, 'load');
      },
      set: function set(listener) {
        (0, _$$_REQUIRE(_dependencyMap[10]).setEventHandlerAttribute)(this, 'load', listener);
      }
    }, {
      key: "onloadstart",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[10]).getEventHandlerAttribute)(this, 'loadstart');
      },
      set: function set(listener) {
        (0, _$$_REQUIRE(_dependencyMap[10]).setEventHandlerAttribute)(this, 'loadstart', listener);
      }
    }, {
      key: "onloadend",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[10]).getEventHandlerAttribute)(this, 'loadend');
      },
      set: function set(listener) {
        (0, _$$_REQUIRE(_dependencyMap[10]).setEventHandlerAttribute)(this, 'loadend', listener);
      }
    }, {
      key: "onprogress",
      get: function get() {
        return (0, _$$_REQUIRE(_dependencyMap[10]).getEventHandlerAttribute)(this, 'progress');
      },
      set: function set(listener) {
        (0, _$$_REQUIRE(_dependencyMap[10]).setEventHandlerAttribute)(this, 'progress', listener);
      }
    }]);
  }(_EventTarget2.default);
  FileReader.EMPTY = EMPTY;
  FileReader.LOADING = LOADING;
  FileReader.DONE = DONE;
  var _default = exports.default = FileReader;
},213,[1,12,13,23,25,28,175,177,214,189,185]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeFileReaderModule = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeFileReaderModule).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeFileReaderModule[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeFileReaderModule[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeFileReaderModule.default;
},214,[215]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.getEnforcing('FileReaderModule');
},215,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _NativeFileReaderModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _eventTargetShim = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var READER_EVENTS = ['abort', 'error', 'load', 'loadstart', 'loadend', 'progress'];
  var EMPTY = 0;
  var LOADING = 1;
  var DONE = 2;
  var FileReader = /*#__PURE__*/function (_ref) {
    function FileReader() {
      var _this;
      (0, _classCallCheck2.default)(this, FileReader);
      _this = _callSuper(this, FileReader);
      _this.EMPTY = EMPTY;
      _this.LOADING = LOADING;
      _this.DONE = DONE;
      _this._aborted = false;
      _this._reset();
      return _this;
    }
    (0, _inherits2.default)(FileReader, _ref);
    return (0, _createClass2.default)(FileReader, [{
      key: "_reset",
      value: function _reset() {
        this._readyState = EMPTY;
        this._error = null;
        this._result = null;
      }
    }, {
      key: "_setReadyState",
      value: function _setReadyState(newState) {
        this._readyState = newState;
        this.dispatchEvent({
          type: 'readystatechange'
        });
        if (newState === DONE) {
          if (this._aborted) {
            this.dispatchEvent({
              type: 'abort'
            });
          } else if (this._error) {
            this.dispatchEvent({
              type: 'error'
            });
          } else {
            this.dispatchEvent({
              type: 'load'
            });
          }
          this.dispatchEvent({
            type: 'loadend'
          });
        }
      }
    }, {
      key: "readAsArrayBuffer",
      value: function readAsArrayBuffer(blob) {
        var _this2 = this;
        this._aborted = false;
        if (blob == null) {
          throw new TypeError("Failed to execute 'readAsArrayBuffer' on 'FileReader': parameter 1 is not of type 'Blob'");
        }
        _NativeFileReaderModule.default.readAsDataURL(blob.data).then(function (text) {
          if (_this2._aborted) {
            return;
          }
          var base64 = text.split(',')[1];
          var typedArray = (0, _$$_REQUIRE(_dependencyMap[8]).toByteArray)(base64);
          _this2._result = typedArray.buffer;
          _this2._setReadyState(DONE);
        }, function (error) {
          if (_this2._aborted) {
            return;
          }
          _this2._error = error;
          _this2._setReadyState(DONE);
        });
      }
    }, {
      key: "readAsDataURL",
      value: function readAsDataURL(blob) {
        var _this3 = this;
        this._aborted = false;
        if (blob == null) {
          throw new TypeError("Failed to execute 'readAsDataURL' on 'FileReader': parameter 1 is not of type 'Blob'");
        }
        _NativeFileReaderModule.default.readAsDataURL(blob.data).then(function (text) {
          if (_this3._aborted) {
            return;
          }
          _this3._result = text;
          _this3._setReadyState(DONE);
        }, function (error) {
          if (_this3._aborted) {
            return;
          }
          _this3._error = error;
          _this3._setReadyState(DONE);
        });
      }
    }, {
      key: "readAsText",
      value: function readAsText(blob) {
        var _this4 = this;
        var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'UTF-8';
        this._aborted = false;
        if (blob == null) {
          throw new TypeError("Failed to execute 'readAsText' on 'FileReader': parameter 1 is not of type 'Blob'");
        }
        _NativeFileReaderModule.default.readAsText(blob.data, encoding).then(function (text) {
          if (_this4._aborted) {
            return;
          }
          _this4._result = text;
          _this4._setReadyState(DONE);
        }, function (error) {
          if (_this4._aborted) {
            return;
          }
          _this4._error = error;
          _this4._setReadyState(DONE);
        });
      }
    }, {
      key: "abort",
      value: function abort() {
        this._aborted = true;
        if (this._readyState !== EMPTY && this._readyState !== DONE) {
          this._reset();
          this._setReadyState(DONE);
        }
        this._reset();
      }
    }, {
      key: "readyState",
      get: function get() {
        return this._readyState;
      }
    }, {
      key: "error",
      get: function get() {
        return this._error;
      }
    }, {
      key: "result",
      get: function get() {
        return this._result;
      }
    }]);
  }(_eventTargetShim.default.apply(undefined, READER_EVENTS));
  FileReader.EMPTY = EMPTY;
  FileReader.LOADING = LOADING;
  FileReader.DONE = DONE;
  var _default = exports.default = FileReader;
},216,[1,12,13,23,25,28,214,198,189]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.URL = undefined;
  Object.defineProperty(exports, "URLSearchParams", {
    enumerable: true,
    get: function get() {
      return _$$_REQUIRE(_dependencyMap[1]).URLSearchParams;
    }
  });
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _NativeBlobModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var BLOB_URL_PREFIX = null;
  if (_NativeBlobModule.default && typeof _NativeBlobModule.default.getConstants().BLOB_URI_SCHEME === 'string') {
    var constants = _NativeBlobModule.default.getConstants();
    BLOB_URL_PREFIX = constants.BLOB_URI_SCHEME + ':';
    if (typeof constants.BLOB_URI_HOST === 'string') {
      BLOB_URL_PREFIX += `//${constants.BLOB_URI_HOST}/`;
    }
  }
  function validateBaseUrl(url) {
    return /^(?:(?:(?:https?|ftp):)?\/\/)(?:(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z0-9\u00a1-\uffff][a-z0-9\u00a1-\uffff_-]{0,62})?[a-z0-9\u00a1-\uffff]\.)*(?:[a-z\u00a1-\uffff]{2,}\.?))(?::\d{2,5})?(?:[/?#]\S*)?$/.test(url);
  }
  var URL = exports.URL = /*#__PURE__*/function () {
    function URL(url, base) {
      (0, _classCallCheck2.default)(this, URL);
      this._searchParamsInstance = null;
      var baseUrl = null;
      if (!base || validateBaseUrl(url)) {
        this._url = url;
        if (!this._url.endsWith('/')) {
          this._url += '/';
        }
      } else {
        if (typeof base === 'string') {
          baseUrl = base;
          if (!validateBaseUrl(baseUrl)) {
            throw new TypeError(`Invalid base URL: ${baseUrl}`);
          }
        } else {
          baseUrl = base.toString();
        }
        if (baseUrl.endsWith('/')) {
          baseUrl = baseUrl.slice(0, baseUrl.length - 1);
        }
        if (!url.startsWith('/')) {
          url = `/${url}`;
        }
        if (baseUrl.endsWith(url)) {
          url = '';
        }
        this._url = `${baseUrl}${url}`;
      }
    }
    return (0, _createClass2.default)(URL, [{
      key: "hash",
      get: function get() {
        throw new Error('URL.hash is not implemented');
      }
    }, {
      key: "host",
      get: function get() {
        throw new Error('URL.host is not implemented');
      }
    }, {
      key: "hostname",
      get: function get() {
        throw new Error('URL.hostname is not implemented');
      }
    }, {
      key: "href",
      get: function get() {
        return this.toString();
      }
    }, {
      key: "origin",
      get: function get() {
        throw new Error('URL.origin is not implemented');
      }
    }, {
      key: "password",
      get: function get() {
        throw new Error('URL.password is not implemented');
      }
    }, {
      key: "pathname",
      get: function get() {
        throw new Error('URL.pathname not implemented');
      }
    }, {
      key: "port",
      get: function get() {
        throw new Error('URL.port is not implemented');
      }
    }, {
      key: "protocol",
      get: function get() {
        throw new Error('URL.protocol is not implemented');
      }
    }, {
      key: "search",
      get: function get() {
        throw new Error('URL.search is not implemented');
      }
    }, {
      key: "searchParams",
      get: function get() {
        if (this._searchParamsInstance == null) {
          this._searchParamsInstance = new URLSearchParams();
        }
        return this._searchParamsInstance;
      }
    }, {
      key: "toJSON",
      value: function toJSON() {
        return this.toString();
      }
    }, {
      key: "toString",
      value: function toString() {
        if (this._searchParamsInstance === null) {
          return this._url;
        }
        var instanceString = this._searchParamsInstance.toString();
        var separator = this._url.indexOf('?') > -1 ? '&' : '?';
        return this._url + separator + instanceString;
      }
    }, {
      key: "username",
      get: function get() {
        throw new Error('URL.username is not implemented');
      }
    }], [{
      key: "createObjectURL",
      value: function createObjectURL(blob) {
        if (BLOB_URL_PREFIX === null) {
          throw new Error('Cannot create URL for blob!');
        }
        return `${BLOB_URL_PREFIX}${blob.data.blobId}?offset=${blob.data.offset}&size=${blob.size}`;
      }
    }, {
      key: "revokeObjectURL",
      value: function revokeObjectURL(url) {}
    }]);
  }();
},217,[1,218,12,13,181]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.URLSearchParams = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var URLSearchParams = exports.URLSearchParams = /*#__PURE__*/function () {
    function URLSearchParams(params) {
      var _this = this;
      (0, _classCallCheck2.default)(this, URLSearchParams);
      this._searchParams = [];
      if (typeof params === 'object') {
        Object.keys(params).forEach(function (key) {
          return _this.append(key, params[key]);
        });
      }
    }
    return (0, _createClass2.default)(URLSearchParams, [{
      key: "append",
      value: function append(key, value) {
        this._searchParams.push([key, value]);
      }
    }, {
      key: "delete",
      value: function _delete(name) {
        throw new Error('URLSearchParams.delete is not implemented');
      }
    }, {
      key: "get",
      value: function get(name) {
        throw new Error('URLSearchParams.get is not implemented');
      }
    }, {
      key: "getAll",
      value: function getAll(name) {
        throw new Error('URLSearchParams.getAll is not implemented');
      }
    }, {
      key: "has",
      value: function has(name) {
        throw new Error('URLSearchParams.has is not implemented');
      }
    }, {
      key: "set",
      value: function set(name, value) {
        throw new Error('URLSearchParams.set is not implemented');
      }
    }, {
      key: "sort",
      value: function sort() {
        throw new Error('URLSearchParams.sort is not implemented');
      }
    }, {
      key: Symbol.iterator,
      value: function value() {
        return this._searchParams[Symbol.iterator]();
      }
    }, {
      key: "toString",
      value: function toString() {
        if (this._searchParams.length === 0) {
          return '';
        }
        var last = this._searchParams.length - 1;
        return this._searchParams.reduce(function (acc, curr, index) {
          return acc + encodeURIComponent(curr[0]) + '=' + encodeURIComponent(curr[1]) + (index === last ? '' : '&');
        }, '');
      }
    }]);
  }();
},218,[1,12,13]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /**
   * @author Toru Nagashima <https://github.com/mysticatea>
   * See LICENSE file in root directory for full license.
   */
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);
  var _createClass = _$$_REQUIRE(_dependencyMap[1]);
  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);
  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);
  var _inherits = _$$_REQUIRE(_dependencyMap[4]);
  function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  Object.defineProperty(exports, '__esModule', {
    value: true
  });
  /**
   * The signal class.
   * @see https://dom.spec.whatwg.org/#abortsignal
   */
  var AbortSignal = /*#__PURE__*/function (_eventTargetShim$Even) {
    /**
     * AbortSignal cannot be constructed directly.
     */
    function AbortSignal() {
      var _this;
      _classCallCheck(this, AbortSignal);
      _this = _callSuper(this, AbortSignal);
      throw new TypeError("AbortSignal cannot be constructed directly");
      return _this;
    }
    /**
     * Returns `true` if this `AbortSignal`'s `AbortController` has signaled to abort, and `false` otherwise.
     */
    _inherits(AbortSignal, _eventTargetShim$Even);
    return _createClass(AbortSignal, [{
      key: "aborted",
      get: function get() {
        var aborted = abortedFlags.get(this);
        if (typeof aborted !== "boolean") {
          throw new TypeError(`Expected 'this' to be an 'AbortSignal' object, but got ${this === null ? "null" : typeof this}`);
        }
        return aborted;
      }
    }]);
  }(_$$_REQUIRE(_dependencyMap[5]).EventTarget);
  _$$_REQUIRE(_dependencyMap[5]).defineEventAttribute(AbortSignal.prototype, "abort");
  /**
   * Create an AbortSignal object.
   */
  function createAbortSignal() {
    var signal = Object.create(AbortSignal.prototype);
    _$$_REQUIRE(_dependencyMap[5]).EventTarget.call(signal);
    abortedFlags.set(signal, false);
    return signal;
  }
  /**
   * Abort a given signal.
   */
  function abortSignal(signal) {
    if (abortedFlags.get(signal) !== false) {
      return;
    }
    abortedFlags.set(signal, true);
    signal.dispatchEvent({
      type: "abort"
    });
  }
  /**
   * Aborted flag for each instances.
   */
  var abortedFlags = new WeakMap();
  // Properties should be enumerable.
  Object.defineProperties(AbortSignal.prototype, {
    aborted: {
      enumerable: true
    }
  });
  // `toString()` should return `"[object AbortSignal]"`
  if (typeof Symbol === "function" && typeof Symbol.toStringTag === "symbol") {
    Object.defineProperty(AbortSignal.prototype, Symbol.toStringTag, {
      configurable: true,
      value: "AbortSignal"
    });
  }

  /**
   * The AbortController.
   * @see https://dom.spec.whatwg.org/#abortcontroller
   */
  var AbortController = /*#__PURE__*/function () {
    /**
     * Initialize this controller.
     */
    function AbortController() {
      _classCallCheck(this, AbortController);
      signals.set(this, createAbortSignal());
    }
    /**
     * Returns the `AbortSignal` object associated with this object.
     */
    return _createClass(AbortController, [{
      key: "signal",
      get: function get() {
        return getSignal(this);
      }
      /**
       * Abort and signal to any observers that the associated activity is to be aborted.
       */
    }, {
      key: "abort",
      value: function abort() {
        abortSignal(getSignal(this));
      }
    }]);
  }();
  /**
   * Associated signals.
   */
  var signals = new WeakMap();
  /**
   * Get the associated signal of a given controller.
   */
  function getSignal(controller) {
    var signal = signals.get(controller);
    if (signal == null) {
      throw new TypeError(`Expected 'this' to be an 'AbortController' object, but got ${controller === null ? "null" : typeof controller}`);
    }
    return signal;
  }
  // Properties should be enumerable.
  Object.defineProperties(AbortController.prototype, {
    signal: {
      enumerable: true
    },
    abort: {
      enumerable: true
    }
  });
  if (typeof Symbol === "function" && typeof Symbol.toStringTag === "symbol") {
    Object.defineProperty(AbortController.prototype, Symbol.toStringTag, {
      configurable: true,
      value: "AbortController"
    });
  }
  exports.AbortController = AbortController;
  exports.AbortSignal = AbortSignal;
  exports.default = AbortController;
  module.exports = AbortController;
  module.exports.AbortController = module.exports["default"] = AbortController;
  module.exports.AbortSignal = AbortSignal;
},219,[12,13,23,25,28,198]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (!global.alert) {
    global.alert = function (text) {
      _$$_REQUIRE(_dependencyMap[0]).default.alert('Alert', '' + text);
    };
  }
},220,[221]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _RCTAlertManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var Alert = /*#__PURE__*/function () {
    function Alert() {
      (0, _classCallCheck2.default)(this, Alert);
    }
    return (0, _createClass2.default)(Alert, null, [{
      key: "alert",
      value: function alert(title, message, buttons, options) {
        if (_Platform.default.OS === 'ios') {
          Alert.prompt(title, message, buttons, 'default', undefined, undefined, options);
        } else if (_Platform.default.OS === 'android') {
          var NativeDialogManagerAndroid = _$$_REQUIRE(_dependencyMap[5]).default;
          if (!NativeDialogManagerAndroid) {
            return;
          }
          var constants = NativeDialogManagerAndroid.getConstants();
          var config = {
            title: title || '',
            message: message || '',
            cancelable: false
          };
          if (options && options.cancelable) {
            config.cancelable = options.cancelable;
          }
          var defaultPositiveText = 'OK';
          var validButtons = buttons ? buttons.slice(0, 3) : [{
            text: defaultPositiveText
          }];
          var buttonPositive = validButtons.pop();
          var buttonNegative = validButtons.pop();
          var buttonNeutral = validButtons.pop();
          if (buttonNeutral) {
            config.buttonNeutral = buttonNeutral.text || '';
          }
          if (buttonNegative) {
            config.buttonNegative = buttonNegative.text || '';
          }
          if (buttonPositive) {
            config.buttonPositive = buttonPositive.text || defaultPositiveText;
          }
          var onAction = function onAction(action, buttonKey) {
            if (action === constants.buttonClicked) {
              if (buttonKey === constants.buttonNeutral) {
                buttonNeutral.onPress && buttonNeutral.onPress();
              } else if (buttonKey === constants.buttonNegative) {
                buttonNegative.onPress && buttonNegative.onPress();
              } else if (buttonKey === constants.buttonPositive) {
                buttonPositive.onPress && buttonPositive.onPress();
              }
            } else if (action === constants.dismissed) {
              options && options.onDismiss && options.onDismiss();
            }
          };
          var onError = function onError(errorMessage) {
            return console.warn(errorMessage);
          };
          NativeDialogManagerAndroid.showAlert(config, onError, onAction);
        }
      }
    }, {
      key: "prompt",
      value: function prompt(title, message, callbackOrButtons) {
        var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'plain-text';
        var defaultValue = arguments.length > 4 ? arguments[4] : undefined;
        var keyboardType = arguments.length > 5 ? arguments[5] : undefined;
        var options = arguments.length > 6 ? arguments[6] : undefined;
        if (_Platform.default.OS === 'ios') {
          var callbacks = [];
          var buttons = [];
          var cancelButtonKey;
          var destructiveButtonKey;
          var preferredButtonKey;
          if (typeof callbackOrButtons === 'function') {
            callbacks = [callbackOrButtons];
          } else if (Array.isArray(callbackOrButtons)) {
            callbackOrButtons.forEach(function (btn, index) {
              callbacks[index] = btn.onPress;
              if (btn.style === 'cancel') {
                cancelButtonKey = String(index);
              } else if (btn.style === 'destructive') {
                destructiveButtonKey = String(index);
              }
              if (btn.isPreferred) {
                preferredButtonKey = String(index);
              }
              if (btn.text || index < (callbackOrButtons || []).length - 1) {
                var btnDef = {};
                btnDef[index] = btn.text || '';
                buttons.push(btnDef);
              }
            });
          }
          _RCTAlertManager.default.alertWithArgs({
            title: title || '',
            message: message || undefined,
            buttons: buttons,
            type: type || undefined,
            defaultValue: defaultValue,
            cancelButtonKey: cancelButtonKey,
            destructiveButtonKey: destructiveButtonKey,
            preferredButtonKey: preferredButtonKey,
            keyboardType: keyboardType,
            userInterfaceStyle: (options == null ? undefined : options.userInterfaceStyle) || undefined
          }, function (id, value) {
            var cb = callbacks[id];
            cb && cb(value);
          });
        }
      }
    }]);
  }();
  var _default = exports.default = Alert;
},221,[1,12,13,33,222,223]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _NativeDialogManagerAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  /**
   * Copyright (c) Meta Platforms, Inc. and affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * @format
   */

  function emptyCallback() {}
  var _default = exports.default = {
    alertWithArgs: function alertWithArgs(args, callback) {
      // TODO(5998984): Polyfill it correctly with DialogManagerAndroid
      if (!_NativeDialogManagerAndroid.default) {
        return;
      }
      _NativeDialogManagerAndroid.default.showAlert(args, emptyCallback, callback || emptyCallback);
    }
  };
},222,[1,223]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeDialogManagerAndroid = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeDialogManagerAndroid).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeDialogManagerAndroid[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeDialogManagerAndroid[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeDialogManagerAndroid.default;
},223,[224]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.get('DialogManagerAndroid');
},224,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var navigator = global.navigator;
  if (navigator === undefined) {
    global.navigator = {
      product: 'ReactNative'
    };
  } else {
    _$$_REQUIRE(_dependencyMap[0]).polyfillObjectProperty(navigator, 'product', function () {
      return 'ReactNative';
    });
  }
},225,[65]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  var _registerCallableModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  (0, _registerCallableModule.default)('Systrace', function () {
    return _$$_REQUIRE(_dependencyMap[2]);
  });
  if (!(global.RN$Bridgeless === true)) {
    (0, _registerCallableModule.default)('JSTimers', function () {
      return _$$_REQUIRE(_dependencyMap[3]).default;
    });
  }
  (0, _registerCallableModule.default)('RCTLog', function () {
    return _$$_REQUIRE(_dependencyMap[4]).default;
  });
  (0, _registerCallableModule.default)('RCTDeviceEventEmitter', function () {
    return _$$_REQUIRE(_dependencyMap[5]).default;
  });
  (0, _registerCallableModule.default)('RCTNativeAppEventEmitter', function () {
    return _$$_REQUIRE(_dependencyMap[6]).default;
  });
  (0, _registerCallableModule.default)('GlobalPerformanceLogger', function () {
    return _$$_REQUIRE(_dependencyMap[7]).default;
  });
  {
    (0, _registerCallableModule.default)('HMRClient', function () {
      return _$$_REQUIRE(_dependencyMap[8]).default;
    });
  }
},226,[1,3,17,154,227,22,228,186,229]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var levelsMap = {
    log: 'log',
    info: 'info',
    warn: 'warn',
    error: 'error',
    fatal: 'error'
  };
  var warningHandler = null;
  var RCTLog = {
    logIfNoNativeHook: function logIfNoNativeHook(level) {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      if (typeof global.nativeLoggingHook === 'undefined') {
        RCTLog.logToConsole.apply(RCTLog, [level].concat(args));
      } else {
        if (warningHandler && level === 'warn') {
          warningHandler.apply(undefined, args);
        }
      }
    },
    logToConsole: function logToConsole(level) {
      var _console;
      var logFn = levelsMap[level];
      _$$_REQUIRE(_dependencyMap[0])(logFn, 'Level "' + level + '" not one of ' + Object.keys(levelsMap).toString());
      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }
      (_console = console)[logFn].apply(_console, args);
    },
    setWarningHandler: function setWarningHandler(handler) {
      warningHandler = handler;
    }
  };
  var _default = exports.default = RCTLog;
},227,[20]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _RCTDeviceEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var RCTNativeAppEventEmitter = _RCTDeviceEventEmitter.default;
  var _default = exports.default = RCTNativeAppEventEmitter;
},228,[1,22]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var HMRClientProdShim = {
    setup: function setup() {},
    enable: function enable() {
      console.error("Fast Refresh is disabled in JavaScript bundles built in production mode. Did you forget to run Metro?");
    },
    disable: function disable() {},
    registerBundle: function registerBundle() {},
    log: function log() {}
  };
  var _default = exports.default = HMRClientProdShim;
},229,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function __fetchSegment(segmentId, options, callback) {
    var SegmentFetcher = _$$_REQUIRE(_dependencyMap[0]).default;
    SegmentFetcher.fetchSegment(segmentId, options, function (errorObject) {
      if (errorObject) {
        var error = new Error(errorObject.message);
        error.code = errorObject.code;
        callback(error);
        return;
      }
      callback(null);
    });
  }
  global.__fetchSegment = __fetchSegment;
},230,[231]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeSegmentFetcher = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeSegmentFetcher).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeSegmentFetcher[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeSegmentFetcher[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeSegmentFetcher.default;
},231,[232]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.getEnforcing('SegmentFetcher');
},232,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _BugReporting = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _registerCallableModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _createPerformanceLogger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _infoLog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _SceneTracker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _HeadlessJsTaskError = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _NativeHeadlessJsTaskSupport = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _renderApplication = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var runnables = {};
  var runCount = 1;
  var sections = {};
  var taskProviders = new Map();
  var taskCancelProviders = new Map();
  var componentProviderInstrumentationHook = function componentProviderInstrumentationHook(component) {
    return component();
  };
  var wrapperComponentProvider;
  var rootViewStyleProvider;
  var AppRegistry = {
    setWrapperComponentProvider: function setWrapperComponentProvider(provider) {
      wrapperComponentProvider = provider;
    },
    setRootViewStyleProvider: function setRootViewStyleProvider(provider) {
      rootViewStyleProvider = provider;
    },
    registerConfig: function registerConfig(config) {
      config.forEach(function (appConfig) {
        if (appConfig.run) {
          AppRegistry.registerRunnable(appConfig.appKey, appConfig.run);
        } else {
          (0, _invariant.default)(appConfig.component != null, "AppRegistry.registerConfig(...): Every config is expected to set either `run` or `component`, but `%s` has neither.", appConfig.appKey);
          AppRegistry.registerComponent(appConfig.appKey, appConfig.component, appConfig.section);
        }
      });
    },
    registerComponent: function registerComponent(appKey, componentProvider, section) {
      var scopedPerformanceLogger = (0, _createPerformanceLogger.default)();
      runnables[appKey] = function (appParameters, displayMode) {
        (0, _renderApplication.default)(componentProviderInstrumentationHook(componentProvider, scopedPerformanceLogger), appParameters.initialProps, appParameters.rootTag, wrapperComponentProvider && wrapperComponentProvider(appParameters), rootViewStyleProvider && rootViewStyleProvider(appParameters), appParameters.fabric, scopedPerformanceLogger, appKey === 'LogBox', appKey, displayMode);
      };
      if (section) {
        sections[appKey] = runnables[appKey];
      }
      return appKey;
    },
    registerRunnable: function registerRunnable(appKey, run) {
      runnables[appKey] = run;
      return appKey;
    },
    registerSection: function registerSection(appKey, component) {
      AppRegistry.registerComponent(appKey, component, true);
    },
    getAppKeys: function getAppKeys() {
      return Object.keys(runnables);
    },
    getSectionKeys: function getSectionKeys() {
      return Object.keys(sections);
    },
    getSections: function getSections() {
      return Object.assign({}, sections);
    },
    getRunnable: function getRunnable(appKey) {
      return runnables[appKey];
    },
    getRegistry: function getRegistry() {
      return {
        sections: AppRegistry.getSectionKeys(),
        runnables: Object.assign({}, runnables)
      };
    },
    setComponentProviderInstrumentationHook: function setComponentProviderInstrumentationHook(hook) {
      componentProviderInstrumentationHook = hook;
    },
    runApplication: function runApplication(appKey, appParameters, displayMode) {
      if (appKey !== 'LogBox') {
        var logParams = '';
        var msg = `Running "${appKey}"${logParams}`;
        (0, _infoLog.default)(msg);
        _BugReporting.default.addSource('AppRegistry.runApplication' + runCount++, function () {
          return msg;
        });
      }
      (0, _invariant.default)(runnables[appKey], `"${appKey}" has not been registered. This can happen if:\n` + '* Metro (the local dev server) is run from the wrong folder. ' + 'Check if Metro is running, stop it and restart it in the current project.\n' + "* A module failed to load due to an error and `AppRegistry.registerComponent` wasn't called.");
      _SceneTracker.default.setActiveScene({
        name: appKey
      });
      runnables[appKey](appParameters, (0, _$$_REQUIRE(_dependencyMap[10]).coerceDisplayMode)(displayMode));
    },
    setSurfaceProps: function setSurfaceProps(appKey, appParameters, displayMode) {
      if (appKey !== 'LogBox') {
        var msg = 'Updating props for Surface "' + appKey + '" with ' + JSON.stringify(appParameters);
        (0, _infoLog.default)(msg);
        _BugReporting.default.addSource('AppRegistry.setSurfaceProps' + runCount++, function () {
          return msg;
        });
      }
      (0, _invariant.default)(runnables[appKey], `"${appKey}" has not been registered. This can happen if:\n` + '* Metro (the local dev server) is run from the wrong folder. ' + 'Check if Metro is running, stop it and restart it in the current project.\n' + "* A module failed to load due to an error and `AppRegistry.registerComponent` wasn't called.");
      runnables[appKey](appParameters, (0, _$$_REQUIRE(_dependencyMap[10]).coerceDisplayMode)(displayMode));
    },
    unmountApplicationComponentAtRootTag: function unmountApplicationComponentAtRootTag(rootTag) {
      (0, _$$_REQUIRE(_dependencyMap[11]).unmountComponentAtNodeAndRemoveContainer)(rootTag);
    },
    registerHeadlessTask: function registerHeadlessTask(taskKey, taskProvider) {
      this.registerCancellableHeadlessTask(taskKey, taskProvider, function () {
        return function () {};
      });
    },
    registerCancellableHeadlessTask: function registerCancellableHeadlessTask(taskKey, taskProvider, taskCancelProvider) {
      if (taskProviders.has(taskKey)) {
        console.warn(`registerHeadlessTask or registerCancellableHeadlessTask called multiple times for same key '${taskKey}'`);
      }
      taskProviders.set(taskKey, taskProvider);
      taskCancelProviders.set(taskKey, taskCancelProvider);
    },
    startHeadlessTask: function startHeadlessTask(taskId, taskKey, data) {
      var taskProvider = taskProviders.get(taskKey);
      if (!taskProvider) {
        console.warn(`No task registered for key ${taskKey}`);
        if (_NativeHeadlessJsTaskSupport.default) {
          _NativeHeadlessJsTaskSupport.default.notifyTaskFinished(taskId);
        }
        return;
      }
      taskProvider()(data).then(function () {
        if (_NativeHeadlessJsTaskSupport.default) {
          _NativeHeadlessJsTaskSupport.default.notifyTaskFinished(taskId);
        }
      }).catch(function (reason) {
        console.error(reason);
        if (_NativeHeadlessJsTaskSupport.default && reason instanceof _HeadlessJsTaskError.default) {
          _NativeHeadlessJsTaskSupport.default.notifyTaskRetry(taskId).then(function (retryPosted) {
            if (!retryPosted) {
              _NativeHeadlessJsTaskSupport.default.notifyTaskFinished(taskId);
            }
          });
        }
      });
    },
    cancelHeadlessTask: function cancelHeadlessTask(taskId, taskKey) {
      var taskCancelProvider = taskCancelProviders.get(taskKey);
      if (!taskCancelProvider) {
        throw new Error(`No task canceller registered for key '${taskKey}'`);
      }
      taskCancelProvider()();
    }
  };
  AppRegistry.registerComponent('LogBox', function () {
    {
      return function NoOp() {
        return null;
      };
    }
  });
  global.RN$AppRegistry = AppRegistry;
  global.RN$SurfaceRegistry = {
    renderSurface: AppRegistry.runApplication,
    setSurfaceProps: AppRegistry.setSurfaceProps
  };
  (0, _registerCallableModule.default)('AppRegistry', AppRegistry);
  var _default = exports.default = AppRegistry;
},233,[1,234,3,187,188,240,241,242,244,20,256,57]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _RCTDeviceEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _NativeRedBox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _NativeBugReporting = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  function defaultExtras() {
    BugReporting.addFileSource('react_hierarchy.txt', function () {
      return _$$_REQUIRE(_dependencyMap[7]).default();
    });
  }
  var BugReporting = /*#__PURE__*/function () {
    function BugReporting() {
      (0, _classCallCheck2.default)(this, BugReporting);
    }
    return (0, _createClass2.default)(BugReporting, null, [{
      key: "_maybeInit",
      value: function _maybeInit() {
        if (!BugReporting._subscription) {
          BugReporting._subscription = _RCTDeviceEventEmitter.default.addListener('collectBugExtraData', BugReporting.collectExtraData, null);
          defaultExtras();
        }
        if (!BugReporting._redboxSubscription) {
          BugReporting._redboxSubscription = _RCTDeviceEventEmitter.default.addListener('collectRedBoxExtraData', BugReporting.collectExtraData, null);
        }
      }
    }, {
      key: "addSource",
      value: function addSource(key, callback) {
        return this._addSource(key, callback, BugReporting._extraSources);
      }
    }, {
      key: "addFileSource",
      value: function addFileSource(key, callback) {
        return this._addSource(key, callback, BugReporting._fileSources);
      }
    }, {
      key: "_addSource",
      value: function _addSource(key, callback, source) {
        BugReporting._maybeInit();
        if (source.has(key)) {
          console.warn(`BugReporting.add* called multiple times for same key '${key}'`);
        }
        source.set(key, callback);
        return {
          remove: function remove() {
            source.delete(key);
          }
        };
      }
    }, {
      key: "collectExtraData",
      value: function collectExtraData() {
        var extraData = {};
        for (var _ref3 of BugReporting._extraSources) {
          var _ref2 = (0, _slicedToArray2.default)(_ref3, 2);
          var _key = _ref2[0];
          var callback = _ref2[1];
          extraData[_key] = callback();
        }
        var fileData = {};
        for (var _ref6 of BugReporting._fileSources) {
          var _ref5 = (0, _slicedToArray2.default)(_ref6, 2);
          var _key2 = _ref5[0];
          var _callback = _ref5[1];
          fileData[_key2] = _callback();
        }
        if (_NativeBugReporting.default != null && _NativeBugReporting.default.setExtraData != null) {
          _NativeBugReporting.default.setExtraData(extraData, fileData);
        }
        if (_NativeRedBox.default != null && _NativeRedBox.default.setExtraData != null) {
          _NativeRedBox.default.setExtraData(extraData, 'From BugReporting.js');
        }
        return {
          extras: extraData,
          files: fileData
        };
      }
    }]);
  }();
  BugReporting._extraSources = new Map();
  BugReporting._fileSources = new Map();
  BugReporting._subscription = null;
  BugReporting._redboxSubscription = null;
  var _default = exports.default = BugReporting;
},234,[1,38,12,13,22,235,237,239]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeRedBox = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeRedBox).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeRedBox[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeRedBox[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeRedBox.default;
},235,[236]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.get('RedBox');
},236,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeBugReporting = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeBugReporting).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeBugReporting[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeBugReporting[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeBugReporting.default;
},237,[238]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.get('BugReporting');
},238,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  function dumpReactTree() {
    try {
      return getReactTree();
    } catch (e) {
      return 'Failed to dump react tree: ' + e;
    }
  }
  function getReactTree() {
    return "React tree dumps have been temporarily disabled while React is upgraded to Fiber.";
  }
  var _default = exports.default = dumpReactTree;
},239,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _listeners = [];
  var _activeScene = {
    name: 'default'
  };
  var SceneTracker = {
    setActiveScene: function setActiveScene(scene) {
      _activeScene = scene;
      _listeners.forEach(function (listener) {
        return listener(_activeScene);
      });
    },
    getActiveScene: function getActiveScene() {
      return _activeScene;
    },
    addActiveSceneChangedListener: function addActiveSceneChangedListener(callback) {
      _listeners.push(callback);
      return {
        remove: function remove() {
          _listeners = _listeners.filter(function (listener) {
            return callback !== listener;
          });
        }
      };
    }
  };
  var _default = exports.default = SceneTracker;
},240,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _wrapNativeSuper2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var HeadlessJsTaskError = exports.default = /*#__PURE__*/function (_Error) {
    function HeadlessJsTaskError() {
      (0, _classCallCheck2.default)(this, HeadlessJsTaskError);
      return _callSuper(this, HeadlessJsTaskError, arguments);
    }
    (0, _inherits2.default)(HeadlessJsTaskError, _Error);
    return (0, _createClass2.default)(HeadlessJsTaskError);
  }(/*#__PURE__*/(0, _wrapNativeSuper2.default)(Error));
},241,[1,13,12,23,25,28,160]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeHeadlessJsTaskSupport = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeHeadlessJsTaskSupport).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeHeadlessJsTaskSupport[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeHeadlessJsTaskSupport[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeHeadlessJsTaskSupport.default;
},242,[243]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.get('HeadlessJsTaskSupport');
},243,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = renderApplication;
  var _GlobalPerformanceLogger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _PerformanceLoggerContext = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _AppContainer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _DisplayMode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _getCachedComponentWithDebugName = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var Renderer = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[6]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));
  _$$_REQUIRE(_dependencyMap[9]);
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[10]);
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function renderApplication(RootComponent, initialProps, rootTag, WrapperComponent, rootViewStyle, fabric, scopedPerformanceLogger, isLogBox, debugName, displayMode, useOffscreen) {
    (0, _invariant.default)(rootTag, 'Expect to have a valid rootTag, instead got ', rootTag);
    var performanceLogger = scopedPerformanceLogger != null ? scopedPerformanceLogger : _GlobalPerformanceLogger.default;
    var renderable = /*#__PURE__*/(0, _jsxRuntime.jsx)(_PerformanceLoggerContext.default.Provider, {
      value: performanceLogger,
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_AppContainer.default, {
        rootTag: rootTag,
        fabric: fabric,
        WrapperComponent: WrapperComponent,
        rootViewStyle: rootViewStyle,
        initialProps: initialProps != null ? initialProps : Object.freeze({}),
        internal_excludeLogBox: isLogBox,
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(RootComponent, Object.assign({}, initialProps, {
          rootTag: rootTag
        }))
      })
    });
    if (useOffscreen && displayMode != null) {
      var Activity = React.unstable_Activity;
      renderable = /*#__PURE__*/(0, _jsxRuntime.jsx)(Activity, {
        mode: displayMode === _DisplayMode.default.VISIBLE ? 'visible' : 'hidden',
        children: renderable
      });
    }
    var useConcurrentRoot = Boolean(fabric);
    performanceLogger.startTimespan('renderApplication_React_render');
    performanceLogger.setExtra('usedReactConcurrentRoot', useConcurrentRoot ? '1' : '0');
    performanceLogger.setExtra('usedReactFabric', fabric ? '1' : '0');
    performanceLogger.setExtra('usedReactProfiler', Renderer.isProfilingRenderer());
    Renderer.renderElement({
      element: renderable,
      rootTag: rootTag,
      useFabric: Boolean(fabric),
      useConcurrentRoot: useConcurrentRoot
    });
    performanceLogger.stopTimespan('renderApplication_React_render');
  }
},244,[1,186,245,246,256,257,57,20,119,258,251]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  exports.usePerformanceLogger = usePerformanceLogger;
  var _GlobalPerformanceLogger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));
  var React = _react;
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var PerformanceLoggerContext = React.createContext(_GlobalPerformanceLogger.default);
  function usePerformanceLogger() {
    return (0, _react.useContext)(PerformanceLoggerContext);
  }
  var _default = exports.default = PerformanceLoggerContext;
},245,[1,186,119]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var AppContainer = _$$_REQUIRE(_dependencyMap[1]).default;
  var _default = exports.default = AppContainer;
},246,[119,247]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _View = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _StyleSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[4]);
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var AppContainer = function AppContainer(_ref) {
    var children = _ref.children,
      fabric = _ref.fabric,
      initialProps = _ref.initialProps,
      rootTag = _ref.rootTag,
      WrapperComponent = _ref.WrapperComponent,
      rootViewStyle = _ref.rootViewStyle;
    var innerView = children;
    if (WrapperComponent != null) {
      innerView = /*#__PURE__*/(0, _jsxRuntime.jsx)(WrapperComponent, {
        initialProps: initialProps,
        fabric: fabric === true,
        children: innerView
      });
    }
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_$$_REQUIRE(_dependencyMap[5]).RootTagContext.Provider, {
      value: (0, _$$_REQUIRE(_dependencyMap[5]).createRootTag)(rootTag),
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_View.default, {
        style: rootViewStyle || styles.root,
        pointerEvents: "box-none",
        children: innerView
      })
    });
  };
  var styles = _StyleSheet.default.create({
    root: {
      flex: 1
    }
  });
  var _default = exports.default = AppContainer;
},247,[1,248,253,119,251,255]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _TextAncestor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _ViewNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[5]);
  var _excluded = ["accessibilityElementsHidden", "accessibilityLabel", "accessibilityLabelledBy", "accessibilityLiveRegion", "accessibilityState", "accessibilityValue", "aria-busy", "aria-checked", "aria-disabled", "aria-expanded", "aria-hidden", "aria-label", "aria-labelledby", "aria-live", "aria-selected", "aria-valuemax", "aria-valuemin", "aria-valuenow", "aria-valuetext", "focusable", "id", "importantForAccessibility", "nativeID", "tabIndex"];
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var View = React.forwardRef(function (_ref, forwardedRef) {
    var _ariaLabelledBy$split;
    var accessibilityElementsHidden = _ref.accessibilityElementsHidden,
      accessibilityLabel = _ref.accessibilityLabel,
      accessibilityLabelledBy = _ref.accessibilityLabelledBy,
      accessibilityLiveRegion = _ref.accessibilityLiveRegion,
      accessibilityState = _ref.accessibilityState,
      accessibilityValue = _ref.accessibilityValue,
      ariaBusy = _ref['aria-busy'],
      ariaChecked = _ref['aria-checked'],
      ariaDisabled = _ref['aria-disabled'],
      ariaExpanded = _ref['aria-expanded'],
      ariaHidden = _ref['aria-hidden'],
      ariaLabel = _ref['aria-label'],
      ariaLabelledBy = _ref['aria-labelledby'],
      ariaLive = _ref['aria-live'],
      ariaSelected = _ref['aria-selected'],
      ariaValueMax = _ref['aria-valuemax'],
      ariaValueMin = _ref['aria-valuemin'],
      ariaValueNow = _ref['aria-valuenow'],
      ariaValueText = _ref['aria-valuetext'],
      focusable = _ref.focusable,
      id = _ref.id,
      importantForAccessibility = _ref.importantForAccessibility,
      nativeID = _ref.nativeID,
      tabIndex = _ref.tabIndex,
      otherProps = (0, _objectWithoutProperties2.default)(_ref, _excluded);
    var hasTextAncestor = React.useContext(_TextAncestor.default);
    var _accessibilityLabelledBy = (_ariaLabelledBy$split = ariaLabelledBy == null ? undefined : ariaLabelledBy.split(/\s*,\s*/g)) != null ? _ariaLabelledBy$split : accessibilityLabelledBy;
    var _accessibilityState;
    if (accessibilityState != null || ariaBusy != null || ariaChecked != null || ariaDisabled != null || ariaExpanded != null || ariaSelected != null) {
      _accessibilityState = {
        busy: ariaBusy != null ? ariaBusy : accessibilityState == null ? undefined : accessibilityState.busy,
        checked: ariaChecked != null ? ariaChecked : accessibilityState == null ? undefined : accessibilityState.checked,
        disabled: ariaDisabled != null ? ariaDisabled : accessibilityState == null ? undefined : accessibilityState.disabled,
        expanded: ariaExpanded != null ? ariaExpanded : accessibilityState == null ? undefined : accessibilityState.expanded,
        selected: ariaSelected != null ? ariaSelected : accessibilityState == null ? undefined : accessibilityState.selected
      };
    }
    var _accessibilityValue;
    if (accessibilityValue != null || ariaValueMax != null || ariaValueMin != null || ariaValueNow != null || ariaValueText != null) {
      _accessibilityValue = {
        max: ariaValueMax != null ? ariaValueMax : accessibilityValue == null ? undefined : accessibilityValue.max,
        min: ariaValueMin != null ? ariaValueMin : accessibilityValue == null ? undefined : accessibilityValue.min,
        now: ariaValueNow != null ? ariaValueNow : accessibilityValue == null ? undefined : accessibilityValue.now,
        text: ariaValueText != null ? ariaValueText : accessibilityValue == null ? undefined : accessibilityValue.text
      };
    }
    var actualView = /*#__PURE__*/(0, _jsxRuntime.jsx)(_ViewNativeComponent.default, Object.assign({}, otherProps, {
      accessibilityLiveRegion: ariaLive === 'off' ? 'none' : ariaLive != null ? ariaLive : accessibilityLiveRegion,
      accessibilityLabel: ariaLabel != null ? ariaLabel : accessibilityLabel,
      focusable: tabIndex !== undefined ? !tabIndex : focusable,
      accessibilityState: _accessibilityState,
      accessibilityElementsHidden: ariaHidden != null ? ariaHidden : accessibilityElementsHidden,
      accessibilityLabelledBy: _accessibilityLabelledBy,
      accessibilityValue: _accessibilityValue,
      importantForAccessibility: ariaHidden === true ? 'no-hide-descendants' : importantForAccessibility,
      nativeID: id != null ? id : nativeID,
      ref: forwardedRef
    }));
    if (hasTextAncestor) {
      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_TextAncestor.default.Provider, {
        value: false,
        children: actualView
      });
    }
    return actualView;
  });
  View.displayName = 'View';
  var _default = exports.default = View;
},248,[1,203,249,250,119,251]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var React = _$$_REQUIRE(_dependencyMap[0]);
  var TextAncestorContext = React.createContext(false);
  var _default = exports.default = TextAncestorContext;
},249,[119]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.Commands = undefined;
  var NativeComponentRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));
  var _codegenNativeCommands = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var ViewNativeComponent = NativeComponentRegistry.get('RCTView', function () {
    return {
      uiViewClassName: 'RCTView'
    };
  });
  var Commands = exports.Commands = (0, _codegenNativeCommands.default)({
    supportedCommands: ['hotspotUpdate', 'setPressed']
  });
  var _default = exports.default = ViewNativeComponent;
},250,[1,86,125]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  {
    module.exports = _$$_REQUIRE(_dependencyMap[0]);
  }
},251,[252]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /**
   * @license React
   * react-jsx-runtime.production.js
   *
   * Copyright (c) Meta Platforms, Inc. and affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  "use strict";

  var REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"),
    REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
  function jsxProd(type, config, maybeKey) {
    var key = null;
    undefined !== maybeKey && (key = "" + maybeKey);
    undefined !== config.key && (key = "" + config.key);
    if ("key" in config) {
      maybeKey = {};
      for (var propName in config) "key" !== propName && (maybeKey[propName] = config[propName]);
    } else maybeKey = config;
    config = maybeKey.ref;
    return {
      $$typeof: REACT_ELEMENT_TYPE,
      type: type,
      key: key,
      ref: undefined !== config ? config : null,
      props: maybeKey
    };
  }
  exports.Fragment = REACT_FRAGMENT_TYPE;
  exports.jsx = jsxProd;
  exports.jsxs = jsxProd;
},252,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _composeStyles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _flattenStyle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var hairlineWidth = _$$_REQUIRE(_dependencyMap[3]).default.roundToNearestPixel(0.4);
  if (hairlineWidth === 0) {
    hairlineWidth = 1 / _$$_REQUIRE(_dependencyMap[3]).default.get();
  }
  var absoluteFill = {
    position: 'absolute',
    left: 0,
    right: 0,
    top: 0,
    bottom: 0
  };
  var _default = exports.default = {
    hairlineWidth: hairlineWidth,
    absoluteFill: absoluteFill,
    absoluteFillObject: absoluteFill,
    compose: _composeStyles.default,
    flatten: _flattenStyle.default,
    setStyleAttributePreprocessor: function setStyleAttributePreprocessor(property, process) {
      var _ReactNativeStyleAttr, _ReactNativeStyleAttr2;
      var value;
      if (_$$_REQUIRE(_dependencyMap[4]).default[property] === true) {
        value = {
          process: process
        };
      } else if (typeof _$$_REQUIRE(_dependencyMap[4]).default[property] === 'object') {
        value = Object.assign({}, _$$_REQUIRE(_dependencyMap[4]).default[property], {
          process: process
        });
      } else {
        console.error(`${property} is not a valid style attribute`);
        return;
      }
      _$$_REQUIRE(_dependencyMap[4]).default[property] = value;
    },
    create: function create(obj) {
      return obj;
    }
  };
},253,[1,254,128,112,93]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = composeStyles;
  function composeStyles(style1, style2) {
    if (style1 == null) {
      return style2;
    }
    if (style2 == null) {
      return style1;
    }
    return [style1, style2];
  }
},254,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RootTagContext = undefined;
  exports.createRootTag = createRootTag;
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var RootTagContext = exports.RootTagContext = React.createContext(0);
  function createRootTag(rootTag) {
    return rootTag;
  }
},255,[119]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.coerceDisplayMode = coerceDisplayMode;
  exports.default = undefined;
  var DisplayMode = Object.freeze({
    VISIBLE: 1,
    SUSPENDED: 2,
    HIDDEN: 3
  });
  function coerceDisplayMode(value) {
    switch (value) {
      case DisplayMode.SUSPENDED:
        return DisplayMode.SUSPENDED;
      case DisplayMode.HIDDEN:
        return DisplayMode.HIDDEN;
      default:
        return DisplayMode.VISIBLE;
    }
  }
  var _default = exports.default = DisplayMode;
},256,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = getCachedComponentWithDisplayName;
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var cache = new Map();
  function getCachedComponentWithDisplayName(displayName) {
    var ComponentWithDisplayName = cache.get(displayName);
    if (!ComponentWithDisplayName) {
      ComponentWithDisplayName = function ComponentWithDisplayName(_ref) {
        var children = _ref.children;
        return children;
      };
      ComponentWithDisplayName.displayName = displayName;
      cache.set(displayName, ComponentWithDisplayName);
    }
    return ComponentWithDisplayName;
  }
},257,[119]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _NativeDeviceEventManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _RCTDeviceEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var DEVICE_BACK_EVENT = 'hardwareBackPress';
  var _backPressSubscriptions = [];
  _RCTDeviceEventEmitter.default.addListener(DEVICE_BACK_EVENT, function () {
    for (var i = _backPressSubscriptions.length - 1; i >= 0; i--) {
      var _backPressSubscriptio;
      if ((_backPressSubscriptio = _backPressSubscriptions[i]) != null && _backPressSubscriptio.call(_backPressSubscriptions)) {
        return;
      }
    }
    BackHandler.exitApp();
  });
  var BackHandler = {
    exitApp: function exitApp() {
      if (!_NativeDeviceEventManager.default) {
        return;
      }
      _NativeDeviceEventManager.default.invokeDefaultBackPressHandler();
    },
    addEventListener: function addEventListener(eventName, handler) {
      if (_backPressSubscriptions.indexOf(handler) === -1) {
        _backPressSubscriptions.push(handler);
      }
      return {
        remove: function remove() {
          var index = _backPressSubscriptions.indexOf(handler);
          if (index !== -1) {
            _backPressSubscriptions.splice(index, 1);
          }
        }
      };
    }
  };
  var _default = exports.default = BackHandler;
},258,[1,259,22]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeDeviceEventManager = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeDeviceEventManager).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeDeviceEventManager[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeDeviceEventManager[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeDeviceEventManager.default;
},259,[260]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.get('DeviceEventManager');
},260,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    get BatchedBridge() {
      return _$$_REQUIRE(_dependencyMap[0]).default;
    },
    get ExceptionsManager() {
      return _$$_REQUIRE(_dependencyMap[1]).default;
    },
    get Platform() {
      return _$$_REQUIRE(_dependencyMap[2]).default;
    },
    get RCTEventEmitter() {
      return _$$_REQUIRE(_dependencyMap[3]).default;
    },
    get ReactNativeViewConfigRegistry() {
      return _$$_REQUIRE(_dependencyMap[4]);
    },
    get TextInputState() {
      return _$$_REQUIRE(_dependencyMap[5]).default;
    },
    get UIManager() {
      return _$$_REQUIRE(_dependencyMap[6]).default;
    },
    get deepDiffer() {
      return _$$_REQUIRE(_dependencyMap[7]).default;
    },
    get deepFreezeAndThrowOnMutationInDev() {
      return _$$_REQUIRE(_dependencyMap[8]).default;
    },
    get flattenStyle() {
      return _$$_REQUIRE(_dependencyMap[9]).default;
    },
    get ReactFiberErrorDialog() {
      return _$$_REQUIRE(_dependencyMap[10]).default;
    },
    get legacySendAccessibilityEvent() {
      return _$$_REQUIRE(_dependencyMap[11]).default;
    },
    get RawEventEmitter() {
      return _$$_REQUIRE(_dependencyMap[12]).default;
    },
    get CustomEvent() {
      return _$$_REQUIRE(_dependencyMap[13]).default;
    },
    get createAttributePayload() {
      return _$$_REQUIRE(_dependencyMap[14]).create;
    },
    get diffAttributePayloads() {
      return _$$_REQUIRE(_dependencyMap[14]).diff;
    },
    get createPublicRootInstance() {
      return _$$_REQUIRE(_dependencyMap[15]).createPublicRootInstance;
    },
    get createPublicInstance() {
      return _$$_REQUIRE(_dependencyMap[15]).createPublicInstance;
    },
    get createPublicTextInstance() {
      return _$$_REQUIRE(_dependencyMap[15]).createPublicTextInstance;
    },
    get getNativeTagFromPublicInstance() {
      return _$$_REQUIRE(_dependencyMap[15]).getNativeTagFromPublicInstance;
    },
    get getNodeFromPublicInstance() {
      return _$$_REQUIRE(_dependencyMap[15]).getNodeFromPublicInstance;
    },
    get getInternalInstanceHandleFromPublicInstance() {
      return _$$_REQUIRE(_dependencyMap[15]).getInternalInstanceHandleFromPublicInstance;
    }
  };
},261,[4,159,33,262,117,84,44,129,263,128,264,43,265,266,127,268]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _registerCallableModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var RCTEventEmitter = {
    register: function register(eventEmitter) {
      (0, _registerCallableModule.default)('RCTEventEmitter', eventEmitter);
    }
  };
  var _default = exports.default = RCTEventEmitter;
},262,[1,3]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  function deepFreezeAndThrowOnMutationInDev(object) {
    return object;
  }
  var _default = exports.default = deepFreezeAndThrowOnMutationInDev;
},263,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _ExceptionsManager = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var ReactFiberErrorDialog = {
    showErrorDialog: function showErrorDialog(_ref) {
      var componentStack = _ref.componentStack,
        errorValue = _ref.error;
      var error;
      if (errorValue instanceof Error) {
        error = errorValue;
      } else if (typeof errorValue === 'string') {
        error = new _ExceptionsManager.SyntheticError(errorValue);
      } else {
        error = new _ExceptionsManager.SyntheticError('Unspecified error');
      }
      try {
        error.componentStack = componentStack;
        error.isComponentError = true;
      } catch (_unused) {}
      _ExceptionsManager.default.handleException(error, false);
      return false;
    }
  };
  var _default = exports.default = ReactFiberErrorDialog;
},264,[159]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _EventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var RawEventEmitter = new _EventEmitter.default();
  var _default = exports.default = RawEventEmitter;
},265,[1,30]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _EventPolyfill2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var CustomEvent = /*#__PURE__*/function (_EventPolyfill) {
    function CustomEvent(typeArg, options) {
      var _this;
      (0, _classCallCheck2.default)(this, CustomEvent);
      var bubbles = options.bubbles,
        cancelable = options.cancelable,
        composed = options.composed;
      _this = _callSuper(this, CustomEvent, [typeArg, {
        bubbles: bubbles,
        cancelable: cancelable,
        composed: composed
      }]);
      _this.detail = options.detail;
      return _this;
    }
    (0, _inherits2.default)(CustomEvent, _EventPolyfill);
    return (0, _createClass2.default)(CustomEvent);
  }(_EventPolyfill2.default);
  var _default = exports.default = CustomEvent;
},266,[1,13,12,23,25,28,267]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var EventPolyfill = /*#__PURE__*/function () {
    function EventPolyfill(type, eventInitDict) {
      (0, _classCallCheck2.default)(this, EventPolyfill);
      this.type = type;
      this.bubbles = !!(eventInitDict != null && eventInitDict.bubbles || false);
      this.cancelable = !!(eventInitDict != null && eventInitDict.cancelable || false);
      this.composed = !!(eventInitDict != null && eventInitDict.composed || false);
      this.scoped = !!(eventInitDict != null && eventInitDict.scoped || false);
      this.isTrusted = false;
      this.timeStamp = Date.now();
      this.defaultPrevented = false;
      this.NONE = 0;
      this.AT_TARGET = 1;
      this.BUBBLING_PHASE = 2;
      this.CAPTURING_PHASE = 3;
      this.eventPhase = this.NONE;
      this.currentTarget = null;
      this.target = null;
      this.srcElement = null;
    }
    return (0, _createClass2.default)(EventPolyfill, [{
      key: "composedPath",
      value: function composedPath() {
        throw new Error('TODO: not yet implemented');
      }
    }, {
      key: "preventDefault",
      value: function preventDefault() {
        this.defaultPrevented = true;
        if (this._syntheticEvent != null) {
          this._syntheticEvent.preventDefault();
        }
      }
    }, {
      key: "initEvent",
      value: function initEvent(type, bubbles, cancelable) {
        throw new Error('TODO: not yet implemented. This method is also deprecated.');
      }
    }, {
      key: "stopImmediatePropagation",
      value: function stopImmediatePropagation() {
        throw new Error('TODO: not yet implemented');
      }
    }, {
      key: "stopPropagation",
      value: function stopPropagation() {
        if (this._syntheticEvent != null) {
          this._syntheticEvent.stopPropagation();
        }
      }
    }, {
      key: "setSyntheticEvent",
      value: function setSyntheticEvent(value) {
        this._syntheticEvent = value;
      }
    }]);
  }();
  global.Event = EventPolyfill;
  var _default = exports.default = EventPolyfill;
},267,[1,12,13]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.createPublicInstance = createPublicInstance;
  exports.createPublicRootInstance = createPublicRootInstance;
  exports.createPublicTextInstance = createPublicTextInstance;
  exports.getInternalInstanceHandleFromPublicInstance = getInternalInstanceHandleFromPublicInstance;
  exports.getNativeTagFromPublicInstance = getNativeTagFromPublicInstance;
  exports.getNodeFromPublicInstance = getNodeFromPublicInstance;
  var ReactNativeFeatureFlags = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var ReactNativeDocumentModuleObject;
  var ReactFabricHostComponentClass;
  var ReactNativeElementClass;
  var ReadOnlyTextClass;
  var RendererProxy;
  function getReactNativeDocumentModule() {
    if (ReactNativeDocumentModuleObject == null) {
      ReactNativeDocumentModuleObject = _$$_REQUIRE(_dependencyMap[1]);
    }
    return ReactNativeDocumentModuleObject;
  }
  function getReactNativeElementClass() {
    if (ReactNativeElementClass == null) {
      ReactNativeElementClass = _$$_REQUIRE(_dependencyMap[2]).default;
    }
    return ReactNativeElementClass;
  }
  function getReactFabricHostComponentClass() {
    if (ReactFabricHostComponentClass == null) {
      ReactFabricHostComponentClass = _$$_REQUIRE(_dependencyMap[3]).default;
    }
    return ReactFabricHostComponentClass;
  }
  function getReadOnlyTextClass() {
    if (ReadOnlyTextClass == null) {
      ReadOnlyTextClass = _$$_REQUIRE(_dependencyMap[4]).default;
    }
    return ReadOnlyTextClass;
  }
  function createPublicRootInstance(rootTag) {
    if (ReactNativeFeatureFlags.enableAccessToHostTreeInFabric() && ReactNativeFeatureFlags.enableDOMDocumentAPI()) {
      var ReactNativeDocumentModule = getReactNativeDocumentModule();
      return ReactNativeDocumentModule.createReactNativeDocument(rootTag);
    }
    return null;
  }
  function createPublicInstance(tag, viewConfig, internalInstanceHandle, ownerDocument) {
    if (ReactNativeFeatureFlags.enableAccessToHostTreeInFabric()) {
      var ReactNativeElement = getReactNativeElementClass();
      return new ReactNativeElement(tag, viewConfig, internalInstanceHandle, ownerDocument);
    } else {
      var ReactFabricHostComponent = getReactFabricHostComponentClass();
      return new ReactFabricHostComponent(tag, viewConfig, internalInstanceHandle);
    }
  }
  function createPublicTextInstance(internalInstanceHandle, ownerDocument) {
    var ReadOnlyText = getReadOnlyTextClass();
    return new ReadOnlyText(internalInstanceHandle, ownerDocument);
  }
  function getNativeTagFromPublicInstance(publicInstance) {
    return publicInstance.__nativeTag;
  }
  function getNodeFromPublicInstance(publicInstance) {
    if (publicInstance.__internalInstanceHandle == null) {
      return null;
    }
    if (RendererProxy == null) {
      RendererProxy = _$$_REQUIRE(_dependencyMap[5]);
    }
    return RendererProxy.getNodeFromInternalInstanceHandle(publicInstance.__internalInstanceHandle);
  }
  function getInternalInstanceHandleFromPublicInstance(publicInstance) {
    if (publicInstance._internalInstanceHandle != null) {
      return publicInstance._internalInstanceHandle;
    }
    return publicInstance.__internalInstanceHandle;
  }
},268,[73,82,83,269,131,57]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _TextInputState = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _warnForStyleProps = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _nullthrows2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _nullthrows = (0, _nullthrows2.default)((0, _$$_REQUIRE(_dependencyMap[6]).getFabricUIManager)()),
    fabricMeasure = _nullthrows.measure,
    fabricMeasureInWindow = _nullthrows.measureInWindow,
    fabricMeasureLayout = _nullthrows.measureLayout,
    fabricGetBoundingClientRect = _nullthrows.getBoundingClientRect,
    _setNativeProps = _nullthrows.setNativeProps;
  var noop = function noop() {};
  var ReactFabricHostComponent = exports.default = /*#__PURE__*/function () {
    function ReactFabricHostComponent(tag, viewConfig, internalInstanceHandle) {
      (0, _classCallCheck2.default)(this, ReactFabricHostComponent);
      this.__nativeTag = tag;
      this._viewConfig = viewConfig;
      this.__internalInstanceHandle = internalInstanceHandle;
    }
    return (0, _createClass2.default)(ReactFabricHostComponent, [{
      key: "blur",
      value: function blur() {
        _TextInputState.default.blurTextInput(this);
      }
    }, {
      key: "focus",
      value: function focus() {
        _TextInputState.default.focusTextInput(this);
      }
    }, {
      key: "measure",
      value: function measure(callback) {
        var node = (0, _$$_REQUIRE(_dependencyMap[7]).getNodeFromInternalInstanceHandle)(this.__internalInstanceHandle);
        if (node != null) {
          fabricMeasure(node, callback);
        }
      }
    }, {
      key: "measureInWindow",
      value: function measureInWindow(callback) {
        var node = (0, _$$_REQUIRE(_dependencyMap[7]).getNodeFromInternalInstanceHandle)(this.__internalInstanceHandle);
        if (node != null) {
          fabricMeasureInWindow(node, callback);
        }
      }
    }, {
      key: "measureLayout",
      value: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
        if (typeof relativeToNativeNode === 'number' || !(relativeToNativeNode instanceof ReactFabricHostComponent)) {
          return;
        }
        var toStateNode = (0, _$$_REQUIRE(_dependencyMap[7]).getNodeFromInternalInstanceHandle)(this.__internalInstanceHandle);
        var fromStateNode = (0, _$$_REQUIRE(_dependencyMap[7]).getNodeFromInternalInstanceHandle)(relativeToNativeNode.__internalInstanceHandle);
        if (toStateNode != null && fromStateNode != null) {
          fabricMeasureLayout(toStateNode, fromStateNode, onFail != null ? onFail : noop, onSuccess != null ? onSuccess : noop);
        }
      }
    }, {
      key: "unstable_getBoundingClientRect",
      value: function unstable_getBoundingClientRect() {
        var node = (0, _$$_REQUIRE(_dependencyMap[7]).getNodeFromInternalInstanceHandle)(this.__internalInstanceHandle);
        if (node != null) {
          var rect = fabricGetBoundingClientRect(node, true);
          if (rect) {
            return new DOMRect(rect[0], rect[1], rect[2], rect[3]);
          }
        }
        return new DOMRect(0, 0, 0, 0);
      }
    }, {
      key: "setNativeProps",
      value: function setNativeProps(nativeProps) {
        var updatePayload = (0, _$$_REQUIRE(_dependencyMap[8]).create)(nativeProps, this._viewConfig.validAttributes);
        var node = (0, _$$_REQUIRE(_dependencyMap[7]).getNodeFromInternalInstanceHandle)(this.__internalInstanceHandle);
        if (node != null && updatePayload != null) {
          _setNativeProps(node, updatePayload);
        }
      }
    }]);
  }();
},269,[1,12,13,84,126,45,47,57,127]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  {
    module.exports = _$$_REQUIRE(_dependencyMap[0]);
  }
},270,[271]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /**
   * @license React
   * scheduler.native.production.js
   *
   * Copyright (c) Meta Platforms, Inc. and affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  "use strict";

  function push(heap, node) {
    var index = heap.length;
    heap.push(node);
    a: for (; 0 < index;) {
      var parentIndex = index - 1 >>> 1,
        parent = heap[parentIndex];
      if (0 < compare(parent, node)) heap[parentIndex] = node, heap[index] = parent, index = parentIndex;else break a;
    }
  }
  function peek(heap) {
    return 0 === heap.length ? null : heap[0];
  }
  function pop(heap) {
    if (0 === heap.length) return null;
    var first = heap[0],
      last = heap.pop();
    if (last !== first) {
      heap[0] = last;
      a: for (var index = 0, length = heap.length, halfLength = length >>> 1; index < halfLength;) {
        var leftIndex = 2 * (index + 1) - 1,
          left = heap[leftIndex],
          rightIndex = leftIndex + 1,
          right = heap[rightIndex];
        if (0 > compare(left, last)) rightIndex < length && 0 > compare(right, left) ? (heap[index] = right, heap[rightIndex] = last, index = rightIndex) : (heap[index] = left, heap[leftIndex] = last, index = leftIndex);else if (rightIndex < length && 0 > compare(right, last)) heap[index] = right, heap[rightIndex] = last, index = rightIndex;else break a;
      }
    }
    return first;
  }
  function compare(a, b) {
    var diff = a.sortIndex - b.sortIndex;
    return 0 !== diff ? diff : a.id - b.id;
  }
  var getCurrentTime;
  if ("object" === typeof performance && "function" === typeof performance.now) {
    var localPerformance = performance;
    getCurrentTime = function getCurrentTime() {
      return localPerformance.now();
    };
  } else {
    var localDate = Date,
      initialTime = localDate.now();
    getCurrentTime = function getCurrentTime() {
      return localDate.now() - initialTime;
    };
  }
  var taskQueue = [],
    timerQueue = [],
    taskIdCounter = 1,
    currentTask = null,
    currentPriorityLevel = 3,
    isPerformingWork = false,
    isHostCallbackScheduled = false,
    isHostTimeoutScheduled = false,
    localSetTimeout = "function" === typeof setTimeout ? setTimeout : null,
    localClearTimeout = "function" === typeof clearTimeout ? clearTimeout : null,
    localSetImmediate = "undefined" !== typeof setImmediate ? setImmediate : null;
  function advanceTimers(currentTime) {
    for (var timer = peek(timerQueue); null !== timer;) {
      if (null === timer.callback) pop(timerQueue);else if (timer.startTime <= currentTime) pop(timerQueue), timer.sortIndex = timer.expirationTime, push(taskQueue, timer);else break;
      timer = peek(timerQueue);
    }
  }
  function handleTimeout(currentTime) {
    isHostTimeoutScheduled = false;
    advanceTimers(currentTime);
    if (!isHostCallbackScheduled) if (null !== peek(taskQueue)) isHostCallbackScheduled = true, isMessageLoopRunning || (isMessageLoopRunning = true, schedulePerformWorkUntilDeadline());else {
      var firstTimer = peek(timerQueue);
      null !== firstTimer && requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
    }
  }
  function unstable_scheduleCallback$1(priorityLevel, callback, options) {
    var currentTime = getCurrentTime();
    "object" === typeof options && null !== options ? (options = options.delay, options = "number" === typeof options && 0 < options ? currentTime + options : currentTime) : options = currentTime;
    switch (priorityLevel) {
      case 1:
        var timeout = -1;
        break;
      case 2:
        timeout = 250;
        break;
      case 5:
        timeout = 1073741823;
        break;
      case 4:
        timeout = 1e4;
        break;
      default:
        timeout = 5e3;
    }
    timeout = options + timeout;
    priorityLevel = {
      id: taskIdCounter++,
      callback: callback,
      priorityLevel: priorityLevel,
      startTime: options,
      expirationTime: timeout,
      sortIndex: -1
    };
    options > currentTime ? (priorityLevel.sortIndex = options, push(timerQueue, priorityLevel), null === peek(taskQueue) && priorityLevel === peek(timerQueue) && (isHostTimeoutScheduled ? (localClearTimeout(taskTimeoutID), taskTimeoutID = -1) : isHostTimeoutScheduled = true, requestHostTimeout(handleTimeout, options - currentTime))) : (priorityLevel.sortIndex = timeout, push(taskQueue, priorityLevel), isHostCallbackScheduled || isPerformingWork || (isHostCallbackScheduled = true, isMessageLoopRunning || (isMessageLoopRunning = true, schedulePerformWorkUntilDeadline())));
    return priorityLevel;
  }
  function unstable_cancelCallback$1(task) {
    task.callback = null;
  }
  function unstable_getCurrentPriorityLevel$1() {
    return currentPriorityLevel;
  }
  var isMessageLoopRunning = false,
    taskTimeoutID = -1,
    startTime = -1;
  function shouldYieldToHost() {
    return 5 > getCurrentTime() - startTime ? false : true;
  }
  function requestPaint() {}
  function performWorkUntilDeadline() {
    if (isMessageLoopRunning) {
      var currentTime = getCurrentTime();
      startTime = currentTime;
      var hasMoreWork = true;
      try {
        a: {
          isHostCallbackScheduled = false;
          isHostTimeoutScheduled && (isHostTimeoutScheduled = false, localClearTimeout(taskTimeoutID), taskTimeoutID = -1);
          isPerformingWork = true;
          var previousPriorityLevel = currentPriorityLevel;
          try {
            b: {
              advanceTimers(currentTime);
              for (currentTask = peek(taskQueue); null !== currentTask && !(currentTask.expirationTime > currentTime && shouldYieldToHost());) {
                var callback = currentTask.callback;
                if ("function" === typeof callback) {
                  currentTask.callback = null;
                  currentPriorityLevel = currentTask.priorityLevel;
                  var continuationCallback = callback(currentTask.expirationTime <= currentTime);
                  currentTime = getCurrentTime();
                  if ("function" === typeof continuationCallback) {
                    currentTask.callback = continuationCallback;
                    advanceTimers(currentTime);
                    hasMoreWork = true;
                    break b;
                  }
                  currentTask === peek(taskQueue) && pop(taskQueue);
                  advanceTimers(currentTime);
                } else pop(taskQueue);
                currentTask = peek(taskQueue);
              }
              if (null !== currentTask) hasMoreWork = true;else {
                var firstTimer = peek(timerQueue);
                null !== firstTimer && requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
                hasMoreWork = false;
              }
            }
            break a;
          } finally {
            currentTask = null, currentPriorityLevel = previousPriorityLevel, isPerformingWork = false;
          }
          hasMoreWork = undefined;
        }
      } finally {
        hasMoreWork ? schedulePerformWorkUntilDeadline() : isMessageLoopRunning = false;
      }
    }
  }
  var schedulePerformWorkUntilDeadline;
  if ("function" === typeof localSetImmediate) schedulePerformWorkUntilDeadline = function schedulePerformWorkUntilDeadline() {
    localSetImmediate(performWorkUntilDeadline);
  };else if ("undefined" !== typeof MessageChannel) {
    var channel = new MessageChannel(),
      port = channel.port2;
    channel.port1.onmessage = performWorkUntilDeadline;
    schedulePerformWorkUntilDeadline = function schedulePerformWorkUntilDeadline() {
      port.postMessage(null);
    };
  } else schedulePerformWorkUntilDeadline = function schedulePerformWorkUntilDeadline() {
    localSetTimeout(performWorkUntilDeadline, 0);
  };
  function requestHostTimeout(callback, ms) {
    taskTimeoutID = localSetTimeout(function () {
      callback(getCurrentTime());
    }, ms);
  }
  var unstable_UserBlockingPriority = "undefined" !== typeof nativeRuntimeScheduler ? nativeRuntimeScheduler.unstable_UserBlockingPriority : 2,
    unstable_NormalPriority = "undefined" !== typeof nativeRuntimeScheduler ? nativeRuntimeScheduler.unstable_NormalPriority : 3,
    unstable_LowPriority = "undefined" !== typeof nativeRuntimeScheduler ? nativeRuntimeScheduler.unstable_LowPriority : 4,
    unstable_ImmediatePriority = "undefined" !== typeof nativeRuntimeScheduler ? nativeRuntimeScheduler.unstable_ImmediatePriority : 1,
    unstable_scheduleCallback = "undefined" !== typeof nativeRuntimeScheduler ? nativeRuntimeScheduler.unstable_scheduleCallback : unstable_scheduleCallback$1,
    unstable_cancelCallback = "undefined" !== typeof nativeRuntimeScheduler ? nativeRuntimeScheduler.unstable_cancelCallback : unstable_cancelCallback$1,
    unstable_getCurrentPriorityLevel = "undefined" !== typeof nativeRuntimeScheduler ? nativeRuntimeScheduler.unstable_getCurrentPriorityLevel : unstable_getCurrentPriorityLevel$1,
    unstable_shouldYield = "undefined" !== typeof nativeRuntimeScheduler ? nativeRuntimeScheduler.unstable_shouldYield : shouldYieldToHost,
    unstable_requestPaint = "undefined" !== typeof nativeRuntimeScheduler ? nativeRuntimeScheduler.unstable_requestPaint : requestPaint,
    unstable_now = "undefined" !== typeof nativeRuntimeScheduler ? nativeRuntimeScheduler.unstable_now : getCurrentTime;
  function throwNotImplemented() {
    throw Error("Not implemented.");
  }
  exports.unstable_IdlePriority = "undefined" !== typeof nativeRuntimeScheduler ? nativeRuntimeScheduler.unstable_IdlePriority : 5;
  exports.unstable_ImmediatePriority = unstable_ImmediatePriority;
  exports.unstable_LowPriority = unstable_LowPriority;
  exports.unstable_NormalPriority = unstable_NormalPriority;
  exports.unstable_Profiling = null;
  exports.unstable_UserBlockingPriority = unstable_UserBlockingPriority;
  exports.unstable_cancelCallback = unstable_cancelCallback;
  exports.unstable_continueExecution = throwNotImplemented;
  exports.unstable_forceFrameRate = throwNotImplemented;
  exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
  exports.unstable_getFirstCallbackNode = throwNotImplemented;
  exports.unstable_next = throwNotImplemented;
  exports.unstable_now = unstable_now;
  exports.unstable_pauseExecution = throwNotImplemented;
  exports.unstable_requestPaint = unstable_requestPaint;
  exports.unstable_runWithPriority = throwNotImplemented;
  exports.unstable_scheduleCallback = unstable_scheduleCallback;
  exports.unstable_shouldYield = unstable_shouldYield;
  exports.unstable_wrapCallback = throwNotImplemented;
},271,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.onCaughtError = onCaughtError;
  exports.onRecoverableError = onRecoverableError;
  exports.onUncaughtError = onUncaughtError;
  var _ExceptionsManager = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function getExtendedError(errorValue, errorInfo) {
    var error;
    if (errorValue instanceof Error) {
      error = errorValue;
    } else if (typeof errorValue === 'string') {
      error = new _ExceptionsManager.SyntheticError(errorValue);
    } else {
      error = new _ExceptionsManager.SyntheticError('Unspecified error');
    }
    try {
      error.componentStack = errorInfo.componentStack;
      error.isComponentError = true;
    } catch (_unused) {}
    return error;
  }
  function onUncaughtError(errorValue, errorInfo) {
    var error = getExtendedError(errorValue, errorInfo);
    _ExceptionsManager.default.handleException(error, true);
  }
  function onCaughtError(errorValue, errorInfo) {
    var error = getExtendedError(errorValue, errorInfo);
    _ExceptionsManager.default.handleException(error, false);
  }
  function onRecoverableError(errorValue, errorInfo) {
    var error = getExtendedError(errorValue, errorInfo);
    console.warn(error);
  }
},272,[159]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var ReactNative;
  {
    ReactNative = _$$_REQUIRE(_dependencyMap[0]);
  }
  var _default = exports.default = ReactNative;
},273,[274]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /**
   * Copyright (c) Meta Platforms, Inc. and affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * 
   * @nolint
   * @preventMunge
   * @generated SignedSource<<f7a2299fd4eb6daeaa2b3967a6e4b69c>>
   *
   * This file was sync'd from the facebook/react repository.
   */

  "use strict";

  _$$_REQUIRE(_dependencyMap[0]);
  var React = _$$_REQUIRE(_dependencyMap[1]),
    isArrayImpl = Array.isArray,
    ReactSharedInternals = React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,
    REACT_LEGACY_ELEMENT_TYPE = Symbol.for("react.element"),
    REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"),
    REACT_PORTAL_TYPE = Symbol.for("react.portal"),
    REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"),
    REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"),
    REACT_PROFILER_TYPE = Symbol.for("react.profiler"),
    REACT_PROVIDER_TYPE = Symbol.for("react.provider"),
    REACT_CONSUMER_TYPE = Symbol.for("react.consumer"),
    REACT_CONTEXT_TYPE = Symbol.for("react.context"),
    REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"),
    REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"),
    REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"),
    REACT_MEMO_TYPE = Symbol.for("react.memo"),
    REACT_LAZY_TYPE = Symbol.for("react.lazy");
  Symbol.for("react.scope");
  Symbol.for("react.debug_trace_mode");
  var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
  Symbol.for("react.legacy_hidden");
  Symbol.for("react.tracing_marker");
  var REACT_MEMO_CACHE_SENTINEL = Symbol.for("react.memo_cache_sentinel"),
    MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
  function getIteratorFn(maybeIterable) {
    if (null === maybeIterable || "object" !== typeof maybeIterable) return null;
    maybeIterable = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable["@@iterator"];
    return "function" === typeof maybeIterable ? maybeIterable : null;
  }
  var assign = Object.assign,
    prefix,
    suffix;
  function describeBuiltInComponentFrame(name) {
    if (undefined === prefix) try {
      throw Error();
    } catch (x) {
      var match = x.stack.trim().match(/\n( *(at )?)/);
      prefix = match && match[1] || "";
      suffix = -1 < x.stack.indexOf("\n    at") ? " (<anonymous>)" : -1 < x.stack.indexOf("@") ? "@unknown:0:0" : "";
    }
    return "\n" + prefix + name + suffix;
  }
  var reentry = false;
  function describeNativeComponentFrame(fn, construct) {
    if (!fn || reentry) return "";
    reentry = true;
    var previousPrepareStackTrace = Error.prepareStackTrace;
    Error.prepareStackTrace = undefined;
    try {
      var RunInRootFrame = {
        DetermineComponentFrameRoot: function DetermineComponentFrameRoot() {
          try {
            if (construct) {
              var Fake = function Fake() {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, "props", {
                set: function set() {
                  throw Error();
                }
              });
              if ("object" === typeof Reflect && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x) {
                  var control = x;
                }
                Reflect.construct(fn, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x$0) {
                  control = x$0;
                }
                fn.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x$1) {
                control = x$1;
              }
              (Fake = fn()) && "function" === typeof Fake.catch && Fake.catch(function () {});
            }
          } catch (sample) {
            if (sample && control && "string" === typeof sample.stack) return [sample.stack, control.stack];
          }
          return [null, null];
        }
      };
      RunInRootFrame.DetermineComponentFrameRoot.displayName = "DetermineComponentFrameRoot";
      var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, "name");
      namePropDescriptor && namePropDescriptor.configurable && Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, "name", {
        value: "DetermineComponentFrameRoot"
      });
      var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),
        sampleStack = _RunInRootFrame$Deter[0],
        controlStack = _RunInRootFrame$Deter[1];
      if (sampleStack && controlStack) {
        var sampleLines = sampleStack.split("\n"),
          controlLines = controlStack.split("\n");
        for (namePropDescriptor = RunInRootFrame = 0; RunInRootFrame < sampleLines.length && !sampleLines[RunInRootFrame].includes("DetermineComponentFrameRoot");) RunInRootFrame++;
        for (; namePropDescriptor < controlLines.length && !controlLines[namePropDescriptor].includes("DetermineComponentFrameRoot");) namePropDescriptor++;
        if (RunInRootFrame === sampleLines.length || namePropDescriptor === controlLines.length) for (RunInRootFrame = sampleLines.length - 1, namePropDescriptor = controlLines.length - 1; 1 <= RunInRootFrame && 0 <= namePropDescriptor && sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor];) namePropDescriptor--;
        for (; 1 <= RunInRootFrame && 0 <= namePropDescriptor; RunInRootFrame--, namePropDescriptor--) if (sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor]) {
          if (1 !== RunInRootFrame || 1 !== namePropDescriptor) {
            do if (RunInRootFrame--, namePropDescriptor--, 0 > namePropDescriptor || sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor]) {
              var frame = "\n" + sampleLines[RunInRootFrame].replace(" at new ", " at ");
              fn.displayName && frame.includes("<anonymous>") && (frame = frame.replace("<anonymous>", fn.displayName));
              return frame;
            } while (1 <= RunInRootFrame && 0 <= namePropDescriptor);
          }
          break;
        }
      }
    } finally {
      reentry = false, Error.prepareStackTrace = previousPrepareStackTrace;
    }
    return (previousPrepareStackTrace = fn ? fn.displayName || fn.name : "") ? describeBuiltInComponentFrame(previousPrepareStackTrace) : "";
  }
  function describeFiber(fiber) {
    switch (fiber.tag) {
      case 26:
      case 27:
      case 5:
        return describeBuiltInComponentFrame(fiber.type);
      case 16:
        return describeBuiltInComponentFrame("Lazy");
      case 13:
        return describeBuiltInComponentFrame("Suspense");
      case 19:
        return describeBuiltInComponentFrame("SuspenseList");
      case 0:
      case 15:
        return fiber = describeNativeComponentFrame(fiber.type, false), fiber;
      case 11:
        return fiber = describeNativeComponentFrame(fiber.type.render, false), fiber;
      case 1:
        return fiber = describeNativeComponentFrame(fiber.type, true), fiber;
      default:
        return "";
    }
  }
  function getStackByFiberInDevAndProd(workInProgress) {
    try {
      var info = "";
      do info += describeFiber(workInProgress), workInProgress = workInProgress.return; while (workInProgress);
      return info;
    } catch (x) {
      return "\nError generating stack: " + x.message + "\n" + x.stack;
    }
  }
  var REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference");
  function getComponentNameFromType(type) {
    if (null == type) return null;
    if ("function" === typeof type) return type.$$typeof === REACT_CLIENT_REFERENCE ? null : type.displayName || type.name || null;
    if ("string" === typeof type) return type;
    switch (type) {
      case REACT_FRAGMENT_TYPE:
        return "Fragment";
      case REACT_PORTAL_TYPE:
        return "Portal";
      case REACT_PROFILER_TYPE:
        return "Profiler";
      case REACT_STRICT_MODE_TYPE:
        return "StrictMode";
      case REACT_SUSPENSE_TYPE:
        return "Suspense";
      case REACT_SUSPENSE_LIST_TYPE:
        return "SuspenseList";
    }
    if ("object" === typeof type) switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        return (type.displayName || "Context") + ".Provider";
      case REACT_CONSUMER_TYPE:
        return (type._context.displayName || "Context") + ".Consumer";
      case REACT_FORWARD_REF_TYPE:
        var innerType = type.render;
        type = type.displayName;
        type || (type = innerType.displayName || innerType.name || "", type = "" !== type ? "ForwardRef(" + type + ")" : "ForwardRef");
        return type;
      case REACT_MEMO_TYPE:
        return innerType = type.displayName || null, null !== innerType ? innerType : getComponentNameFromType(type.type) || "Memo";
      case REACT_LAZY_TYPE:
        innerType = type._payload;
        type = type._init;
        try {
          return getComponentNameFromType(type(innerType));
        } catch (x) {}
    }
    return null;
  }
  var hasError = false,
    caughtError = null,
    getFiberCurrentPropsFromNode$1 = null,
    getInstanceFromNode = null,
    getNodeFromInstance = null;
  function executeDispatch(event, listener, inst) {
    event.currentTarget = getNodeFromInstance(inst);
    try {
      listener(event);
    } catch (error) {
      hasError || (hasError = true, caughtError = error);
    }
    event.currentTarget = null;
  }
  function executeDirectDispatch(event) {
    var dispatchListener = event._dispatchListeners,
      dispatchInstance = event._dispatchInstances;
    if (isArrayImpl(dispatchListener)) throw Error("Invalid `event`.");
    event.currentTarget = dispatchListener ? getNodeFromInstance(dispatchInstance) : null;
    dispatchListener = dispatchListener ? dispatchListener(event) : null;
    event.currentTarget = null;
    event._dispatchListeners = null;
    event._dispatchInstances = null;
    return dispatchListener;
  }
  function functionThatReturnsTrue() {
    return true;
  }
  function functionThatReturnsFalse() {
    return false;
  }
  function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
    this.dispatchConfig = dispatchConfig;
    this._targetInst = targetInst;
    this.nativeEvent = nativeEvent;
    this._dispatchInstances = this._dispatchListeners = null;
    dispatchConfig = this.constructor.Interface;
    for (var propName in dispatchConfig) dispatchConfig.hasOwnProperty(propName) && ((targetInst = dispatchConfig[propName]) ? this[propName] = targetInst(nativeEvent) : "target" === propName ? this.target = nativeEventTarget : this[propName] = nativeEvent[propName]);
    this.isDefaultPrevented = (null != nativeEvent.defaultPrevented ? nativeEvent.defaultPrevented : false === nativeEvent.returnValue) ? functionThatReturnsTrue : functionThatReturnsFalse;
    this.isPropagationStopped = functionThatReturnsFalse;
    return this;
  }
  assign(SyntheticEvent.prototype, {
    preventDefault: function preventDefault() {
      this.defaultPrevented = true;
      var event = this.nativeEvent;
      event && (event.preventDefault ? event.preventDefault() : "unknown" !== typeof event.returnValue && (event.returnValue = false), this.isDefaultPrevented = functionThatReturnsTrue);
    },
    stopPropagation: function stopPropagation() {
      var event = this.nativeEvent;
      event && (event.stopPropagation ? event.stopPropagation() : "unknown" !== typeof event.cancelBubble && (event.cancelBubble = true), this.isPropagationStopped = functionThatReturnsTrue);
    },
    persist: function persist() {
      this.isPersistent = functionThatReturnsTrue;
    },
    isPersistent: functionThatReturnsFalse,
    destructor: function destructor() {
      var Interface = this.constructor.Interface,
        propName;
      for (propName in Interface) this[propName] = null;
      this.nativeEvent = this._targetInst = this.dispatchConfig = null;
      this.isPropagationStopped = this.isDefaultPrevented = functionThatReturnsFalse;
      this._dispatchInstances = this._dispatchListeners = null;
    }
  });
  SyntheticEvent.Interface = {
    type: null,
    target: null,
    currentTarget: function currentTarget() {
      return null;
    },
    eventPhase: null,
    bubbles: null,
    cancelable: null,
    timeStamp: function timeStamp(event) {
      return event.timeStamp || Date.now();
    },
    defaultPrevented: null,
    isTrusted: null
  };
  SyntheticEvent.extend = function (Interface) {
    function E() {}
    function Class() {
      return Super.apply(this, arguments);
    }
    var Super = this;
    E.prototype = Super.prototype;
    var prototype = new E();
    assign(prototype, Class.prototype);
    Class.prototype = prototype;
    Class.prototype.constructor = Class;
    Class.Interface = assign({}, Super.Interface, Interface);
    Class.extend = Super.extend;
    addEventPoolingTo(Class);
    return Class;
  };
  addEventPoolingTo(SyntheticEvent);
  function createOrGetPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
    if (this.eventPool.length) {
      var instance = this.eventPool.pop();
      this.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
      return instance;
    }
    return new this(dispatchConfig, targetInst, nativeEvent, nativeInst);
  }
  function releasePooledEvent(event) {
    if (!(event instanceof this)) throw Error("Trying to release an event instance into a pool of a different type.");
    event.destructor();
    10 > this.eventPool.length && this.eventPool.push(event);
  }
  function addEventPoolingTo(EventConstructor) {
    EventConstructor.getPooled = createOrGetPooledEvent;
    EventConstructor.eventPool = [];
    EventConstructor.release = releasePooledEvent;
  }
  var ResponderSyntheticEvent = SyntheticEvent.extend({
    touchHistory: function touchHistory() {
      return null;
    }
  });
  function isStartish(topLevelType) {
    return "topTouchStart" === topLevelType;
  }
  function isMoveish(topLevelType) {
    return "topTouchMove" === topLevelType;
  }
  var startDependencies = ["topTouchStart"],
    moveDependencies = ["topTouchMove"],
    endDependencies = ["topTouchCancel", "topTouchEnd"],
    touchBank = [],
    touchHistory = {
      touchBank: touchBank,
      numberActiveTouches: 0,
      indexOfSingleActiveTouch: -1,
      mostRecentTimeStamp: 0
    };
  function timestampForTouch(touch) {
    return touch.timeStamp || touch.timestamp;
  }
  function getTouchIdentifier(_ref) {
    _ref = _ref.identifier;
    if (null == _ref) throw Error("Touch object is missing identifier.");
    return _ref;
  }
  function recordTouchStart(touch) {
    var identifier = getTouchIdentifier(touch),
      touchRecord = touchBank[identifier];
    touchRecord ? (touchRecord.touchActive = true, touchRecord.startPageX = touch.pageX, touchRecord.startPageY = touch.pageY, touchRecord.startTimeStamp = timestampForTouch(touch), touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchRecord.previousPageX = touch.pageX, touchRecord.previousPageY = touch.pageY, touchRecord.previousTimeStamp = timestampForTouch(touch)) : (touchRecord = {
      touchActive: true,
      startPageX: touch.pageX,
      startPageY: touch.pageY,
      startTimeStamp: timestampForTouch(touch),
      currentPageX: touch.pageX,
      currentPageY: touch.pageY,
      currentTimeStamp: timestampForTouch(touch),
      previousPageX: touch.pageX,
      previousPageY: touch.pageY,
      previousTimeStamp: timestampForTouch(touch)
    }, touchBank[identifier] = touchRecord);
    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
  }
  function recordTouchMove(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord && (touchRecord.touchActive = true, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch));
  }
  function recordTouchEnd(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord && (touchRecord.touchActive = false, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch));
  }
  var instrumentationCallback,
    ResponderTouchHistoryStore = {
      instrument: function instrument(callback) {
        instrumentationCallback = callback;
      },
      recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {
        null != instrumentationCallback && instrumentationCallback(topLevelType, nativeEvent);
        if (isMoveish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchMove);else if (isStartish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchStart), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches && (touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier);else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (nativeEvent.changedTouches.forEach(recordTouchEnd), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches) for (topLevelType = 0; topLevelType < touchBank.length; topLevelType++) if (nativeEvent = touchBank[topLevelType], null != nativeEvent && nativeEvent.touchActive) {
          touchHistory.indexOfSingleActiveTouch = topLevelType;
          break;
        }
      },
      touchHistory: touchHistory
    };
  function accumulate(current, next) {
    if (null == next) throw Error("Accumulated items must not be null or undefined.");
    return null == current ? next : isArrayImpl(current) ? current.concat(next) : isArrayImpl(next) ? [current].concat(next) : [current, next];
  }
  function accumulateInto(current, next) {
    if (null == next) throw Error("Accumulated items must not be null or undefined.");
    if (null == current) return next;
    if (isArrayImpl(current)) {
      if (isArrayImpl(next)) return current.push.apply(current, next), current;
      current.push(next);
      return current;
    }
    return isArrayImpl(next) ? [current].concat(next) : [current, next];
  }
  function forEachAccumulated(arr, cb, scope) {
    Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);
  }
  var responderInst = null,
    trackedTouchCount = 0;
  function changeResponder(nextResponderInst, blockHostResponder) {
    var oldResponderInst = responderInst;
    responderInst = nextResponderInst;
    if (null !== ResponderEventPlugin.GlobalResponderHandler) ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);
  }
  var eventTypes = {
    startShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onStartShouldSetResponder",
        captured: "onStartShouldSetResponderCapture"
      },
      dependencies: startDependencies
    },
    scrollShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onScrollShouldSetResponder",
        captured: "onScrollShouldSetResponderCapture"
      },
      dependencies: ["topScroll"]
    },
    selectionChangeShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onSelectionChangeShouldSetResponder",
        captured: "onSelectionChangeShouldSetResponderCapture"
      },
      dependencies: ["topSelectionChange"]
    },
    moveShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onMoveShouldSetResponder",
        captured: "onMoveShouldSetResponderCapture"
      },
      dependencies: moveDependencies
    },
    responderStart: {
      registrationName: "onResponderStart",
      dependencies: startDependencies
    },
    responderMove: {
      registrationName: "onResponderMove",
      dependencies: moveDependencies
    },
    responderEnd: {
      registrationName: "onResponderEnd",
      dependencies: endDependencies
    },
    responderRelease: {
      registrationName: "onResponderRelease",
      dependencies: endDependencies
    },
    responderTerminationRequest: {
      registrationName: "onResponderTerminationRequest",
      dependencies: []
    },
    responderGrant: {
      registrationName: "onResponderGrant",
      dependencies: []
    },
    responderReject: {
      registrationName: "onResponderReject",
      dependencies: []
    },
    responderTerminate: {
      registrationName: "onResponderTerminate",
      dependencies: []
    }
  };
  function getParent$1(inst) {
    do inst = inst.return; while (inst && 5 !== inst.tag);
    return inst ? inst : null;
  }
  function traverseTwoPhase$1(inst, fn, arg) {
    for (var path = []; inst;) path.push(inst), inst = getParent$1(inst);
    for (inst = path.length; 0 < inst--;) fn(path[inst], "captured", arg);
    for (inst = 0; inst < path.length; inst++) fn(path[inst], "bubbled", arg);
  }
  function getListener$1(inst, registrationName) {
    inst = inst.stateNode;
    if (null === inst) return null;
    inst = getFiberCurrentPropsFromNode$1(inst);
    if (null === inst) return null;
    if ((inst = inst[registrationName]) && "function" !== typeof inst) throw Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof inst + "` type.");
    return inst;
  }
  function accumulateDirectionalDispatches$1(inst, phase, event) {
    if (phase = getListener$1(inst, event.dispatchConfig.phasedRegistrationNames[phase])) event._dispatchListeners = accumulateInto(event._dispatchListeners, phase), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }
  function accumulateDirectDispatchesSingle$1(event) {
    if (event && event.dispatchConfig.registrationName) {
      var inst = event._targetInst;
      if (inst && event && event.dispatchConfig.registrationName) {
        var listener = getListener$1(inst, event.dispatchConfig.registrationName);
        listener && (event._dispatchListeners = accumulateInto(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst));
      }
    }
  }
  function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
    if (event && event.dispatchConfig.phasedRegistrationNames) {
      var targetInst = event._targetInst;
      targetInst = targetInst ? getParent$1(targetInst) : null;
      traverseTwoPhase$1(targetInst, accumulateDirectionalDispatches$1, event);
    }
  }
  function accumulateTwoPhaseDispatchesSingle$1(event) {
    event && event.dispatchConfig.phasedRegistrationNames && traverseTwoPhase$1(event._targetInst, accumulateDirectionalDispatches$1, event);
  }
  var ResponderEventPlugin = {
      _getResponder: function _getResponder() {
        return responderInst;
      },
      eventTypes: eventTypes,
      extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        if (isStartish(topLevelType)) trackedTouchCount += 1;else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (0 <= trackedTouchCount) --trackedTouchCount;else return null;
        ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);
        if (targetInst && ("topScroll" === topLevelType && !nativeEvent.responderIgnoreScroll || 0 < trackedTouchCount && "topSelectionChange" === topLevelType || isStartish(topLevelType) || isMoveish(topLevelType))) {
          var shouldSetEventType = isStartish(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish(topLevelType) ? eventTypes.moveShouldSetResponder : "topSelectionChange" === topLevelType ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder;
          if (responderInst) b: {
            var JSCompiler_temp = responderInst;
            for (var depthA = 0, tempA = JSCompiler_temp; tempA; tempA = getParent$1(tempA)) depthA++;
            tempA = 0;
            for (var tempB = targetInst; tempB; tempB = getParent$1(tempB)) tempA++;
            for (; 0 < depthA - tempA;) JSCompiler_temp = getParent$1(JSCompiler_temp), depthA--;
            for (; 0 < tempA - depthA;) targetInst = getParent$1(targetInst), tempA--;
            for (; depthA--;) {
              if (JSCompiler_temp === targetInst || JSCompiler_temp === targetInst.alternate) break b;
              JSCompiler_temp = getParent$1(JSCompiler_temp);
              targetInst = getParent$1(targetInst);
            }
            JSCompiler_temp = null;
          } else JSCompiler_temp = targetInst;
          targetInst = JSCompiler_temp;
          JSCompiler_temp = targetInst === responderInst;
          shouldSetEventType = ResponderSyntheticEvent.getPooled(shouldSetEventType, targetInst, nativeEvent, nativeEventTarget);
          shouldSetEventType.touchHistory = ResponderTouchHistoryStore.touchHistory;
          JSCompiler_temp ? forEachAccumulated(shouldSetEventType, accumulateTwoPhaseDispatchesSingleSkipTarget) : forEachAccumulated(shouldSetEventType, accumulateTwoPhaseDispatchesSingle$1);
          b: {
            JSCompiler_temp = shouldSetEventType._dispatchListeners;
            targetInst = shouldSetEventType._dispatchInstances;
            if (isArrayImpl(JSCompiler_temp)) for (depthA = 0; depthA < JSCompiler_temp.length && !shouldSetEventType.isPropagationStopped(); depthA++) {
              if (JSCompiler_temp[depthA](shouldSetEventType, targetInst[depthA])) {
                JSCompiler_temp = targetInst[depthA];
                break b;
              }
            } else if (JSCompiler_temp && JSCompiler_temp(shouldSetEventType, targetInst)) {
              JSCompiler_temp = targetInst;
              break b;
            }
            JSCompiler_temp = null;
          }
          shouldSetEventType._dispatchInstances = null;
          shouldSetEventType._dispatchListeners = null;
          shouldSetEventType.isPersistent() || shouldSetEventType.constructor.release(shouldSetEventType);
          if (JSCompiler_temp && JSCompiler_temp !== responderInst) {
            if (shouldSetEventType = ResponderSyntheticEvent.getPooled(eventTypes.responderGrant, JSCompiler_temp, nativeEvent, nativeEventTarget), shouldSetEventType.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(shouldSetEventType, accumulateDirectDispatchesSingle$1), targetInst = true === executeDirectDispatch(shouldSetEventType), responderInst) {
              if (depthA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget), depthA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(depthA, accumulateDirectDispatchesSingle$1), tempA = !depthA._dispatchListeners || executeDirectDispatch(depthA), depthA.isPersistent() || depthA.constructor.release(depthA), tempA) {
                depthA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget);
                depthA.touchHistory = ResponderTouchHistoryStore.touchHistory;
                forEachAccumulated(depthA, accumulateDirectDispatchesSingle$1);
                var JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, [shouldSetEventType, depthA]);
                changeResponder(JSCompiler_temp, targetInst);
              } else shouldSetEventType = ResponderSyntheticEvent.getPooled(eventTypes.responderReject, JSCompiler_temp, nativeEvent, nativeEventTarget), shouldSetEventType.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(shouldSetEventType, accumulateDirectDispatchesSingle$1), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, shouldSetEventType);
            } else JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, shouldSetEventType), changeResponder(JSCompiler_temp, targetInst);
          } else JSCompiler_temp$jscomp$0 = null;
        } else JSCompiler_temp$jscomp$0 = null;
        shouldSetEventType = responderInst && isStartish(topLevelType);
        JSCompiler_temp = responderInst && isMoveish(topLevelType);
        targetInst = responderInst && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType);
        if (shouldSetEventType = shouldSetEventType ? eventTypes.responderStart : JSCompiler_temp ? eventTypes.responderMove : targetInst ? eventTypes.responderEnd : null) shouldSetEventType = ResponderSyntheticEvent.getPooled(shouldSetEventType, responderInst, nativeEvent, nativeEventTarget), shouldSetEventType.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(shouldSetEventType, accumulateDirectDispatchesSingle$1), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, shouldSetEventType);
        shouldSetEventType = responderInst && "topTouchCancel" === topLevelType;
        if (topLevelType = responderInst && !shouldSetEventType && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType)) a: {
          if ((topLevelType = nativeEvent.touches) && 0 !== topLevelType.length) for (JSCompiler_temp = 0; JSCompiler_temp < topLevelType.length; JSCompiler_temp++) if (targetInst = topLevelType[JSCompiler_temp].target, null !== targetInst && undefined !== targetInst && 0 !== targetInst) {
            depthA = getInstanceFromNode(targetInst);
            b: {
              for (targetInst = responderInst; depthA;) {
                if (targetInst === depthA || targetInst === depthA.alternate) {
                  targetInst = true;
                  break b;
                }
                depthA = getParent$1(depthA);
              }
              targetInst = false;
            }
            if (targetInst) {
              topLevelType = false;
              break a;
            }
          }
          topLevelType = true;
        }
        if (topLevelType = shouldSetEventType ? eventTypes.responderTerminate : topLevelType ? eventTypes.responderRelease : null) nativeEvent = ResponderSyntheticEvent.getPooled(topLevelType, responderInst, nativeEvent, nativeEventTarget), nativeEvent.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(nativeEvent, accumulateDirectDispatchesSingle$1), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, nativeEvent), changeResponder(null);
        return JSCompiler_temp$jscomp$0;
      },
      GlobalResponderHandler: null,
      injection: {
        injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {
          ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
        }
      }
    },
    eventPluginOrder = null,
    namesToPlugins = {};
  function recomputePluginOrdering() {
    if (eventPluginOrder) for (var pluginName in namesToPlugins) {
      var pluginModule = namesToPlugins[pluginName],
        pluginIndex = eventPluginOrder.indexOf(pluginName);
      if (-1 >= pluginIndex) throw Error("EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `" + (pluginName + "`."));
      if (!plugins[pluginIndex]) {
        if (!pluginModule.extractEvents) throw Error("EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `" + (pluginName + "` does not."));
        plugins[pluginIndex] = pluginModule;
        pluginIndex = pluginModule.eventTypes;
        for (var eventName in pluginIndex) {
          var JSCompiler_inline_result = undefined;
          var dispatchConfig = pluginIndex[eventName];
          if (eventNameDispatchConfigs.hasOwnProperty(eventName)) throw Error("EventPluginRegistry: More than one plugin attempted to publish the same event name, `" + (eventName + "`."));
          eventNameDispatchConfigs[eventName] = dispatchConfig;
          var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
          if (phasedRegistrationNames) {
            for (JSCompiler_inline_result in phasedRegistrationNames) phasedRegistrationNames.hasOwnProperty(JSCompiler_inline_result) && publishRegistrationName(phasedRegistrationNames[JSCompiler_inline_result], pluginModule);
            JSCompiler_inline_result = true;
          } else dispatchConfig.registrationName ? (publishRegistrationName(dispatchConfig.registrationName, pluginModule), JSCompiler_inline_result = true) : JSCompiler_inline_result = false;
          if (!JSCompiler_inline_result) throw Error("EventPluginRegistry: Failed to publish event `" + eventName + "` for plugin `" + pluginName + "`.");
        }
      }
    }
  }
  function publishRegistrationName(registrationName, pluginModule) {
    if (registrationNameModules[registrationName]) throw Error("EventPluginRegistry: More than one plugin attempted to publish the same registration name, `" + (registrationName + "`."));
    registrationNameModules[registrationName] = pluginModule;
  }
  var plugins = [],
    eventNameDispatchConfigs = {},
    registrationNameModules = {};
  function getListener(inst, registrationName) {
    inst = inst.stateNode;
    if (null === inst) return null;
    inst = getFiberCurrentPropsFromNode$1(inst);
    if (null === inst) return null;
    if ((inst = inst[registrationName]) && "function" !== typeof inst) throw Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof inst + "` type.");
    return inst;
  }
  var customBubblingEventTypes = _$$_REQUIRE(_dependencyMap[2]).ReactNativeViewConfigRegistry.customBubblingEventTypes,
    customDirectEventTypes = _$$_REQUIRE(_dependencyMap[2]).ReactNativeViewConfigRegistry.customDirectEventTypes;
  function accumulateDirectionalDispatches(inst, phase, event) {
    if (phase = getListener(inst, event.dispatchConfig.phasedRegistrationNames[phase])) event._dispatchListeners = accumulateInto(event._dispatchListeners, phase), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }
  function traverseTwoPhase(inst, fn, arg, skipBubbling) {
    for (var path = []; inst;) {
      path.push(inst);
      do inst = inst.return; while (inst && 5 !== inst.tag);
      inst = inst ? inst : null;
    }
    for (inst = path.length; 0 < inst--;) fn(path[inst], "captured", arg);
    if (skipBubbling) fn(path[0], "bubbled", arg);else for (inst = 0; inst < path.length; inst++) fn(path[inst], "bubbled", arg);
  }
  function accumulateTwoPhaseDispatchesSingle(event) {
    event && event.dispatchConfig.phasedRegistrationNames && traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event, false);
  }
  function accumulateDirectDispatchesSingle(event) {
    if (event && event.dispatchConfig.registrationName) {
      var inst = event._targetInst;
      if (inst && event && event.dispatchConfig.registrationName) {
        var listener = getListener(inst, event.dispatchConfig.registrationName);
        listener && (event._dispatchListeners = accumulateInto(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst));
      }
    }
  }
  if (eventPluginOrder) throw Error("EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.");
  eventPluginOrder = Array.prototype.slice.call(["ResponderEventPlugin", "ReactNativeBridgeEventPlugin"]);
  recomputePluginOrdering();
  var injectedNamesToPlugins$jscomp$inline_288 = {
      ResponderEventPlugin: ResponderEventPlugin,
      ReactNativeBridgeEventPlugin: {
        eventTypes: {},
        extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
          if (null == targetInst) return null;
          var bubbleDispatchConfig = customBubblingEventTypes[topLevelType],
            directDispatchConfig = customDirectEventTypes[topLevelType];
          if (!bubbleDispatchConfig && !directDispatchConfig) throw Error('Unsupported top level event type "' + topLevelType + '" dispatched');
          topLevelType = SyntheticEvent.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);
          if (bubbleDispatchConfig) null != topLevelType && null != topLevelType.dispatchConfig.phasedRegistrationNames && topLevelType.dispatchConfig.phasedRegistrationNames.skipBubbling ? topLevelType && topLevelType.dispatchConfig.phasedRegistrationNames && traverseTwoPhase(topLevelType._targetInst, accumulateDirectionalDispatches, topLevelType, true) : forEachAccumulated(topLevelType, accumulateTwoPhaseDispatchesSingle);else if (directDispatchConfig) forEachAccumulated(topLevelType, accumulateDirectDispatchesSingle);else return null;
          return topLevelType;
        }
      }
    },
    isOrderingDirty$jscomp$inline_289 = false,
    pluginName$jscomp$inline_290;
  for (pluginName$jscomp$inline_290 in injectedNamesToPlugins$jscomp$inline_288) if (injectedNamesToPlugins$jscomp$inline_288.hasOwnProperty(pluginName$jscomp$inline_290)) {
    var pluginModule$jscomp$inline_291 = injectedNamesToPlugins$jscomp$inline_288[pluginName$jscomp$inline_290];
    if (!namesToPlugins.hasOwnProperty(pluginName$jscomp$inline_290) || namesToPlugins[pluginName$jscomp$inline_290] !== pluginModule$jscomp$inline_291) {
      if (namesToPlugins[pluginName$jscomp$inline_290]) throw Error("EventPluginRegistry: Cannot inject two different event plugins using the same name, `" + (pluginName$jscomp$inline_290 + "`."));
      namesToPlugins[pluginName$jscomp$inline_290] = pluginModule$jscomp$inline_291;
      isOrderingDirty$jscomp$inline_289 = true;
    }
  }
  isOrderingDirty$jscomp$inline_289 && recomputePluginOrdering();
  var instanceCache = new Map(),
    instanceProps = new Map();
  function getInstanceFromTag(tag) {
    return instanceCache.get(tag) || null;
  }
  function batchedUpdatesImpl(fn, bookkeeping) {
    return fn(bookkeeping);
  }
  var isInsideEventHandler = false;
  function batchedUpdates$1(fn, bookkeeping) {
    if (isInsideEventHandler) return fn(bookkeeping);
    isInsideEventHandler = true;
    try {
      return batchedUpdatesImpl(fn, bookkeeping);
    } finally {
      isInsideEventHandler = false;
    }
  }
  var eventQueue = null;
  function executeDispatchesAndReleaseTopLevel(e) {
    if (e) {
      var dispatchListeners = e._dispatchListeners,
        dispatchInstances = e._dispatchInstances;
      if (isArrayImpl(dispatchListeners)) for (var i = 0; i < dispatchListeners.length && !e.isPropagationStopped(); i++) executeDispatch(e, dispatchListeners[i], dispatchInstances[i]);else dispatchListeners && executeDispatch(e, dispatchListeners, dispatchInstances);
      e._dispatchListeners = null;
      e._dispatchInstances = null;
      e.isPersistent() || e.constructor.release(e);
    }
  }
  var EMPTY_NATIVE_EVENT = {};
  function _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam) {
    var nativeEvent = nativeEventParam || EMPTY_NATIVE_EVENT,
      inst = getInstanceFromTag(rootNodeID),
      target = null;
    null != inst && (target = inst.stateNode);
    batchedUpdates$1(function () {
      var JSCompiler_inline_result = target;
      for (var events = null, legacyPlugins = plugins, i = 0; i < legacyPlugins.length; i++) {
        var possiblePlugin = legacyPlugins[i];
        possiblePlugin && (possiblePlugin = possiblePlugin.extractEvents(topLevelType, inst, nativeEvent, JSCompiler_inline_result)) && (events = accumulateInto(events, possiblePlugin));
      }
      JSCompiler_inline_result = events;
      null !== JSCompiler_inline_result && (eventQueue = accumulateInto(eventQueue, JSCompiler_inline_result));
      JSCompiler_inline_result = eventQueue;
      eventQueue = null;
      if (JSCompiler_inline_result) {
        forEachAccumulated(JSCompiler_inline_result, executeDispatchesAndReleaseTopLevel);
        if (eventQueue) throw Error("processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.");
        if (hasError) throw JSCompiler_inline_result = caughtError, hasError = false, caughtError = null, JSCompiler_inline_result;
      }
    });
  }
  _$$_REQUIRE(_dependencyMap[2]).RCTEventEmitter.register({
    receiveEvent: function receiveEvent(rootNodeID, topLevelType, nativeEventParam) {
      _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam);
    },
    receiveTouches: function receiveTouches(eventTopLevelType, touches, changedIndices) {
      if ("topTouchEnd" === eventTopLevelType || "topTouchCancel" === eventTopLevelType) {
        var JSCompiler_temp = [];
        for (var i = 0; i < changedIndices.length; i++) {
          var index$4 = changedIndices[i];
          JSCompiler_temp.push(touches[index$4]);
          touches[index$4] = null;
        }
        for (i = changedIndices = 0; i < touches.length; i++) index$4 = touches[i], null !== index$4 && (touches[changedIndices++] = index$4);
        touches.length = changedIndices;
      } else for (JSCompiler_temp = [], i = 0; i < changedIndices.length; i++) JSCompiler_temp.push(touches[changedIndices[i]]);
      for (changedIndices = 0; changedIndices < JSCompiler_temp.length; changedIndices++) {
        i = JSCompiler_temp[changedIndices];
        i.changedTouches = JSCompiler_temp;
        i.touches = touches;
        index$4 = null;
        var target = i.target;
        null === target || undefined === target || 1 > target || (index$4 = target);
        _receiveRootNodeIDEvent(index$4, eventTopLevelType, i);
      }
    }
  });
  getFiberCurrentPropsFromNode$1 = function getFiberCurrentPropsFromNode$1(stateNode) {
    return instanceProps.get(stateNode._nativeTag) || null;
  };
  getInstanceFromNode = getInstanceFromTag;
  getNodeFromInstance = function getNodeFromInstance(inst) {
    inst = inst.stateNode;
    var tag = inst._nativeTag;
    undefined === tag && null != inst.canonical && (tag = inst.canonical.nativeTag, inst = inst.canonical.publicInstance);
    if (!tag) throw Error("All native instances should have a tag.");
    return inst;
  };
  ResponderEventPlugin.injection.injectGlobalResponderHandler({
    onChange: function onChange(from, to, blockNativeResponder) {
      null !== to ? _$$_REQUIRE(_dependencyMap[2]).UIManager.setJSResponder(to.stateNode._nativeTag, blockNativeResponder) : _$$_REQUIRE(_dependencyMap[2]).UIManager.clearJSResponder();
    }
  });
  function getNearestMountedFiber(fiber) {
    var node = fiber,
      nearestMounted = fiber;
    if (fiber.alternate) for (; node.return;) node = node.return;else {
      fiber = node;
      do node = fiber, 0 !== (node.flags & 4098) && (nearestMounted = node.return), fiber = node.return; while (fiber);
    }
    return 3 === node.tag ? nearestMounted : null;
  }
  function assertIsMounted(fiber) {
    if (getNearestMountedFiber(fiber) !== fiber) throw Error("Unable to find node on an unmounted component.");
  }
  function findCurrentFiberUsingSlowPath(fiber) {
    var alternate = fiber.alternate;
    if (!alternate) {
      alternate = getNearestMountedFiber(fiber);
      if (null === alternate) throw Error("Unable to find node on an unmounted component.");
      return alternate !== fiber ? null : fiber;
    }
    for (var a = fiber, b = alternate;;) {
      var parentA = a.return;
      if (null === parentA) break;
      var parentB = parentA.alternate;
      if (null === parentB) {
        b = parentA.return;
        if (null !== b) {
          a = b;
          continue;
        }
        break;
      }
      if (parentA.child === parentB.child) {
        for (parentB = parentA.child; parentB;) {
          if (parentB === a) return assertIsMounted(parentA), fiber;
          if (parentB === b) return assertIsMounted(parentA), alternate;
          parentB = parentB.sibling;
        }
        throw Error("Unable to find node on an unmounted component.");
      }
      if (a.return !== b.return) a = parentA, b = parentB;else {
        for (var didFindChild = false, child$5 = parentA.child; child$5;) {
          if (child$5 === a) {
            didFindChild = true;
            a = parentA;
            b = parentB;
            break;
          }
          if (child$5 === b) {
            didFindChild = true;
            b = parentA;
            a = parentB;
            break;
          }
          child$5 = child$5.sibling;
        }
        if (!didFindChild) {
          for (child$5 = parentB.child; child$5;) {
            if (child$5 === a) {
              didFindChild = true;
              a = parentB;
              b = parentA;
              break;
            }
            if (child$5 === b) {
              didFindChild = true;
              b = parentB;
              a = parentA;
              break;
            }
            child$5 = child$5.sibling;
          }
          if (!didFindChild) throw Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
        }
      }
      if (a.alternate !== b) throw Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
    }
    if (3 !== a.tag) throw Error("Unable to find node on an unmounted component.");
    return a.stateNode.current === a ? fiber : alternate;
  }
  function findCurrentHostFiberImpl(node) {
    var tag = node.tag;
    if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return node;
    for (node = node.child; null !== node;) {
      tag = findCurrentHostFiberImpl(node);
      if (null !== tag) return tag;
      node = node.sibling;
    }
    return null;
  }
  var emptyObject = {},
    removedKeys = null,
    removedKeyCount = 0,
    deepDifferOptions = {
      unsafelyIgnoreFunctions: true
    };
  function defaultDiffer(prevProp, nextProp) {
    return "object" !== typeof nextProp || null === nextProp ? true : _$$_REQUIRE(_dependencyMap[2]).deepDiffer(prevProp, nextProp, deepDifferOptions);
  }
  function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {
    if (isArrayImpl(node)) for (var i = node.length; i-- && 0 < removedKeyCount;) restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);else if (node && 0 < removedKeyCount) for (i in removedKeys) if (removedKeys[i]) {
      var nextProp = node[i];
      if (undefined !== nextProp) {
        var attributeConfig = validAttributes[i];
        if (attributeConfig) {
          "function" === typeof nextProp && (nextProp = true);
          "undefined" === typeof nextProp && (nextProp = null);
          if ("object" !== typeof attributeConfig) updatePayload[i] = nextProp;else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) nextProp = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[i] = nextProp;
          removedKeys[i] = false;
          removedKeyCount--;
        }
      }
    }
  }
  function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {
    if (!updatePayload && prevProp === nextProp) return updatePayload;
    if (!prevProp || !nextProp) return nextProp ? addNestedProperty(updatePayload, nextProp, validAttributes) : prevProp ? clearNestedProperty(updatePayload, prevProp, validAttributes) : updatePayload;
    if (!isArrayImpl(prevProp) && !isArrayImpl(nextProp)) return diffProperties(updatePayload, prevProp, nextProp, validAttributes);
    if (isArrayImpl(prevProp) && isArrayImpl(nextProp)) {
      var minLength = prevProp.length < nextProp.length ? prevProp.length : nextProp.length,
        i;
      for (i = 0; i < minLength; i++) updatePayload = diffNestedProperty(updatePayload, prevProp[i], nextProp[i], validAttributes);
      for (; i < prevProp.length; i++) updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
      for (; i < nextProp.length; i++) updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
      return updatePayload;
    }
    return isArrayImpl(prevProp) ? diffProperties(updatePayload, _$$_REQUIRE(_dependencyMap[2]).flattenStyle(prevProp), nextProp, validAttributes) : diffProperties(updatePayload, prevProp, _$$_REQUIRE(_dependencyMap[2]).flattenStyle(nextProp), validAttributes);
  }
  function addNestedProperty(updatePayload, nextProp, validAttributes) {
    if (!nextProp) return updatePayload;
    if (!isArrayImpl(nextProp)) return diffProperties(updatePayload, emptyObject, nextProp, validAttributes);
    for (var i = 0; i < nextProp.length; i++) updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
    return updatePayload;
  }
  function clearNestedProperty(updatePayload, prevProp, validAttributes) {
    if (!prevProp) return updatePayload;
    if (!isArrayImpl(prevProp)) return diffProperties(updatePayload, prevProp, emptyObject, validAttributes);
    for (var i = 0; i < prevProp.length; i++) updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
    return updatePayload;
  }
  function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
    var attributeConfig, propKey;
    for (propKey in nextProps) if (attributeConfig = validAttributes[propKey]) {
      var prevProp = prevProps[propKey];
      var nextProp = nextProps[propKey];
      "function" === typeof nextProp && (nextProp = true, "function" === typeof prevProp && (prevProp = true));
      "undefined" === typeof nextProp && (nextProp = null, "undefined" === typeof prevProp && (prevProp = null));
      removedKeys && (removedKeys[propKey] = false);
      if (updatePayload && undefined !== updatePayload[propKey]) {
        if ("object" !== typeof attributeConfig) updatePayload[propKey] = nextProp;else {
          if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[propKey] = attributeConfig;
        }
      } else if (prevProp !== nextProp) if ("object" !== typeof attributeConfig) defaultDiffer(prevProp, nextProp) && ((updatePayload || (updatePayload = {}))[propKey] = nextProp);else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) {
        if (undefined === prevProp || ("function" === typeof attributeConfig.diff ? attributeConfig.diff(prevProp, nextProp) : defaultDiffer(prevProp, nextProp))) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, (updatePayload || (updatePayload = {}))[propKey] = attributeConfig;
      } else removedKeys = null, removedKeyCount = 0, updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig), 0 < removedKeyCount && updatePayload && (restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig), removedKeys = null);
    }
    for (var propKey$7 in prevProps) undefined === nextProps[propKey$7] && (!(attributeConfig = validAttributes[propKey$7]) || updatePayload && undefined !== updatePayload[propKey$7] || (prevProp = prevProps[propKey$7], undefined !== prevProp && ("object" !== typeof attributeConfig || "function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process ? ((updatePayload || (updatePayload = {}))[propKey$7] = null, removedKeys || (removedKeys = {}), removedKeys[propKey$7] || (removedKeys[propKey$7] = true, removedKeyCount++)) : updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig))));
    return updatePayload;
  }
  function mountSafeCallback_NOT_REALLY_SAFE(context, callback) {
    return function () {
      if (callback && ("boolean" !== typeof context.__isMounted || context.__isMounted)) return callback.apply(context, arguments);
    };
  }
  var ReactNativeFiberHostComponent = function () {
      function ReactNativeFiberHostComponent(tag, viewConfig) {
        this.viewConfig = this._internalFiberInstanceHandleDEV = undefined;
        this._nativeTag = tag;
        this._children = [];
        this.viewConfig = viewConfig;
      }
      var _proto = ReactNativeFiberHostComponent.prototype;
      _proto.blur = function () {
        _$$_REQUIRE(_dependencyMap[2]).TextInputState.blurTextInput(this);
      };
      _proto.focus = function () {
        _$$_REQUIRE(_dependencyMap[2]).TextInputState.focusTextInput(this);
      };
      _proto.measure = function (callback) {
        _$$_REQUIRE(_dependencyMap[2]).UIManager.measure(this._nativeTag, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
      };
      _proto.measureInWindow = function (callback) {
        _$$_REQUIRE(_dependencyMap[2]).UIManager.measureInWindow(this._nativeTag, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
      };
      _proto.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
        if ("number" === typeof relativeToNativeNode) var relativeNode = relativeToNativeNode;else relativeToNativeNode._nativeTag && (relativeNode = relativeToNativeNode._nativeTag);
        null != relativeNode && _$$_REQUIRE(_dependencyMap[2]).UIManager.measureLayout(this._nativeTag, relativeNode, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess));
      };
      _proto.setNativeProps = function (nativeProps) {
        nativeProps = diffProperties(null, emptyObject, nativeProps, this.viewConfig.validAttributes);
        null != nativeProps && _$$_REQUIRE(_dependencyMap[2]).UIManager.updateView(this._nativeTag, this.viewConfig.uiViewClassName, nativeProps);
      };
      return ReactNativeFiberHostComponent;
    }(),
    rendererID = null,
    injectedHook = null;
  function onCommitRoot(root) {
    if (injectedHook && "function" === typeof injectedHook.onCommitFiberRoot) try {
      injectedHook.onCommitFiberRoot(rendererID, root, undefined, 128 === (root.current.flags & 128));
    } catch (err) {}
  }
  function setIsStrictModeForDevtools(newIsStrictMode) {
    "function" === typeof _$$_REQUIRE(_dependencyMap[3]).log && _$$_REQUIRE(_dependencyMap[3]).unstable_setDisableYieldValue(newIsStrictMode);
    if (injectedHook && "function" === typeof injectedHook.setStrictMode) try {
      injectedHook.setStrictMode(rendererID, newIsStrictMode);
    } catch (err) {}
  }
  var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback,
    log = Math.log,
    LN2 = Math.LN2;
  function clz32Fallback(x) {
    x >>>= 0;
    return 0 === x ? 32 : 31 - (log(x) / LN2 | 0) | 0;
  }
  var nextTransitionLane = 128,
    nextRetryLane = 4194304;
  function getHighestPriorityLanes(lanes) {
    var pendingSyncLanes = lanes & 42;
    if (0 !== pendingSyncLanes) return pendingSyncLanes;
    switch (lanes & -lanes) {
      case 1:
        return 1;
      case 2:
        return 2;
      case 4:
        return 4;
      case 8:
        return 8;
      case 16:
        return 16;
      case 32:
        return 32;
      case 64:
        return 64;
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return lanes & 4194176;
      case 4194304:
      case 8388608:
      case 16777216:
      case 33554432:
        return lanes & 62914560;
      case 67108864:
        return 67108864;
      case 134217728:
        return 134217728;
      case 268435456:
        return 268435456;
      case 536870912:
        return 536870912;
      case 1073741824:
        return 0;
      default:
        return lanes;
    }
  }
  function getNextLanes(root, wipLanes) {
    var pendingLanes = root.pendingLanes;
    if (0 === pendingLanes) return 0;
    var nextLanes = 0,
      suspendedLanes = root.suspendedLanes,
      pingedLanes = root.pingedLanes,
      warmLanes = root.warmLanes;
    root = 0 !== root.finishedLanes;
    var nonIdlePendingLanes = pendingLanes & 134217727;
    0 !== nonIdlePendingLanes ? (pendingLanes = nonIdlePendingLanes & ~suspendedLanes, 0 !== pendingLanes ? nextLanes = getHighestPriorityLanes(pendingLanes) : (pingedLanes &= nonIdlePendingLanes, 0 !== pingedLanes ? nextLanes = getHighestPriorityLanes(pingedLanes) : root || (warmLanes = nonIdlePendingLanes & ~warmLanes, 0 !== warmLanes && (nextLanes = getHighestPriorityLanes(warmLanes))))) : (nonIdlePendingLanes = pendingLanes & ~suspendedLanes, 0 !== nonIdlePendingLanes ? nextLanes = getHighestPriorityLanes(nonIdlePendingLanes) : 0 !== pingedLanes ? nextLanes = getHighestPriorityLanes(pingedLanes) : root || (warmLanes = pendingLanes & ~warmLanes, 0 !== warmLanes && (nextLanes = getHighestPriorityLanes(warmLanes))));
    return 0 === nextLanes ? 0 : 0 !== wipLanes && wipLanes !== nextLanes && 0 === (wipLanes & suspendedLanes) && (suspendedLanes = nextLanes & -nextLanes, warmLanes = wipLanes & -wipLanes, suspendedLanes >= warmLanes || 32 === suspendedLanes && 0 !== (warmLanes & 4194176)) ? wipLanes : nextLanes;
  }
  function checkIfRootIsPrerendering(root, renderLanes) {
    return 0 === (root.pendingLanes & ~(root.suspendedLanes & ~root.pingedLanes) & renderLanes);
  }
  function computeExpirationTime(lane, currentTime) {
    switch (lane) {
      case 1:
      case 2:
      case 4:
      case 8:
        return currentTime + 250;
      case 16:
      case 32:
      case 64:
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return currentTime + 5e3;
      case 4194304:
      case 8388608:
      case 16777216:
      case 33554432:
        return -1;
      case 67108864:
      case 134217728:
      case 268435456:
      case 536870912:
      case 1073741824:
        return -1;
      default:
        return -1;
    }
  }
  function claimNextTransitionLane() {
    var lane = nextTransitionLane;
    nextTransitionLane <<= 1;
    0 === (nextTransitionLane & 4194176) && (nextTransitionLane = 128);
    return lane;
  }
  function claimNextRetryLane() {
    var lane = nextRetryLane;
    nextRetryLane <<= 1;
    0 === (nextRetryLane & 62914560) && (nextRetryLane = 4194304);
    return lane;
  }
  function createLaneMap(initial) {
    for (var laneMap = [], i = 0; 31 > i; i++) laneMap.push(initial);
    return laneMap;
  }
  function markRootUpdated$1(root, updateLane) {
    root.pendingLanes |= updateLane;
    268435456 !== updateLane && (root.suspendedLanes = 0, root.pingedLanes = 0, root.warmLanes = 0);
  }
  function markRootFinished(root, finishedLanes, remainingLanes, spawnedLane, updatedLanes, suspendedRetryLanes) {
    var previouslyPendingLanes = root.pendingLanes;
    root.pendingLanes = remainingLanes;
    root.suspendedLanes = 0;
    root.pingedLanes = 0;
    root.warmLanes = 0;
    root.expiredLanes &= remainingLanes;
    root.entangledLanes &= remainingLanes;
    root.errorRecoveryDisabledLanes &= remainingLanes;
    root.shellSuspendCounter = 0;
    var entanglements = root.entanglements,
      expirationTimes = root.expirationTimes,
      hiddenUpdates = root.hiddenUpdates;
    for (remainingLanes = previouslyPendingLanes & ~remainingLanes; 0 < remainingLanes;) {
      var index$12 = 31 - clz32(remainingLanes),
        lane = 1 << index$12;
      entanglements[index$12] = 0;
      expirationTimes[index$12] = -1;
      var hiddenUpdatesForLane = hiddenUpdates[index$12];
      if (null !== hiddenUpdatesForLane) for (hiddenUpdates[index$12] = null, index$12 = 0; index$12 < hiddenUpdatesForLane.length; index$12++) {
        var update = hiddenUpdatesForLane[index$12];
        null !== update && (update.lane &= -536870913);
      }
      remainingLanes &= ~lane;
    }
    0 !== spawnedLane && markSpawnedDeferredLane(root, spawnedLane, 0);
    0 !== suspendedRetryLanes && 0 === updatedLanes && (root.suspendedLanes |= suspendedRetryLanes & ~(previouslyPendingLanes & ~finishedLanes));
  }
  function markSpawnedDeferredLane(root, spawnedLane, entangledLanes) {
    root.pendingLanes |= spawnedLane;
    root.suspendedLanes &= ~spawnedLane;
    var spawnedLaneIndex = 31 - clz32(spawnedLane);
    root.entangledLanes |= spawnedLane;
    root.entanglements[spawnedLaneIndex] = root.entanglements[spawnedLaneIndex] | 1073741824 | entangledLanes & 4194218;
  }
  function markRootEntangled(root, entangledLanes) {
    var rootEntangledLanes = root.entangledLanes |= entangledLanes;
    for (root = root.entanglements; rootEntangledLanes;) {
      var index$13 = 31 - clz32(rootEntangledLanes),
        lane = 1 << index$13;
      lane & entangledLanes | root[index$13] & entangledLanes && (root[index$13] |= entangledLanes);
      rootEntangledLanes &= ~lane;
    }
  }
  function lanesToEventPriority(lanes) {
    lanes &= -lanes;
    return 2 < lanes ? 8 < lanes ? 0 !== (lanes & 134217727) ? 32 : 268435456 : 8 : 2;
  }
  function getInspectorDataForInstance() {
    throw Error("getInspectorDataForInstance() is not available in production");
  }
  function shim$1() {
    throw Error("The current renderer does not support hydration. This error is likely caused by a bug in React. Please file an issue.");
  }
  function shim() {
    throw Error("The current renderer does not support Resources. This error is likely caused by a bug in React. Please file an issue.");
  }
  var extraDevToolsConfig = {
      getInspectorDataForInstance: getInspectorDataForInstance,
      getInspectorDataForViewTag: function getInspectorDataForViewTag() {
        throw Error("getInspectorDataForViewTag() is not available in production");
      },
      getInspectorDataForViewAtPoint: function getInspectorDataForViewAtPoint() {
        throw Error("getInspectorDataForViewAtPoint() is not available in production.");
      }
    },
    getViewConfigForType = _$$_REQUIRE(_dependencyMap[2]).ReactNativeViewConfigRegistry.get,
    nextReactTag = 3;
  function allocateTag() {
    var tag = nextReactTag;
    1 === tag % 10 && (tag += 2);
    nextReactTag = tag + 2;
    return tag;
  }
  function recursivelyUncacheFiberNode(node) {
    if ("number" === typeof node) instanceCache.delete(node), instanceProps.delete(node);else {
      var tag = node._nativeTag;
      instanceCache.delete(tag);
      instanceProps.delete(tag);
      node._children.forEach(recursivelyUncacheFiberNode);
    }
  }
  function finalizeInitialChildren(parentInstance) {
    if (0 === parentInstance._children.length) return false;
    var nativeTags = parentInstance._children.map(function (child) {
      return "number" === typeof child ? child : child._nativeTag;
    });
    _$$_REQUIRE(_dependencyMap[2]).UIManager.setChildren(parentInstance._nativeTag, nativeTags);
    return false;
  }
  function getPublicInstance(instance) {
    return null != instance.canonical && null != instance.canonical.publicInstance ? instance.canonical.publicInstance : instance;
  }
  var scheduleTimeout = setTimeout,
    cancelTimeout = clearTimeout,
    currentUpdatePriority = 0,
    HostTransitionContext = {
      $$typeof: REACT_CONTEXT_TYPE,
      Provider: null,
      Consumer: null,
      _currentValue: null,
      _currentValue2: null,
      _threadCount: 0
    },
    valueStack = [],
    index = -1;
  function createCursor(defaultValue) {
    return {
      current: defaultValue
    };
  }
  function pop(cursor) {
    0 > index || (cursor.current = valueStack[index], valueStack[index] = null, index--);
  }
  function push(cursor, value) {
    index++;
    valueStack[index] = cursor.current;
    cursor.current = value;
  }
  var emptyContextObject = {};
  function is(x, y) {
    return x === y && (0 !== x || 1 / x === 1 / y) || x !== x && y !== y;
  }
  var objectIs = "function" === typeof Object.is ? Object.is : is,
    CapturedStacks = new WeakMap();
  function createCapturedValueAtFiber(value, source) {
    if ("object" === typeof value && null !== value) {
      var existing = CapturedStacks.get(value);
      if (undefined !== existing) return existing;
      source = {
        value: value,
        source: source,
        stack: getStackByFiberInDevAndProd(source)
      };
      CapturedStacks.set(value, source);
      return source;
    }
    return {
      value: value,
      source: source,
      stack: getStackByFiberInDevAndProd(source)
    };
  }
  var contextStackCursor = createCursor(null),
    contextFiberStackCursor = createCursor(null),
    rootInstanceStackCursor = createCursor(null),
    hostTransitionProviderCursor = createCursor(null);
  function pushHostContainer(fiber, nextRootInstance) {
    push(rootInstanceStackCursor, nextRootInstance);
    push(contextFiberStackCursor, fiber);
    push(contextStackCursor, null);
    pop(contextStackCursor);
    push(contextStackCursor, {
      isInAParentText: false
    });
  }
  function popHostContainer() {
    pop(contextStackCursor);
    pop(contextFiberStackCursor);
    pop(rootInstanceStackCursor);
  }
  function pushHostContext(fiber) {
    null !== fiber.memoizedState && push(hostTransitionProviderCursor, fiber);
    var context = contextStackCursor.current;
    var JSCompiler_inline_result = fiber.type;
    JSCompiler_inline_result = "AndroidTextInput" === JSCompiler_inline_result || "RCTMultilineTextInputView" === JSCompiler_inline_result || "RCTSinglelineTextInputView" === JSCompiler_inline_result || "RCTText" === JSCompiler_inline_result || "RCTVirtualText" === JSCompiler_inline_result;
    JSCompiler_inline_result = context.isInAParentText !== JSCompiler_inline_result ? {
      isInAParentText: JSCompiler_inline_result
    } : context;
    context !== JSCompiler_inline_result && (push(contextFiberStackCursor, fiber), push(contextStackCursor, JSCompiler_inline_result));
  }
  function popHostContext(fiber) {
    contextFiberStackCursor.current === fiber && (pop(contextStackCursor), pop(contextFiberStackCursor));
    hostTransitionProviderCursor.current === fiber && (pop(hostTransitionProviderCursor), HostTransitionContext._currentValue = null);
  }
  var hydrationErrors = null,
    concurrentQueues = [],
    concurrentQueuesIndex = 0,
    concurrentlyUpdatedLanes = 0;
  function finishQueueingConcurrentUpdates() {
    for (var endIndex = concurrentQueuesIndex, i = concurrentlyUpdatedLanes = concurrentQueuesIndex = 0; i < endIndex;) {
      var fiber = concurrentQueues[i];
      concurrentQueues[i++] = null;
      var queue = concurrentQueues[i];
      concurrentQueues[i++] = null;
      var update = concurrentQueues[i];
      concurrentQueues[i++] = null;
      var lane = concurrentQueues[i];
      concurrentQueues[i++] = null;
      if (null !== queue && null !== update) {
        var pending = queue.pending;
        null === pending ? update.next = update : (update.next = pending.next, pending.next = update);
        queue.pending = update;
      }
      0 !== lane && markUpdateLaneFromFiberToRoot(fiber, update, lane);
    }
  }
  function enqueueUpdate$1(fiber, queue, update, lane) {
    concurrentQueues[concurrentQueuesIndex++] = fiber;
    concurrentQueues[concurrentQueuesIndex++] = queue;
    concurrentQueues[concurrentQueuesIndex++] = update;
    concurrentQueues[concurrentQueuesIndex++] = lane;
    concurrentlyUpdatedLanes |= lane;
    fiber.lanes |= lane;
    fiber = fiber.alternate;
    null !== fiber && (fiber.lanes |= lane);
  }
  function enqueueConcurrentHookUpdate(fiber, queue, update, lane) {
    enqueueUpdate$1(fiber, queue, update, lane);
    return getRootForUpdatedFiber(fiber);
  }
  function enqueueConcurrentRenderForLane(fiber, lane) {
    enqueueUpdate$1(fiber, null, null, lane);
    return getRootForUpdatedFiber(fiber);
  }
  function markUpdateLaneFromFiberToRoot(sourceFiber, update, lane) {
    sourceFiber.lanes |= lane;
    var alternate = sourceFiber.alternate;
    null !== alternate && (alternate.lanes |= lane);
    for (var isHidden = false, parent = sourceFiber.return; null !== parent;) parent.childLanes |= lane, alternate = parent.alternate, null !== alternate && (alternate.childLanes |= lane), 22 === parent.tag && (sourceFiber = parent.stateNode, null === sourceFiber || sourceFiber._visibility & 1 || (isHidden = true)), sourceFiber = parent, parent = parent.return;
    isHidden && null !== update && 3 === sourceFiber.tag && (parent = sourceFiber.stateNode, isHidden = 31 - clz32(lane), parent = parent.hiddenUpdates, sourceFiber = parent[isHidden], null === sourceFiber ? parent[isHidden] = [update] : sourceFiber.push(update), update.lane = lane | 536870912);
  }
  function getRootForUpdatedFiber(sourceFiber) {
    if (50 < nestedUpdateCount) throw nestedUpdateCount = 0, rootWithNestedUpdates = null, Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
    for (var parent = sourceFiber.return; null !== parent;) sourceFiber = parent, parent = sourceFiber.return;
    return 3 === sourceFiber.tag ? sourceFiber.stateNode : null;
  }
  var firstScheduledRoot = null,
    lastScheduledRoot = null,
    didScheduleMicrotask = false,
    mightHavePendingSyncWork = false,
    isFlushingWork = false,
    currentEventTransitionLane = 0;
  function ensureRootIsScheduled(root) {
    root !== lastScheduledRoot && null === root.next && (null === lastScheduledRoot ? firstScheduledRoot = lastScheduledRoot = root : lastScheduledRoot = lastScheduledRoot.next = root);
    mightHavePendingSyncWork = true;
    didScheduleMicrotask || (didScheduleMicrotask = true, _$$_REQUIRE(_dependencyMap[3]).unstable_scheduleCallback(_$$_REQUIRE(_dependencyMap[3]).unstable_ImmediatePriority, processRootScheduleInMicrotask));
  }
  function flushSyncWorkAcrossRoots_impl(syncTransitionLanes, onlyLegacy) {
    if (!isFlushingWork && mightHavePendingSyncWork) {
      isFlushingWork = true;
      do {
        var didPerformSomeWork = false;
        for (var root = firstScheduledRoot; null !== root;) {
          if (!onlyLegacy || 0 === root.tag) if (0 !== syncTransitionLanes) {
            var pendingLanes = root.pendingLanes;
            if (0 === pendingLanes) var JSCompiler_inline_result = 0;else {
              var suspendedLanes = root.suspendedLanes,
                pingedLanes = root.pingedLanes;
              JSCompiler_inline_result = (1 << 31 - clz32(42 | syncTransitionLanes) + 1) - 1;
              JSCompiler_inline_result &= pendingLanes & ~(suspendedLanes & ~pingedLanes);
              JSCompiler_inline_result = JSCompiler_inline_result & 201326677 ? JSCompiler_inline_result & 201326677 | 1 : JSCompiler_inline_result ? JSCompiler_inline_result | 2 : 0;
            }
            0 !== JSCompiler_inline_result && (didPerformSomeWork = true, performSyncWorkOnRoot(root, JSCompiler_inline_result));
          } else JSCompiler_inline_result = workInProgressRootRenderLanes, JSCompiler_inline_result = getNextLanes(root, root === workInProgressRoot ? JSCompiler_inline_result : 0), 0 === (JSCompiler_inline_result & 3) || checkIfRootIsPrerendering(root, JSCompiler_inline_result) || (didPerformSomeWork = true, performSyncWorkOnRoot(root, JSCompiler_inline_result));
          root = root.next;
        }
      } while (didPerformSomeWork);
      isFlushingWork = false;
    }
  }
  function processRootScheduleInMicrotask() {
    mightHavePendingSyncWork = didScheduleMicrotask = false;
    0 !== currentEventTransitionLane && (currentEventTransitionLane = 0);
    for (var currentTime = _$$_REQUIRE(_dependencyMap[3]).unstable_now(), prev = null, root = firstScheduledRoot; null !== root;) {
      var next = root.next,
        nextLanes = scheduleTaskForRootDuringMicrotask(root, currentTime);
      0 === nextLanes ? (root.next = null, null === prev ? firstScheduledRoot = next : prev.next = next, null === next && (lastScheduledRoot = prev)) : (prev = root, 0 !== (nextLanes & 3) && (mightHavePendingSyncWork = true));
      root = next;
    }
    flushSyncWorkAcrossRoots_impl(0, false);
  }
  function scheduleTaskForRootDuringMicrotask(root, currentTime) {
    for (var suspendedLanes = root.suspendedLanes, pingedLanes = root.pingedLanes, expirationTimes = root.expirationTimes, lanes = root.pendingLanes & -62914561; 0 < lanes;) {
      var index$10 = 31 - clz32(lanes),
        lane = 1 << index$10,
        expirationTime = expirationTimes[index$10];
      if (-1 === expirationTime) {
        if (0 === (lane & suspendedLanes) || 0 !== (lane & pingedLanes)) expirationTimes[index$10] = computeExpirationTime(lane, currentTime);
      } else expirationTime <= currentTime && (root.expiredLanes |= lane);
      lanes &= ~lane;
    }
    currentTime = workInProgressRoot;
    suspendedLanes = workInProgressRootRenderLanes;
    suspendedLanes = getNextLanes(root, root === currentTime ? suspendedLanes : 0);
    pingedLanes = root.callbackNode;
    if (0 === suspendedLanes || root === currentTime && 2 === workInProgressSuspendedReason || null !== root.cancelPendingCommit) return null !== pingedLanes && null !== pingedLanes && _$$_REQUIRE(_dependencyMap[3]).unstable_cancelCallback(pingedLanes), root.callbackNode = null, root.callbackPriority = 0;
    if (0 === (suspendedLanes & 3) || checkIfRootIsPrerendering(root, suspendedLanes)) {
      currentTime = suspendedLanes & -suspendedLanes;
      if (currentTime === root.callbackPriority) return currentTime;
      null !== pingedLanes && _$$_REQUIRE(_dependencyMap[3]).unstable_cancelCallback(pingedLanes);
      switch (lanesToEventPriority(suspendedLanes)) {
        case 2:
        case 8:
          suspendedLanes = _$$_REQUIRE(_dependencyMap[3]).unstable_UserBlockingPriority;
          break;
        case 32:
          suspendedLanes = _$$_REQUIRE(_dependencyMap[3]).unstable_NormalPriority;
          break;
        case 268435456:
          suspendedLanes = _$$_REQUIRE(_dependencyMap[3]).unstable_IdlePriority;
          break;
        default:
          suspendedLanes = _$$_REQUIRE(_dependencyMap[3]).unstable_NormalPriority;
      }
      pingedLanes = performWorkOnRootViaSchedulerTask.bind(null, root);
      suspendedLanes = _$$_REQUIRE(_dependencyMap[3]).unstable_scheduleCallback(suspendedLanes, pingedLanes);
      root.callbackPriority = currentTime;
      root.callbackNode = suspendedLanes;
      return currentTime;
    }
    null !== pingedLanes && null !== pingedLanes && _$$_REQUIRE(_dependencyMap[3]).unstable_cancelCallback(pingedLanes);
    root.callbackPriority = 2;
    root.callbackNode = null;
    return 2;
  }
  function performWorkOnRootViaSchedulerTask(root, didTimeout) {
    var originalCallbackNode = root.callbackNode;
    if (flushPassiveEffects() && root.callbackNode !== originalCallbackNode) return null;
    var workInProgressRootRenderLanes$jscomp$0 = workInProgressRootRenderLanes;
    workInProgressRootRenderLanes$jscomp$0 = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes$jscomp$0 : 0);
    if (0 === workInProgressRootRenderLanes$jscomp$0) return null;
    performWorkOnRoot(root, workInProgressRootRenderLanes$jscomp$0, didTimeout);
    scheduleTaskForRootDuringMicrotask(root, _$$_REQUIRE(_dependencyMap[3]).unstable_now());
    return null != root.callbackNode && root.callbackNode === originalCallbackNode ? performWorkOnRootViaSchedulerTask.bind(null, root) : null;
  }
  function performSyncWorkOnRoot(root, lanes) {
    if (flushPassiveEffects()) return null;
    performWorkOnRoot(root, lanes, true);
  }
  function requestTransitionLane() {
    0 === currentEventTransitionLane && (currentEventTransitionLane = claimNextTransitionLane());
    return currentEventTransitionLane;
  }
  var currentEntangledListeners = null,
    currentEntangledPendingCount = 0,
    currentEntangledLane = 0,
    currentEntangledActionThenable = null;
  function entangleAsyncAction(transition, thenable) {
    if (null === currentEntangledListeners) {
      var entangledListeners = currentEntangledListeners = [];
      currentEntangledPendingCount = 0;
      currentEntangledLane = requestTransitionLane();
      currentEntangledActionThenable = {
        status: "pending",
        value: undefined,
        then: function then(resolve) {
          entangledListeners.push(resolve);
        }
      };
    }
    currentEntangledPendingCount++;
    thenable.then(pingEngtangledActionScope, pingEngtangledActionScope);
    return thenable;
  }
  function pingEngtangledActionScope() {
    if (0 === --currentEntangledPendingCount && null !== currentEntangledListeners) {
      null !== currentEntangledActionThenable && (currentEntangledActionThenable.status = "fulfilled");
      var listeners = currentEntangledListeners;
      currentEntangledListeners = null;
      currentEntangledLane = 0;
      currentEntangledActionThenable = null;
      for (var i = 0; i < listeners.length; i++) (0, listeners[i])();
    }
  }
  function chainThenableValue(thenable, result) {
    var listeners = [],
      thenableWithOverride = {
        status: "pending",
        value: null,
        reason: null,
        then: function then(resolve) {
          listeners.push(resolve);
        }
      };
    thenable.then(function () {
      thenableWithOverride.status = "fulfilled";
      thenableWithOverride.value = result;
      for (var i = 0; i < listeners.length; i++) (0, listeners[i])(result);
    }, function (error) {
      thenableWithOverride.status = "rejected";
      thenableWithOverride.reason = error;
      for (error = 0; error < listeners.length; error++) (0, listeners[error])(undefined);
    });
    return thenableWithOverride;
  }
  var hasForceUpdate = false;
  function initializeUpdateQueue(fiber) {
    fiber.updateQueue = {
      baseState: fiber.memoizedState,
      firstBaseUpdate: null,
      lastBaseUpdate: null,
      shared: {
        pending: null,
        lanes: 0,
        hiddenCallbacks: null
      },
      callbacks: null
    };
  }
  function cloneUpdateQueue(current, workInProgress) {
    current = current.updateQueue;
    workInProgress.updateQueue === current && (workInProgress.updateQueue = {
      baseState: current.baseState,
      firstBaseUpdate: current.firstBaseUpdate,
      lastBaseUpdate: current.lastBaseUpdate,
      shared: current.shared,
      callbacks: null
    });
  }
  function createUpdate(lane) {
    return {
      lane: lane,
      tag: 0,
      payload: null,
      callback: null,
      next: null
    };
  }
  function enqueueUpdate(fiber, update, lane) {
    var updateQueue = fiber.updateQueue;
    if (null === updateQueue) return null;
    updateQueue = updateQueue.shared;
    if (0 !== (executionContext & 2)) {
      var pending = updateQueue.pending;
      null === pending ? update.next = update : (update.next = pending.next, pending.next = update);
      updateQueue.pending = update;
      update = getRootForUpdatedFiber(fiber);
      markUpdateLaneFromFiberToRoot(fiber, null, lane);
      return update;
    }
    enqueueUpdate$1(fiber, updateQueue, update, lane);
    return getRootForUpdatedFiber(fiber);
  }
  function entangleTransitions(root, fiber, lane) {
    fiber = fiber.updateQueue;
    if (null !== fiber && (fiber = fiber.shared, 0 !== (lane & 4194176))) {
      var queueLanes = fiber.lanes;
      queueLanes &= root.pendingLanes;
      lane |= queueLanes;
      fiber.lanes = lane;
      markRootEntangled(root, lane);
    }
  }
  function enqueueCapturedUpdate(workInProgress, capturedUpdate) {
    var queue = workInProgress.updateQueue,
      current = workInProgress.alternate;
    if (null !== current && (current = current.updateQueue, queue === current)) {
      var newFirst = null,
        newLast = null;
      queue = queue.firstBaseUpdate;
      if (null !== queue) {
        do {
          var clone = {
            lane: queue.lane,
            tag: queue.tag,
            payload: queue.payload,
            callback: null,
            next: null
          };
          null === newLast ? newFirst = newLast = clone : newLast = newLast.next = clone;
          queue = queue.next;
        } while (null !== queue);
        null === newLast ? newFirst = newLast = capturedUpdate : newLast = newLast.next = capturedUpdate;
      } else newFirst = newLast = capturedUpdate;
      queue = {
        baseState: current.baseState,
        firstBaseUpdate: newFirst,
        lastBaseUpdate: newLast,
        shared: current.shared,
        callbacks: current.callbacks
      };
      workInProgress.updateQueue = queue;
      return;
    }
    workInProgress = queue.lastBaseUpdate;
    null === workInProgress ? queue.firstBaseUpdate = capturedUpdate : workInProgress.next = capturedUpdate;
    queue.lastBaseUpdate = capturedUpdate;
  }
  var didReadFromEntangledAsyncAction = false;
  function suspendIfUpdateReadFromEntangledAsyncAction() {
    if (didReadFromEntangledAsyncAction) {
      var entangledActionThenable = currentEntangledActionThenable;
      if (null !== entangledActionThenable) throw entangledActionThenable;
    }
  }
  function processUpdateQueue(workInProgress$jscomp$0, props, instance$jscomp$0, renderLanes) {
    didReadFromEntangledAsyncAction = false;
    var queue = workInProgress$jscomp$0.updateQueue;
    hasForceUpdate = false;
    var firstBaseUpdate = queue.firstBaseUpdate,
      lastBaseUpdate = queue.lastBaseUpdate,
      pendingQueue = queue.shared.pending;
    if (null !== pendingQueue) {
      queue.shared.pending = null;
      var lastPendingUpdate = pendingQueue,
        firstPendingUpdate = lastPendingUpdate.next;
      lastPendingUpdate.next = null;
      null === lastBaseUpdate ? firstBaseUpdate = firstPendingUpdate : lastBaseUpdate.next = firstPendingUpdate;
      lastBaseUpdate = lastPendingUpdate;
      var current = workInProgress$jscomp$0.alternate;
      null !== current && (current = current.updateQueue, pendingQueue = current.lastBaseUpdate, pendingQueue !== lastBaseUpdate && (null === pendingQueue ? current.firstBaseUpdate = firstPendingUpdate : pendingQueue.next = firstPendingUpdate, current.lastBaseUpdate = lastPendingUpdate));
    }
    if (null !== firstBaseUpdate) {
      var newState = queue.baseState;
      lastBaseUpdate = 0;
      current = firstPendingUpdate = lastPendingUpdate = null;
      pendingQueue = firstBaseUpdate;
      do {
        var updateLane = pendingQueue.lane & -536870913,
          isHiddenUpdate = updateLane !== pendingQueue.lane;
        if (isHiddenUpdate ? (workInProgressRootRenderLanes & updateLane) === updateLane : (renderLanes & updateLane) === updateLane) {
          0 !== updateLane && updateLane === currentEntangledLane && (didReadFromEntangledAsyncAction = true);
          null !== current && (current = current.next = {
            lane: 0,
            tag: pendingQueue.tag,
            payload: pendingQueue.payload,
            callback: null,
            next: null
          });
          a: {
            var workInProgress = workInProgress$jscomp$0,
              update = pendingQueue;
            updateLane = props;
            var instance = instance$jscomp$0;
            switch (update.tag) {
              case 1:
                workInProgress = update.payload;
                if ("function" === typeof workInProgress) {
                  newState = workInProgress.call(instance, newState, updateLane);
                  break a;
                }
                newState = workInProgress;
                break a;
              case 3:
                workInProgress.flags = workInProgress.flags & -65537 | 128;
              case 0:
                workInProgress = update.payload;
                updateLane = "function" === typeof workInProgress ? workInProgress.call(instance, newState, updateLane) : workInProgress;
                if (null === updateLane || undefined === updateLane) break a;
                newState = assign({}, newState, updateLane);
                break a;
              case 2:
                hasForceUpdate = true;
            }
          }
          updateLane = pendingQueue.callback;
          null !== updateLane && (workInProgress$jscomp$0.flags |= 64, isHiddenUpdate && (workInProgress$jscomp$0.flags |= 8192), isHiddenUpdate = queue.callbacks, null === isHiddenUpdate ? queue.callbacks = [updateLane] : isHiddenUpdate.push(updateLane));
        } else isHiddenUpdate = {
          lane: updateLane,
          tag: pendingQueue.tag,
          payload: pendingQueue.payload,
          callback: pendingQueue.callback,
          next: null
        }, null === current ? (firstPendingUpdate = current = isHiddenUpdate, lastPendingUpdate = newState) : current = current.next = isHiddenUpdate, lastBaseUpdate |= updateLane;
        pendingQueue = pendingQueue.next;
        if (null === pendingQueue) if (pendingQueue = queue.shared.pending, null === pendingQueue) break;else isHiddenUpdate = pendingQueue, pendingQueue = isHiddenUpdate.next, isHiddenUpdate.next = null, queue.lastBaseUpdate = isHiddenUpdate, queue.shared.pending = null;
      } while (1);
      null === current && (lastPendingUpdate = newState);
      queue.baseState = lastPendingUpdate;
      queue.firstBaseUpdate = firstPendingUpdate;
      queue.lastBaseUpdate = current;
      null === firstBaseUpdate && (queue.shared.lanes = 0);
      workInProgressRootSkippedLanes |= lastBaseUpdate;
      workInProgress$jscomp$0.lanes = lastBaseUpdate;
      workInProgress$jscomp$0.memoizedState = newState;
    }
  }
  function callCallback(callback, context) {
    if ("function" !== typeof callback) throw Error("Invalid argument passed as callback. Expected a function. Instead received: " + callback);
    callback.call(context);
  }
  function commitCallbacks(updateQueue, context) {
    var callbacks = updateQueue.callbacks;
    if (null !== callbacks) for (updateQueue.callbacks = null, updateQueue = 0; updateQueue < callbacks.length; updateQueue++) callCallback(callbacks[updateQueue], context);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  function shallowEqual(objA, objB) {
    if (objectIs(objA, objB)) return true;
    if ("object" !== typeof objA || null === objA || "object" !== typeof objB || null === objB) return false;
    var keysA = Object.keys(objA),
      keysB = Object.keys(objB);
    if (keysA.length !== keysB.length) return false;
    for (keysB = 0; keysB < keysA.length; keysB++) {
      var currentKey = keysA[keysB];
      if (!hasOwnProperty.call(objB, currentKey) || !objectIs(objA[currentKey], objB[currentKey])) return false;
    }
    return true;
  }
  var SuspenseException = Error("Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately, or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\n\nTo handle async errors, wrap your component in an error boundary, or call the promise's `.catch` method and pass the result to `use`"),
    SuspenseyCommitException = Error("Suspense Exception: This is not a real error, and should not leak into userspace. If you're seeing this, it's likely a bug in React."),
    noopSuspenseyCommitThenable = {
      then: function then() {}
    };
  function isThenableResolved(thenable) {
    thenable = thenable.status;
    return "fulfilled" === thenable || "rejected" === thenable;
  }
  function noop() {}
  function trackUsedThenable(thenableState, thenable, index) {
    index = thenableState[index];
    undefined === index ? thenableState.push(thenable) : index !== thenable && (thenable.then(noop, noop), thenable = index);
    switch (thenable.status) {
      case "fulfilled":
        return thenable.value;
      case "rejected":
        throw thenableState = thenable.reason, checkIfUseWrappedInAsyncCatch(thenableState), thenableState;
      default:
        if ("string" === typeof thenable.status) thenable.then(noop, noop);else {
          thenableState = workInProgressRoot;
          if (null !== thenableState && 100 < thenableState.shellSuspendCounter) throw Error("async/await is not yet supported in Client Components, only Server Components. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server.");
          thenableState = thenable;
          thenableState.status = "pending";
          thenableState.then(function (fulfilledValue) {
            if ("pending" === thenable.status) {
              var fulfilledThenable = thenable;
              fulfilledThenable.status = "fulfilled";
              fulfilledThenable.value = fulfilledValue;
            }
          }, function (error) {
            if ("pending" === thenable.status) {
              var rejectedThenable = thenable;
              rejectedThenable.status = "rejected";
              rejectedThenable.reason = error;
            }
          });
        }
        switch (thenable.status) {
          case "fulfilled":
            return thenable.value;
          case "rejected":
            throw thenableState = thenable.reason, checkIfUseWrappedInAsyncCatch(thenableState), thenableState;
        }
        suspendedThenable = thenable;
        throw SuspenseException;
    }
  }
  var suspendedThenable = null;
  function getSuspendedThenable() {
    if (null === suspendedThenable) throw Error("Expected a suspended thenable. This is a bug in React. Please file an issue.");
    var thenable = suspendedThenable;
    suspendedThenable = null;
    return thenable;
  }
  function checkIfUseWrappedInAsyncCatch(rejectedReason) {
    if (rejectedReason === SuspenseException) throw Error("Hooks are not supported inside an async component. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server.");
  }
  var thenableState$1 = null,
    thenableIndexCounter$1 = 0;
  function unwrapThenable(thenable) {
    var index = thenableIndexCounter$1;
    thenableIndexCounter$1 += 1;
    null === thenableState$1 && (thenableState$1 = []);
    return trackUsedThenable(thenableState$1, thenable, index);
  }
  function coerceRef(workInProgress, element) {
    element = element.props.ref;
    workInProgress.ref = undefined !== element ? element : null;
  }
  function throwOnInvalidObjectType(returnFiber, newChild) {
    if (newChild.$$typeof === REACT_LEGACY_ELEMENT_TYPE) throw Error('A React Element from an older version of React was rendered. This is not supported. It can happen if:\n- Multiple copies of the "react" package is used.\n- A library pre-bundled an old copy of "react" or "react/jsx-runtime".\n- A compiler tries to "inline" JSX instead of using the runtime.');
    returnFiber = Object.prototype.toString.call(newChild);
    throw Error("Objects are not valid as a React child (found: " + ("[object Object]" === returnFiber ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : returnFiber) + "). If you meant to render a collection of children, use an array instead.");
  }
  function resolveLazy(lazyType) {
    var init = lazyType._init;
    return init(lazyType._payload);
  }
  function createChildReconciler(shouldTrackSideEffects) {
    function deleteChild(returnFiber, childToDelete) {
      if (shouldTrackSideEffects) {
        var deletions = returnFiber.deletions;
        null === deletions ? (returnFiber.deletions = [childToDelete], returnFiber.flags |= 16) : deletions.push(childToDelete);
      }
    }
    function deleteRemainingChildren(returnFiber, currentFirstChild) {
      if (!shouldTrackSideEffects) return null;
      for (; null !== currentFirstChild;) deleteChild(returnFiber, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      return null;
    }
    function mapRemainingChildren(currentFirstChild) {
      for (var existingChildren = new Map(); null !== currentFirstChild;) null !== currentFirstChild.key ? existingChildren.set(currentFirstChild.key, currentFirstChild) : existingChildren.set(currentFirstChild.index, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      return existingChildren;
    }
    function useFiber(fiber, pendingProps) {
      fiber = createWorkInProgress(fiber, pendingProps);
      fiber.index = 0;
      fiber.sibling = null;
      return fiber;
    }
    function placeChild(newFiber, lastPlacedIndex, newIndex) {
      newFiber.index = newIndex;
      if (!shouldTrackSideEffects) return newFiber.flags |= 1048576, lastPlacedIndex;
      newIndex = newFiber.alternate;
      if (null !== newIndex) return newIndex = newIndex.index, newIndex < lastPlacedIndex ? (newFiber.flags |= 33554434, lastPlacedIndex) : newIndex;
      newFiber.flags |= 33554434;
      return lastPlacedIndex;
    }
    function placeSingleChild(newFiber) {
      shouldTrackSideEffects && null === newFiber.alternate && (newFiber.flags |= 33554434);
      return newFiber;
    }
    function updateTextNode(returnFiber, current, textContent, lanes) {
      if (null === current || 6 !== current.tag) return current = createFiberFromText(textContent, returnFiber.mode, lanes), current.return = returnFiber, current;
      current = useFiber(current, textContent);
      current.return = returnFiber;
      return current;
    }
    function updateElement(returnFiber, current, element, lanes) {
      var elementType = element.type;
      if (elementType === REACT_FRAGMENT_TYPE) return updateFragment(returnFiber, current, element.props.children, lanes, element.key);
      if (null !== current && (current.elementType === elementType || "object" === typeof elementType && null !== elementType && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === current.type)) return current = useFiber(current, element.props), coerceRef(current, element), current.return = returnFiber, current;
      current = createFiberFromTypeAndProps(element.type, element.key, element.props, null, returnFiber.mode, lanes);
      coerceRef(current, element);
      current.return = returnFiber;
      return current;
    }
    function updatePortal(returnFiber, current, portal, lanes) {
      if (null === current || 4 !== current.tag || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) return current = createFiberFromPortal(portal, returnFiber.mode, lanes), current.return = returnFiber, current;
      current = useFiber(current, portal.children || []);
      current.return = returnFiber;
      return current;
    }
    function updateFragment(returnFiber, current, fragment, lanes, key) {
      if (null === current || 7 !== current.tag) return current = createFiberFromFragment(fragment, returnFiber.mode, lanes, key), current.return = returnFiber, current;
      current = useFiber(current, fragment);
      current.return = returnFiber;
      return current;
    }
    function createChild(returnFiber, newChild, lanes) {
      if ("string" === typeof newChild && "" !== newChild || "number" === typeof newChild || "bigint" === typeof newChild) return newChild = createFiberFromText("" + newChild, returnFiber.mode, lanes), newChild.return = returnFiber, newChild;
      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return lanes = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, lanes), coerceRef(lanes, newChild), lanes.return = returnFiber, lanes;
          case REACT_PORTAL_TYPE:
            return newChild = createFiberFromPortal(newChild, returnFiber.mode, lanes), newChild.return = returnFiber, newChild;
          case REACT_LAZY_TYPE:
            var init = newChild._init;
            newChild = init(newChild._payload);
            return createChild(returnFiber, newChild, lanes);
        }
        if (isArrayImpl(newChild) || getIteratorFn(newChild)) return newChild = createFiberFromFragment(newChild, returnFiber.mode, lanes, null), newChild.return = returnFiber, newChild;
        if ("function" === typeof newChild.then) return createChild(returnFiber, unwrapThenable(newChild), lanes);
        if (newChild.$$typeof === REACT_CONTEXT_TYPE) return createChild(returnFiber, readContextDuringReconciliation(returnFiber, newChild), lanes);
        throwOnInvalidObjectType(returnFiber, newChild);
      }
      return null;
    }
    function updateSlot(returnFiber, oldFiber, newChild, lanes) {
      var key = null !== oldFiber ? oldFiber.key : null;
      if ("string" === typeof newChild && "" !== newChild || "number" === typeof newChild || "bigint" === typeof newChild) return null !== key ? null : updateTextNode(returnFiber, oldFiber, "" + newChild, lanes);
      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return newChild.key === key ? updateElement(returnFiber, oldFiber, newChild, lanes) : null;
          case REACT_PORTAL_TYPE:
            return newChild.key === key ? updatePortal(returnFiber, oldFiber, newChild, lanes) : null;
          case REACT_LAZY_TYPE:
            return key = newChild._init, newChild = key(newChild._payload), updateSlot(returnFiber, oldFiber, newChild, lanes);
        }
        if (isArrayImpl(newChild) || getIteratorFn(newChild)) return null !== key ? null : updateFragment(returnFiber, oldFiber, newChild, lanes, null);
        if ("function" === typeof newChild.then) return updateSlot(returnFiber, oldFiber, unwrapThenable(newChild), lanes);
        if (newChild.$$typeof === REACT_CONTEXT_TYPE) return updateSlot(returnFiber, oldFiber, readContextDuringReconciliation(returnFiber, newChild), lanes);
        throwOnInvalidObjectType(returnFiber, newChild);
      }
      return null;
    }
    function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {
      if ("string" === typeof newChild && "" !== newChild || "number" === typeof newChild || "bigint" === typeof newChild) return existingChildren = existingChildren.get(newIdx) || null, updateTextNode(returnFiber, existingChildren, "" + newChild, lanes);
      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, updateElement(returnFiber, existingChildren, newChild, lanes);
          case REACT_PORTAL_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, updatePortal(returnFiber, existingChildren, newChild, lanes);
          case REACT_LAZY_TYPE:
            var init = newChild._init;
            newChild = init(newChild._payload);
            return updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes);
        }
        if (isArrayImpl(newChild) || getIteratorFn(newChild)) return existingChildren = existingChildren.get(newIdx) || null, updateFragment(returnFiber, existingChildren, newChild, lanes, null);
        if ("function" === typeof newChild.then) return updateFromMap(existingChildren, returnFiber, newIdx, unwrapThenable(newChild), lanes);
        if (newChild.$$typeof === REACT_CONTEXT_TYPE) return updateFromMap(existingChildren, returnFiber, newIdx, readContextDuringReconciliation(returnFiber, newChild), lanes);
        throwOnInvalidObjectType(returnFiber, newChild);
      }
      return null;
    }
    function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {
      for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null; null !== oldFiber && newIdx < newChildren.length; newIdx++) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);
        if (null === newFiber) {
          null === oldFiber && (oldFiber = nextOldFiber);
          break;
        }
        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }
      if (newIdx === newChildren.length) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;
      if (null === oldFiber) {
        for (; newIdx < newChildren.length; newIdx++) oldFiber = createChild(returnFiber, newChildren[newIdx], lanes), null !== oldFiber && (currentFirstChild = placeChild(oldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = oldFiber : previousNewFiber.sibling = oldFiber, previousNewFiber = oldFiber);
        return resultingFirstChild;
      }
      for (oldFiber = mapRemainingChildren(oldFiber); newIdx < newChildren.length; newIdx++) nextOldFiber = updateFromMap(oldFiber, returnFiber, newIdx, newChildren[newIdx], lanes), null !== nextOldFiber && (shouldTrackSideEffects && null !== nextOldFiber.alternate && oldFiber.delete(null === nextOldFiber.key ? newIdx : nextOldFiber.key), currentFirstChild = placeChild(nextOldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = nextOldFiber : previousNewFiber.sibling = nextOldFiber, previousNewFiber = nextOldFiber);
      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return resultingFirstChild;
    }
    function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildren, lanes) {
      if (null == newChildren) throw Error("An iterable object provided no iterator.");
      for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null, step = newChildren.next(); null !== oldFiber && !step.done; newIdx++, step = newChildren.next()) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);
        if (null === newFiber) {
          null === oldFiber && (oldFiber = nextOldFiber);
          break;
        }
        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }
      if (step.done) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;
      if (null === oldFiber) {
        for (; !step.done; newIdx++, step = newChildren.next()) step = createChild(returnFiber, step.value, lanes), null !== step && (currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = step : previousNewFiber.sibling = step, previousNewFiber = step);
        return resultingFirstChild;
      }
      for (oldFiber = mapRemainingChildren(oldFiber); !step.done; newIdx++, step = newChildren.next()) step = updateFromMap(oldFiber, returnFiber, newIdx, step.value, lanes), null !== step && (shouldTrackSideEffects && null !== step.alternate && oldFiber.delete(null === step.key ? newIdx : step.key), currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = step : previousNewFiber.sibling = step, previousNewFiber = step);
      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return resultingFirstChild;
    }
    function reconcileChildFibersImpl(returnFiber, currentFirstChild, newChild, lanes) {
      "object" === typeof newChild && null !== newChild && newChild.type === REACT_FRAGMENT_TYPE && null === newChild.key && (newChild = newChild.props.children);
      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            a: {
              for (var key = newChild.key; null !== currentFirstChild;) {
                if (currentFirstChild.key === key) {
                  key = newChild.type;
                  if (key === REACT_FRAGMENT_TYPE) {
                    if (7 === currentFirstChild.tag) {
                      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                      lanes = useFiber(currentFirstChild, newChild.props.children);
                      lanes.return = returnFiber;
                      returnFiber = lanes;
                      break a;
                    }
                  } else if (currentFirstChild.elementType === key || "object" === typeof key && null !== key && key.$$typeof === REACT_LAZY_TYPE && resolveLazy(key) === currentFirstChild.type) {
                    deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                    lanes = useFiber(currentFirstChild, newChild.props);
                    coerceRef(lanes, newChild);
                    lanes.return = returnFiber;
                    returnFiber = lanes;
                    break a;
                  }
                  deleteRemainingChildren(returnFiber, currentFirstChild);
                  break;
                } else deleteChild(returnFiber, currentFirstChild);
                currentFirstChild = currentFirstChild.sibling;
              }
              newChild.type === REACT_FRAGMENT_TYPE ? (lanes = createFiberFromFragment(newChild.props.children, returnFiber.mode, lanes, newChild.key), lanes.return = returnFiber, returnFiber = lanes) : (lanes = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, lanes), coerceRef(lanes, newChild), lanes.return = returnFiber, returnFiber = lanes);
            }
            return placeSingleChild(returnFiber);
          case REACT_PORTAL_TYPE:
            a: {
              for (key = newChild.key; null !== currentFirstChild;) {
                if (currentFirstChild.key === key) {
                  if (4 === currentFirstChild.tag && currentFirstChild.stateNode.containerInfo === newChild.containerInfo && currentFirstChild.stateNode.implementation === newChild.implementation) {
                    deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                    lanes = useFiber(currentFirstChild, newChild.children || []);
                    lanes.return = returnFiber;
                    returnFiber = lanes;
                    break a;
                  } else {
                    deleteRemainingChildren(returnFiber, currentFirstChild);
                    break;
                  }
                } else deleteChild(returnFiber, currentFirstChild);
                currentFirstChild = currentFirstChild.sibling;
              }
              lanes = createFiberFromPortal(newChild, returnFiber.mode, lanes);
              lanes.return = returnFiber;
              returnFiber = lanes;
            }
            return placeSingleChild(returnFiber);
          case REACT_LAZY_TYPE:
            return key = newChild._init, newChild = key(newChild._payload), reconcileChildFibersImpl(returnFiber, currentFirstChild, newChild, lanes);
        }
        if (isArrayImpl(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);
        if (getIteratorFn(newChild)) {
          key = getIteratorFn(newChild);
          if ("function" !== typeof key) throw Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
          newChild = key.call(newChild);
          return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);
        }
        if ("function" === typeof newChild.then) return reconcileChildFibersImpl(returnFiber, currentFirstChild, unwrapThenable(newChild), lanes);
        if (newChild.$$typeof === REACT_CONTEXT_TYPE) return reconcileChildFibersImpl(returnFiber, currentFirstChild, readContextDuringReconciliation(returnFiber, newChild), lanes);
        throwOnInvalidObjectType(returnFiber, newChild);
      }
      return "string" === typeof newChild && "" !== newChild || "number" === typeof newChild || "bigint" === typeof newChild ? (newChild = "" + newChild, null !== currentFirstChild && 6 === currentFirstChild.tag ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling), lanes = useFiber(currentFirstChild, newChild), lanes.return = returnFiber, returnFiber = lanes) : (deleteRemainingChildren(returnFiber, currentFirstChild), lanes = createFiberFromText(newChild, returnFiber.mode, lanes), lanes.return = returnFiber, returnFiber = lanes), placeSingleChild(returnFiber)) : deleteRemainingChildren(returnFiber, currentFirstChild);
    }
    return function (returnFiber, currentFirstChild, newChild, lanes) {
      try {
        thenableIndexCounter$1 = 0;
        var firstChildFiber = reconcileChildFibersImpl(returnFiber, currentFirstChild, newChild, lanes);
        thenableState$1 = null;
        return firstChildFiber;
      } catch (x) {
        if (x === SuspenseException || 0 === (returnFiber.mode & 1) && "object" === typeof x && null !== x && "function" === typeof x.then) throw x;
        var fiber = createFiberImplClass(29, x, null, returnFiber.mode);
        fiber.lanes = lanes;
        fiber.return = returnFiber;
        return fiber;
      } finally {}
    };
  }
  var reconcileChildFibers = createChildReconciler(true),
    mountChildFibers = createChildReconciler(false),
    currentTreeHiddenStackCursor = createCursor(null),
    prevEntangledRenderLanesCursor = createCursor(0);
  function pushHiddenContext(fiber, context) {
    fiber = entangledRenderLanes;
    push(prevEntangledRenderLanesCursor, fiber);
    push(currentTreeHiddenStackCursor, context);
    entangledRenderLanes = fiber | context.baseLanes;
  }
  function reuseHiddenContextOnStack() {
    push(prevEntangledRenderLanesCursor, entangledRenderLanes);
    push(currentTreeHiddenStackCursor, currentTreeHiddenStackCursor.current);
  }
  function popHiddenContext() {
    entangledRenderLanes = prevEntangledRenderLanesCursor.current;
    pop(currentTreeHiddenStackCursor);
    pop(prevEntangledRenderLanesCursor);
  }
  var suspenseHandlerStackCursor = createCursor(null),
    shellBoundary = null;
  function pushPrimaryTreeSuspenseHandler(handler) {
    var current = handler.alternate;
    push(suspenseStackCursor, suspenseStackCursor.current & 1);
    push(suspenseHandlerStackCursor, handler);
    null === shellBoundary && (null === current || null !== currentTreeHiddenStackCursor.current ? shellBoundary = handler : null !== current.memoizedState && (shellBoundary = handler));
  }
  function pushOffscreenSuspenseHandler(fiber) {
    if (22 === fiber.tag) {
      if (push(suspenseStackCursor, suspenseStackCursor.current), push(suspenseHandlerStackCursor, fiber), null === shellBoundary) {
        var current = fiber.alternate;
        null !== current && null !== current.memoizedState && (shellBoundary = fiber);
      }
    } else reuseSuspenseHandlerOnStack(fiber);
  }
  function reuseSuspenseHandlerOnStack() {
    push(suspenseStackCursor, suspenseStackCursor.current);
    push(suspenseHandlerStackCursor, suspenseHandlerStackCursor.current);
  }
  function popSuspenseHandler(fiber) {
    pop(suspenseHandlerStackCursor);
    shellBoundary === fiber && (shellBoundary = null);
    pop(suspenseStackCursor);
  }
  var suspenseStackCursor = createCursor(0);
  function findFirstSuspended(row) {
    for (var node = row; null !== node;) {
      if (13 === node.tag) {
        var state = node.memoizedState;
        if (null !== state && (null === state.dehydrated || shim$1() || shim$1())) return node;
      } else if (19 === node.tag && undefined !== node.memoizedProps.revealOrder) {
        if (0 !== (node.flags & 128)) return node;
      } else if (null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }
      if (node === row) break;
      for (; null === node.sibling;) {
        if (null === node.return || node.return === row) return null;
        node = node.return;
      }
      node.sibling.return = node.return;
      node = node.sibling;
    }
    return null;
  }
  var renderLanes = 0,
    currentlyRenderingFiber$1 = null,
    currentHook = null,
    workInProgressHook = null,
    didScheduleRenderPhaseUpdate = false,
    didScheduleRenderPhaseUpdateDuringThisPass = false,
    shouldDoubleInvokeUserFnsInHooksDEV = false,
    thenableIndexCounter = 0,
    thenableState = null,
    globalClientIdCounter = 0;
  function throwInvalidHookError() {
    throw Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem.");
  }
  function areHookInputsEqual(nextDeps, prevDeps) {
    if (null === prevDeps) return false;
    for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) if (!objectIs(nextDeps[i], prevDeps[i])) return false;
    return true;
  }
  function renderWithHooks(current, workInProgress, Component, props, secondArg, nextRenderLanes) {
    renderLanes = nextRenderLanes;
    currentlyRenderingFiber$1 = workInProgress;
    workInProgress.memoizedState = null;
    workInProgress.updateQueue = null;
    workInProgress.lanes = 0;
    ReactSharedInternals.H = null === current || null === current.memoizedState ? HooksDispatcherOnMount : HooksDispatcherOnUpdate;
    shouldDoubleInvokeUserFnsInHooksDEV = false;
    nextRenderLanes = Component(props, secondArg);
    shouldDoubleInvokeUserFnsInHooksDEV = false;
    didScheduleRenderPhaseUpdateDuringThisPass && (nextRenderLanes = renderWithHooksAgain(workInProgress, Component, props, secondArg));
    finishRenderingHooks(current);
    return nextRenderLanes;
  }
  function finishRenderingHooks(current) {
    ReactSharedInternals.H = ContextOnlyDispatcher;
    var didRenderTooFewHooks = null !== currentHook && null !== currentHook.next;
    renderLanes = 0;
    workInProgressHook = currentHook = currentlyRenderingFiber$1 = null;
    didScheduleRenderPhaseUpdate = false;
    thenableIndexCounter = 0;
    thenableState = null;
    if (didRenderTooFewHooks) throw Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
    null === current || didReceiveUpdate || (current = current.dependencies, null !== current && checkIfContextChanged(current) && (didReceiveUpdate = true));
  }
  function renderWithHooksAgain(workInProgress, Component, props, secondArg) {
    currentlyRenderingFiber$1 = workInProgress;
    var numberOfReRenders = 0;
    do {
      didScheduleRenderPhaseUpdateDuringThisPass && (thenableState = null);
      thenableIndexCounter = 0;
      didScheduleRenderPhaseUpdateDuringThisPass = false;
      if (25 <= numberOfReRenders) throw Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
      numberOfReRenders += 1;
      workInProgressHook = currentHook = null;
      if (null != workInProgress.updateQueue) {
        var children = workInProgress.updateQueue;
        children.lastEffect = null;
        children.events = null;
        children.stores = null;
        null != children.memoCache && (children.memoCache.index = 0);
      }
      ReactSharedInternals.H = HooksDispatcherOnRerender;
      children = Component(props, secondArg);
    } while (didScheduleRenderPhaseUpdateDuringThisPass);
    return children;
  }
  function TransitionAwareHostComponent() {
    var dispatcher = ReactSharedInternals.H,
      maybeThenable = dispatcher.useState()[0];
    maybeThenable = "function" === typeof maybeThenable.then ? useThenable(maybeThenable) : maybeThenable;
    dispatcher = dispatcher.useState()[0];
    (null !== currentHook ? currentHook.memoizedState : null) !== dispatcher && (currentlyRenderingFiber$1.flags |= 1024);
    return maybeThenable;
  }
  function bailoutHooks(current, workInProgress, lanes) {
    workInProgress.updateQueue = current.updateQueue;
    workInProgress.flags &= -2053;
    current.lanes &= ~lanes;
  }
  function resetHooksOnUnwind(workInProgress) {
    if (didScheduleRenderPhaseUpdate) {
      for (workInProgress = workInProgress.memoizedState; null !== workInProgress;) {
        var queue = workInProgress.queue;
        null !== queue && (queue.pending = null);
        workInProgress = workInProgress.next;
      }
      didScheduleRenderPhaseUpdate = false;
    }
    renderLanes = 0;
    workInProgressHook = currentHook = currentlyRenderingFiber$1 = null;
    didScheduleRenderPhaseUpdateDuringThisPass = false;
    thenableIndexCounter = 0;
    thenableState = null;
  }
  function mountWorkInProgressHook() {
    var hook = {
      memoizedState: null,
      baseState: null,
      baseQueue: null,
      queue: null,
      next: null
    };
    null === workInProgressHook ? currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook : workInProgressHook = workInProgressHook.next = hook;
    return workInProgressHook;
  }
  function updateWorkInProgressHook() {
    if (null === currentHook) {
      var nextCurrentHook = currentlyRenderingFiber$1.alternate;
      nextCurrentHook = null !== nextCurrentHook ? nextCurrentHook.memoizedState : null;
    } else nextCurrentHook = currentHook.next;
    var nextWorkInProgressHook = null === workInProgressHook ? currentlyRenderingFiber$1.memoizedState : workInProgressHook.next;
    if (null !== nextWorkInProgressHook) workInProgressHook = nextWorkInProgressHook, currentHook = nextCurrentHook;else {
      if (null === nextCurrentHook) {
        if (null === currentlyRenderingFiber$1.alternate) throw Error("Update hook called on initial render. This is likely a bug in React. Please file an issue.");
        throw Error("Rendered more hooks than during the previous render.");
      }
      currentHook = nextCurrentHook;
      nextCurrentHook = {
        memoizedState: currentHook.memoizedState,
        baseState: currentHook.baseState,
        baseQueue: currentHook.baseQueue,
        queue: currentHook.queue,
        next: null
      };
      null === workInProgressHook ? currentlyRenderingFiber$1.memoizedState = workInProgressHook = nextCurrentHook : workInProgressHook = workInProgressHook.next = nextCurrentHook;
    }
    return workInProgressHook;
  }
  var createFunctionComponentUpdateQueue;
  createFunctionComponentUpdateQueue = function createFunctionComponentUpdateQueue() {
    return {
      lastEffect: null,
      events: null,
      stores: null,
      memoCache: null
    };
  };
  function useThenable(thenable) {
    var index = thenableIndexCounter;
    thenableIndexCounter += 1;
    null === thenableState && (thenableState = []);
    thenable = trackUsedThenable(thenableState, thenable, index);
    index = currentlyRenderingFiber$1;
    null === (null === workInProgressHook ? index.memoizedState : workInProgressHook.next) && (index = index.alternate, ReactSharedInternals.H = null === index || null === index.memoizedState ? HooksDispatcherOnMount : HooksDispatcherOnUpdate);
    return thenable;
  }
  function use(usable) {
    if (null !== usable && "object" === typeof usable) {
      if ("function" === typeof usable.then) return useThenable(usable);
      if (usable.$$typeof === REACT_CONTEXT_TYPE) return readContext(usable);
    }
    throw Error("An unsupported type was passed to use(): " + String(usable));
  }
  function useMemoCache(size) {
    var memoCache = null,
      updateQueue = currentlyRenderingFiber$1.updateQueue;
    null !== updateQueue && (memoCache = updateQueue.memoCache);
    if (null == memoCache) {
      var current = currentlyRenderingFiber$1.alternate;
      null !== current && (current = current.updateQueue, null !== current && (current = current.memoCache, null != current && (memoCache = {
        data: current.data.map(function (array) {
          return array.slice();
        }),
        index: 0
      })));
    }
    null == memoCache && (memoCache = {
      data: [],
      index: 0
    });
    null === updateQueue && (updateQueue = createFunctionComponentUpdateQueue(), currentlyRenderingFiber$1.updateQueue = updateQueue);
    updateQueue.memoCache = memoCache;
    updateQueue = memoCache.data[memoCache.index];
    if (undefined === updateQueue) for (updateQueue = memoCache.data[memoCache.index] = Array(size), current = 0; current < size; current++) updateQueue[current] = REACT_MEMO_CACHE_SENTINEL;
    memoCache.index++;
    return updateQueue;
  }
  function basicStateReducer(state, action) {
    return "function" === typeof action ? action(state) : action;
  }
  function updateReducer(reducer) {
    var hook = updateWorkInProgressHook();
    return updateReducerImpl(hook, currentHook, reducer);
  }
  function updateReducerImpl(hook, current, reducer) {
    var queue = hook.queue;
    if (null === queue) throw Error("Should have a queue. You are likely calling Hooks conditionally, which is not allowed. (https://react.dev/link/invalid-hook-call)");
    queue.lastRenderedReducer = reducer;
    var baseQueue = hook.baseQueue,
      pendingQueue = queue.pending;
    if (null !== pendingQueue) {
      if (null !== baseQueue) {
        var baseFirst = baseQueue.next;
        baseQueue.next = pendingQueue.next;
        pendingQueue.next = baseFirst;
      }
      current.baseQueue = baseQueue = pendingQueue;
      queue.pending = null;
    }
    pendingQueue = hook.baseState;
    if (null === baseQueue) hook.memoizedState = pendingQueue;else {
      current = baseQueue.next;
      var newBaseQueueFirst = baseFirst = null,
        newBaseQueueLast = null,
        update = current,
        didReadFromEntangledAsyncAction$47 = false;
      do {
        var updateLane = update.lane & -536870913;
        if (updateLane !== update.lane ? (workInProgressRootRenderLanes & updateLane) === updateLane : (renderLanes & updateLane) === updateLane) {
          var revertLane = update.revertLane;
          if (0 === revertLane) null !== newBaseQueueLast && (newBaseQueueLast = newBaseQueueLast.next = {
            lane: 0,
            revertLane: 0,
            action: update.action,
            hasEagerState: update.hasEagerState,
            eagerState: update.eagerState,
            next: null
          }), updateLane === currentEntangledLane && (didReadFromEntangledAsyncAction$47 = true);else if ((renderLanes & revertLane) === revertLane) {
            update = update.next;
            revertLane === currentEntangledLane && (didReadFromEntangledAsyncAction$47 = true);
            continue;
          } else updateLane = {
            lane: 0,
            revertLane: update.revertLane,
            action: update.action,
            hasEagerState: update.hasEagerState,
            eagerState: update.eagerState,
            next: null
          }, null === newBaseQueueLast ? (newBaseQueueFirst = newBaseQueueLast = updateLane, baseFirst = pendingQueue) : newBaseQueueLast = newBaseQueueLast.next = updateLane, currentlyRenderingFiber$1.lanes |= revertLane, workInProgressRootSkippedLanes |= revertLane;
          updateLane = update.action;
          shouldDoubleInvokeUserFnsInHooksDEV && reducer(pendingQueue, updateLane);
          pendingQueue = update.hasEagerState ? update.eagerState : reducer(pendingQueue, updateLane);
        } else revertLane = {
          lane: updateLane,
          revertLane: update.revertLane,
          action: update.action,
          hasEagerState: update.hasEagerState,
          eagerState: update.eagerState,
          next: null
        }, null === newBaseQueueLast ? (newBaseQueueFirst = newBaseQueueLast = revertLane, baseFirst = pendingQueue) : newBaseQueueLast = newBaseQueueLast.next = revertLane, currentlyRenderingFiber$1.lanes |= updateLane, workInProgressRootSkippedLanes |= updateLane;
        update = update.next;
      } while (null !== update && update !== current);
      null === newBaseQueueLast ? baseFirst = pendingQueue : newBaseQueueLast.next = newBaseQueueFirst;
      if (!objectIs(pendingQueue, hook.memoizedState) && (didReceiveUpdate = true, didReadFromEntangledAsyncAction$47 && (reducer = currentEntangledActionThenable, null !== reducer))) throw reducer;
      hook.memoizedState = pendingQueue;
      hook.baseState = baseFirst;
      hook.baseQueue = newBaseQueueLast;
      queue.lastRenderedState = pendingQueue;
    }
    null === baseQueue && (queue.lanes = 0);
    return [hook.memoizedState, queue.dispatch];
  }
  function rerenderReducer(reducer) {
    var hook = updateWorkInProgressHook(),
      queue = hook.queue;
    if (null === queue) throw Error("Should have a queue. You are likely calling Hooks conditionally, which is not allowed. (https://react.dev/link/invalid-hook-call)");
    queue.lastRenderedReducer = reducer;
    var dispatch = queue.dispatch,
      lastRenderPhaseUpdate = queue.pending,
      newState = hook.memoizedState;
    if (null !== lastRenderPhaseUpdate) {
      queue.pending = null;
      var update = lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;
      do newState = reducer(newState, update.action), update = update.next; while (update !== lastRenderPhaseUpdate);
      objectIs(newState, hook.memoizedState) || (didReceiveUpdate = true);
      hook.memoizedState = newState;
      null === hook.baseQueue && (hook.baseState = newState);
      queue.lastRenderedState = newState;
    }
    return [newState, dispatch];
  }
  function updateSyncExternalStore(subscribe, getSnapshot) {
    var fiber = currentlyRenderingFiber$1,
      hook = updateWorkInProgressHook();
    var nextSnapshot = getSnapshot();
    var snapshotChanged = !objectIs((currentHook || hook).memoizedState, nextSnapshot);
    snapshotChanged && (hook.memoizedState = nextSnapshot, didReceiveUpdate = true);
    hook = hook.queue;
    updateEffect(subscribeToStore.bind(null, fiber, hook, subscribe), [subscribe]);
    if (hook.getSnapshot !== getSnapshot || snapshotChanged || null !== workInProgressHook && workInProgressHook.memoizedState.tag & 1) {
      fiber.flags |= 2048;
      pushEffect(9, updateStoreInstance.bind(null, fiber, hook, nextSnapshot, getSnapshot), {
        destroy: undefined
      }, null);
      if (null === workInProgressRoot) throw Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
      0 !== (renderLanes & 60) || pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
    }
    return nextSnapshot;
  }
  function pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {
    fiber.flags |= 16384;
    fiber = {
      getSnapshot: getSnapshot,
      value: renderedSnapshot
    };
    getSnapshot = currentlyRenderingFiber$1.updateQueue;
    null === getSnapshot ? (getSnapshot = createFunctionComponentUpdateQueue(), currentlyRenderingFiber$1.updateQueue = getSnapshot, getSnapshot.stores = [fiber]) : (renderedSnapshot = getSnapshot.stores, null === renderedSnapshot ? getSnapshot.stores = [fiber] : renderedSnapshot.push(fiber));
  }
  function updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {
    inst.value = nextSnapshot;
    inst.getSnapshot = getSnapshot;
    checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);
  }
  function subscribeToStore(fiber, inst, subscribe) {
    return subscribe(function () {
      checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);
    });
  }
  function checkIfSnapshotChanged(inst) {
    var latestGetSnapshot = inst.getSnapshot;
    inst = inst.value;
    try {
      var nextValue = latestGetSnapshot();
      return !objectIs(inst, nextValue);
    } catch (error) {
      return true;
    }
  }
  function forceStoreRerender(fiber) {
    var root = enqueueConcurrentRenderForLane(fiber, 2);
    null !== root && scheduleUpdateOnFiber(root, fiber, 2);
  }
  function mountStateImpl(initialState) {
    var hook = mountWorkInProgressHook();
    if ("function" === typeof initialState) {
      var initialStateInitializer = initialState;
      initialState = initialStateInitializer();
      if (shouldDoubleInvokeUserFnsInHooksDEV) {
        setIsStrictModeForDevtools(true);
        try {
          initialStateInitializer();
        } finally {
          setIsStrictModeForDevtools(false);
        }
      }
    }
    hook.memoizedState = hook.baseState = initialState;
    hook.queue = {
      pending: null,
      lanes: 0,
      dispatch: null,
      lastRenderedReducer: basicStateReducer,
      lastRenderedState: initialState
    };
    return hook;
  }
  function updateOptimisticImpl(hook, current, passthrough, reducer) {
    hook.baseState = passthrough;
    return updateReducerImpl(hook, currentHook, "function" === typeof reducer ? reducer : basicStateReducer);
  }
  function dispatchActionState(fiber, actionQueue, setPendingState, setState, payload) {
    if (isRenderPhaseUpdate(fiber)) throw Error("Cannot update form state while rendering.");
    fiber = actionQueue.action;
    if (null !== fiber) {
      var actionNode = {
        payload: payload,
        action: fiber,
        next: null,
        isTransition: true,
        status: "pending",
        value: null,
        reason: null,
        listeners: [],
        then: function then(listener) {
          actionNode.listeners.push(listener);
        }
      };
      null !== ReactSharedInternals.T ? setPendingState(true) : actionNode.isTransition = false;
      setState(actionNode);
      setPendingState = actionQueue.pending;
      null === setPendingState ? (actionNode.next = actionQueue.pending = actionNode, runActionStateAction(actionQueue, actionNode)) : (actionNode.next = setPendingState.next, actionQueue.pending = setPendingState.next = actionNode);
    }
  }
  function runActionStateAction(actionQueue, node) {
    var action = node.action,
      payload = node.payload,
      prevState = actionQueue.state;
    if (node.isTransition) {
      var prevTransition = ReactSharedInternals.T,
        currentTransition = {};
      ReactSharedInternals.T = currentTransition;
      try {
        var returnValue = action(prevState, payload),
          onStartTransitionFinish = ReactSharedInternals.S;
        null !== onStartTransitionFinish && onStartTransitionFinish(currentTransition, returnValue);
        handleActionReturnValue(actionQueue, node, returnValue);
      } catch (error) {
        onActionError(actionQueue, node, error);
      } finally {
        ReactSharedInternals.T = prevTransition;
      }
    } else try {
      prevTransition = action(prevState, payload), handleActionReturnValue(actionQueue, node, prevTransition);
    } catch (error$51) {
      onActionError(actionQueue, node, error$51);
    }
  }
  function handleActionReturnValue(actionQueue, node, returnValue) {
    null !== returnValue && "object" === typeof returnValue && "function" === typeof returnValue.then ? returnValue.then(function (nextState) {
      onActionSuccess(actionQueue, node, nextState);
    }, function (error) {
      return onActionError(actionQueue, node, error);
    }) : onActionSuccess(actionQueue, node, returnValue);
  }
  function onActionSuccess(actionQueue, actionNode, nextState) {
    actionNode.status = "fulfilled";
    actionNode.value = nextState;
    notifyActionListeners(actionNode);
    actionQueue.state = nextState;
    actionNode = actionQueue.pending;
    null !== actionNode && (nextState = actionNode.next, nextState === actionNode ? actionQueue.pending = null : (nextState = nextState.next, actionNode.next = nextState, runActionStateAction(actionQueue, nextState)));
  }
  function onActionError(actionQueue, actionNode, error) {
    var last = actionQueue.pending;
    actionQueue.pending = null;
    if (null !== last) {
      last = last.next;
      do actionNode.status = "rejected", actionNode.reason = error, notifyActionListeners(actionNode), actionNode = actionNode.next; while (actionNode !== last);
    }
    actionQueue.action = null;
  }
  function notifyActionListeners(actionNode) {
    actionNode = actionNode.listeners;
    for (var i = 0; i < actionNode.length; i++) (0, actionNode[i])();
  }
  function actionStateReducer(oldState, newState) {
    return newState;
  }
  function mountActionState(action, initialStateProp) {
    var stateHook = mountWorkInProgressHook();
    stateHook.memoizedState = stateHook.baseState = initialStateProp;
    var stateQueue = {
      pending: null,
      lanes: 0,
      dispatch: null,
      lastRenderedReducer: actionStateReducer,
      lastRenderedState: initialStateProp
    };
    stateHook.queue = stateQueue;
    stateHook = dispatchSetState.bind(null, currentlyRenderingFiber$1, stateQueue);
    stateQueue.dispatch = stateHook;
    stateQueue = mountStateImpl(false);
    var setPendingState = dispatchOptimisticSetState.bind(null, currentlyRenderingFiber$1, false, stateQueue.queue);
    stateQueue = mountWorkInProgressHook();
    var actionQueue = {
      state: initialStateProp,
      dispatch: null,
      action: action,
      pending: null
    };
    stateQueue.queue = actionQueue;
    stateHook = dispatchActionState.bind(null, currentlyRenderingFiber$1, actionQueue, setPendingState, stateHook);
    actionQueue.dispatch = stateHook;
    stateQueue.memoizedState = action;
    return [initialStateProp, stateHook, false];
  }
  function updateActionState(action) {
    var stateHook = updateWorkInProgressHook();
    return updateActionStateImpl(stateHook, currentHook, action);
  }
  function updateActionStateImpl(stateHook, currentStateHook, action) {
    currentStateHook = updateReducerImpl(stateHook, currentStateHook, actionStateReducer)[0];
    stateHook = updateReducer(basicStateReducer)[0];
    currentStateHook = "object" === typeof currentStateHook && null !== currentStateHook && "function" === typeof currentStateHook.then ? useThenable(currentStateHook) : currentStateHook;
    var actionQueueHook = updateWorkInProgressHook(),
      actionQueue = actionQueueHook.queue,
      dispatch = actionQueue.dispatch;
    action !== actionQueueHook.memoizedState && (currentlyRenderingFiber$1.flags |= 2048, pushEffect(9, actionStateActionEffect.bind(null, actionQueue, action), {
      destroy: undefined
    }, null));
    return [currentStateHook, dispatch, stateHook];
  }
  function actionStateActionEffect(actionQueue, action) {
    actionQueue.action = action;
  }
  function rerenderActionState(action) {
    var stateHook = updateWorkInProgressHook(),
      currentStateHook = currentHook;
    if (null !== currentStateHook) return updateActionStateImpl(stateHook, currentStateHook, action);
    updateWorkInProgressHook();
    stateHook = stateHook.memoizedState;
    currentStateHook = updateWorkInProgressHook();
    var dispatch = currentStateHook.queue.dispatch;
    currentStateHook.memoizedState = action;
    return [stateHook, dispatch, false];
  }
  function pushEffect(tag, create, inst, deps) {
    tag = {
      tag: tag,
      create: create,
      inst: inst,
      deps: deps,
      next: null
    };
    create = currentlyRenderingFiber$1.updateQueue;
    null === create && (create = createFunctionComponentUpdateQueue(), currentlyRenderingFiber$1.updateQueue = create);
    inst = create.lastEffect;
    null === inst ? create.lastEffect = tag.next = tag : (deps = inst.next, inst.next = tag, tag.next = deps, create.lastEffect = tag);
    return tag;
  }
  function updateRef() {
    return updateWorkInProgressHook().memoizedState;
  }
  function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
    var hook = mountWorkInProgressHook();
    currentlyRenderingFiber$1.flags |= fiberFlags;
    hook.memoizedState = pushEffect(1 | hookFlags, create, {
      destroy: undefined
    }, undefined === deps ? null : deps);
  }
  function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
    var hook = updateWorkInProgressHook();
    deps = undefined === deps ? null : deps;
    var inst = hook.memoizedState.inst;
    null !== currentHook && null !== deps && areHookInputsEqual(deps, currentHook.memoizedState.deps) ? hook.memoizedState = pushEffect(hookFlags, create, inst, deps) : (currentlyRenderingFiber$1.flags |= fiberFlags, hook.memoizedState = pushEffect(1 | hookFlags, create, inst, deps));
  }
  function mountEffect(create, deps) {
    mountEffectImpl(8390656, 8, create, deps);
  }
  function updateEffect(create, deps) {
    updateEffectImpl(2048, 8, create, deps);
  }
  function updateInsertionEffect(create, deps) {
    return updateEffectImpl(4, 2, create, deps);
  }
  function updateLayoutEffect(create, deps) {
    return updateEffectImpl(4, 4, create, deps);
  }
  function imperativeHandleEffect(create, ref) {
    if ("function" === typeof ref) {
      create = create();
      var refCleanup = ref(create);
      return function () {
        "function" === typeof refCleanup ? refCleanup() : ref(null);
      };
    }
    if (null !== ref && undefined !== ref) return create = create(), ref.current = create, function () {
      ref.current = null;
    };
  }
  function updateImperativeHandle(ref, create, deps) {
    deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
    updateEffectImpl(4, 4, imperativeHandleEffect.bind(null, create, ref), deps);
  }
  function mountDebugValue() {}
  function updateCallback(callback, deps) {
    var hook = updateWorkInProgressHook();
    deps = undefined === deps ? null : deps;
    var prevState = hook.memoizedState;
    if (null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
    hook.memoizedState = [callback, deps];
    return callback;
  }
  function updateMemo(nextCreate, deps) {
    var hook = updateWorkInProgressHook();
    deps = undefined === deps ? null : deps;
    var prevState = hook.memoizedState;
    if (null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
    prevState = nextCreate();
    if (shouldDoubleInvokeUserFnsInHooksDEV) {
      setIsStrictModeForDevtools(true);
      try {
        nextCreate();
      } finally {
        setIsStrictModeForDevtools(false);
      }
    }
    hook.memoizedState = [prevState, deps];
    return prevState;
  }
  function mountDeferredValueImpl(hook, value, initialValue) {
    if (undefined === initialValue || 0 !== (renderLanes & 1073741824)) return hook.memoizedState = value;
    hook.memoizedState = initialValue;
    hook = requestDeferredLane();
    currentlyRenderingFiber$1.lanes |= hook;
    workInProgressRootSkippedLanes |= hook;
    return initialValue;
  }
  function updateDeferredValueImpl(hook, prevValue, value, initialValue) {
    if (objectIs(value, prevValue)) return value;
    if (null !== currentTreeHiddenStackCursor.current) return hook = mountDeferredValueImpl(hook, value, initialValue), objectIs(hook, prevValue) || (didReceiveUpdate = true), hook;
    if (0 === (renderLanes & 42)) return didReceiveUpdate = true, hook.memoizedState = value;
    hook = requestDeferredLane();
    currentlyRenderingFiber$1.lanes |= hook;
    workInProgressRootSkippedLanes |= hook;
    return prevValue;
  }
  function startTransition(fiber, queue, pendingState, finishedState, callback) {
    var previousPriority = currentUpdatePriority;
    currentUpdatePriority = 0 !== previousPriority && 8 > previousPriority ? previousPriority : 8;
    var prevTransition = ReactSharedInternals.T,
      currentTransition = {};
    ReactSharedInternals.T = currentTransition;
    dispatchOptimisticSetState(fiber, false, queue, pendingState);
    try {
      var returnValue = callback(),
        onStartTransitionFinish = ReactSharedInternals.S;
      null !== onStartTransitionFinish && onStartTransitionFinish(currentTransition, returnValue);
      if (null !== returnValue && "object" === typeof returnValue && "function" === typeof returnValue.then) {
        var thenableForFinishedState = chainThenableValue(returnValue, finishedState);
        dispatchSetStateInternal(fiber, queue, thenableForFinishedState, requestUpdateLane(fiber));
      } else dispatchSetStateInternal(fiber, queue, finishedState, requestUpdateLane(fiber));
    } catch (error) {
      dispatchSetStateInternal(fiber, queue, {
        then: function then() {},
        status: "rejected",
        reason: error
      }, requestUpdateLane(fiber));
    } finally {
      currentUpdatePriority = previousPriority, ReactSharedInternals.T = prevTransition;
    }
  }
  function useHostTransitionStatus() {
    return readContext(HostTransitionContext);
  }
  function updateId() {
    return updateWorkInProgressHook().memoizedState;
  }
  function updateRefresh() {
    return updateWorkInProgressHook().memoizedState;
  }
  function refreshCache(fiber) {
    for (var provider = fiber.return; null !== provider;) {
      switch (provider.tag) {
        case 24:
        case 3:
          var lane = requestUpdateLane(provider);
          fiber = createUpdate(lane);
          var root = enqueueUpdate(provider, fiber, lane);
          null !== root && (scheduleUpdateOnFiber(root, provider, lane), entangleTransitions(root, provider, lane));
          provider = {
            cache: createCache()
          };
          fiber.payload = provider;
          return;
      }
      provider = provider.return;
    }
  }
  function dispatchReducerAction(fiber, queue, action) {
    var lane = requestUpdateLane(fiber);
    action = {
      lane: lane,
      revertLane: 0,
      action: action,
      hasEagerState: false,
      eagerState: null,
      next: null
    };
    isRenderPhaseUpdate(fiber) ? enqueueRenderPhaseUpdate(queue, action) : (action = enqueueConcurrentHookUpdate(fiber, queue, action, lane), null !== action && (scheduleUpdateOnFiber(action, fiber, lane), entangleTransitionUpdate(action, queue, lane)));
  }
  function dispatchSetState(fiber, queue, action) {
    var lane = requestUpdateLane(fiber);
    dispatchSetStateInternal(fiber, queue, action, lane);
  }
  function dispatchSetStateInternal(fiber, queue, action, lane) {
    var update = {
      lane: lane,
      revertLane: 0,
      action: action,
      hasEagerState: false,
      eagerState: null,
      next: null
    };
    if (isRenderPhaseUpdate(fiber)) enqueueRenderPhaseUpdate(queue, update);else {
      var alternate = fiber.alternate;
      if (0 === fiber.lanes && (null === alternate || 0 === alternate.lanes) && (alternate = queue.lastRenderedReducer, null !== alternate)) try {
        var currentState = queue.lastRenderedState,
          eagerState = alternate(currentState, action);
        update.hasEagerState = true;
        update.eagerState = eagerState;
        if (objectIs(eagerState, currentState)) return enqueueUpdate$1(fiber, queue, update, 0), null === workInProgressRoot && finishQueueingConcurrentUpdates(), false;
      } catch (error) {} finally {}
      action = enqueueConcurrentHookUpdate(fiber, queue, update, lane);
      if (null !== action) return scheduleUpdateOnFiber(action, fiber, lane), entangleTransitionUpdate(action, queue, lane), true;
    }
    return false;
  }
  function dispatchOptimisticSetState(fiber, throwIfDuringRender, queue, action) {
    action = {
      lane: 2,
      revertLane: requestTransitionLane(),
      action: action,
      hasEagerState: false,
      eagerState: null,
      next: null
    };
    if (isRenderPhaseUpdate(fiber)) {
      if (throwIfDuringRender) throw Error("Cannot update optimistic state while rendering.");
    } else throwIfDuringRender = enqueueConcurrentHookUpdate(fiber, queue, action, 2), null !== throwIfDuringRender && scheduleUpdateOnFiber(throwIfDuringRender, fiber, 2);
  }
  function isRenderPhaseUpdate(fiber) {
    var alternate = fiber.alternate;
    return fiber === currentlyRenderingFiber$1 || null !== alternate && alternate === currentlyRenderingFiber$1;
  }
  function enqueueRenderPhaseUpdate(queue, update) {
    didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;
    var pending = queue.pending;
    null === pending ? update.next = update : (update.next = pending.next, pending.next = update);
    queue.pending = update;
  }
  function entangleTransitionUpdate(root, queue, lane) {
    if (0 !== (lane & 4194176)) {
      var queueLanes = queue.lanes;
      queueLanes &= root.pendingLanes;
      lane |= queueLanes;
      queue.lanes = lane;
      markRootEntangled(root, lane);
    }
  }
  var ContextOnlyDispatcher = {
    readContext: readContext,
    use: use,
    useCallback: throwInvalidHookError,
    useContext: throwInvalidHookError,
    useEffect: throwInvalidHookError,
    useImperativeHandle: throwInvalidHookError,
    useLayoutEffect: throwInvalidHookError,
    useInsertionEffect: throwInvalidHookError,
    useMemo: throwInvalidHookError,
    useReducer: throwInvalidHookError,
    useRef: throwInvalidHookError,
    useState: throwInvalidHookError,
    useDebugValue: throwInvalidHookError,
    useDeferredValue: throwInvalidHookError,
    useTransition: throwInvalidHookError,
    useSyncExternalStore: throwInvalidHookError,
    useId: throwInvalidHookError
  };
  ContextOnlyDispatcher.useCacheRefresh = throwInvalidHookError;
  ContextOnlyDispatcher.useMemoCache = throwInvalidHookError;
  ContextOnlyDispatcher.useHostTransitionStatus = throwInvalidHookError;
  ContextOnlyDispatcher.useFormState = throwInvalidHookError;
  ContextOnlyDispatcher.useActionState = throwInvalidHookError;
  ContextOnlyDispatcher.useOptimistic = throwInvalidHookError;
  var HooksDispatcherOnMount = {
    readContext: readContext,
    use: use,
    useCallback: function useCallback(callback, deps) {
      mountWorkInProgressHook().memoizedState = [callback, undefined === deps ? null : deps];
      return callback;
    },
    useContext: readContext,
    useEffect: mountEffect,
    useImperativeHandle: function useImperativeHandle(ref, create, deps) {
      deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
      mountEffectImpl(4194308, 4, imperativeHandleEffect.bind(null, create, ref), deps);
    },
    useLayoutEffect: function useLayoutEffect(create, deps) {
      return mountEffectImpl(4194308, 4, create, deps);
    },
    useInsertionEffect: function useInsertionEffect(create, deps) {
      mountEffectImpl(4, 2, create, deps);
    },
    useMemo: function useMemo(nextCreate, deps) {
      var hook = mountWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      var nextValue = nextCreate();
      if (shouldDoubleInvokeUserFnsInHooksDEV) {
        setIsStrictModeForDevtools(true);
        try {
          nextCreate();
        } finally {
          setIsStrictModeForDevtools(false);
        }
      }
      hook.memoizedState = [nextValue, deps];
      return nextValue;
    },
    useReducer: function useReducer(reducer, initialArg, init) {
      var hook = mountWorkInProgressHook();
      if (undefined !== init) {
        var initialState = init(initialArg);
        if (shouldDoubleInvokeUserFnsInHooksDEV) {
          setIsStrictModeForDevtools(true);
          try {
            init(initialArg);
          } finally {
            setIsStrictModeForDevtools(false);
          }
        }
      } else initialState = initialArg;
      hook.memoizedState = hook.baseState = initialState;
      reducer = {
        pending: null,
        lanes: 0,
        dispatch: null,
        lastRenderedReducer: reducer,
        lastRenderedState: initialState
      };
      hook.queue = reducer;
      reducer = reducer.dispatch = dispatchReducerAction.bind(null, currentlyRenderingFiber$1, reducer);
      return [hook.memoizedState, reducer];
    },
    useRef: function useRef(initialValue) {
      var hook = mountWorkInProgressHook();
      initialValue = {
        current: initialValue
      };
      return hook.memoizedState = initialValue;
    },
    useState: function useState(initialState) {
      initialState = mountStateImpl(initialState);
      var queue = initialState.queue,
        dispatch = dispatchSetState.bind(null, currentlyRenderingFiber$1, queue);
      queue.dispatch = dispatch;
      return [initialState.memoizedState, dispatch];
    },
    useDebugValue: mountDebugValue,
    useDeferredValue: function useDeferredValue(value, initialValue) {
      var hook = mountWorkInProgressHook();
      return mountDeferredValueImpl(hook, value, initialValue);
    },
    useTransition: function useTransition() {
      var stateHook = mountStateImpl(false);
      stateHook = startTransition.bind(null, currentlyRenderingFiber$1, stateHook.queue, true, false);
      mountWorkInProgressHook().memoizedState = stateHook;
      return [false, stateHook];
    },
    useSyncExternalStore: function useSyncExternalStore(subscribe, getSnapshot) {
      var fiber = currentlyRenderingFiber$1,
        hook = mountWorkInProgressHook();
      var nextSnapshot = getSnapshot();
      if (null === workInProgressRoot) throw Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
      0 !== (workInProgressRootRenderLanes & 60) || pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
      hook.memoizedState = nextSnapshot;
      var inst = {
        value: nextSnapshot,
        getSnapshot: getSnapshot
      };
      hook.queue = inst;
      mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]);
      fiber.flags |= 2048;
      pushEffect(9, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), {
        destroy: undefined
      }, null);
      return nextSnapshot;
    },
    useId: function useId() {
      var hook = mountWorkInProgressHook(),
        identifierPrefix = workInProgressRoot.identifierPrefix,
        globalClientId = globalClientIdCounter++;
      identifierPrefix = ":" + identifierPrefix + "r" + globalClientId.toString(32) + ":";
      return hook.memoizedState = identifierPrefix;
    },
    useCacheRefresh: function useCacheRefresh() {
      return mountWorkInProgressHook().memoizedState = refreshCache.bind(null, currentlyRenderingFiber$1);
    }
  };
  HooksDispatcherOnMount.useMemoCache = useMemoCache;
  HooksDispatcherOnMount.useHostTransitionStatus = useHostTransitionStatus;
  HooksDispatcherOnMount.useFormState = mountActionState;
  HooksDispatcherOnMount.useActionState = mountActionState;
  HooksDispatcherOnMount.useOptimistic = function (passthrough) {
    var hook = mountWorkInProgressHook();
    hook.memoizedState = hook.baseState = passthrough;
    var queue = {
      pending: null,
      lanes: 0,
      dispatch: null,
      lastRenderedReducer: null,
      lastRenderedState: null
    };
    hook.queue = queue;
    hook = dispatchOptimisticSetState.bind(null, currentlyRenderingFiber$1, true, queue);
    queue.dispatch = hook;
    return [passthrough, hook];
  };
  var HooksDispatcherOnUpdate = {
    readContext: readContext,
    use: use,
    useCallback: updateCallback,
    useContext: readContext,
    useEffect: updateEffect,
    useImperativeHandle: updateImperativeHandle,
    useInsertionEffect: updateInsertionEffect,
    useLayoutEffect: updateLayoutEffect,
    useMemo: updateMemo,
    useReducer: updateReducer,
    useRef: updateRef,
    useState: function useState() {
      return updateReducer(basicStateReducer);
    },
    useDebugValue: mountDebugValue,
    useDeferredValue: function useDeferredValue(value, initialValue) {
      var hook = updateWorkInProgressHook();
      return updateDeferredValueImpl(hook, currentHook.memoizedState, value, initialValue);
    },
    useTransition: function useTransition() {
      var booleanOrThenable = updateReducer(basicStateReducer)[0],
        start = updateWorkInProgressHook().memoizedState;
      return ["boolean" === typeof booleanOrThenable ? booleanOrThenable : useThenable(booleanOrThenable), start];
    },
    useSyncExternalStore: updateSyncExternalStore,
    useId: updateId
  };
  HooksDispatcherOnUpdate.useCacheRefresh = updateRefresh;
  HooksDispatcherOnUpdate.useMemoCache = useMemoCache;
  HooksDispatcherOnUpdate.useHostTransitionStatus = useHostTransitionStatus;
  HooksDispatcherOnUpdate.useFormState = updateActionState;
  HooksDispatcherOnUpdate.useActionState = updateActionState;
  HooksDispatcherOnUpdate.useOptimistic = function (passthrough, reducer) {
    var hook = updateWorkInProgressHook();
    return updateOptimisticImpl(hook, currentHook, passthrough, reducer);
  };
  var HooksDispatcherOnRerender = {
    readContext: readContext,
    use: use,
    useCallback: updateCallback,
    useContext: readContext,
    useEffect: updateEffect,
    useImperativeHandle: updateImperativeHandle,
    useInsertionEffect: updateInsertionEffect,
    useLayoutEffect: updateLayoutEffect,
    useMemo: updateMemo,
    useReducer: rerenderReducer,
    useRef: updateRef,
    useState: function useState() {
      return rerenderReducer(basicStateReducer);
    },
    useDebugValue: mountDebugValue,
    useDeferredValue: function useDeferredValue(value, initialValue) {
      var hook = updateWorkInProgressHook();
      return null === currentHook ? mountDeferredValueImpl(hook, value, initialValue) : updateDeferredValueImpl(hook, currentHook.memoizedState, value, initialValue);
    },
    useTransition: function useTransition() {
      var booleanOrThenable = rerenderReducer(basicStateReducer)[0],
        start = updateWorkInProgressHook().memoizedState;
      return ["boolean" === typeof booleanOrThenable ? booleanOrThenable : useThenable(booleanOrThenable), start];
    },
    useSyncExternalStore: updateSyncExternalStore,
    useId: updateId
  };
  HooksDispatcherOnRerender.useCacheRefresh = updateRefresh;
  HooksDispatcherOnRerender.useMemoCache = useMemoCache;
  HooksDispatcherOnRerender.useHostTransitionStatus = useHostTransitionStatus;
  HooksDispatcherOnRerender.useFormState = rerenderActionState;
  HooksDispatcherOnRerender.useActionState = rerenderActionState;
  HooksDispatcherOnRerender.useOptimistic = function (passthrough, reducer) {
    var hook = updateWorkInProgressHook();
    if (null !== currentHook) return updateOptimisticImpl(hook, currentHook, passthrough, reducer);
    hook.baseState = passthrough;
    return [passthrough, hook.queue.dispatch];
  };
  function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
    ctor = workInProgress.memoizedState;
    getDerivedStateFromProps = getDerivedStateFromProps(nextProps, ctor);
    getDerivedStateFromProps = null === getDerivedStateFromProps || undefined === getDerivedStateFromProps ? ctor : assign({}, ctor, getDerivedStateFromProps);
    workInProgress.memoizedState = getDerivedStateFromProps;
    0 === workInProgress.lanes && (workInProgress.updateQueue.baseState = getDerivedStateFromProps);
  }
  var classComponentUpdater = {
    isMounted: function isMounted(component) {
      return (component = component._reactInternals) ? getNearestMountedFiber(component) === component : false;
    },
    enqueueSetState: function enqueueSetState(inst, payload, callback) {
      inst = inst._reactInternals;
      var lane = requestUpdateLane(inst),
        update = createUpdate(lane);
      update.payload = payload;
      undefined !== callback && null !== callback && (update.callback = callback);
      payload = enqueueUpdate(inst, update, lane);
      null !== payload && (scheduleUpdateOnFiber(payload, inst, lane), entangleTransitions(payload, inst, lane));
    },
    enqueueReplaceState: function enqueueReplaceState(inst, payload, callback) {
      inst = inst._reactInternals;
      var lane = requestUpdateLane(inst),
        update = createUpdate(lane);
      update.tag = 1;
      update.payload = payload;
      undefined !== callback && null !== callback && (update.callback = callback);
      payload = enqueueUpdate(inst, update, lane);
      null !== payload && (scheduleUpdateOnFiber(payload, inst, lane), entangleTransitions(payload, inst, lane));
    },
    enqueueForceUpdate: function enqueueForceUpdate(inst, callback) {
      inst = inst._reactInternals;
      var lane = requestUpdateLane(inst),
        update = createUpdate(lane);
      update.tag = 2;
      undefined !== callback && null !== callback && (update.callback = callback);
      callback = enqueueUpdate(inst, update, lane);
      null !== callback && (scheduleUpdateOnFiber(callback, inst, lane), entangleTransitions(callback, inst, lane));
    }
  };
  function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
    workInProgress = workInProgress.stateNode;
    return "function" === typeof workInProgress.shouldComponentUpdate ? workInProgress.shouldComponentUpdate(newProps, newState, nextContext) : ctor.prototype && ctor.prototype.isPureReactComponent ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState) : true;
  }
  function constructClassInstance(workInProgress, ctor, props) {
    var context = emptyContextObject,
      contextType = ctor.contextType;
    "object" === typeof contextType && null !== contextType && (context = readContext(contextType));
    ctor = new ctor(props, context);
    workInProgress.memoizedState = null !== ctor.state && undefined !== ctor.state ? ctor.state : null;
    ctor.updater = classComponentUpdater;
    workInProgress.stateNode = ctor;
    ctor._reactInternals = workInProgress;
    return ctor;
  }
  function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
    workInProgress = instance.state;
    "function" === typeof instance.componentWillReceiveProps && instance.componentWillReceiveProps(newProps, nextContext);
    "function" === typeof instance.UNSAFE_componentWillReceiveProps && instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
    instance.state !== workInProgress && classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }
  function mountClassInstance(workInProgress, ctor, newProps, renderLanes) {
    var instance = workInProgress.stateNode;
    instance.props = newProps;
    instance.state = workInProgress.memoizedState;
    instance.refs = {};
    initializeUpdateQueue(workInProgress);
    var contextType = ctor.contextType;
    instance.context = "object" === typeof contextType && null !== contextType ? readContext(contextType) : emptyContextObject;
    instance.state = workInProgress.memoizedState;
    contextType = ctor.getDerivedStateFromProps;
    "function" === typeof contextType && (applyDerivedStateFromProps(workInProgress, ctor, contextType, newProps), instance.state = workInProgress.memoizedState);
    "function" === typeof ctor.getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || (ctor = instance.state, "function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount(), ctor !== instance.state && classComponentUpdater.enqueueReplaceState(instance, instance.state, null), processUpdateQueue(workInProgress, newProps, instance, renderLanes), suspendIfUpdateReadFromEntangledAsyncAction(), instance.state = workInProgress.memoizedState);
    "function" === typeof instance.componentDidMount && (workInProgress.flags |= 4194308);
  }
  function resolveClassComponentProps(Component, baseProps) {
    var newProps = baseProps;
    if ("ref" in baseProps) {
      newProps = {};
      for (var propName in baseProps) "ref" !== propName && (newProps[propName] = baseProps[propName]);
    }
    if (Component = Component.defaultProps) {
      newProps === baseProps && (newProps = assign({}, newProps));
      for (var propName$53 in Component) undefined === newProps[propName$53] && (newProps[propName$53] = Component[propName$53]);
    }
    return newProps;
  }
  var reportGlobalError = "function" === typeof reportError ? reportError : function (error) {
    if ("object" === typeof window && "function" === typeof window.ErrorEvent) {
      var event = new window.ErrorEvent("error", {
        bubbles: true,
        cancelable: true,
        message: "object" === typeof error && null !== error && "string" === typeof error.message ? String(error.message) : String(error),
        error: error
      });
      if (!window.dispatchEvent(event)) return;
    } else if ("object" === typeof process && "function" === typeof process.emit) {
      process.emit("uncaughtException", error);
      return;
    }
    console.error(error);
  };
  function defaultOnRecoverableError(error) {
    reportGlobalError(error);
  }
  function logUncaughtError(root, errorInfo) {
    try {
      var onUncaughtError = root.onUncaughtError;
      onUncaughtError(errorInfo.value, {
        componentStack: errorInfo.stack
      });
    } catch (e) {
      setTimeout(function () {
        throw e;
      });
    }
  }
  function logCaughtError(root, boundary, errorInfo) {
    try {
      var onCaughtError = root.onCaughtError;
      onCaughtError(errorInfo.value, {
        componentStack: errorInfo.stack,
        errorBoundary: 1 === boundary.tag ? boundary.stateNode : null
      });
    } catch (e) {
      setTimeout(function () {
        throw e;
      });
    }
  }
  function createRootErrorUpdate(root, errorInfo, lane) {
    lane = createUpdate(lane);
    lane.tag = 3;
    lane.payload = {
      element: null
    };
    lane.callback = function () {
      logUncaughtError(root, errorInfo);
    };
    return lane;
  }
  function createClassErrorUpdate(lane) {
    lane = createUpdate(lane);
    lane.tag = 3;
    return lane;
  }
  function initializeClassErrorUpdate(update, root, fiber, errorInfo) {
    var getDerivedStateFromError = fiber.type.getDerivedStateFromError;
    if ("function" === typeof getDerivedStateFromError) {
      var error = errorInfo.value;
      update.payload = function () {
        return getDerivedStateFromError(error);
      };
      update.callback = function () {
        logCaughtError(root, fiber, errorInfo);
      };
    }
    var inst = fiber.stateNode;
    null !== inst && "function" === typeof inst.componentDidCatch && (update.callback = function () {
      logCaughtError(root, fiber, errorInfo);
      "function" !== typeof getDerivedStateFromError && (null === legacyErrorBoundariesThatAlreadyFailed ? legacyErrorBoundariesThatAlreadyFailed = new Set([this]) : legacyErrorBoundariesThatAlreadyFailed.add(this));
      var stack = errorInfo.stack;
      this.componentDidCatch(errorInfo.value, {
        componentStack: null !== stack ? stack : ""
      });
    });
  }
  function throwException(root, returnFiber, sourceFiber, value, rootRenderLanes) {
    sourceFiber.flags |= 32768;
    if (null !== value && "object" === typeof value && "function" === typeof value.then) {
      var currentSourceFiber = sourceFiber.alternate;
      null !== currentSourceFiber && propagateParentContextChanges(currentSourceFiber, sourceFiber, rootRenderLanes, true);
      currentSourceFiber = sourceFiber.tag;
      0 !== (sourceFiber.mode & 1) || 0 !== currentSourceFiber && 11 !== currentSourceFiber && 15 !== currentSourceFiber || ((currentSourceFiber = sourceFiber.alternate) ? (sourceFiber.updateQueue = currentSourceFiber.updateQueue, sourceFiber.memoizedState = currentSourceFiber.memoizedState, sourceFiber.lanes = currentSourceFiber.lanes) : (sourceFiber.updateQueue = null, sourceFiber.memoizedState = null));
      currentSourceFiber = suspenseHandlerStackCursor.current;
      if (null !== currentSourceFiber) {
        switch (currentSourceFiber.tag) {
          case 13:
            return sourceFiber.mode & 1 && (null === shellBoundary ? renderDidSuspendDelayIfPossible() : null === currentSourceFiber.alternate && 0 === workInProgressRootExitStatus && (workInProgressRootExitStatus = 3)), currentSourceFiber.flags &= -257, 0 === (currentSourceFiber.mode & 1) ? currentSourceFiber === returnFiber ? currentSourceFiber.flags |= 65536 : (currentSourceFiber.flags |= 128, sourceFiber.flags |= 131072, sourceFiber.flags &= -52805, 1 === sourceFiber.tag ? null === sourceFiber.alternate ? sourceFiber.tag = 17 : (returnFiber = createUpdate(2), returnFiber.tag = 2, enqueueUpdate(sourceFiber, returnFiber, 2)) : 0 === sourceFiber.tag && null === sourceFiber.alternate && (sourceFiber.tag = 28), sourceFiber.lanes |= 2) : (currentSourceFiber.flags |= 65536, currentSourceFiber.lanes = rootRenderLanes), value === noopSuspenseyCommitThenable ? currentSourceFiber.flags |= 16384 : (returnFiber = currentSourceFiber.updateQueue, null === returnFiber ? currentSourceFiber.updateQueue = new Set([value]) : returnFiber.add(value), currentSourceFiber.mode & 1 && attachPingListener(root, value, rootRenderLanes)), false;
          case 22:
            if (currentSourceFiber.mode & 1) return currentSourceFiber.flags |= 65536, value === noopSuspenseyCommitThenable ? currentSourceFiber.flags |= 16384 : (returnFiber = currentSourceFiber.updateQueue, null === returnFiber ? (returnFiber = {
              transitions: null,
              markerInstances: null,
              retryQueue: new Set([value])
            }, currentSourceFiber.updateQueue = returnFiber) : (sourceFiber = returnFiber.retryQueue, null === sourceFiber ? returnFiber.retryQueue = new Set([value]) : sourceFiber.add(value)), attachPingListener(root, value, rootRenderLanes)), false;
        }
        throw Error("Unexpected Suspense handler tag (" + currentSourceFiber.tag + "). This is a bug in React.");
      }
      if (1 === root.tag) return attachPingListener(root, value, rootRenderLanes), renderDidSuspendDelayIfPossible(), false;
      value = Error("A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition.");
    }
    currentSourceFiber = createCapturedValueAtFiber(Error("There was an error during concurrent rendering but React was able to recover by instead synchronously rendering the entire root.", {
      cause: value
    }), sourceFiber);
    null === workInProgressRootConcurrentErrors ? workInProgressRootConcurrentErrors = [currentSourceFiber] : workInProgressRootConcurrentErrors.push(currentSourceFiber);
    4 !== workInProgressRootExitStatus && (workInProgressRootExitStatus = 2);
    if (null === returnFiber) return true;
    value = createCapturedValueAtFiber(value, sourceFiber);
    do {
      switch (returnFiber.tag) {
        case 3:
          return returnFiber.flags |= 65536, root = rootRenderLanes & -rootRenderLanes, returnFiber.lanes |= root, root = createRootErrorUpdate(returnFiber.stateNode, value, root), enqueueCapturedUpdate(returnFiber, root), false;
        case 1:
          if (sourceFiber = returnFiber.type, currentSourceFiber = returnFiber.stateNode, 0 === (returnFiber.flags & 128) && ("function" === typeof sourceFiber.getDerivedStateFromError || null !== currentSourceFiber && "function" === typeof currentSourceFiber.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(currentSourceFiber)))) return returnFiber.flags |= 65536, rootRenderLanes &= -rootRenderLanes, returnFiber.lanes |= rootRenderLanes, rootRenderLanes = createClassErrorUpdate(rootRenderLanes), initializeClassErrorUpdate(rootRenderLanes, root, returnFiber, value), enqueueCapturedUpdate(returnFiber, rootRenderLanes), false;
      }
      returnFiber = returnFiber.return;
    } while (null !== returnFiber);
    return false;
  }
  var SelectiveHydrationException = Error("This is not a real error. It's an implementation detail of React's selective hydration feature. If this leaks into userspace, it's a bug in React. Please file an issue."),
    didReceiveUpdate = false;
  function reconcileChildren(current, workInProgress, nextChildren, renderLanes) {
    workInProgress.child = null === current ? mountChildFibers(workInProgress, null, nextChildren, renderLanes) : reconcileChildFibers(workInProgress, current.child, nextChildren, renderLanes);
  }
  function updateForwardRef(current, workInProgress, Component, nextProps, renderLanes) {
    Component = Component.render;
    var ref = workInProgress.ref;
    if ("ref" in nextProps) {
      var propsWithoutRef = {};
      for (var key in nextProps) "ref" !== key && (propsWithoutRef[key] = nextProps[key]);
    } else propsWithoutRef = nextProps;
    prepareToReadContext(workInProgress);
    nextProps = renderWithHooks(current, workInProgress, Component, propsWithoutRef, ref, renderLanes);
    if (null !== current && !didReceiveUpdate) return bailoutHooks(current, workInProgress, renderLanes), bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
    workInProgress.flags |= 1;
    reconcileChildren(current, workInProgress, nextProps, renderLanes);
    return workInProgress.child;
  }
  function updateMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {
    if (null === current) {
      var type = Component.type;
      if ("function" === typeof type && !shouldConstruct(type) && undefined === type.defaultProps && null === Component.compare) return workInProgress.tag = 15, workInProgress.type = type, updateSimpleMemoComponent(current, workInProgress, type, nextProps, renderLanes);
      current = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress, workInProgress.mode, renderLanes);
      current.ref = workInProgress.ref;
      current.return = workInProgress;
      return workInProgress.child = current;
    }
    type = current.child;
    if (!checkScheduledUpdateOrContext(current, renderLanes)) {
      var prevProps = type.memoizedProps;
      Component = Component.compare;
      Component = null !== Component ? Component : shallowEqual;
      if (Component(prevProps, nextProps) && current.ref === workInProgress.ref) return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
    }
    workInProgress.flags |= 1;
    current = createWorkInProgress(type, nextProps);
    current.ref = workInProgress.ref;
    current.return = workInProgress;
    return workInProgress.child = current;
  }
  function updateSimpleMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {
    if (null !== current) {
      var prevProps = current.memoizedProps;
      if (shallowEqual(prevProps, nextProps) && current.ref === workInProgress.ref) if (didReceiveUpdate = false, workInProgress.pendingProps = nextProps = prevProps, checkScheduledUpdateOrContext(current, renderLanes)) 0 !== (current.flags & 131072) && (didReceiveUpdate = true);else return workInProgress.lanes = current.lanes, bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
    }
    return updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes);
  }
  function updateOffscreenComponent(current, workInProgress, renderLanes) {
    var nextProps = workInProgress.pendingProps,
      nextChildren = nextProps.children,
      nextIsDetached = 0 !== (workInProgress.stateNode._pendingVisibility & 2),
      prevState = null !== current ? current.memoizedState : null;
    markRef(current, workInProgress);
    if ("hidden" === nextProps.mode || nextIsDetached) {
      if (0 !== (workInProgress.flags & 128)) {
        nextProps = null !== prevState ? prevState.baseLanes | renderLanes : renderLanes;
        if (null !== current) {
          nextChildren = workInProgress.child = current.child;
          for (nextIsDetached = 0; null !== nextChildren;) nextIsDetached = nextIsDetached | nextChildren.lanes | nextChildren.childLanes, nextChildren = nextChildren.sibling;
          workInProgress.childLanes = nextIsDetached & ~nextProps;
        } else workInProgress.childLanes = 0, workInProgress.child = null;
        return deferHiddenOffscreenComponent(current, workInProgress, nextProps, renderLanes);
      }
      if (0 === (workInProgress.mode & 1)) workInProgress.memoizedState = {
        baseLanes: 0,
        cachePool: null
      }, null !== current && pushTransition(workInProgress, null), reuseHiddenContextOnStack(), pushOffscreenSuspenseHandler(workInProgress);else if (0 !== (renderLanes & 536870912)) workInProgress.memoizedState = {
        baseLanes: 0,
        cachePool: null
      }, null !== current && pushTransition(workInProgress, null !== prevState ? prevState.cachePool : null), null !== prevState ? pushHiddenContext(workInProgress, prevState) : reuseHiddenContextOnStack(), pushOffscreenSuspenseHandler(workInProgress);else return workInProgress.lanes = workInProgress.childLanes = 536870912, deferHiddenOffscreenComponent(current, workInProgress, null !== prevState ? prevState.baseLanes | renderLanes : renderLanes, renderLanes);
    } else null !== prevState ? (pushTransition(workInProgress, prevState.cachePool), pushHiddenContext(workInProgress, prevState), reuseSuspenseHandlerOnStack(workInProgress), workInProgress.memoizedState = null) : (null !== current && pushTransition(workInProgress, null), reuseHiddenContextOnStack(), reuseSuspenseHandlerOnStack(workInProgress));
    reconcileChildren(current, workInProgress, nextChildren, renderLanes);
    return workInProgress.child;
  }
  function deferHiddenOffscreenComponent(current, workInProgress, nextBaseLanes, renderLanes) {
    var JSCompiler_inline_result = peekCacheFromPool();
    JSCompiler_inline_result = null === JSCompiler_inline_result ? null : {
      parent: CacheContext._currentValue,
      pool: JSCompiler_inline_result
    };
    workInProgress.memoizedState = {
      baseLanes: nextBaseLanes,
      cachePool: JSCompiler_inline_result
    };
    null !== current && pushTransition(workInProgress, null);
    reuseHiddenContextOnStack();
    pushOffscreenSuspenseHandler(workInProgress);
    null !== current && propagateParentContextChanges(current, workInProgress, renderLanes, true);
    return null;
  }
  function markRef(current, workInProgress) {
    var ref = workInProgress.ref;
    if (null === ref) null !== current && null !== current.ref && (workInProgress.flags |= 2097664);else {
      if ("function" !== typeof ref && "object" !== typeof ref) throw Error("Expected ref to be a function, an object returned by React.createRef(), or undefined/null.");
      if (null === current || current.ref !== ref) workInProgress.flags |= 2097664;
    }
  }
  function updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes) {
    prepareToReadContext(workInProgress);
    Component = renderWithHooks(current, workInProgress, Component, nextProps, undefined, renderLanes);
    if (null !== current && !didReceiveUpdate) return bailoutHooks(current, workInProgress, renderLanes), bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
    workInProgress.flags |= 1;
    reconcileChildren(current, workInProgress, Component, renderLanes);
    return workInProgress.child;
  }
  function replayFunctionComponent(current, workInProgress, nextProps, Component, secondArg, renderLanes) {
    prepareToReadContext(workInProgress);
    workInProgress.updateQueue = null;
    nextProps = renderWithHooksAgain(workInProgress, Component, nextProps, secondArg);
    finishRenderingHooks(current);
    if (null !== current && !didReceiveUpdate) return bailoutHooks(current, workInProgress, renderLanes), bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
    workInProgress.flags |= 1;
    reconcileChildren(current, workInProgress, nextProps, renderLanes);
    return workInProgress.child;
  }
  function updateClassComponent(current, workInProgress, Component, nextProps, renderLanes) {
    prepareToReadContext(workInProgress);
    if (null === workInProgress.stateNode) resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress), constructClassInstance(workInProgress, Component, nextProps), mountClassInstance(workInProgress, Component, nextProps, renderLanes), nextProps = true;else if (null === current) {
      var instance = workInProgress.stateNode,
        unresolvedOldProps = workInProgress.memoizedProps,
        oldProps = resolveClassComponentProps(Component, unresolvedOldProps);
      instance.props = oldProps;
      var oldContext = instance.context,
        contextType = Component.contextType,
        nextContext = emptyContextObject;
      "object" === typeof contextType && null !== contextType && (nextContext = readContext(contextType));
      var getDerivedStateFromProps = Component.getDerivedStateFromProps;
      contextType = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate;
      unresolvedOldProps = workInProgress.pendingProps !== unresolvedOldProps;
      contextType || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (unresolvedOldProps || oldContext !== nextContext) && callComponentWillReceiveProps(workInProgress, instance, nextProps, nextContext);
      hasForceUpdate = false;
      var oldState = workInProgress.memoizedState;
      instance.state = oldState;
      processUpdateQueue(workInProgress, nextProps, instance, renderLanes);
      suspendIfUpdateReadFromEntangledAsyncAction();
      oldContext = workInProgress.memoizedState;
      unresolvedOldProps || oldState !== oldContext || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldContext = workInProgress.memoizedState), (oldProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldState, oldContext, nextContext)) ? (contextType || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || ("function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount()), "function" === typeof instance.componentDidMount && (workInProgress.flags |= 4194308)) : ("function" === typeof instance.componentDidMount && (workInProgress.flags |= 4194308), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldContext), instance.props = nextProps, instance.state = oldContext, instance.context = nextContext, nextProps = oldProps) : ("function" === typeof instance.componentDidMount && (workInProgress.flags |= 4194308), nextProps = false);
    } else {
      instance = workInProgress.stateNode;
      cloneUpdateQueue(current, workInProgress);
      nextContext = workInProgress.memoizedProps;
      contextType = resolveClassComponentProps(Component, nextContext);
      instance.props = contextType;
      getDerivedStateFromProps = workInProgress.pendingProps;
      oldState = instance.context;
      oldContext = Component.contextType;
      oldProps = emptyContextObject;
      "object" === typeof oldContext && null !== oldContext && (oldProps = readContext(oldContext));
      unresolvedOldProps = Component.getDerivedStateFromProps;
      (oldContext = "function" === typeof unresolvedOldProps || "function" === typeof instance.getSnapshotBeforeUpdate) || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (nextContext !== getDerivedStateFromProps || oldState !== oldProps) && callComponentWillReceiveProps(workInProgress, instance, nextProps, oldProps);
      hasForceUpdate = false;
      oldState = workInProgress.memoizedState;
      instance.state = oldState;
      processUpdateQueue(workInProgress, nextProps, instance, renderLanes);
      suspendIfUpdateReadFromEntangledAsyncAction();
      var newState = workInProgress.memoizedState;
      nextContext !== getDerivedStateFromProps || oldState !== newState || hasForceUpdate || null !== current && null !== current.dependencies && checkIfContextChanged(current.dependencies) ? ("function" === typeof unresolvedOldProps && (applyDerivedStateFromProps(workInProgress, Component, unresolvedOldProps, nextProps), newState = workInProgress.memoizedState), (contextType = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, contextType, nextProps, oldState, newState, oldProps) || null !== current && null !== current.dependencies && checkIfContextChanged(current.dependencies)) ? (oldContext || "function" !== typeof instance.UNSAFE_componentWillUpdate && "function" !== typeof instance.componentWillUpdate || ("function" === typeof instance.componentWillUpdate && instance.componentWillUpdate(nextProps, newState, oldProps), "function" === typeof instance.UNSAFE_componentWillUpdate && instance.UNSAFE_componentWillUpdate(nextProps, newState, oldProps)), "function" === typeof instance.componentDidUpdate && (workInProgress.flags |= 4), "function" === typeof instance.getSnapshotBeforeUpdate && (workInProgress.flags |= 1024)) : ("function" !== typeof instance.componentDidUpdate || nextContext === current.memoizedProps && oldState === current.memoizedState || (workInProgress.flags |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || nextContext === current.memoizedProps && oldState === current.memoizedState || (workInProgress.flags |= 1024), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = newState), instance.props = nextProps, instance.state = newState, instance.context = oldProps, nextProps = contextType) : ("function" !== typeof instance.componentDidUpdate || nextContext === current.memoizedProps && oldState === current.memoizedState || (workInProgress.flags |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || nextContext === current.memoizedProps && oldState === current.memoizedState || (workInProgress.flags |= 1024), nextProps = false);
    }
    return finishClassComponent(current, workInProgress, Component, nextProps, false, renderLanes);
  }
  function finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes) {
    markRef(current, workInProgress);
    hasContext = 0 !== (workInProgress.flags & 128);
    if (!shouldUpdate && !hasContext) return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
    shouldUpdate = workInProgress.stateNode;
    Component = hasContext && "function" !== typeof Component.getDerivedStateFromError ? null : shouldUpdate.render();
    workInProgress.flags |= 1;
    null !== current && hasContext ? (workInProgress.child = reconcileChildFibers(workInProgress, current.child, null, renderLanes), workInProgress.child = reconcileChildFibers(workInProgress, null, Component, renderLanes)) : reconcileChildren(current, workInProgress, Component, renderLanes);
    workInProgress.memoizedState = shouldUpdate.state;
    return workInProgress.child;
  }
  var SUSPENDED_MARKER = {
    dehydrated: null,
    treeContext: null,
    retryLane: 0
  };
  function mountSuspenseOffscreenState(renderLanes) {
    return {
      baseLanes: renderLanes,
      cachePool: getSuspendedCache()
    };
  }
  function getRemainingWorkInPrimaryTree(current, primaryTreeDidDefer, renderLanes) {
    current = null !== current ? current.childLanes & ~renderLanes : 0;
    primaryTreeDidDefer && (current |= workInProgressDeferredLane);
    return current;
  }
  function updateSuspenseComponent(current, workInProgress, renderLanes) {
    var nextProps = workInProgress.pendingProps,
      showFallback = false,
      didSuspend = 0 !== (workInProgress.flags & 128),
      JSCompiler_temp;
    (JSCompiler_temp = didSuspend) || (JSCompiler_temp = null !== current && null === current.memoizedState ? false : 0 !== (suspenseStackCursor.current & 2));
    JSCompiler_temp && (showFallback = true, workInProgress.flags &= -129);
    JSCompiler_temp = 0 !== (workInProgress.flags & 32);
    workInProgress.flags &= -33;
    if (null === current) {
      var nextPrimaryChildren = nextProps.children;
      nextProps = nextProps.fallback;
      if (showFallback) return reuseSuspenseHandlerOnStack(workInProgress), showFallback = workInProgress.mode, didSuspend = workInProgress.child, nextPrimaryChildren = {
        mode: "hidden",
        children: nextPrimaryChildren
      }, 0 === (showFallback & 1) && null !== didSuspend ? (didSuspend.childLanes = 0, didSuspend.pendingProps = nextPrimaryChildren) : didSuspend = createFiberFromOffscreen(nextPrimaryChildren, showFallback, 0, null), nextProps = createFiberFromFragment(nextProps, showFallback, renderLanes, null), didSuspend.return = workInProgress, nextProps.return = workInProgress, didSuspend.sibling = nextProps, workInProgress.child = didSuspend, nextPrimaryChildren = workInProgress.child, nextPrimaryChildren.memoizedState = mountSuspenseOffscreenState(renderLanes), nextPrimaryChildren.childLanes = getRemainingWorkInPrimaryTree(current, JSCompiler_temp, renderLanes), workInProgress.memoizedState = SUSPENDED_MARKER, nextProps;
      pushPrimaryTreeSuspenseHandler(workInProgress);
      return mountSuspensePrimaryChildren(workInProgress, nextPrimaryChildren);
    }
    nextPrimaryChildren = current.memoizedState;
    if (null !== nextPrimaryChildren && null !== nextPrimaryChildren.dehydrated) {
      if (didSuspend) workInProgress.flags & 256 ? (pushPrimaryTreeSuspenseHandler(workInProgress), workInProgress.flags &= -257, workInProgress = retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes)) : null !== workInProgress.memoizedState ? (reuseSuspenseHandlerOnStack(workInProgress), workInProgress.child = current.child, workInProgress.flags |= 128, workInProgress = null) : (reuseSuspenseHandlerOnStack(workInProgress), nextPrimaryChildren = nextProps.fallback, showFallback = workInProgress.mode, nextProps = createFiberFromOffscreen({
        mode: "visible",
        children: nextProps.children
      }, showFallback, 0, null), nextPrimaryChildren = createFiberFromFragment(nextPrimaryChildren, showFallback, renderLanes, null), nextPrimaryChildren.flags |= 2, nextProps.return = workInProgress, nextPrimaryChildren.return = workInProgress, nextProps.sibling = nextPrimaryChildren, workInProgress.child = nextProps, 0 !== (workInProgress.mode & 1) && reconcileChildFibers(workInProgress, current.child, null, renderLanes), nextProps = workInProgress.child, nextProps.memoizedState = mountSuspenseOffscreenState(renderLanes), nextProps.childLanes = getRemainingWorkInPrimaryTree(current, JSCompiler_temp, renderLanes), workInProgress.memoizedState = SUSPENDED_MARKER, workInProgress = nextPrimaryChildren);else if (pushPrimaryTreeSuspenseHandler(workInProgress), shim$1()) JSCompiler_temp = shim$1().digest, nextProps = Error("The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering."), nextProps.stack = "", nextProps.digest = JSCompiler_temp, JSCompiler_temp = {
        value: nextProps,
        source: null,
        stack: null
      }, null === hydrationErrors ? hydrationErrors = [JSCompiler_temp] : hydrationErrors.push(JSCompiler_temp), workInProgress = retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes);else if (didReceiveUpdate || propagateParentContextChanges(current, workInProgress, renderLanes, false), JSCompiler_temp = 0 !== (renderLanes & current.childLanes), didReceiveUpdate || JSCompiler_temp) {
        JSCompiler_temp = workInProgressRoot;
        if (null !== JSCompiler_temp) {
          nextProps = renderLanes & -renderLanes;
          if (0 !== (nextProps & 42)) nextProps = 1;else switch (nextProps) {
            case 2:
              nextProps = 1;
              break;
            case 8:
              nextProps = 4;
              break;
            case 32:
              nextProps = 16;
              break;
            case 128:
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
            case 4194304:
            case 8388608:
            case 16777216:
            case 33554432:
              nextProps = 64;
              break;
            case 268435456:
              nextProps = 134217728;
              break;
            default:
              nextProps = 0;
          }
          nextProps = 0 !== (nextProps & (JSCompiler_temp.suspendedLanes | renderLanes)) ? 0 : nextProps;
          if (0 !== nextProps && nextProps !== nextPrimaryChildren.retryLane) throw nextPrimaryChildren.retryLane = nextProps, enqueueConcurrentRenderForLane(current, nextProps), scheduleUpdateOnFiber(JSCompiler_temp, current, nextProps), SelectiveHydrationException;
        }
        shim$1() || renderDidSuspendDelayIfPossible();
        workInProgress = retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes);
      } else shim$1() ? (workInProgress.flags |= 128, workInProgress.child = current.child, retryDehydratedSuspenseBoundary.bind(null, current), shim$1(), workInProgress = null) : (workInProgress = mountSuspensePrimaryChildren(workInProgress, nextProps.children), workInProgress.flags |= 4096);
      return workInProgress;
    }
    if (showFallback) {
      reuseSuspenseHandlerOnStack(workInProgress);
      nextPrimaryChildren = nextProps.fallback;
      showFallback = workInProgress.mode;
      didSuspend = current.child;
      var currentFallbackChildFragment = didSuspend.sibling,
        primaryChildProps = {
          mode: "hidden",
          children: nextProps.children
        };
      0 === (showFallback & 1) && workInProgress.child !== didSuspend ? (nextProps = workInProgress.child, nextProps.childLanes = 0, nextProps.pendingProps = primaryChildProps, workInProgress.deletions = null) : (nextProps = createWorkInProgress(didSuspend, primaryChildProps), nextProps.subtreeFlags = didSuspend.subtreeFlags & 31457280);
      null !== currentFallbackChildFragment ? nextPrimaryChildren = createWorkInProgress(currentFallbackChildFragment, nextPrimaryChildren) : (nextPrimaryChildren = createFiberFromFragment(nextPrimaryChildren, showFallback, renderLanes, null), nextPrimaryChildren.flags |= 2);
      nextPrimaryChildren.return = workInProgress;
      nextProps.return = workInProgress;
      nextProps.sibling = nextPrimaryChildren;
      workInProgress.child = nextProps;
      nextProps = nextPrimaryChildren;
      nextPrimaryChildren = workInProgress.child;
      showFallback = current.child.memoizedState;
      null === showFallback ? showFallback = mountSuspenseOffscreenState(renderLanes) : (didSuspend = showFallback.cachePool, null !== didSuspend ? (currentFallbackChildFragment = CacheContext._currentValue, didSuspend = didSuspend.parent !== currentFallbackChildFragment ? {
        parent: currentFallbackChildFragment,
        pool: currentFallbackChildFragment
      } : didSuspend) : didSuspend = getSuspendedCache(), showFallback = {
        baseLanes: showFallback.baseLanes | renderLanes,
        cachePool: didSuspend
      });
      nextPrimaryChildren.memoizedState = showFallback;
      nextPrimaryChildren.childLanes = getRemainingWorkInPrimaryTree(current, JSCompiler_temp, renderLanes);
      workInProgress.memoizedState = SUSPENDED_MARKER;
      return nextProps;
    }
    pushPrimaryTreeSuspenseHandler(workInProgress);
    JSCompiler_temp = current.child;
    current = JSCompiler_temp.sibling;
    JSCompiler_temp = createWorkInProgress(JSCompiler_temp, {
      mode: "visible",
      children: nextProps.children
    });
    0 === (workInProgress.mode & 1) && (JSCompiler_temp.lanes = renderLanes);
    JSCompiler_temp.return = workInProgress;
    JSCompiler_temp.sibling = null;
    null !== current && (renderLanes = workInProgress.deletions, null === renderLanes ? (workInProgress.deletions = [current], workInProgress.flags |= 16) : renderLanes.push(current));
    workInProgress.child = JSCompiler_temp;
    workInProgress.memoizedState = null;
    return JSCompiler_temp;
  }
  function mountSuspensePrimaryChildren(workInProgress, primaryChildren) {
    primaryChildren = createFiberFromOffscreen({
      mode: "visible",
      children: primaryChildren
    }, workInProgress.mode, 0, null);
    primaryChildren.return = workInProgress;
    return workInProgress.child = primaryChildren;
  }
  function retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes) {
    reconcileChildFibers(workInProgress, current.child, null, renderLanes);
    current = mountSuspensePrimaryChildren(workInProgress, workInProgress.pendingProps.children);
    current.flags |= 2;
    workInProgress.memoizedState = null;
    return current;
  }
  function scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {
    fiber.lanes |= renderLanes;
    var alternate = fiber.alternate;
    null !== alternate && (alternate.lanes |= renderLanes);
    scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);
  }
  function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {
    var renderState = workInProgress.memoizedState;
    null === renderState ? workInProgress.memoizedState = {
      isBackwards: isBackwards,
      rendering: null,
      renderingStartTime: 0,
      last: lastContentRow,
      tail: tail,
      tailMode: tailMode
    } : (renderState.isBackwards = isBackwards, renderState.rendering = null, renderState.renderingStartTime = 0, renderState.last = lastContentRow, renderState.tail = tail, renderState.tailMode = tailMode);
  }
  function updateSuspenseListComponent(current, workInProgress, renderLanes) {
    var nextProps = workInProgress.pendingProps,
      revealOrder = nextProps.revealOrder,
      tailMode = nextProps.tail;
    reconcileChildren(current, workInProgress, nextProps.children, renderLanes);
    nextProps = suspenseStackCursor.current;
    if (0 !== (nextProps & 2)) nextProps = nextProps & 1 | 2, workInProgress.flags |= 128;else {
      if (null !== current && 0 !== (current.flags & 128)) a: for (current = workInProgress.child; null !== current;) {
        if (13 === current.tag) null !== current.memoizedState && scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);else if (19 === current.tag) scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);else if (null !== current.child) {
          current.child.return = current;
          current = current.child;
          continue;
        }
        if (current === workInProgress) break a;
        for (; null === current.sibling;) {
          if (null === current.return || current.return === workInProgress) break a;
          current = current.return;
        }
        current.sibling.return = current.return;
        current = current.sibling;
      }
      nextProps &= 1;
    }
    push(suspenseStackCursor, nextProps);
    if (0 === (workInProgress.mode & 1)) workInProgress.memoizedState = null;else switch (revealOrder) {
      case "forwards":
        renderLanes = workInProgress.child;
        for (revealOrder = null; null !== renderLanes;) current = renderLanes.alternate, null !== current && null === findFirstSuspended(current) && (revealOrder = renderLanes), renderLanes = renderLanes.sibling;
        renderLanes = revealOrder;
        null === renderLanes ? (revealOrder = workInProgress.child, workInProgress.child = null) : (revealOrder = renderLanes.sibling, renderLanes.sibling = null);
        initSuspenseListRenderState(workInProgress, false, revealOrder, renderLanes, tailMode);
        break;
      case "backwards":
        renderLanes = null;
        revealOrder = workInProgress.child;
        for (workInProgress.child = null; null !== revealOrder;) {
          current = revealOrder.alternate;
          if (null !== current && null === findFirstSuspended(current)) {
            workInProgress.child = revealOrder;
            break;
          }
          current = revealOrder.sibling;
          revealOrder.sibling = renderLanes;
          renderLanes = revealOrder;
          revealOrder = current;
        }
        initSuspenseListRenderState(workInProgress, true, renderLanes, null, tailMode);
        break;
      case "together":
        initSuspenseListRenderState(workInProgress, false, null, null, undefined);
        break;
      default:
        workInProgress.memoizedState = null;
    }
    return workInProgress.child;
  }
  function resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress) {
    0 === (workInProgress.mode & 1) && null !== current && (current.alternate = null, workInProgress.alternate = null, workInProgress.flags |= 2);
  }
  function bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {
    null !== current && (workInProgress.dependencies = current.dependencies);
    workInProgressRootSkippedLanes |= workInProgress.lanes;
    if (0 === (renderLanes & workInProgress.childLanes)) if (null !== current) {
      if (propagateParentContextChanges(current, workInProgress, renderLanes, false), 0 === (renderLanes & workInProgress.childLanes)) return null;
    } else return null;
    if (null !== current && workInProgress.child !== current.child) throw Error("Resuming work not yet implemented.");
    if (null !== workInProgress.child) {
      current = workInProgress.child;
      renderLanes = createWorkInProgress(current, current.pendingProps);
      workInProgress.child = renderLanes;
      for (renderLanes.return = workInProgress; null !== current.sibling;) current = current.sibling, renderLanes = renderLanes.sibling = createWorkInProgress(current, current.pendingProps), renderLanes.return = workInProgress;
      renderLanes.sibling = null;
    }
    return workInProgress.child;
  }
  function checkScheduledUpdateOrContext(current, renderLanes) {
    if (0 !== (current.lanes & renderLanes)) return true;
    current = current.dependencies;
    return null !== current && checkIfContextChanged(current) ? true : false;
  }
  function attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes) {
    switch (workInProgress.tag) {
      case 3:
        pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
        pushProvider(workInProgress, CacheContext, current.memoizedState.cache);
        break;
      case 27:
      case 5:
        pushHostContext(workInProgress);
        break;
      case 4:
        pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
        break;
      case 10:
        pushProvider(workInProgress, workInProgress.type, workInProgress.memoizedProps.value);
        break;
      case 13:
        var state = workInProgress.memoizedState;
        if (null !== state) {
          if (null !== state.dehydrated) return pushPrimaryTreeSuspenseHandler(workInProgress), workInProgress.flags |= 128, null;
          if (0 !== (renderLanes & workInProgress.child.childLanes)) return updateSuspenseComponent(current, workInProgress, renderLanes);
          pushPrimaryTreeSuspenseHandler(workInProgress);
          current = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
          return null !== current ? current.sibling : null;
        }
        pushPrimaryTreeSuspenseHandler(workInProgress);
        break;
      case 19:
        var didSuspendBefore = 0 !== (current.flags & 128);
        state = 0 !== (renderLanes & workInProgress.childLanes);
        state || (propagateParentContextChanges(current, workInProgress, renderLanes, false), state = 0 !== (renderLanes & workInProgress.childLanes));
        if (didSuspendBefore) {
          if (state) return updateSuspenseListComponent(current, workInProgress, renderLanes);
          workInProgress.flags |= 128;
        }
        didSuspendBefore = workInProgress.memoizedState;
        null !== didSuspendBefore && (didSuspendBefore.rendering = null, didSuspendBefore.tail = null, didSuspendBefore.lastEffect = null);
        push(suspenseStackCursor, suspenseStackCursor.current);
        if (state) break;else return null;
      case 22:
      case 23:
        return workInProgress.lanes = 0, updateOffscreenComponent(current, workInProgress, renderLanes);
      case 24:
        pushProvider(workInProgress, CacheContext, current.memoizedState.cache);
    }
    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
  }
  function beginWork(current, workInProgress, renderLanes) {
    if (null !== current) {
      if (current.memoizedProps !== workInProgress.pendingProps) didReceiveUpdate = true;else {
        if (!checkScheduledUpdateOrContext(current, renderLanes) && 0 === (workInProgress.flags & 128)) return didReceiveUpdate = false, attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes);
        didReceiveUpdate = 0 !== (current.flags & 131072) ? true : false;
      }
    } else didReceiveUpdate = false;
    workInProgress.lanes = 0;
    switch (workInProgress.tag) {
      case 16:
        var elementType = workInProgress.elementType;
        a: {
          resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress);
          current = workInProgress.pendingProps;
          var init = elementType._init;
          elementType = init(elementType._payload);
          workInProgress.type = elementType;
          if ("function" === typeof elementType) shouldConstruct(elementType) ? (current = resolveClassComponentProps(elementType, current), workInProgress.tag = 1, workInProgress = updateClassComponent(null, workInProgress, elementType, current, renderLanes)) : (workInProgress.tag = 0, workInProgress = updateFunctionComponent(null, workInProgress, elementType, current, renderLanes));else {
            if (undefined !== elementType && null !== elementType) if (init = elementType.$$typeof, init === REACT_FORWARD_REF_TYPE) {
              workInProgress.tag = 11;
              workInProgress = updateForwardRef(null, workInProgress, elementType, current, renderLanes);
              break a;
            } else if (init === REACT_MEMO_TYPE) {
              workInProgress.tag = 14;
              workInProgress = updateMemoComponent(null, workInProgress, elementType, current, renderLanes);
              break a;
            }
            workInProgress = getComponentNameFromType(elementType) || elementType;
            throw Error("Element type is invalid. Received a promise that resolves to: " + workInProgress + ". Lazy element type must resolve to a class or function.");
          }
        }
        return workInProgress;
      case 0:
        return updateFunctionComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
      case 1:
        return elementType = workInProgress.type, init = resolveClassComponentProps(elementType, workInProgress.pendingProps), updateClassComponent(current, workInProgress, elementType, init, renderLanes);
      case 3:
        pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
        if (null === current) throw Error("Should have a current fiber. This is a bug in React.");
        var nextProps = workInProgress.pendingProps;
        init = workInProgress.memoizedState;
        elementType = init.element;
        cloneUpdateQueue(current, workInProgress);
        processUpdateQueue(workInProgress, nextProps, null, renderLanes);
        nextProps = workInProgress.memoizedState;
        var nextCache = nextProps.cache;
        pushProvider(workInProgress, CacheContext, nextCache);
        nextCache !== init.cache && propagateContextChanges(workInProgress, [CacheContext], renderLanes, true);
        suspendIfUpdateReadFromEntangledAsyncAction();
        init = nextProps.element;
        init === elementType ? workInProgress = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) : (reconcileChildren(current, workInProgress, init, renderLanes), workInProgress = workInProgress.child);
        return workInProgress;
      case 26:
      case 27:
      case 5:
        return pushHostContext(workInProgress), elementType = workInProgress.pendingProps.children, null !== workInProgress.memoizedState && (init = renderWithHooks(current, workInProgress, TransitionAwareHostComponent, null, null, renderLanes), HostTransitionContext._currentValue = init), markRef(current, workInProgress), reconcileChildren(current, workInProgress, elementType, renderLanes), workInProgress.child;
      case 6:
        return null;
      case 13:
        return updateSuspenseComponent(current, workInProgress, renderLanes);
      case 4:
        return pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo), elementType = workInProgress.pendingProps, null === current ? workInProgress.child = reconcileChildFibers(workInProgress, null, elementType, renderLanes) : reconcileChildren(current, workInProgress, elementType, renderLanes), workInProgress.child;
      case 11:
        return updateForwardRef(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
      case 7:
        return reconcileChildren(current, workInProgress, workInProgress.pendingProps, renderLanes), workInProgress.child;
      case 8:
        return reconcileChildren(current, workInProgress, workInProgress.pendingProps.children, renderLanes), workInProgress.child;
      case 12:
        return reconcileChildren(current, workInProgress, workInProgress.pendingProps.children, renderLanes), workInProgress.child;
      case 10:
        return elementType = workInProgress.pendingProps, pushProvider(workInProgress, workInProgress.type, elementType.value), reconcileChildren(current, workInProgress, elementType.children, renderLanes), workInProgress.child;
      case 9:
        return init = workInProgress.type._context, elementType = workInProgress.pendingProps.children, prepareToReadContext(workInProgress), init = readContext(init), elementType = elementType(init), workInProgress.flags |= 1, reconcileChildren(current, workInProgress, elementType, renderLanes), workInProgress.child;
      case 14:
        return updateMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
      case 15:
        return updateSimpleMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
      case 17:
        return elementType = workInProgress.type, init = resolveClassComponentProps(elementType, workInProgress.pendingProps), resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress), workInProgress.tag = 1, prepareToReadContext(workInProgress), constructClassInstance(workInProgress, elementType, init), mountClassInstance(workInProgress, elementType, init, renderLanes), finishClassComponent(null, workInProgress, elementType, true, false, renderLanes);
      case 28:
        return elementType = workInProgress.type, init = resolveClassComponentProps(elementType, workInProgress.pendingProps), resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress), workInProgress.tag = 0, updateFunctionComponent(null, workInProgress, elementType, init, renderLanes);
      case 19:
        return updateSuspenseListComponent(current, workInProgress, renderLanes);
      case 22:
        return updateOffscreenComponent(current, workInProgress, renderLanes);
      case 24:
        return prepareToReadContext(workInProgress), elementType = readContext(CacheContext), null === current ? (init = peekCacheFromPool(), null === init && (init = workInProgressRoot, nextProps = createCache(), init.pooledCache = nextProps, nextProps.refCount++, null !== nextProps && (init.pooledCacheLanes |= renderLanes), init = nextProps), workInProgress.memoizedState = {
          parent: elementType,
          cache: init
        }, initializeUpdateQueue(workInProgress), pushProvider(workInProgress, CacheContext, init)) : (0 !== (current.lanes & renderLanes) && (cloneUpdateQueue(current, workInProgress), processUpdateQueue(workInProgress, null, null, renderLanes), suspendIfUpdateReadFromEntangledAsyncAction()), init = current.memoizedState, nextProps = workInProgress.memoizedState, init.parent !== elementType ? (init = {
          parent: elementType,
          cache: elementType
        }, workInProgress.memoizedState = init, 0 === workInProgress.lanes && (workInProgress.memoizedState = workInProgress.updateQueue.baseState = init), pushProvider(workInProgress, CacheContext, elementType)) : (elementType = nextProps.cache, pushProvider(workInProgress, CacheContext, elementType), elementType !== init.cache && propagateContextChanges(workInProgress, [CacheContext], renderLanes, true))), reconcileChildren(current, workInProgress, workInProgress.pendingProps.children, renderLanes), workInProgress.child;
      case 29:
        throw workInProgress.pendingProps;
    }
    throw Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in React. Please file an issue.");
  }
  var valueCursor = createCursor(null),
    currentlyRenderingFiber = null,
    lastContextDependency = null;
  function pushProvider(providerFiber, context, nextValue) {
    push(valueCursor, context._currentValue);
    context._currentValue = nextValue;
  }
  function popProvider(context) {
    context._currentValue = valueCursor.current;
    pop(valueCursor);
  }
  function scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {
    for (; null !== parent;) {
      var alternate = parent.alternate;
      (parent.childLanes & renderLanes) !== renderLanes ? (parent.childLanes |= renderLanes, null !== alternate && (alternate.childLanes |= renderLanes)) : null !== alternate && (alternate.childLanes & renderLanes) !== renderLanes && (alternate.childLanes |= renderLanes);
      if (parent === propagationRoot) break;
      parent = parent.return;
    }
  }
  function propagateContextChanges(workInProgress, contexts, renderLanes, forcePropagateEntireTree) {
    var fiber = workInProgress.child;
    null !== fiber && (fiber.return = workInProgress);
    for (; null !== fiber;) {
      var list = fiber.dependencies;
      if (null !== list) {
        var nextFiber = fiber.child;
        list = list.firstContext;
        a: for (; null !== list;) {
          var dependency = list;
          list = fiber;
          for (var i = 0; i < contexts.length; i++) if (dependency.context === contexts[i]) {
            list.lanes |= renderLanes;
            dependency = list.alternate;
            null !== dependency && (dependency.lanes |= renderLanes);
            scheduleContextWorkOnParentPath(list.return, renderLanes, workInProgress);
            forcePropagateEntireTree || (nextFiber = null);
            break a;
          }
          list = dependency.next;
        }
      } else if (18 === fiber.tag) {
        nextFiber = fiber.return;
        if (null === nextFiber) throw Error("We just came from a parent so we must have had a parent. This is a bug in React.");
        nextFiber.lanes |= renderLanes;
        list = nextFiber.alternate;
        null !== list && (list.lanes |= renderLanes);
        scheduleContextWorkOnParentPath(nextFiber, renderLanes, workInProgress);
        nextFiber = null;
      } else nextFiber = fiber.child;
      if (null !== nextFiber) nextFiber.return = fiber;else for (nextFiber = fiber; null !== nextFiber;) {
        if (nextFiber === workInProgress) {
          nextFiber = null;
          break;
        }
        fiber = nextFiber.sibling;
        if (null !== fiber) {
          fiber.return = nextFiber.return;
          nextFiber = fiber;
          break;
        }
        nextFiber = nextFiber.return;
      }
      fiber = nextFiber;
    }
  }
  function propagateParentContextChanges(current, workInProgress, renderLanes, forcePropagateEntireTree) {
    current = null;
    for (var parent = workInProgress, isInsidePropagationBailout = false; null !== parent;) {
      if (!isInsidePropagationBailout) if (0 !== (parent.flags & 524288)) isInsidePropagationBailout = true;else if (0 !== (parent.flags & 262144)) break;
      if (10 === parent.tag) {
        var currentParent = parent.alternate;
        if (null === currentParent) throw Error("Should have a current fiber. This is a bug in React.");
        currentParent = currentParent.memoizedProps;
        if (null !== currentParent) {
          var context = parent.type;
          objectIs(parent.pendingProps.value, currentParent.value) || (null !== current ? current.push(context) : current = [context]);
        }
      } else if (parent === hostTransitionProviderCursor.current) {
        currentParent = parent.alternate;
        if (null === currentParent) throw Error("Should have a current fiber. This is a bug in React.");
        currentParent.memoizedState.memoizedState !== parent.memoizedState.memoizedState && (null !== current ? current.push(HostTransitionContext) : current = [HostTransitionContext]);
      }
      parent = parent.return;
    }
    null !== current && propagateContextChanges(workInProgress, current, renderLanes, forcePropagateEntireTree);
    workInProgress.flags |= 262144;
  }
  function checkIfContextChanged(currentDependencies) {
    for (currentDependencies = currentDependencies.firstContext; null !== currentDependencies;) {
      if (!objectIs(currentDependencies.context._currentValue, currentDependencies.memoizedValue)) return true;
      currentDependencies = currentDependencies.next;
    }
    return false;
  }
  function prepareToReadContext(workInProgress) {
    currentlyRenderingFiber = workInProgress;
    lastContextDependency = null;
    workInProgress = workInProgress.dependencies;
    null !== workInProgress && (workInProgress.firstContext = null);
  }
  function readContext(context) {
    return readContextForConsumer(currentlyRenderingFiber, context);
  }
  function readContextDuringReconciliation(consumer, context) {
    null === currentlyRenderingFiber && prepareToReadContext(consumer);
    return readContextForConsumer(consumer, context);
  }
  function readContextForConsumer(consumer, context) {
    var value = context._currentValue;
    context = {
      context: context,
      memoizedValue: value,
      next: null
    };
    if (null === lastContextDependency) {
      if (null === consumer) throw Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
      lastContextDependency = context;
      consumer.dependencies = {
        lanes: 0,
        firstContext: context
      };
      consumer.flags |= 524288;
    } else lastContextDependency = lastContextDependency.next = context;
    return value;
  }
  var AbortControllerLocal = "undefined" !== typeof AbortController ? AbortController : function () {
      var listeners = [],
        signal = this.signal = {
          aborted: false,
          addEventListener: function addEventListener(type, listener) {
            listeners.push(listener);
          }
        };
      this.abort = function () {
        signal.aborted = true;
        listeners.forEach(function (listener) {
          return listener();
        });
      };
    },
    CacheContext = {
      $$typeof: REACT_CONTEXT_TYPE,
      Consumer: null,
      Provider: null,
      _currentValue: null,
      _currentValue2: null,
      _threadCount: 0
    };
  function createCache() {
    return {
      controller: new AbortControllerLocal(),
      data: new Map(),
      refCount: 0
    };
  }
  function releaseCache(cache) {
    cache.refCount--;
    0 === cache.refCount && _$$_REQUIRE(_dependencyMap[3]).unstable_scheduleCallback(_$$_REQUIRE(_dependencyMap[3]).unstable_NormalPriority, function () {
      cache.controller.abort();
    });
  }
  var prevOnStartTransitionFinish = ReactSharedInternals.S;
  ReactSharedInternals.S = function (transition, returnValue) {
    "object" === typeof returnValue && null !== returnValue && "function" === typeof returnValue.then && entangleAsyncAction(transition, returnValue);
    null !== prevOnStartTransitionFinish && prevOnStartTransitionFinish(transition, returnValue);
  };
  var resumedCache = createCursor(null);
  function peekCacheFromPool() {
    var cacheResumedFromPreviousRender = resumedCache.current;
    return null !== cacheResumedFromPreviousRender ? cacheResumedFromPreviousRender : workInProgressRoot.pooledCache;
  }
  function pushTransition(offscreenWorkInProgress, prevCachePool) {
    null === prevCachePool ? push(resumedCache, resumedCache.current) : push(resumedCache, prevCachePool.pool);
  }
  function getSuspendedCache() {
    var cacheFromPool = peekCacheFromPool();
    return null === cacheFromPool ? null : {
      parent: CacheContext._currentValue,
      pool: cacheFromPool
    };
  }
  function scheduleRetryEffect(workInProgress, retryQueue) {
    null !== retryQueue && (workInProgress.flags |= 4);
    workInProgress.flags & 16384 && (retryQueue = 22 !== workInProgress.tag ? claimNextRetryLane() : 536870912, workInProgress.lanes |= retryQueue, workInProgressSuspendedRetryLanes |= retryQueue);
  }
  function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
    switch (renderState.tailMode) {
      case "hidden":
        hasRenderedATailFallback = renderState.tail;
        for (var lastTailNode = null; null !== hasRenderedATailFallback;) null !== hasRenderedATailFallback.alternate && (lastTailNode = hasRenderedATailFallback), hasRenderedATailFallback = hasRenderedATailFallback.sibling;
        null === lastTailNode ? renderState.tail = null : lastTailNode.sibling = null;
        break;
      case "collapsed":
        lastTailNode = renderState.tail;
        for (var lastTailNode$92 = null; null !== lastTailNode;) null !== lastTailNode.alternate && (lastTailNode$92 = lastTailNode), lastTailNode = lastTailNode.sibling;
        null === lastTailNode$92 ? hasRenderedATailFallback || null === renderState.tail ? renderState.tail = null : renderState.tail.sibling = null : lastTailNode$92.sibling = null;
    }
  }
  function bubbleProperties(completedWork) {
    var didBailout = null !== completedWork.alternate && completedWork.alternate.child === completedWork.child,
      newChildLanes = 0,
      subtreeFlags = 0;
    if (didBailout) for (var child$93 = completedWork.child; null !== child$93;) newChildLanes |= child$93.lanes | child$93.childLanes, subtreeFlags |= child$93.subtreeFlags & 31457280, subtreeFlags |= child$93.flags & 31457280, child$93.return = completedWork, child$93 = child$93.sibling;else for (child$93 = completedWork.child; null !== child$93;) newChildLanes |= child$93.lanes | child$93.childLanes, subtreeFlags |= child$93.subtreeFlags, subtreeFlags |= child$93.flags, child$93.return = completedWork, child$93 = child$93.sibling;
    completedWork.subtreeFlags |= subtreeFlags;
    completedWork.childLanes = newChildLanes;
    return didBailout;
  }
  function completeWork(current, workInProgress, renderLanes) {
    var newProps = workInProgress.pendingProps;
    switch (workInProgress.tag) {
      case 28:
      case 16:
      case 15:
      case 0:
      case 11:
      case 7:
      case 8:
      case 12:
      case 9:
      case 14:
        return bubbleProperties(workInProgress), null;
      case 1:
        return bubbleProperties(workInProgress), null;
      case 3:
        return renderLanes = workInProgress.stateNode, newProps = null, null !== current && (newProps = current.memoizedState.cache), workInProgress.memoizedState.cache !== newProps && (workInProgress.flags |= 2048), popProvider(CacheContext), popHostContainer(), renderLanes.pendingContext && (renderLanes.context = renderLanes.pendingContext, renderLanes.pendingContext = null), null !== current && null !== current.child || null === current || current.memoizedState.isDehydrated && 0 === (workInProgress.flags & 256) || (workInProgress.flags |= 1024, null !== hydrationErrors && (queueRecoverableErrors(hydrationErrors), hydrationErrors = null)), bubbleProperties(workInProgress), null;
      case 26:
      case 27:
      case 5:
        popHostContext(workInProgress);
        var type = workInProgress.type;
        if (null !== current && null != workInProgress.stateNode) current.memoizedProps !== newProps && (workInProgress.flags |= 4);else {
          if (!newProps) {
            if (null === workInProgress.stateNode) throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
            bubbleProperties(workInProgress);
            return null;
          }
          renderLanes = rootInstanceStackCursor.current;
          current = allocateTag();
          type = getViewConfigForType(type);
          var updatePayload = diffProperties(null, emptyObject, newProps, type.validAttributes);
          _$$_REQUIRE(_dependencyMap[2]).UIManager.createView(current, type.uiViewClassName, renderLanes, updatePayload);
          renderLanes = new ReactNativeFiberHostComponent(current, type, workInProgress);
          instanceCache.set(current, workInProgress);
          instanceProps.set(current, newProps);
          a: for (current = workInProgress.child; null !== current;) {
            if (5 === current.tag || 6 === current.tag) renderLanes._children.push(current.stateNode);else if (4 !== current.tag && null !== current.child) {
              current.child.return = current;
              current = current.child;
              continue;
            }
            if (current === workInProgress) break a;
            for (; null === current.sibling;) {
              if (null === current.return || current.return === workInProgress) break a;
              current = current.return;
            }
            current.sibling.return = current.return;
            current = current.sibling;
          }
          workInProgress.stateNode = renderLanes;
          finalizeInitialChildren(renderLanes) && (workInProgress.flags |= 4);
        }
        bubbleProperties(workInProgress);
        workInProgress.flags &= -16777217;
        return null;
      case 6:
        if (current && null != workInProgress.stateNode) current.memoizedProps !== newProps && (workInProgress.flags |= 4);else {
          if ("string" !== typeof newProps && null === workInProgress.stateNode) throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
          current = rootInstanceStackCursor.current;
          if (!contextStackCursor.current.isInAParentText) throw Error("Text strings must be rendered within a <Text> component.");
          renderLanes = allocateTag();
          _$$_REQUIRE(_dependencyMap[2]).UIManager.createView(renderLanes, "RCTRawText", current, {
            text: newProps
          });
          instanceCache.set(renderLanes, workInProgress);
          workInProgress.stateNode = renderLanes;
        }
        bubbleProperties(workInProgress);
        return null;
      case 13:
        newProps = workInProgress.memoizedState;
        if (null === current || null !== current.memoizedState && null !== current.memoizedState.dehydrated) {
          if (null !== newProps && null !== newProps.dehydrated) {
            if (null === current) {
              throw Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.");
              throw Error("Expected prepareToHydrateHostSuspenseInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.");
            }
            0 === (workInProgress.flags & 128) && (workInProgress.memoizedState = null);
            workInProgress.flags |= 4;
            bubbleProperties(workInProgress);
            type = false;
          } else null !== hydrationErrors && (queueRecoverableErrors(hydrationErrors), hydrationErrors = null), type = true;
          if (!type) {
            if (workInProgress.flags & 256) return popSuspenseHandler(workInProgress), workInProgress;
            popSuspenseHandler(workInProgress);
            return null;
          }
        }
        popSuspenseHandler(workInProgress);
        if (0 !== (workInProgress.flags & 128)) return workInProgress.lanes = renderLanes, workInProgress;
        renderLanes = null !== newProps;
        current = null !== current && null !== current.memoizedState;
        renderLanes && (newProps = workInProgress.child, type = null, null !== newProps.alternate && null !== newProps.alternate.memoizedState && null !== newProps.alternate.memoizedState.cachePool && (type = newProps.alternate.memoizedState.cachePool.pool), updatePayload = null, null !== newProps.memoizedState && null !== newProps.memoizedState.cachePool && (updatePayload = newProps.memoizedState.cachePool.pool), updatePayload !== type && (newProps.flags |= 2048));
        renderLanes !== current && renderLanes && (workInProgress.child.flags |= 8192);
        scheduleRetryEffect(workInProgress, workInProgress.updateQueue);
        bubbleProperties(workInProgress);
        return null;
      case 4:
        return popHostContainer(), bubbleProperties(workInProgress), null;
      case 10:
        return popProvider(workInProgress.type), bubbleProperties(workInProgress), null;
      case 17:
        return bubbleProperties(workInProgress), null;
      case 19:
        pop(suspenseStackCursor);
        type = workInProgress.memoizedState;
        if (null === type) return bubbleProperties(workInProgress), null;
        newProps = 0 !== (workInProgress.flags & 128);
        updatePayload = type.rendering;
        if (null === updatePayload) {
          if (newProps) cutOffTailIfNeeded(type, false);else {
            if (0 !== workInProgressRootExitStatus || null !== current && 0 !== (current.flags & 128)) for (current = workInProgress.child; null !== current;) {
              updatePayload = findFirstSuspended(current);
              if (null !== updatePayload) {
                workInProgress.flags |= 128;
                cutOffTailIfNeeded(type, false);
                current = updatePayload.updateQueue;
                workInProgress.updateQueue = current;
                scheduleRetryEffect(workInProgress, current);
                workInProgress.subtreeFlags = 0;
                current = renderLanes;
                for (renderLanes = workInProgress.child; null !== renderLanes;) resetWorkInProgress(renderLanes, current), renderLanes = renderLanes.sibling;
                push(suspenseStackCursor, suspenseStackCursor.current & 1 | 2);
                return workInProgress.child;
              }
              current = current.sibling;
            }
            null !== type.tail && _$$_REQUIRE(_dependencyMap[3]).unstable_now() > workInProgressRootRenderTargetTime && (workInProgress.flags |= 128, newProps = true, cutOffTailIfNeeded(type, false), workInProgress.lanes = 4194304);
          }
        } else {
          if (!newProps) if (current = findFirstSuspended(updatePayload), null !== current) {
            if (workInProgress.flags |= 128, newProps = true, current = current.updateQueue, workInProgress.updateQueue = current, scheduleRetryEffect(workInProgress, current), cutOffTailIfNeeded(type, true), null === type.tail && "hidden" === type.tailMode && !updatePayload.alternate) return bubbleProperties(workInProgress), null;
          } else 2 * _$$_REQUIRE(_dependencyMap[3]).unstable_now() - type.renderingStartTime > workInProgressRootRenderTargetTime && 536870912 !== renderLanes && (workInProgress.flags |= 128, newProps = true, cutOffTailIfNeeded(type, false), workInProgress.lanes = 4194304);
          type.isBackwards ? (updatePayload.sibling = workInProgress.child, workInProgress.child = updatePayload) : (current = type.last, null !== current ? current.sibling = updatePayload : workInProgress.child = updatePayload, type.last = updatePayload);
        }
        if (null !== type.tail) return workInProgress = type.tail, type.rendering = workInProgress, type.tail = workInProgress.sibling, type.renderingStartTime = _$$_REQUIRE(_dependencyMap[3]).unstable_now(), workInProgress.sibling = null, current = suspenseStackCursor.current, push(suspenseStackCursor, newProps ? current & 1 | 2 : current & 1), workInProgress;
        bubbleProperties(workInProgress);
        return null;
      case 22:
      case 23:
        return popSuspenseHandler(workInProgress), popHiddenContext(), newProps = null !== workInProgress.memoizedState, null !== current ? null !== current.memoizedState !== newProps && (workInProgress.flags |= 8192) : newProps && (workInProgress.flags |= 8192), newProps && 0 !== (workInProgress.mode & 1) ? 0 !== (renderLanes & 536870912) && 0 === (workInProgress.flags & 128) && (bubbleProperties(workInProgress), workInProgress.subtreeFlags & 6 && (workInProgress.flags |= 8192)) : bubbleProperties(workInProgress), renderLanes = workInProgress.updateQueue, null !== renderLanes && scheduleRetryEffect(workInProgress, renderLanes.retryQueue), renderLanes = null, null !== current && null !== current.memoizedState && null !== current.memoizedState.cachePool && (renderLanes = current.memoizedState.cachePool.pool), newProps = null, null !== workInProgress.memoizedState && null !== workInProgress.memoizedState.cachePool && (newProps = workInProgress.memoizedState.cachePool.pool), newProps !== renderLanes && (workInProgress.flags |= 2048), null !== current && pop(resumedCache), null;
      case 24:
        return renderLanes = null, null !== current && (renderLanes = current.memoizedState.cache), workInProgress.memoizedState.cache !== renderLanes && (workInProgress.flags |= 2048), popProvider(CacheContext), bubbleProperties(workInProgress), null;
      case 25:
        return null;
      case 29:
        return null;
    }
    throw Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in React. Please file an issue.");
  }
  function unwindWork(current, workInProgress) {
    switch (workInProgress.tag) {
      case 1:
        return current = workInProgress.flags, current & 65536 ? (workInProgress.flags = current & -65537 | 128, workInProgress) : null;
      case 3:
        return popProvider(CacheContext), popHostContainer(), current = workInProgress.flags, 0 !== (current & 65536) && 0 === (current & 128) ? (workInProgress.flags = current & -65537 | 128, workInProgress) : null;
      case 26:
      case 27:
      case 5:
        return popHostContext(workInProgress), null;
      case 13:
        popSuspenseHandler(workInProgress);
        current = workInProgress.memoizedState;
        if (null !== current && null !== current.dehydrated && null === workInProgress.alternate) throw Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.");
        current = workInProgress.flags;
        return current & 65536 ? (workInProgress.flags = current & -65537 | 128, workInProgress) : null;
      case 19:
        return pop(suspenseStackCursor), null;
      case 4:
        return popHostContainer(), null;
      case 10:
        return popProvider(workInProgress.type), null;
      case 22:
      case 23:
        return popSuspenseHandler(workInProgress), popHiddenContext(), null !== current && pop(resumedCache), current = workInProgress.flags, current & 65536 ? (workInProgress.flags = current & -65537 | 128, workInProgress) : null;
      case 24:
        return popProvider(CacheContext), null;
      case 25:
        return null;
      default:
        return null;
    }
  }
  function unwindInterruptedWork(current, interruptedWork) {
    switch (interruptedWork.tag) {
      case 3:
        popProvider(CacheContext);
        popHostContainer();
        break;
      case 26:
      case 27:
      case 5:
        popHostContext(interruptedWork);
        break;
      case 4:
        popHostContainer();
        break;
      case 13:
        popSuspenseHandler(interruptedWork);
        break;
      case 19:
        pop(suspenseStackCursor);
        break;
      case 10:
        popProvider(interruptedWork.type);
        break;
      case 22:
      case 23:
        popSuspenseHandler(interruptedWork);
        popHiddenContext();
        null !== current && pop(resumedCache);
        break;
      case 24:
        popProvider(CacheContext);
    }
  }
  function commitHookEffectListMount(flags, finishedWork) {
    try {
      var updateQueue = finishedWork.updateQueue,
        lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;
      if (null !== lastEffect) {
        var firstEffect = lastEffect.next;
        updateQueue = firstEffect;
        do {
          if ((updateQueue.tag & flags) === flags) {
            lastEffect = undefined;
            var create$114 = updateQueue.create,
              inst = updateQueue.inst;
            lastEffect = create$114();
            inst.destroy = lastEffect;
          }
          updateQueue = updateQueue.next;
        } while (updateQueue !== firstEffect);
      }
    } catch (error) {
      captureCommitPhaseError(finishedWork, finishedWork.return, error);
    }
  }
  function commitHookEffectListUnmount(flags, finishedWork, nearestMountedAncestor$jscomp$0) {
    try {
      var updateQueue = finishedWork.updateQueue,
        lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;
      if (null !== lastEffect) {
        var firstEffect = lastEffect.next;
        updateQueue = firstEffect;
        do {
          if ((updateQueue.tag & flags) === flags) {
            var inst = updateQueue.inst,
              destroy = inst.destroy;
            if (undefined !== destroy) {
              inst.destroy = undefined;
              lastEffect = finishedWork;
              var nearestMountedAncestor = nearestMountedAncestor$jscomp$0;
              try {
                destroy();
              } catch (error) {
                captureCommitPhaseError(lastEffect, nearestMountedAncestor, error);
              }
            }
          }
          updateQueue = updateQueue.next;
        } while (updateQueue !== firstEffect);
      }
    } catch (error) {
      captureCommitPhaseError(finishedWork, finishedWork.return, error);
    }
  }
  function commitClassCallbacks(finishedWork) {
    var updateQueue = finishedWork.updateQueue;
    if (null !== updateQueue) {
      var instance = finishedWork.stateNode;
      try {
        commitCallbacks(updateQueue, instance);
      } catch (error) {
        captureCommitPhaseError(finishedWork, finishedWork.return, error);
      }
    }
  }
  function safelyCallComponentWillUnmount(current, nearestMountedAncestor, instance) {
    instance.props = resolveClassComponentProps(current.type, current.memoizedProps);
    instance.state = current.memoizedState;
    try {
      instance.componentWillUnmount();
    } catch (error) {
      captureCommitPhaseError(current, nearestMountedAncestor, error);
    }
  }
  function safelyAttachRef(current, nearestMountedAncestor) {
    try {
      var ref = current.ref;
      if (null !== ref) {
        var instance = current.stateNode;
        switch (current.tag) {
          case 26:
          case 27:
          case 5:
            var instanceToUse = getPublicInstance(instance);
            break;
          default:
            instanceToUse = instance;
        }
        "function" === typeof ref ? current.refCleanup = ref(instanceToUse) : ref.current = instanceToUse;
      }
    } catch (error) {
      captureCommitPhaseError(current, nearestMountedAncestor, error);
    }
  }
  function safelyDetachRef(current, nearestMountedAncestor) {
    var ref = current.ref,
      refCleanup = current.refCleanup;
    if (null !== ref) if ("function" === typeof refCleanup) try {
      refCleanup();
    } catch (error) {
      captureCommitPhaseError(current, nearestMountedAncestor, error);
    } finally {
      current.refCleanup = null, current = current.alternate, null != current && (current.refCleanup = null);
    } else if ("function" === typeof ref) try {
      ref(null);
    } catch (error$116) {
      captureCommitPhaseError(current, nearestMountedAncestor, error$116);
    } else ref.current = null;
  }
  function isHostParent(fiber) {
    return 5 === fiber.tag || 3 === fiber.tag || 4 === fiber.tag;
  }
  function getHostSibling(fiber) {
    a: for (;;) {
      for (; null === fiber.sibling;) {
        if (null === fiber.return || isHostParent(fiber.return)) return null;
        fiber = fiber.return;
      }
      fiber.sibling.return = fiber.return;
      for (fiber = fiber.sibling; 5 !== fiber.tag && 6 !== fiber.tag && 18 !== fiber.tag;) {
        if (fiber.flags & 2) continue a;
        if (null === fiber.child || 4 === fiber.tag) continue a;else fiber.child.return = fiber, fiber = fiber.child;
      }
      if (!(fiber.flags & 2)) return fiber.stateNode;
    }
  }
  function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
    var tag = node.tag;
    if (5 === tag || 6 === tag) {
      if (node = node.stateNode, before) {
        if ("number" === typeof parent) throw Error("Container does not support insertBefore operation");
      } else _$$_REQUIRE(_dependencyMap[2]).UIManager.setChildren(parent, ["number" === typeof node ? node : node._nativeTag]);
    } else if (4 !== tag && (node = node.child, null !== node)) for (insertOrAppendPlacementNodeIntoContainer(node, before, parent), node = node.sibling; null !== node;) insertOrAppendPlacementNodeIntoContainer(node, before, parent), node = node.sibling;
  }
  function insertOrAppendPlacementNode(node, before, parent) {
    var tag = node.tag;
    if (5 === tag || 6 === tag) {
      if (node = node.stateNode, before) {
        tag = parent._children;
        var index = tag.indexOf(node);
        0 <= index ? (tag.splice(index, 1), before = tag.indexOf(before), tag.splice(before, 0, node), _$$_REQUIRE(_dependencyMap[2]).UIManager.manageChildren(parent._nativeTag, [index], [before], [], [], [])) : (before = tag.indexOf(before), tag.splice(before, 0, node), _$$_REQUIRE(_dependencyMap[2]).UIManager.manageChildren(parent._nativeTag, [], [], ["number" === typeof node ? node : node._nativeTag], [before], []));
      } else before = "number" === typeof node ? node : node._nativeTag, tag = parent._children, index = tag.indexOf(node), 0 <= index ? (tag.splice(index, 1), tag.push(node), _$$_REQUIRE(_dependencyMap[2]).UIManager.manageChildren(parent._nativeTag, [index], [tag.length - 1], [], [], [])) : (tag.push(node), _$$_REQUIRE(_dependencyMap[2]).UIManager.manageChildren(parent._nativeTag, [], [], [before], [tag.length - 1], []));
    } else if (4 !== tag && (node = node.child, null !== node)) for (insertOrAppendPlacementNode(node, before, parent), node = node.sibling; null !== node;) insertOrAppendPlacementNode(node, before, parent), node = node.sibling;
  }
  var offscreenSubtreeIsHidden = false,
    offscreenSubtreeWasHidden = false,
    PossiblyWeakSet = "function" === typeof WeakSet ? WeakSet : Set,
    nextEffect = null,
    shouldFireAfterActiveInstanceBlur = false;
  function commitBeforeMutationEffects(root, firstChild) {
    for (nextEffect = firstChild; null !== nextEffect;) if (root = nextEffect, firstChild = root.child, 0 !== (root.subtreeFlags & 1028) && null !== firstChild) firstChild.return = root, nextEffect = firstChild;else for (; null !== nextEffect;) {
      root = nextEffect;
      var current = root.alternate;
      firstChild = root.flags;
      switch (root.tag) {
        case 0:
          break;
        case 11:
        case 15:
          break;
        case 1:
          if (0 !== (firstChild & 1024) && null !== current) {
            firstChild = undefined;
            var finishedWork = root,
              prevProps = current.memoizedProps;
            current = current.memoizedState;
            var instance = finishedWork.stateNode;
            try {
              var resolvedPrevProps = resolveClassComponentProps(finishedWork.type, prevProps, finishedWork.elementType === finishedWork.type);
              firstChild = instance.getSnapshotBeforeUpdate(resolvedPrevProps, current);
              instance.__reactInternalSnapshotBeforeUpdate = firstChild;
            } catch (error) {
              captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
          }
          break;
        case 3:
          break;
        case 5:
        case 26:
        case 27:
        case 6:
        case 4:
        case 17:
          break;
        default:
          if (0 !== (firstChild & 1024)) throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
      }
      firstChild = root.sibling;
      if (null !== firstChild) {
        firstChild.return = root.return;
        nextEffect = firstChild;
        break;
      }
      nextEffect = root.return;
    }
    resolvedPrevProps = shouldFireAfterActiveInstanceBlur;
    shouldFireAfterActiveInstanceBlur = false;
    return resolvedPrevProps;
  }
  function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork) {
    var flags = finishedWork.flags;
    switch (finishedWork.tag) {
      case 0:
      case 11:
      case 15:
        recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
        flags & 4 && commitHookEffectListMount(5, finishedWork);
        break;
      case 1:
        recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
        if (flags & 4) if (finishedRoot = finishedWork.stateNode, null === current) try {
          finishedRoot.componentDidMount();
        } catch (error) {
          captureCommitPhaseError(finishedWork, finishedWork.return, error);
        } else {
          var prevProps = resolveClassComponentProps(finishedWork.type, current.memoizedProps);
          current = current.memoizedState;
          try {
            finishedRoot.componentDidUpdate(prevProps, current, finishedRoot.__reactInternalSnapshotBeforeUpdate);
          } catch (error$115) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error$115);
          }
        }
        flags & 64 && commitClassCallbacks(finishedWork);
        flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);
        break;
      case 3:
        recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
        if (flags & 64 && (flags = finishedWork.updateQueue, null !== flags)) {
          finishedRoot = null;
          if (null !== finishedWork.child) switch (finishedWork.child.tag) {
            case 27:
            case 5:
              finishedRoot = getPublicInstance(finishedWork.child.stateNode);
              break;
            case 1:
              finishedRoot = finishedWork.child.stateNode;
          }
          try {
            commitCallbacks(flags, finishedRoot);
          } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
          }
        }
        break;
      case 26:
      case 27:
      case 5:
        recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
        flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);
        break;
      case 12:
        recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
        break;
      case 13:
        recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
        break;
      case 22:
        if (0 !== (finishedWork.mode & 1)) {
          if (prevProps = null !== finishedWork.memoizedState || offscreenSubtreeIsHidden, !prevProps) {
            current = null !== current && null !== current.memoizedState || offscreenSubtreeWasHidden;
            var prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden,
              prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
            offscreenSubtreeIsHidden = prevProps;
            (offscreenSubtreeWasHidden = current) && !prevOffscreenSubtreeWasHidden ? recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, 0 !== (finishedWork.subtreeFlags & 8772)) : recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
            offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;
            offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
          }
        } else recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
        flags & 512 && ("manual" === finishedWork.memoizedProps.mode ? safelyAttachRef(finishedWork, finishedWork.return) : safelyDetachRef(finishedWork, finishedWork.return));
        break;
      default:
        recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
    }
  }
  function detachFiberAfterEffects(fiber) {
    var alternate = fiber.alternate;
    null !== alternate && (fiber.alternate = null, detachFiberAfterEffects(alternate));
    fiber.child = null;
    fiber.deletions = null;
    fiber.sibling = null;
    fiber.stateNode = null;
    fiber.return = null;
    fiber.dependencies = null;
    fiber.memoizedProps = null;
    fiber.memoizedState = null;
    fiber.pendingProps = null;
    fiber.stateNode = null;
    fiber.updateQueue = null;
  }
  var hostParent = null,
    hostParentIsContainer = false;
  function recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, parent) {
    for (parent = parent.child; null !== parent;) commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, parent), parent = parent.sibling;
  }
  function commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, deletedFiber) {
    if (injectedHook && "function" === typeof injectedHook.onCommitFiberUnmount) try {
      injectedHook.onCommitFiberUnmount(rendererID, deletedFiber);
    } catch (err) {}
    switch (deletedFiber.tag) {
      case 26:
      case 27:
      case 5:
        offscreenSubtreeWasHidden || safelyDetachRef(deletedFiber, nearestMountedAncestor);
      case 6:
        var prevHostParent = hostParent,
          prevHostParentIsContainer = hostParentIsContainer;
        hostParent = null;
        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
        hostParent = prevHostParent;
        hostParentIsContainer = prevHostParentIsContainer;
        if (null !== hostParent) if (hostParentIsContainer) try {
          finishedRoot = hostParent, recursivelyUncacheFiberNode(deletedFiber.stateNode), _$$_REQUIRE(_dependencyMap[2]).UIManager.manageChildren(finishedRoot, [], [], [], [], [0]);
        } catch (error) {
          captureCommitPhaseError(deletedFiber, nearestMountedAncestor, error);
        } else try {
          finishedRoot = hostParent;
          var child = deletedFiber.stateNode;
          recursivelyUncacheFiberNode(child);
          var children = finishedRoot._children,
            index = children.indexOf(child);
          children.splice(index, 1);
          _$$_REQUIRE(_dependencyMap[2]).UIManager.manageChildren(finishedRoot._nativeTag, [], [], [], [], [index]);
        } catch (error) {
          captureCommitPhaseError(deletedFiber, nearestMountedAncestor, error);
        }
        break;
      case 18:
        null !== hostParent && shim$1();
        break;
      case 4:
        child = hostParent;
        children = hostParentIsContainer;
        hostParent = deletedFiber.stateNode.containerInfo;
        hostParentIsContainer = true;
        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
        hostParent = child;
        hostParentIsContainer = children;
        break;
      case 0:
      case 11:
      case 14:
      case 15:
        offscreenSubtreeWasHidden || commitHookEffectListUnmount(2, deletedFiber, nearestMountedAncestor);
        offscreenSubtreeWasHidden || commitHookEffectListUnmount(4, deletedFiber, nearestMountedAncestor);
        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
        break;
      case 1:
        offscreenSubtreeWasHidden || (safelyDetachRef(deletedFiber, nearestMountedAncestor), child = deletedFiber.stateNode, "function" === typeof child.componentWillUnmount && safelyCallComponentWillUnmount(deletedFiber, nearestMountedAncestor, child));
        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
        break;
      case 21:
        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
        break;
      case 22:
        offscreenSubtreeWasHidden || safelyDetachRef(deletedFiber, nearestMountedAncestor);
        deletedFiber.mode & 1 ? (offscreenSubtreeWasHidden = (child = offscreenSubtreeWasHidden) || null !== deletedFiber.memoizedState, recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber), offscreenSubtreeWasHidden = child) : recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
        break;
      default:
        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
    }
  }
  function getRetryCache(finishedWork) {
    switch (finishedWork.tag) {
      case 13:
      case 19:
        var retryCache = finishedWork.stateNode;
        null === retryCache && (retryCache = finishedWork.stateNode = new PossiblyWeakSet());
        return retryCache;
      case 22:
        return finishedWork = finishedWork.stateNode, retryCache = finishedWork._retryCache, null === retryCache && (retryCache = finishedWork._retryCache = new PossiblyWeakSet()), retryCache;
      default:
        throw Error("Unexpected Suspense handler tag (" + finishedWork.tag + "). This is a bug in React.");
    }
  }
  function attachSuspenseRetryListeners(finishedWork, wakeables) {
    var retryCache = getRetryCache(finishedWork);
    wakeables.forEach(function (wakeable) {
      var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);
      retryCache.has(wakeable) || (retryCache.add(wakeable), wakeable.then(retry, retry));
    });
  }
  function recursivelyTraverseMutationEffects(root$jscomp$0, parentFiber) {
    var deletions = parentFiber.deletions;
    if (null !== deletions) for (var i = 0; i < deletions.length; i++) {
      var childToDelete = deletions[i],
        root = root$jscomp$0,
        returnFiber = parentFiber,
        parent = returnFiber;
      a: for (; null !== parent;) {
        switch (parent.tag) {
          case 27:
          case 5:
            hostParent = parent.stateNode;
            hostParentIsContainer = false;
            break a;
          case 3:
            hostParent = parent.stateNode.containerInfo;
            hostParentIsContainer = true;
            break a;
          case 4:
            hostParent = parent.stateNode.containerInfo;
            hostParentIsContainer = true;
            break a;
        }
        parent = parent.return;
      }
      if (null === hostParent) throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
      commitDeletionEffectsOnFiber(root, returnFiber, childToDelete);
      hostParent = null;
      hostParentIsContainer = false;
      root = childToDelete.alternate;
      null !== root && (root.return = null);
      childToDelete.return = null;
    }
    if (parentFiber.subtreeFlags & 13878) for (parentFiber = parentFiber.child; null !== parentFiber;) commitMutationEffectsOnFiber(parentFiber, root$jscomp$0), parentFiber = parentFiber.sibling;
  }
  function commitMutationEffectsOnFiber(finishedWork, root) {
    var current = finishedWork.alternate,
      flags = finishedWork.flags;
    switch (finishedWork.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);
        flags & 4 && (commitHookEffectListUnmount(3, finishedWork, finishedWork.return), commitHookEffectListMount(3, finishedWork), commitHookEffectListUnmount(5, finishedWork, finishedWork.return));
        break;
      case 1:
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);
        flags & 512 && (offscreenSubtreeWasHidden || null === current || safelyDetachRef(current, current.return));
        if (flags & 64 && offscreenSubtreeIsHidden && (finishedWork = finishedWork.updateQueue, null !== finishedWork && (flags = finishedWork.callbacks, null !== flags))) {
          var existingHiddenCallbacks = finishedWork.shared.hiddenCallbacks;
          finishedWork.shared.hiddenCallbacks = null === existingHiddenCallbacks ? flags : existingHiddenCallbacks.concat(flags);
        }
        break;
      case 26:
      case 27:
      case 5:
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);
        flags & 512 && (offscreenSubtreeWasHidden || null === current || safelyDetachRef(current, current.return));
        if (flags & 4 && null != finishedWork.stateNode) {
          flags = finishedWork.memoizedProps;
          existingHiddenCallbacks = null !== current ? current.memoizedProps : flags;
          try {
            var instance = finishedWork.stateNode,
              viewConfig = instance.viewConfig;
            instanceProps.set(instance._nativeTag, flags);
            var updatePayload = diffProperties(null, existingHiddenCallbacks, flags, viewConfig.validAttributes);
            null != updatePayload && _$$_REQUIRE(_dependencyMap[2]).UIManager.updateView(instance._nativeTag, viewConfig.uiViewClassName, updatePayload);
          } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
          }
        }
        break;
      case 6:
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);
        if (flags & 4) {
          if (null === finishedWork.stateNode) throw Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
          flags = finishedWork.memoizedProps;
          existingHiddenCallbacks = finishedWork.stateNode;
          try {
            _$$_REQUIRE(_dependencyMap[2]).UIManager.updateView(existingHiddenCallbacks, "RCTRawText", {
              text: flags
            });
          } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
          }
        }
        break;
      case 3:
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);
        break;
      case 4:
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);
        break;
      case 12:
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);
        break;
      case 13:
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);
        finishedWork.child.flags & 8192 && (existingHiddenCallbacks = null !== current && null !== current.memoizedState, null === finishedWork.memoizedState || existingHiddenCallbacks || (globalMostRecentFallbackTime = _$$_REQUIRE(_dependencyMap[3]).unstable_now()));
        flags & 4 && (flags = finishedWork.updateQueue, null !== flags && (finishedWork.updateQueue = null, attachSuspenseRetryListeners(finishedWork, flags)));
        break;
      case 22:
        flags & 512 && (offscreenSubtreeWasHidden || null === current || safelyDetachRef(current, current.return));
        instance = null !== finishedWork.memoizedState;
        viewConfig = null !== current && null !== current.memoizedState;
        if (finishedWork.mode & 1) {
          updatePayload = offscreenSubtreeIsHidden;
          var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
          offscreenSubtreeIsHidden = updatePayload || instance;
          offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || viewConfig;
          recursivelyTraverseMutationEffects(root, finishedWork);
          offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
          offscreenSubtreeIsHidden = updatePayload;
        } else recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);
        root = finishedWork.stateNode;
        root._current = finishedWork;
        root._visibility &= -3;
        root._visibility |= root._pendingVisibility & 2;
        if (flags & 8192 && (root._visibility = instance ? root._visibility & -2 : root._visibility | 1, instance && (root = offscreenSubtreeIsHidden || offscreenSubtreeWasHidden, null === current || viewConfig || root || 0 !== (finishedWork.mode & 1) && recursivelyTraverseDisappearLayoutEffects(finishedWork)), null === finishedWork.memoizedProps || "manual" !== finishedWork.memoizedProps.mode)) a: for (current = null, root = finishedWork;;) {
          if (5 === root.tag) {
            if (null === current) {
              viewConfig = current = root;
              try {
                if (existingHiddenCallbacks = viewConfig.stateNode, instance) {
                  updatePayload = existingHiddenCallbacks;
                  var viewConfig$jscomp$0 = updatePayload.viewConfig;
                  var updatePayload$jscomp$0 = diffProperties(null, emptyObject, {
                    style: {
                      display: "none"
                    }
                  }, viewConfig$jscomp$0.validAttributes);
                  _$$_REQUIRE(_dependencyMap[2]).UIManager.updateView(updatePayload._nativeTag, viewConfig$jscomp$0.uiViewClassName, updatePayload$jscomp$0);
                } else {
                  var instance$jscomp$0 = viewConfig.stateNode,
                    props = viewConfig.memoizedProps,
                    viewConfig$jscomp$1 = instance$jscomp$0.viewConfig,
                    prevProps = assign({}, props, {
                      style: [props.style, {
                        display: "none"
                      }]
                    });
                  var updatePayload$jscomp$1 = diffProperties(null, prevProps, props, viewConfig$jscomp$1.validAttributes);
                  _$$_REQUIRE(_dependencyMap[2]).UIManager.updateView(instance$jscomp$0._nativeTag, viewConfig$jscomp$1.uiViewClassName, updatePayload$jscomp$1);
                }
              } catch (error) {
                captureCommitPhaseError(viewConfig, viewConfig.return, error);
              }
            }
          } else if (6 === root.tag) {
            if (null === current) {
              viewConfig = root;
              try {
                throw Error("Not yet implemented.");
              } catch (error) {
                captureCommitPhaseError(viewConfig, viewConfig.return, error);
              }
            }
          } else if ((22 !== root.tag && 23 !== root.tag || null === root.memoizedState || root === finishedWork) && null !== root.child) {
            root.child.return = root;
            root = root.child;
            continue;
          }
          if (root === finishedWork) break a;
          for (; null === root.sibling;) {
            if (null === root.return || root.return === finishedWork) break a;
            current === root && (current = null);
            root = root.return;
          }
          current === root && (current = null);
          root.sibling.return = root.return;
          root = root.sibling;
        }
        flags & 4 && (flags = finishedWork.updateQueue, null !== flags && (existingHiddenCallbacks = flags.retryQueue, null !== existingHiddenCallbacks && (flags.retryQueue = null, attachSuspenseRetryListeners(finishedWork, existingHiddenCallbacks))));
        break;
      case 19:
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);
        flags & 4 && (flags = finishedWork.updateQueue, null !== flags && (finishedWork.updateQueue = null, attachSuspenseRetryListeners(finishedWork, flags)));
        break;
      case 21:
        break;
      default:
        recursivelyTraverseMutationEffects(root, finishedWork), commitReconciliationEffects(finishedWork);
    }
  }
  function commitReconciliationEffects(finishedWork) {
    var flags = finishedWork.flags;
    if (flags & 2) {
      try {
        a: {
          for (var parent = finishedWork.return; null !== parent;) {
            if (isHostParent(parent)) {
              var JSCompiler_inline_result = parent;
              break a;
            }
            parent = parent.return;
          }
          throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
        }
        switch (JSCompiler_inline_result.tag) {
          case 27:
          case 5:
            var parent$jscomp$0 = JSCompiler_inline_result.stateNode;
            JSCompiler_inline_result.flags & 32 && (JSCompiler_inline_result.flags &= -33);
            var before = getHostSibling(finishedWork);
            insertOrAppendPlacementNode(finishedWork, before, parent$jscomp$0);
            break;
          case 3:
          case 4:
            var parent$117 = JSCompiler_inline_result.stateNode.containerInfo,
              before$118 = getHostSibling(finishedWork);
            insertOrAppendPlacementNodeIntoContainer(finishedWork, before$118, parent$117);
            break;
          default:
            throw Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
        }
      } catch (error) {
        captureCommitPhaseError(finishedWork, finishedWork.return, error);
      }
      finishedWork.flags &= -3;
    }
    flags & 4096 && (finishedWork.flags &= -4097);
  }
  function recursivelyTraverseLayoutEffects(root, parentFiber) {
    if (parentFiber.subtreeFlags & 8772) for (parentFiber = parentFiber.child; null !== parentFiber;) commitLayoutEffectOnFiber(root, parentFiber.alternate, parentFiber), parentFiber = parentFiber.sibling;
  }
  function recursivelyTraverseDisappearLayoutEffects(parentFiber) {
    for (parentFiber = parentFiber.child; null !== parentFiber;) {
      var finishedWork = parentFiber;
      switch (finishedWork.tag) {
        case 0:
        case 11:
        case 14:
        case 15:
          commitHookEffectListUnmount(4, finishedWork, finishedWork.return);
          recursivelyTraverseDisappearLayoutEffects(finishedWork);
          break;
        case 1:
          safelyDetachRef(finishedWork, finishedWork.return);
          var instance = finishedWork.stateNode;
          "function" === typeof instance.componentWillUnmount && safelyCallComponentWillUnmount(finishedWork, finishedWork.return, instance);
          recursivelyTraverseDisappearLayoutEffects(finishedWork);
          break;
        case 26:
        case 27:
        case 5:
          safelyDetachRef(finishedWork, finishedWork.return);
          recursivelyTraverseDisappearLayoutEffects(finishedWork);
          break;
        case 22:
          safelyDetachRef(finishedWork, finishedWork.return);
          null === finishedWork.memoizedState && recursivelyTraverseDisappearLayoutEffects(finishedWork);
          break;
        default:
          recursivelyTraverseDisappearLayoutEffects(finishedWork);
      }
      parentFiber = parentFiber.sibling;
    }
  }
  function recursivelyTraverseReappearLayoutEffects(finishedRoot$jscomp$0, parentFiber, includeWorkInProgressEffects) {
    includeWorkInProgressEffects = includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 8772);
    for (parentFiber = parentFiber.child; null !== parentFiber;) {
      var finishedRoot = finishedRoot$jscomp$0,
        finishedWork = parentFiber,
        flags = finishedWork.flags;
      switch (finishedWork.tag) {
        case 0:
        case 11:
        case 15:
          recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
          commitHookEffectListMount(4, finishedWork);
          break;
        case 1:
          recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
          finishedRoot = finishedWork;
          var instance = finishedRoot.stateNode;
          if ("function" === typeof instance.componentDidMount) try {
            instance.componentDidMount();
          } catch (error) {
            captureCommitPhaseError(finishedRoot, finishedRoot.return, error);
          }
          finishedRoot = finishedWork;
          instance = finishedRoot.updateQueue;
          if (null !== instance) {
            var instance$jscomp$0 = finishedRoot.stateNode;
            try {
              var hiddenCallbacks = instance.shared.hiddenCallbacks;
              if (null !== hiddenCallbacks) for (instance.shared.hiddenCallbacks = null, instance = 0; instance < hiddenCallbacks.length; instance++) callCallback(hiddenCallbacks[instance], instance$jscomp$0);
            } catch (error) {
              captureCommitPhaseError(finishedRoot, finishedRoot.return, error);
            }
          }
          includeWorkInProgressEffects && flags & 64 && commitClassCallbacks(finishedWork);
          safelyAttachRef(finishedWork, finishedWork.return);
          break;
        case 26:
        case 27:
        case 5:
          recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
          safelyAttachRef(finishedWork, finishedWork.return);
          break;
        case 12:
          recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
          break;
        case 13:
          recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
          break;
        case 22:
          null === finishedWork.memoizedState && recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
          safelyAttachRef(finishedWork, finishedWork.return);
          break;
        default:
          recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
      }
      parentFiber = parentFiber.sibling;
    }
  }
  function commitOffscreenPassiveMountEffects(current, finishedWork) {
    var previousCache = null;
    null !== current && null !== current.memoizedState && null !== current.memoizedState.cachePool && (previousCache = current.memoizedState.cachePool.pool);
    current = null;
    null !== finishedWork.memoizedState && null !== finishedWork.memoizedState.cachePool && (current = finishedWork.memoizedState.cachePool.pool);
    current !== previousCache && (null != current && current.refCount++, null != previousCache && releaseCache(previousCache));
  }
  function commitCachePassiveMountEffect(current, finishedWork) {
    current = null;
    null !== finishedWork.alternate && (current = finishedWork.alternate.memoizedState.cache);
    finishedWork = finishedWork.memoizedState.cache;
    finishedWork !== current && (finishedWork.refCount++, null != current && releaseCache(current));
  }
  function recursivelyTraversePassiveMountEffects(root, parentFiber, committedLanes, committedTransitions) {
    if (parentFiber.subtreeFlags & 10256) for (parentFiber = parentFiber.child; null !== parentFiber;) commitPassiveMountOnFiber(root, parentFiber, committedLanes, committedTransitions), parentFiber = parentFiber.sibling;
  }
  function commitPassiveMountOnFiber(finishedRoot, finishedWork, committedLanes, committedTransitions) {
    var flags = finishedWork.flags;
    switch (finishedWork.tag) {
      case 0:
      case 11:
      case 15:
        recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
        flags & 2048 && commitHookEffectListMount(9, finishedWork);
        break;
      case 3:
        recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
        flags & 2048 && (finishedRoot = null, null !== finishedWork.alternate && (finishedRoot = finishedWork.alternate.memoizedState.cache), finishedWork = finishedWork.memoizedState.cache, finishedWork !== finishedRoot && (finishedWork.refCount++, null != finishedRoot && releaseCache(finishedRoot)));
        break;
      case 12:
        if (flags & 2048) {
          recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
          finishedRoot = finishedWork.stateNode;
          try {
            var _finishedWork$memoize2 = finishedWork.memoizedProps,
              id = _finishedWork$memoize2.id,
              onPostCommit = _finishedWork$memoize2.onPostCommit;
            "function" === typeof onPostCommit && onPostCommit(id, null === finishedWork.alternate ? "mount" : "update", finishedRoot.passiveEffectDuration, -0);
          } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
          }
        } else recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
        break;
      case 23:
        break;
      case 22:
        _finishedWork$memoize2 = finishedWork.stateNode;
        null !== finishedWork.memoizedState ? _finishedWork$memoize2._visibility & 4 ? recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions) : finishedWork.mode & 1 ? recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork) : (_finishedWork$memoize2._visibility |= 4, recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions)) : _finishedWork$memoize2._visibility & 4 ? recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions) : (_finishedWork$memoize2._visibility |= 4, recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, 0 !== (finishedWork.subtreeFlags & 10256)));
        flags & 2048 && commitOffscreenPassiveMountEffects(finishedWork.alternate, finishedWork);
        break;
      case 24:
        recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
        flags & 2048 && commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);
        break;
      default:
        recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
    }
  }
  function recursivelyTraverseReconnectPassiveEffects(finishedRoot$jscomp$0, parentFiber, committedLanes$jscomp$0, committedTransitions$jscomp$0, includeWorkInProgressEffects) {
    includeWorkInProgressEffects = includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 10256);
    for (parentFiber = parentFiber.child; null !== parentFiber;) {
      var finishedRoot = finishedRoot$jscomp$0,
        finishedWork = parentFiber,
        committedLanes = committedLanes$jscomp$0,
        committedTransitions = committedTransitions$jscomp$0,
        flags = finishedWork.flags;
      switch (finishedWork.tag) {
        case 0:
        case 11:
        case 15:
          recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects);
          commitHookEffectListMount(8, finishedWork);
          break;
        case 23:
          break;
        case 22:
          var instance = finishedWork.stateNode;
          null !== finishedWork.memoizedState ? instance._visibility & 4 ? recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects) : finishedWork.mode & 1 ? recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork) : (instance._visibility |= 4, recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects)) : (instance._visibility |= 4, recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects));
          includeWorkInProgressEffects && flags & 2048 && commitOffscreenPassiveMountEffects(finishedWork.alternate, finishedWork);
          break;
        case 24:
          recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects);
          includeWorkInProgressEffects && flags & 2048 && commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);
          break;
        default:
          recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects);
      }
      parentFiber = parentFiber.sibling;
    }
  }
  function recursivelyTraverseAtomicPassiveEffects(finishedRoot$jscomp$0, parentFiber) {
    if (parentFiber.subtreeFlags & 10256) for (parentFiber = parentFiber.child; null !== parentFiber;) {
      var finishedRoot = finishedRoot$jscomp$0,
        finishedWork = parentFiber,
        flags = finishedWork.flags;
      switch (finishedWork.tag) {
        case 22:
          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);
          flags & 2048 && commitOffscreenPassiveMountEffects(finishedWork.alternate, finishedWork);
          break;
        case 24:
          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);
          flags & 2048 && commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);
          break;
        default:
          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);
      }
      parentFiber = parentFiber.sibling;
    }
  }
  var suspenseyCommitFlag = 8192;
  function recursivelyAccumulateSuspenseyCommit(parentFiber) {
    if (parentFiber.subtreeFlags & suspenseyCommitFlag) for (parentFiber = parentFiber.child; null !== parentFiber;) accumulateSuspenseyCommitOnFiber(parentFiber), parentFiber = parentFiber.sibling;
  }
  function accumulateSuspenseyCommitOnFiber(fiber) {
    switch (fiber.tag) {
      case 26:
        recursivelyAccumulateSuspenseyCommit(fiber);
        fiber.flags & suspenseyCommitFlag && null !== fiber.memoizedState && shim();
        break;
      case 5:
        recursivelyAccumulateSuspenseyCommit(fiber);
        break;
      case 3:
      case 4:
        recursivelyAccumulateSuspenseyCommit(fiber);
        break;
      case 22:
        if (null === fiber.memoizedState) {
          var current = fiber.alternate;
          null !== current && null !== current.memoizedState ? (current = suspenseyCommitFlag, suspenseyCommitFlag = 16777216, recursivelyAccumulateSuspenseyCommit(fiber), suspenseyCommitFlag = current) : recursivelyAccumulateSuspenseyCommit(fiber);
        }
        break;
      default:
        recursivelyAccumulateSuspenseyCommit(fiber);
    }
  }
  function detachAlternateSiblings(parentFiber) {
    var previousFiber = parentFiber.alternate;
    if (null !== previousFiber && (parentFiber = previousFiber.child, null !== parentFiber)) {
      previousFiber.child = null;
      do previousFiber = parentFiber.sibling, parentFiber.sibling = null, parentFiber = previousFiber; while (null !== parentFiber);
    }
  }
  function recursivelyTraversePassiveUnmountEffects(parentFiber) {
    var deletions = parentFiber.deletions;
    if (0 !== (parentFiber.flags & 16)) {
      if (null !== deletions) for (var i = 0; i < deletions.length; i++) {
        var childToDelete = deletions[i];
        nextEffect = childToDelete;
        commitPassiveUnmountEffectsInsideOfDeletedTree_begin(childToDelete, parentFiber);
      }
      detachAlternateSiblings(parentFiber);
    }
    if (parentFiber.subtreeFlags & 10256) for (parentFiber = parentFiber.child; null !== parentFiber;) commitPassiveUnmountOnFiber(parentFiber), parentFiber = parentFiber.sibling;
  }
  function commitPassiveUnmountOnFiber(finishedWork) {
    switch (finishedWork.tag) {
      case 0:
      case 11:
      case 15:
        recursivelyTraversePassiveUnmountEffects(finishedWork);
        finishedWork.flags & 2048 && commitHookEffectListUnmount(9, finishedWork, finishedWork.return);
        break;
      case 3:
        recursivelyTraversePassiveUnmountEffects(finishedWork);
        break;
      case 12:
        recursivelyTraversePassiveUnmountEffects(finishedWork);
        break;
      case 22:
        var instance = finishedWork.stateNode;
        null !== finishedWork.memoizedState && instance._visibility & 4 && (null === finishedWork.return || 13 !== finishedWork.return.tag) ? (instance._visibility &= -5, recursivelyTraverseDisconnectPassiveEffects(finishedWork)) : recursivelyTraversePassiveUnmountEffects(finishedWork);
        break;
      default:
        recursivelyTraversePassiveUnmountEffects(finishedWork);
    }
  }
  function recursivelyTraverseDisconnectPassiveEffects(parentFiber) {
    var deletions = parentFiber.deletions;
    if (0 !== (parentFiber.flags & 16)) {
      if (null !== deletions) for (var i = 0; i < deletions.length; i++) {
        var childToDelete = deletions[i];
        nextEffect = childToDelete;
        commitPassiveUnmountEffectsInsideOfDeletedTree_begin(childToDelete, parentFiber);
      }
      detachAlternateSiblings(parentFiber);
    }
    for (parentFiber = parentFiber.child; null !== parentFiber;) {
      deletions = parentFiber;
      switch (deletions.tag) {
        case 0:
        case 11:
        case 15:
          commitHookEffectListUnmount(8, deletions, deletions.return);
          recursivelyTraverseDisconnectPassiveEffects(deletions);
          break;
        case 22:
          i = deletions.stateNode;
          i._visibility & 4 && (i._visibility &= -5, recursivelyTraverseDisconnectPassiveEffects(deletions));
          break;
        default:
          recursivelyTraverseDisconnectPassiveEffects(deletions);
      }
      parentFiber = parentFiber.sibling;
    }
  }
  function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(deletedSubtreeRoot, nearestMountedAncestor) {
    for (; null !== nextEffect;) {
      var fiber = nextEffect;
      switch (fiber.tag) {
        case 0:
        case 11:
        case 15:
          commitHookEffectListUnmount(8, fiber, nearestMountedAncestor);
          break;
        case 23:
        case 22:
          if (null !== fiber.memoizedState && null !== fiber.memoizedState.cachePool) {
            var cache = fiber.memoizedState.cachePool.pool;
            null != cache && cache.refCount++;
          }
          break;
        case 24:
          releaseCache(fiber.memoizedState.cache);
      }
      cache = fiber.child;
      if (null !== cache) cache.return = fiber, nextEffect = cache;else a: for (fiber = deletedSubtreeRoot; null !== nextEffect;) {
        cache = nextEffect;
        var sibling = cache.sibling,
          returnFiber = cache.return;
        detachFiberAfterEffects(cache);
        if (cache === fiber) {
          nextEffect = null;
          break a;
        }
        if (null !== sibling) {
          sibling.return = returnFiber;
          nextEffect = sibling;
          break a;
        }
        nextEffect = returnFiber;
      }
    }
  }
  var DefaultAsyncDispatcher = {
      getCacheForType: function getCacheForType(resourceType) {
        var cache = readContext(CacheContext),
          cacheForType = cache.data.get(resourceType);
        undefined === cacheForType && (cacheForType = resourceType(), cache.data.set(resourceType, cacheForType));
        return cacheForType;
      }
    },
    PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map,
    executionContext = 0,
    workInProgressRoot = null,
    workInProgress = null,
    workInProgressRootRenderLanes = 0,
    workInProgressSuspendedReason = 0,
    workInProgressThrownValue = null,
    workInProgressRootDidSkipSuspendedSiblings = false,
    workInProgressRootIsPrerendering = false,
    workInProgressRootDidAttachPingListener = false,
    entangledRenderLanes = 0,
    workInProgressRootExitStatus = 0,
    workInProgressRootSkippedLanes = 0,
    workInProgressRootInterleavedUpdatedLanes = 0,
    workInProgressRootPingedLanes = 0,
    workInProgressDeferredLane = 0,
    workInProgressSuspendedRetryLanes = 0,
    workInProgressRootConcurrentErrors = null,
    workInProgressRootRecoverableErrors = null,
    workInProgressRootDidIncludeRecursiveRenderUpdate = false,
    globalMostRecentFallbackTime = 0,
    workInProgressRootRenderTargetTime = Infinity,
    workInProgressTransitions = null,
    legacyErrorBoundariesThatAlreadyFailed = null,
    rootDoesHavePassiveEffects = false,
    rootWithPendingPassiveEffects = null,
    pendingPassiveEffectsLanes = 0,
    pendingPassiveEffectsRemainingLanes = 0,
    pendingPassiveTransitions = null,
    nestedUpdateCount = 0,
    rootWithNestedUpdates = null;
  function requestUpdateLane(fiber) {
    if (0 === (fiber.mode & 1)) return 2;
    if (0 !== (executionContext & 2) && 0 !== workInProgressRootRenderLanes) return workInProgressRootRenderLanes & -workInProgressRootRenderLanes;
    if (null !== ReactSharedInternals.T) return fiber = currentEntangledLane, 0 !== fiber ? fiber : requestTransitionLane();
    fiber = 0 !== currentUpdatePriority ? currentUpdatePriority : 32;
    return fiber;
  }
  function requestDeferredLane() {
    0 === workInProgressDeferredLane && (workInProgressDeferredLane = 0 !== (workInProgressRootRenderLanes & 536870912) ? 536870912 : claimNextTransitionLane());
    var suspenseHandler = suspenseHandlerStackCursor.current;
    null !== suspenseHandler && (suspenseHandler.flags |= 32);
    return workInProgressDeferredLane;
  }
  function scheduleUpdateOnFiber(root, fiber, lane) {
    if (root === workInProgressRoot && 2 === workInProgressSuspendedReason || null !== root.cancelPendingCommit) prepareFreshStack(root, 0), markRootSuspended(root, workInProgressRootRenderLanes, workInProgressDeferredLane, false);
    markRootUpdated$1(root, lane);
    if (0 === (executionContext & 2) || root !== workInProgressRoot) root === workInProgressRoot && (0 === (executionContext & 2) && (workInProgressRootInterleavedUpdatedLanes |= lane), 4 === workInProgressRootExitStatus && markRootSuspended(root, workInProgressRootRenderLanes, workInProgressDeferredLane, false)), ensureRootIsScheduled(root), 2 === lane && 0 === executionContext && 0 === (fiber.mode & 1) && (workInProgressRootRenderTargetTime = _$$_REQUIRE(_dependencyMap[3]).unstable_now() + 500, flushSyncWorkAcrossRoots_impl(0, true));
  }
  function performWorkOnRoot(root$jscomp$0, lanes, forceSync) {
    if (0 !== (executionContext & 6)) throw Error("Should not already be working.");
    var shouldTimeSlice = !forceSync && 0 === (lanes & 60) && 0 === (lanes & root$jscomp$0.expiredLanes) || checkIfRootIsPrerendering(root$jscomp$0, lanes),
      exitStatus = shouldTimeSlice ? renderRootConcurrent(root$jscomp$0, lanes) : renderRootSync(root$jscomp$0, lanes, true),
      renderWasConcurrent = shouldTimeSlice;
    do {
      if (0 === exitStatus) {
        workInProgressRootIsPrerendering && !shouldTimeSlice && markRootSuspended(root$jscomp$0, lanes, 0, false);
        break;
      } else if (6 === exitStatus) markRootSuspended(root$jscomp$0, lanes, 0, !workInProgressRootDidSkipSuspendedSiblings);else {
        forceSync = root$jscomp$0.current.alternate;
        if (renderWasConcurrent && !isRenderConsistentWithExternalStores(forceSync)) {
          exitStatus = renderRootSync(root$jscomp$0, lanes, false);
          renderWasConcurrent = false;
          continue;
        }
        if (0 !== root$jscomp$0.tag && 2 === exitStatus) {
          renderWasConcurrent = lanes;
          if (root$jscomp$0.errorRecoveryDisabledLanes & renderWasConcurrent) var JSCompiler_inline_result = 0;else JSCompiler_inline_result = root$jscomp$0.pendingLanes & -536870913, JSCompiler_inline_result = 0 !== JSCompiler_inline_result ? JSCompiler_inline_result : JSCompiler_inline_result & 536870912 ? 536870912 : 0;
          if (0 !== JSCompiler_inline_result) {
            lanes = JSCompiler_inline_result;
            a: {
              var root = root$jscomp$0;
              exitStatus = workInProgressRootConcurrentErrors;
              JSCompiler_inline_result = renderRootSync(root, JSCompiler_inline_result, false);
              if (2 !== JSCompiler_inline_result) {
                if (workInProgressRootDidAttachPingListener) {
                  root.errorRecoveryDisabledLanes |= renderWasConcurrent;
                  workInProgressRootInterleavedUpdatedLanes |= renderWasConcurrent;
                  exitStatus = 4;
                  break a;
                }
                renderWasConcurrent = workInProgressRootRecoverableErrors;
                workInProgressRootRecoverableErrors = exitStatus;
                null !== renderWasConcurrent && queueRecoverableErrors(renderWasConcurrent);
              }
              exitStatus = JSCompiler_inline_result;
            }
            renderWasConcurrent = false;
            if (2 !== exitStatus) continue;
          }
        }
        if (1 === exitStatus) {
          prepareFreshStack(root$jscomp$0, 0);
          markRootSuspended(root$jscomp$0, lanes, 0, true);
          break;
        }
        a: {
          shouldTimeSlice = root$jscomp$0;
          renderWasConcurrent = exitStatus;
          switch (renderWasConcurrent) {
            case 0:
            case 1:
              throw Error("Root did not complete. This is a bug in React.");
            case 4:
              if ((lanes & 4194176) === lanes) {
                markRootSuspended(shouldTimeSlice, lanes, workInProgressDeferredLane, !workInProgressRootDidSkipSuspendedSiblings);
                break a;
              }
              break;
            case 2:
              workInProgressRootRecoverableErrors = null;
              break;
            case 3:
            case 5:
              break;
            default:
              throw Error("Unknown root exit status.");
          }
          shouldTimeSlice.finishedWork = forceSync;
          shouldTimeSlice.finishedLanes = lanes;
          if ((lanes & 62914560) === lanes && 3 === renderWasConcurrent && (renderWasConcurrent = globalMostRecentFallbackTime + 300 - _$$_REQUIRE(_dependencyMap[3]).unstable_now(), 10 < renderWasConcurrent)) {
            markRootSuspended(shouldTimeSlice, lanes, workInProgressDeferredLane, !workInProgressRootDidSkipSuspendedSiblings);
            if (0 !== getNextLanes(shouldTimeSlice, 0)) break a;
            shouldTimeSlice.timeoutHandle = scheduleTimeout(commitRootWhenReady.bind(null, shouldTimeSlice, forceSync, workInProgressRootRecoverableErrors, workInProgressTransitions, workInProgressRootDidIncludeRecursiveRenderUpdate, lanes, workInProgressDeferredLane, workInProgressRootInterleavedUpdatedLanes, workInProgressSuspendedRetryLanes, workInProgressRootDidSkipSuspendedSiblings, 2, -0, 0), renderWasConcurrent);
            break a;
          }
          commitRootWhenReady(shouldTimeSlice, forceSync, workInProgressRootRecoverableErrors, workInProgressTransitions, workInProgressRootDidIncludeRecursiveRenderUpdate, lanes, workInProgressDeferredLane, workInProgressRootInterleavedUpdatedLanes, workInProgressSuspendedRetryLanes, workInProgressRootDidSkipSuspendedSiblings, 0, -0, 0);
        }
      }
      break;
    } while (1);
    ensureRootIsScheduled(root$jscomp$0);
  }
  function queueRecoverableErrors(errors) {
    null === workInProgressRootRecoverableErrors ? workInProgressRootRecoverableErrors = errors : workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors, errors);
  }
  function commitRootWhenReady(root, finishedWork, recoverableErrors, transitions, didIncludeRenderPhaseUpdate, lanes, spawnedLane, updatedLanes, suspendedRetryLanes, didSkipSuspendedSiblings, suspendedCommitReason, completedRenderStartTime, completedRenderEndTime) {
    lanes = finishedWork.subtreeFlags;
    (lanes & 8192 || 16785408 === (lanes & 16785408)) && accumulateSuspenseyCommitOnFiber(finishedWork);
    finishedWork = ReactSharedInternals.T;
    lanes = currentUpdatePriority;
    try {
      currentUpdatePriority = 2, ReactSharedInternals.T = null, commitRootImpl(root, recoverableErrors, transitions, didIncludeRenderPhaseUpdate, lanes, spawnedLane, updatedLanes, suspendedRetryLanes, suspendedCommitReason, completedRenderStartTime, completedRenderEndTime);
    } finally {
      ReactSharedInternals.T = finishedWork, currentUpdatePriority = lanes;
    }
  }
  function isRenderConsistentWithExternalStores(finishedWork) {
    for (var node = finishedWork;;) {
      var tag = node.tag;
      if ((0 === tag || 11 === tag || 15 === tag) && node.flags & 16384 && (tag = node.updateQueue, null !== tag && (tag = tag.stores, null !== tag))) for (var i = 0; i < tag.length; i++) {
        var check = tag[i],
          getSnapshot = check.getSnapshot;
        check = check.value;
        try {
          if (!objectIs(getSnapshot(), check)) return false;
        } catch (error) {
          return false;
        }
      }
      tag = node.child;
      if (node.subtreeFlags & 16384 && null !== tag) tag.return = node, node = tag;else {
        if (node === finishedWork) break;
        for (; null === node.sibling;) {
          if (null === node.return || node.return === finishedWork) return true;
          node = node.return;
        }
        node.sibling.return = node.return;
        node = node.sibling;
      }
    }
    return true;
  }
  function markRootSuspended(root, suspendedLanes, spawnedLane, didAttemptEntireTree) {
    suspendedLanes &= ~workInProgressRootPingedLanes;
    suspendedLanes &= ~workInProgressRootInterleavedUpdatedLanes;
    root.suspendedLanes |= suspendedLanes;
    root.pingedLanes &= ~suspendedLanes;
    didAttemptEntireTree && (root.warmLanes |= suspendedLanes);
    didAttemptEntireTree = root.expirationTimes;
    for (var lanes = suspendedLanes; 0 < lanes;) {
      var index$11 = 31 - clz32(lanes),
        lane = 1 << index$11;
      didAttemptEntireTree[index$11] = -1;
      lanes &= ~lane;
    }
    0 !== spawnedLane && markSpawnedDeferredLane(root, spawnedLane, suspendedLanes);
  }
  function resetWorkInProgressStack() {
    if (null !== workInProgress) {
      if (0 === workInProgressSuspendedReason) var interruptedWork = workInProgress.return;else interruptedWork = workInProgress, lastContextDependency = currentlyRenderingFiber = null, resetHooksOnUnwind(interruptedWork), thenableState$1 = null, thenableIndexCounter$1 = 0, interruptedWork = workInProgress;
      for (; null !== interruptedWork;) unwindInterruptedWork(interruptedWork.alternate, interruptedWork), interruptedWork = interruptedWork.return;
      workInProgress = null;
    }
  }
  function prepareFreshStack(root, lanes) {
    root.finishedWork = null;
    root.finishedLanes = 0;
    var timeoutHandle = root.timeoutHandle;
    -1 !== timeoutHandle && (root.timeoutHandle = -1, cancelTimeout(timeoutHandle));
    timeoutHandle = root.cancelPendingCommit;
    null !== timeoutHandle && (root.cancelPendingCommit = null, timeoutHandle());
    resetWorkInProgressStack();
    workInProgressRoot = root;
    workInProgress = timeoutHandle = createWorkInProgress(root.current, null);
    workInProgressRootRenderLanes = lanes;
    workInProgressSuspendedReason = 0;
    workInProgressThrownValue = null;
    workInProgressRootDidSkipSuspendedSiblings = false;
    workInProgressRootIsPrerendering = checkIfRootIsPrerendering(root, lanes);
    workInProgressRootDidAttachPingListener = false;
    workInProgressSuspendedRetryLanes = workInProgressDeferredLane = workInProgressRootPingedLanes = workInProgressRootInterleavedUpdatedLanes = workInProgressRootSkippedLanes = workInProgressRootExitStatus = 0;
    workInProgressRootRecoverableErrors = workInProgressRootConcurrentErrors = null;
    workInProgressRootDidIncludeRecursiveRenderUpdate = false;
    0 !== (lanes & 8) && (lanes |= lanes & 32);
    var allEntangledLanes = root.entangledLanes;
    if (0 !== allEntangledLanes) for (root = root.entanglements, allEntangledLanes &= lanes; 0 < allEntangledLanes;) {
      var index$9 = 31 - clz32(allEntangledLanes),
        lane = 1 << index$9;
      lanes |= root[index$9];
      allEntangledLanes &= ~lane;
    }
    entangledRenderLanes = lanes;
    finishQueueingConcurrentUpdates();
    return timeoutHandle;
  }
  function handleThrow(root, thrownValue) {
    currentlyRenderingFiber$1 = null;
    ReactSharedInternals.H = ContextOnlyDispatcher;
    thrownValue === SuspenseException ? (thrownValue = getSuspendedThenable(), workInProgressSuspendedReason = 3) : thrownValue === SuspenseyCommitException ? (thrownValue = getSuspendedThenable(), workInProgressSuspendedReason = 4) : workInProgressSuspendedReason = thrownValue === SelectiveHydrationException ? 8 : null !== thrownValue && "object" === typeof thrownValue && "function" === typeof thrownValue.then ? 6 : 1;
    workInProgressThrownValue = thrownValue;
    null === workInProgress && (workInProgressRootExitStatus = 1, logUncaughtError(root, createCapturedValueAtFiber(thrownValue, root.current)));
  }
  function pushDispatcher() {
    var prevDispatcher = ReactSharedInternals.H;
    ReactSharedInternals.H = ContextOnlyDispatcher;
    return null === prevDispatcher ? ContextOnlyDispatcher : prevDispatcher;
  }
  function pushAsyncDispatcher() {
    var prevAsyncDispatcher = ReactSharedInternals.A;
    ReactSharedInternals.A = DefaultAsyncDispatcher;
    return prevAsyncDispatcher;
  }
  function renderDidSuspendDelayIfPossible() {
    workInProgressRootExitStatus = 4;
    workInProgressRootDidSkipSuspendedSiblings || (workInProgressRootRenderLanes & 4194176) !== workInProgressRootRenderLanes && null !== suspenseHandlerStackCursor.current || (workInProgressRootIsPrerendering = true);
    0 === (workInProgressRootSkippedLanes & 134217727) && 0 === (workInProgressRootInterleavedUpdatedLanes & 134217727) || null === workInProgressRoot || markRootSuspended(workInProgressRoot, workInProgressRootRenderLanes, workInProgressDeferredLane, false);
  }
  function renderRootSync(root, lanes, shouldYieldForPrerendering) {
    var prevExecutionContext = executionContext;
    executionContext |= 2;
    var prevDispatcher = pushDispatcher(),
      prevAsyncDispatcher = pushAsyncDispatcher();
    if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) workInProgressTransitions = null, prepareFreshStack(root, lanes);
    lanes = false;
    var exitStatus = workInProgressRootExitStatus;
    a: do try {
      if (0 !== workInProgressSuspendedReason && null !== workInProgress) {
        var unitOfWork = workInProgress,
          thrownValue = workInProgressThrownValue;
        switch (workInProgressSuspendedReason) {
          case 8:
            resetWorkInProgressStack();
            exitStatus = 6;
            break a;
          case 3:
          case 2:
          case 6:
            null === suspenseHandlerStackCursor.current && (lanes = true);
            var reason = workInProgressSuspendedReason;
            workInProgressSuspendedReason = 0;
            workInProgressThrownValue = null;
            throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);
            if (shouldYieldForPrerendering && workInProgressRootIsPrerendering) {
              exitStatus = 0;
              break a;
            }
            break;
          default:
            reason = workInProgressSuspendedReason, workInProgressSuspendedReason = 0, workInProgressThrownValue = null, throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);
        }
      }
      workLoopSync();
      exitStatus = workInProgressRootExitStatus;
      break;
    } catch (thrownValue$133) {
      handleThrow(root, thrownValue$133);
    } while (1);
    lanes && root.shellSuspendCounter++;
    lastContextDependency = currentlyRenderingFiber = null;
    executionContext = prevExecutionContext;
    ReactSharedInternals.H = prevDispatcher;
    ReactSharedInternals.A = prevAsyncDispatcher;
    null === workInProgress && (workInProgressRoot = null, workInProgressRootRenderLanes = 0, finishQueueingConcurrentUpdates());
    return exitStatus;
  }
  function workLoopSync() {
    for (; null !== workInProgress;) performUnitOfWork(workInProgress);
  }
  function renderRootConcurrent(root, lanes) {
    var prevExecutionContext = executionContext;
    executionContext |= 2;
    var prevDispatcher = pushDispatcher(),
      prevAsyncDispatcher = pushAsyncDispatcher();
    workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes ? (workInProgressTransitions = null, workInProgressRootRenderTargetTime = _$$_REQUIRE(_dependencyMap[3]).unstable_now() + 500, prepareFreshStack(root, lanes)) : workInProgressRootIsPrerendering = checkIfRootIsPrerendering(root, lanes);
    a: do try {
      if (0 !== workInProgressSuspendedReason && null !== workInProgress) {
        lanes = workInProgress;
        var thrownValue = workInProgressThrownValue;
        b: switch (workInProgressSuspendedReason) {
          case 1:
            workInProgressSuspendedReason = 0;
            workInProgressThrownValue = null;
            throwAndUnwindWorkLoop(root, lanes, thrownValue, 1);
            break;
          case 2:
            if (isThenableResolved(thrownValue)) {
              workInProgressSuspendedReason = 0;
              workInProgressThrownValue = null;
              replaySuspendedUnitOfWork(lanes);
              break;
            }
            lanes = function lanes() {
              2 === workInProgressSuspendedReason && workInProgressRoot === root && (workInProgressSuspendedReason = 7);
              ensureRootIsScheduled(root);
            };
            thrownValue.then(lanes, lanes);
            break a;
          case 3:
            workInProgressSuspendedReason = 7;
            break a;
          case 4:
            workInProgressSuspendedReason = 5;
            break a;
          case 7:
            isThenableResolved(thrownValue) ? (workInProgressSuspendedReason = 0, workInProgressThrownValue = null, replaySuspendedUnitOfWork(lanes)) : (workInProgressSuspendedReason = 0, workInProgressThrownValue = null, throwAndUnwindWorkLoop(root, lanes, thrownValue, 7));
            break;
          case 5:
            var resource = null;
            switch (workInProgress.tag) {
              case 26:
                resource = workInProgress.memoizedState;
              case 5:
              case 27:
                var hostFiber = workInProgress;
                if (resource ? shim(resource) : 1) {
                  workInProgressSuspendedReason = 0;
                  workInProgressThrownValue = null;
                  var sibling = hostFiber.sibling;
                  if (null !== sibling) workInProgress = sibling;else {
                    var returnFiber = hostFiber.return;
                    null !== returnFiber ? (workInProgress = returnFiber, completeUnitOfWork(returnFiber)) : workInProgress = null;
                  }
                  break b;
                }
            }
            workInProgressSuspendedReason = 0;
            workInProgressThrownValue = null;
            throwAndUnwindWorkLoop(root, lanes, thrownValue, 5);
            break;
          case 6:
            workInProgressSuspendedReason = 0;
            workInProgressThrownValue = null;
            throwAndUnwindWorkLoop(root, lanes, thrownValue, 6);
            break;
          case 8:
            resetWorkInProgressStack();
            workInProgressRootExitStatus = 6;
            break a;
          default:
            throw Error("Unexpected SuspendedReason. This is a bug in React.");
        }
      }
      workLoopConcurrent();
      break;
    } catch (thrownValue$135) {
      handleThrow(root, thrownValue$135);
    } while (1);
    lastContextDependency = currentlyRenderingFiber = null;
    ReactSharedInternals.H = prevDispatcher;
    ReactSharedInternals.A = prevAsyncDispatcher;
    executionContext = prevExecutionContext;
    if (null !== workInProgress) return 0;
    workInProgressRoot = null;
    workInProgressRootRenderLanes = 0;
    finishQueueingConcurrentUpdates();
    return workInProgressRootExitStatus;
  }
  function workLoopConcurrent() {
    for (; null !== workInProgress && !_$$_REQUIRE(_dependencyMap[3]).unstable_shouldYield();) performUnitOfWork(workInProgress);
  }
  function performUnitOfWork(unitOfWork) {
    var next = beginWork(unitOfWork.alternate, unitOfWork, entangledRenderLanes);
    unitOfWork.memoizedProps = unitOfWork.pendingProps;
    null === next ? completeUnitOfWork(unitOfWork) : workInProgress = next;
  }
  function replaySuspendedUnitOfWork(unitOfWork) {
    var next = unitOfWork;
    var current = next.alternate;
    switch (next.tag) {
      case 15:
      case 0:
        next = replayFunctionComponent(current, next, next.pendingProps, next.type, undefined, workInProgressRootRenderLanes);
        break;
      case 11:
        next = replayFunctionComponent(current, next, next.pendingProps, next.type.render, next.ref, workInProgressRootRenderLanes);
        break;
      case 5:
        resetHooksOnUnwind(next);
      default:
        unwindInterruptedWork(current, next), next = workInProgress = resetWorkInProgress(next, entangledRenderLanes), next = beginWork(current, next, entangledRenderLanes);
    }
    unitOfWork.memoizedProps = unitOfWork.pendingProps;
    null === next ? completeUnitOfWork(unitOfWork) : workInProgress = next;
  }
  function throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, suspendedReason) {
    lastContextDependency = currentlyRenderingFiber = null;
    resetHooksOnUnwind(unitOfWork);
    thenableState$1 = null;
    thenableIndexCounter$1 = 0;
    var returnFiber = unitOfWork.return;
    try {
      if (throwException(root, returnFiber, unitOfWork, thrownValue, workInProgressRootRenderLanes)) {
        workInProgressRootExitStatus = 1;
        logUncaughtError(root, createCapturedValueAtFiber(thrownValue, root.current));
        workInProgress = null;
        return;
      }
    } catch (error) {
      if (null !== returnFiber) throw workInProgress = returnFiber, error;
      workInProgressRootExitStatus = 1;
      logUncaughtError(root, createCapturedValueAtFiber(thrownValue, root.current));
      workInProgress = null;
      return;
    }
    if (unitOfWork.flags & 32768) {
      if (1 === suspendedReason) root = true;else if (workInProgressRootIsPrerendering || 0 !== (workInProgressRootRenderLanes & 536870912)) root = false;else if (workInProgressRootDidSkipSuspendedSiblings = root = true, 2 === suspendedReason || 3 === suspendedReason || 6 === suspendedReason) suspendedReason = suspenseHandlerStackCursor.current, null !== suspendedReason && 13 === suspendedReason.tag && (suspendedReason.flags |= 16384);
      unwindUnitOfWork(unitOfWork, root);
    } else completeUnitOfWork(unitOfWork);
  }
  function completeUnitOfWork(unitOfWork) {
    var completedWork = unitOfWork;
    do {
      if (0 !== (completedWork.flags & 32768)) {
        unwindUnitOfWork(completedWork, workInProgressRootDidSkipSuspendedSiblings);
        return;
      }
      unitOfWork = completedWork.return;
      var next = completeWork(completedWork.alternate, completedWork, entangledRenderLanes);
      if (null !== next) {
        workInProgress = next;
        return;
      }
      completedWork = completedWork.sibling;
      if (null !== completedWork) {
        workInProgress = completedWork;
        return;
      }
      workInProgress = completedWork = unitOfWork;
    } while (null !== completedWork);
    0 === workInProgressRootExitStatus && (workInProgressRootExitStatus = 5);
  }
  function unwindUnitOfWork(unitOfWork, skipSiblings) {
    do {
      var next = unwindWork(unitOfWork.alternate, unitOfWork);
      if (null !== next) {
        next.flags &= 32767;
        workInProgress = next;
        return;
      }
      next = unitOfWork.return;
      null !== next && (next.flags |= 32768, next.subtreeFlags = 0, next.deletions = null);
      if (!skipSiblings && (unitOfWork = unitOfWork.sibling, null !== unitOfWork)) {
        workInProgress = unitOfWork;
        return;
      }
      workInProgress = unitOfWork = next;
    } while (null !== unitOfWork);
    workInProgressRootExitStatus = 6;
    workInProgress = null;
  }
  function commitRootImpl(root, recoverableErrors, transitions, didIncludeRenderPhaseUpdate, renderPriorityLevel, spawnedLane, updatedLanes, suspendedRetryLanes) {
    do flushPassiveEffects(); while (null !== rootWithPendingPassiveEffects);
    if (0 !== (executionContext & 6)) throw Error("Should not already be working.");
    var finishedWork = root.finishedWork;
    didIncludeRenderPhaseUpdate = root.finishedLanes;
    if (null === finishedWork) return null;
    root.finishedWork = null;
    root.finishedLanes = 0;
    if (finishedWork === root.current) throw Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
    root.callbackNode = null;
    root.callbackPriority = 0;
    root.cancelPendingCommit = null;
    var remainingLanes = finishedWork.lanes | finishedWork.childLanes;
    remainingLanes |= concurrentlyUpdatedLanes;
    markRootFinished(root, didIncludeRenderPhaseUpdate, remainingLanes, spawnedLane, updatedLanes, suspendedRetryLanes);
    root === workInProgressRoot && (workInProgress = workInProgressRoot = null, workInProgressRootRenderLanes = 0);
    0 === (finishedWork.subtreeFlags & 10256) && 0 === (finishedWork.flags & 10256) || rootDoesHavePassiveEffects || (rootDoesHavePassiveEffects = true, pendingPassiveEffectsRemainingLanes = remainingLanes, pendingPassiveTransitions = transitions, scheduleCallback(_$$_REQUIRE(_dependencyMap[3]).unstable_NormalPriority, function () {
      flushPassiveEffects(true);
      return null;
    }));
    transitions = 0 !== (finishedWork.flags & 15990);
    0 !== (finishedWork.subtreeFlags & 15990) || transitions ? (transitions = ReactSharedInternals.T, ReactSharedInternals.T = null, spawnedLane = currentUpdatePriority, currentUpdatePriority = 2, updatedLanes = executionContext, executionContext |= 4, commitBeforeMutationEffects(root, finishedWork), commitMutationEffectsOnFiber(finishedWork, root), root.current = finishedWork, commitLayoutEffectOnFiber(root, finishedWork.alternate, finishedWork), _$$_REQUIRE(_dependencyMap[3]).unstable_requestPaint(), executionContext = updatedLanes, currentUpdatePriority = spawnedLane, ReactSharedInternals.T = transitions) : root.current = finishedWork;
    rootDoesHavePassiveEffects ? (rootDoesHavePassiveEffects = false, rootWithPendingPassiveEffects = root, pendingPassiveEffectsLanes = didIncludeRenderPhaseUpdate) : releaseRootPooledCache(root, remainingLanes);
    remainingLanes = root.pendingLanes;
    0 === remainingLanes && (legacyErrorBoundariesThatAlreadyFailed = null);
    onCommitRoot(finishedWork.stateNode, renderPriorityLevel);
    ensureRootIsScheduled(root);
    if (null !== recoverableErrors) for (renderPriorityLevel = root.onRecoverableError, finishedWork = 0; finishedWork < recoverableErrors.length; finishedWork++) remainingLanes = recoverableErrors[finishedWork], renderPriorityLevel(remainingLanes.value, {
      componentStack: remainingLanes.stack
    });
    0 !== (pendingPassiveEffectsLanes & 3) && 0 !== root.tag && flushPassiveEffects();
    remainingLanes = root.pendingLanes;
    0 !== (didIncludeRenderPhaseUpdate & 4194218) && 0 !== (remainingLanes & 42) ? root === rootWithNestedUpdates ? nestedUpdateCount++ : (nestedUpdateCount = 0, rootWithNestedUpdates = root) : nestedUpdateCount = 0;
    flushSyncWorkAcrossRoots_impl(0, false);
    return null;
  }
  function releaseRootPooledCache(root, remainingLanes) {
    0 === (root.pooledCacheLanes &= remainingLanes) && (remainingLanes = root.pooledCache, null != remainingLanes && (root.pooledCache = null, releaseCache(remainingLanes)));
  }
  function flushPassiveEffects() {
    if (null !== rootWithPendingPassiveEffects) {
      var root = rootWithPendingPassiveEffects,
        remainingLanes = pendingPassiveEffectsRemainingLanes;
      pendingPassiveEffectsRemainingLanes = 0;
      var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes),
        prevTransition = ReactSharedInternals.T,
        previousPriority = currentUpdatePriority;
      try {
        currentUpdatePriority = 32 > renderPriority ? 32 : renderPriority;
        ReactSharedInternals.T = null;
        if (null === rootWithPendingPassiveEffects) var JSCompiler_inline_result = false;else {
          renderPriority = pendingPassiveTransitions;
          pendingPassiveTransitions = null;
          var root$jscomp$0 = rootWithPendingPassiveEffects,
            lanes = pendingPassiveEffectsLanes;
          rootWithPendingPassiveEffects = null;
          pendingPassiveEffectsLanes = 0;
          if (0 !== (executionContext & 6)) throw Error("Cannot flush passive effects while already rendering.");
          var prevExecutionContext = executionContext;
          executionContext |= 4;
          commitPassiveUnmountOnFiber(root$jscomp$0.current);
          commitPassiveMountOnFiber(root$jscomp$0, root$jscomp$0.current, lanes, renderPriority);
          executionContext = prevExecutionContext;
          flushSyncWorkAcrossRoots_impl(0, false);
          if (injectedHook && "function" === typeof injectedHook.onPostCommitFiberRoot) try {
            injectedHook.onPostCommitFiberRoot(rendererID, root$jscomp$0);
          } catch (err) {}
          JSCompiler_inline_result = true;
        }
        return JSCompiler_inline_result;
      } finally {
        currentUpdatePriority = previousPriority, ReactSharedInternals.T = prevTransition, releaseRootPooledCache(root, remainingLanes);
      }
    }
    return false;
  }
  function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
    sourceFiber = createCapturedValueAtFiber(error, sourceFiber);
    sourceFiber = createRootErrorUpdate(rootFiber.stateNode, sourceFiber, 2);
    rootFiber = enqueueUpdate(rootFiber, sourceFiber, 2);
    null !== rootFiber && (markRootUpdated$1(rootFiber, 2), ensureRootIsScheduled(rootFiber));
  }
  function captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error) {
    if (3 === sourceFiber.tag) captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);else for (; null !== nearestMountedAncestor;) {
      if (3 === nearestMountedAncestor.tag) {
        captureCommitPhaseErrorOnRoot(nearestMountedAncestor, sourceFiber, error);
        break;
      } else if (1 === nearestMountedAncestor.tag) {
        var instance = nearestMountedAncestor.stateNode;
        if ("function" === typeof nearestMountedAncestor.type.getDerivedStateFromError || "function" === typeof instance.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(instance))) {
          sourceFiber = createCapturedValueAtFiber(error, sourceFiber);
          error = createClassErrorUpdate(2);
          instance = enqueueUpdate(nearestMountedAncestor, error, 2);
          null !== instance && (initializeClassErrorUpdate(error, instance, nearestMountedAncestor, sourceFiber), markRootUpdated$1(instance, 2), ensureRootIsScheduled(instance));
          break;
        }
      }
      nearestMountedAncestor = nearestMountedAncestor.return;
    }
  }
  function attachPingListener(root, wakeable, lanes) {
    var pingCache = root.pingCache;
    if (null === pingCache) {
      pingCache = root.pingCache = new PossiblyWeakMap();
      var threadIDs = new Set();
      pingCache.set(wakeable, threadIDs);
    } else threadIDs = pingCache.get(wakeable), undefined === threadIDs && (threadIDs = new Set(), pingCache.set(wakeable, threadIDs));
    threadIDs.has(lanes) || (workInProgressRootDidAttachPingListener = true, threadIDs.add(lanes), root = pingSuspendedRoot.bind(null, root, wakeable, lanes), wakeable.then(root, root));
  }
  function pingSuspendedRoot(root, wakeable, pingedLanes) {
    var pingCache = root.pingCache;
    null !== pingCache && pingCache.delete(wakeable);
    root.pingedLanes |= root.suspendedLanes & pingedLanes;
    root.warmLanes &= ~pingedLanes;
    workInProgressRoot === root && (workInProgressRootRenderLanes & pingedLanes) === pingedLanes && (4 === workInProgressRootExitStatus || 3 === workInProgressRootExitStatus && (workInProgressRootRenderLanes & 62914560) === workInProgressRootRenderLanes && 300 > _$$_REQUIRE(_dependencyMap[3]).unstable_now() - globalMostRecentFallbackTime ? 0 === (executionContext & 2) && prepareFreshStack(root, 0) : workInProgressRootPingedLanes |= pingedLanes, workInProgressSuspendedRetryLanes === workInProgressRootRenderLanes && (workInProgressSuspendedRetryLanes = 0));
    ensureRootIsScheduled(root);
  }
  function retryTimedOutBoundary(boundaryFiber, retryLane) {
    0 === retryLane && (retryLane = 0 === (boundaryFiber.mode & 1) ? 2 : claimNextRetryLane());
    boundaryFiber = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);
    null !== boundaryFiber && (markRootUpdated$1(boundaryFiber, retryLane), ensureRootIsScheduled(boundaryFiber));
  }
  function retryDehydratedSuspenseBoundary(boundaryFiber) {
    var suspenseState = boundaryFiber.memoizedState,
      retryLane = 0;
    null !== suspenseState && (retryLane = suspenseState.retryLane);
    retryTimedOutBoundary(boundaryFiber, retryLane);
  }
  function resolveRetryWakeable(boundaryFiber, wakeable) {
    var retryLane = 0;
    switch (boundaryFiber.tag) {
      case 13:
        var retryCache = boundaryFiber.stateNode;
        var suspenseState = boundaryFiber.memoizedState;
        null !== suspenseState && (retryLane = suspenseState.retryLane);
        break;
      case 19:
        retryCache = boundaryFiber.stateNode;
        break;
      case 22:
        retryCache = boundaryFiber.stateNode._retryCache;
        break;
      default:
        throw Error("Pinged unknown suspense boundary type. This is probably a bug in React.");
    }
    null !== retryCache && retryCache.delete(wakeable);
    retryTimedOutBoundary(boundaryFiber, retryLane);
  }
  function scheduleCallback(priorityLevel, callback) {
    return _$$_REQUIRE(_dependencyMap[3]).unstable_scheduleCallback(priorityLevel, callback);
  }
  function FiberNode(tag, pendingProps, key, mode) {
    this.tag = tag;
    this.key = key;
    this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
    this.index = 0;
    this.refCleanup = this.ref = null;
    this.pendingProps = pendingProps;
    this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
    this.mode = mode;
    this.subtreeFlags = this.flags = 0;
    this.deletions = null;
    this.childLanes = this.lanes = 0;
    this.alternate = null;
  }
  function createFiberImplClass(tag, pendingProps, key, mode) {
    return new FiberNode(tag, pendingProps, key, mode);
  }
  function shouldConstruct(Component) {
    Component = Component.prototype;
    return !(!Component || !Component.isReactComponent);
  }
  function createWorkInProgress(current, pendingProps) {
    var workInProgress = current.alternate;
    null === workInProgress ? (workInProgress = createFiberImplClass(current.tag, pendingProps, current.key, current.mode), workInProgress.elementType = current.elementType, workInProgress.type = current.type, workInProgress.stateNode = current.stateNode, workInProgress.alternate = current, current.alternate = workInProgress) : (workInProgress.pendingProps = pendingProps, workInProgress.type = current.type, workInProgress.flags = 0, workInProgress.subtreeFlags = 0, workInProgress.deletions = null);
    workInProgress.flags = current.flags & 31457280;
    workInProgress.childLanes = current.childLanes;
    workInProgress.lanes = current.lanes;
    workInProgress.child = current.child;
    workInProgress.memoizedProps = current.memoizedProps;
    workInProgress.memoizedState = current.memoizedState;
    workInProgress.updateQueue = current.updateQueue;
    pendingProps = current.dependencies;
    workInProgress.dependencies = null === pendingProps ? null : {
      lanes: pendingProps.lanes,
      firstContext: pendingProps.firstContext
    };
    workInProgress.sibling = current.sibling;
    workInProgress.index = current.index;
    workInProgress.ref = current.ref;
    workInProgress.refCleanup = current.refCleanup;
    return workInProgress;
  }
  function resetWorkInProgress(workInProgress, renderLanes) {
    workInProgress.flags &= 31457282;
    var current = workInProgress.alternate;
    null === current ? (workInProgress.childLanes = 0, workInProgress.lanes = renderLanes, workInProgress.child = null, workInProgress.subtreeFlags = 0, workInProgress.memoizedProps = null, workInProgress.memoizedState = null, workInProgress.updateQueue = null, workInProgress.dependencies = null, workInProgress.stateNode = null) : (workInProgress.childLanes = current.childLanes, workInProgress.lanes = current.lanes, workInProgress.child = current.child, workInProgress.subtreeFlags = 0, workInProgress.deletions = null, workInProgress.memoizedProps = current.memoizedProps, workInProgress.memoizedState = current.memoizedState, workInProgress.updateQueue = current.updateQueue, workInProgress.type = current.type, renderLanes = current.dependencies, workInProgress.dependencies = null === renderLanes ? null : {
      lanes: renderLanes.lanes,
      firstContext: renderLanes.firstContext
    });
    return workInProgress;
  }
  function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes) {
    var fiberTag = 0;
    owner = type;
    if ("function" === typeof type) shouldConstruct(type) && (fiberTag = 1);else if ("string" === typeof type) fiberTag = 5;else a: switch (type) {
      case REACT_FRAGMENT_TYPE:
        return createFiberFromFragment(pendingProps.children, mode, lanes, key);
      case REACT_STRICT_MODE_TYPE:
        fiberTag = 8;
        mode |= 8;
        0 !== (mode & 1) && (mode |= 16);
        break;
      case REACT_PROFILER_TYPE:
        return type = createFiberImplClass(12, pendingProps, key, mode | 2), type.elementType = REACT_PROFILER_TYPE, type.lanes = lanes, type;
      case REACT_SUSPENSE_TYPE:
        return type = createFiberImplClass(13, pendingProps, key, mode), type.elementType = REACT_SUSPENSE_TYPE, type.lanes = lanes, type;
      case REACT_SUSPENSE_LIST_TYPE:
        return type = createFiberImplClass(19, pendingProps, key, mode), type.elementType = REACT_SUSPENSE_LIST_TYPE, type.lanes = lanes, type;
      case REACT_OFFSCREEN_TYPE:
        return createFiberFromOffscreen(pendingProps, mode, lanes, key);
      default:
        if ("object" === typeof type && null !== type) switch (type.$$typeof) {
          case REACT_PROVIDER_TYPE:
          case REACT_CONTEXT_TYPE:
            fiberTag = 10;
            break a;
          case REACT_CONSUMER_TYPE:
            fiberTag = 9;
            break a;
          case REACT_FORWARD_REF_TYPE:
            fiberTag = 11;
            break a;
          case REACT_MEMO_TYPE:
            fiberTag = 14;
            break a;
          case REACT_LAZY_TYPE:
            fiberTag = 16;
            owner = null;
            break a;
        }
        fiberTag = 29;
        pendingProps = Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + ((null === type ? "null" : typeof type) + "."));
        owner = null;
    }
    key = createFiberImplClass(fiberTag, pendingProps, key, mode);
    key.elementType = type;
    key.type = owner;
    key.lanes = lanes;
    return key;
  }
  function createFiberFromFragment(elements, mode, lanes, key) {
    elements = createFiberImplClass(7, elements, key, mode);
    elements.lanes = lanes;
    return elements;
  }
  function createFiberFromOffscreen(pendingProps, mode, lanes, key) {
    pendingProps = createFiberImplClass(22, pendingProps, key, mode);
    pendingProps.elementType = REACT_OFFSCREEN_TYPE;
    pendingProps.lanes = lanes;
    var primaryChildInstance = {
      _visibility: 1,
      _pendingVisibility: 1,
      _pendingMarkers: null,
      _retryCache: null,
      _transitions: null,
      _current: null,
      detach: function detach() {
        var fiber = primaryChildInstance._current;
        if (null === fiber) throw Error("Calling Offscreen.detach before instance handle has been set.");
        if (0 === (primaryChildInstance._pendingVisibility & 2)) {
          var root = enqueueConcurrentRenderForLane(fiber, 2);
          null !== root && (primaryChildInstance._pendingVisibility |= 2, scheduleUpdateOnFiber(root, fiber, 2));
        }
      },
      attach: function attach() {
        var fiber = primaryChildInstance._current;
        if (null === fiber) throw Error("Calling Offscreen.detach before instance handle has been set.");
        if (0 !== (primaryChildInstance._pendingVisibility & 2)) {
          var root = enqueueConcurrentRenderForLane(fiber, 2);
          null !== root && (primaryChildInstance._pendingVisibility &= -3, scheduleUpdateOnFiber(root, fiber, 2));
        }
      }
    };
    pendingProps.stateNode = primaryChildInstance;
    return pendingProps;
  }
  function createFiberFromText(content, mode, lanes) {
    content = createFiberImplClass(6, content, null, mode);
    content.lanes = lanes;
    return content;
  }
  function createFiberFromPortal(portal, mode, lanes) {
    mode = createFiberImplClass(4, null !== portal.children ? portal.children : [], portal.key, mode);
    mode.lanes = lanes;
    mode.stateNode = {
      containerInfo: portal.containerInfo,
      pendingChildren: null,
      implementation: portal.implementation
    };
    return mode;
  }
  function FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onUncaughtError, onCaughtError, onRecoverableError, formState) {
    this.tag = tag;
    this.containerInfo = containerInfo;
    this.finishedWork = this.pingCache = this.current = this.pendingChildren = null;
    this.timeoutHandle = -1;
    this.callbackNode = this.next = this.pendingContext = this.context = this.cancelPendingCommit = null;
    this.callbackPriority = 0;
    this.expirationTimes = createLaneMap(-1);
    this.entangledLanes = this.shellSuspendCounter = this.errorRecoveryDisabledLanes = this.finishedLanes = this.expiredLanes = this.warmLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;
    this.entanglements = createLaneMap(0);
    this.hiddenUpdates = createLaneMap(null);
    this.identifierPrefix = identifierPrefix;
    this.onUncaughtError = onUncaughtError;
    this.onCaughtError = onCaughtError;
    this.onRecoverableError = onRecoverableError;
    this.pooledCache = null;
    this.pooledCacheLanes = 0;
    this.formState = formState;
    this.incompleteTransitions = new Map();
  }
  function createPortal$1(children, containerInfo, implementation) {
    var key = 3 < arguments.length && undefined !== arguments[3] ? arguments[3] : null;
    return {
      $$typeof: REACT_PORTAL_TYPE,
      key: null == key ? null : "" + key,
      children: children,
      containerInfo: containerInfo,
      implementation: implementation
    };
  }
  function findHostInstance(component) {
    var fiber = component._reactInternals;
    if (undefined === fiber) {
      if ("function" === typeof component.render) throw Error("Unable to find node on an unmounted component.");
      component = Object.keys(component).join(",");
      throw Error("Argument appears to not be a ReactComponent. Keys: " + component);
    }
    component = findCurrentFiberUsingSlowPath(fiber);
    component = null !== component ? findCurrentHostFiberImpl(component) : null;
    return null === component ? null : getPublicInstance(component.stateNode);
  }
  function updateContainer(element, container, parentComponent, callback) {
    parentComponent = container.current;
    var lane = requestUpdateLane(parentComponent);
    null === container.context ? container.context = emptyContextObject : container.pendingContext = emptyContextObject;
    container = createUpdate(lane);
    container.payload = {
      element: element
    };
    callback = undefined === callback ? null : callback;
    null !== callback && (container.callback = callback);
    element = enqueueUpdate(parentComponent, container, lane);
    null !== element && (scheduleUpdateOnFiber(element, parentComponent, lane), entangleTransitions(element, parentComponent, lane));
    return lane;
  }
  var isomorphicReactPackageVersion = React.version;
  if ("19.0.0" !== isomorphicReactPackageVersion) throw Error('Incompatible React versions: The "react" and "react-native-renderer" packages must have the exact same version. Instead got:\n  - react:                  ' + (isomorphicReactPackageVersion + "\n  - react-native-renderer:  19.0.0\nLearn more: https://react.dev/warnings/version-mismatch"));
  if ("function" !== typeof _$$_REQUIRE(_dependencyMap[2]).ReactFiberErrorDialog.showErrorDialog) throw Error("Expected ReactFiberErrorDialog.showErrorDialog to be a function.");
  function nativeOnUncaughtError(error, errorInfo) {
    false !== _$$_REQUIRE(_dependencyMap[2]).ReactFiberErrorDialog.showErrorDialog({
      errorBoundary: null,
      error: error,
      componentStack: null != errorInfo.componentStack ? errorInfo.componentStack : ""
    }) && reportGlobalError(error);
  }
  function nativeOnCaughtError(error, errorInfo) {
    false !== _$$_REQUIRE(_dependencyMap[2]).ReactFiberErrorDialog.showErrorDialog({
      errorBoundary: errorInfo.errorBoundary,
      error: error,
      componentStack: null != errorInfo.componentStack ? errorInfo.componentStack : ""
    }) && console.error(error);
  }
  function unmountComponentAtNode(containerTag) {
    var root = roots.get(containerTag);
    root && updateContainer(null, root, null, function () {
      roots.delete(containerTag);
    });
  }
  batchedUpdatesImpl = function batchedUpdatesImpl(fn, a) {
    var prevExecutionContext = executionContext;
    executionContext |= 1;
    try {
      return fn(a);
    } finally {
      executionContext = prevExecutionContext, 0 === executionContext && (workInProgressRootRenderTargetTime = _$$_REQUIRE(_dependencyMap[3]).unstable_now() + 500, flushSyncWorkAcrossRoots_impl(0, true));
    }
  };
  var roots = new Map(),
    internals$jscomp$inline_1213 = {
      bundleType: 0,
      version: "19.0.0",
      rendererPackageName: "react-native-renderer",
      currentDispatcherRef: ReactSharedInternals,
      findFiberByHostInstance: getInstanceFromTag,
      reconcilerVersion: "19.0.0"
    };
  null !== extraDevToolsConfig && (internals$jscomp$inline_1213.rendererConfig = extraDevToolsConfig);
  if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
    var hook$jscomp$inline_1551 = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (!hook$jscomp$inline_1551.isDisabled && hook$jscomp$inline_1551.supportsFiber) try {
      rendererID = hook$jscomp$inline_1551.inject(internals$jscomp$inline_1213), injectedHook = hook$jscomp$inline_1551;
    } catch (err) {}
  }
  exports.createPortal = function (children, containerTag) {
    return createPortal$1(children, containerTag, null, 2 < arguments.length && undefined !== arguments[2] ? arguments[2] : null);
  };
  exports.dispatchCommand = function (handle, command, args) {
    var nativeTag = null != handle._nativeTag ? handle._nativeTag : _$$_REQUIRE(_dependencyMap[2]).getNativeTagFromPublicInstance(handle);
    null != nativeTag && (handle = _$$_REQUIRE(_dependencyMap[2]).getNodeFromPublicInstance(handle), null != handle ? nativeFabricUIManager.dispatchCommand(handle, command, args) : _$$_REQUIRE(_dependencyMap[2]).UIManager.dispatchViewManagerCommand(nativeTag, command, args));
  };
  exports.findHostInstance_DEPRECATED = function (componentOrHandle) {
    return null == componentOrHandle ? null : componentOrHandle.canonical && componentOrHandle.canonical.publicInstance ? componentOrHandle.canonical.publicInstance : componentOrHandle._nativeTag ? componentOrHandle : findHostInstance(componentOrHandle);
  };
  exports.findNodeHandle = function (componentOrHandle) {
    if (null == componentOrHandle) return null;
    if ("number" === typeof componentOrHandle) return componentOrHandle;
    if (componentOrHandle._nativeTag) return componentOrHandle._nativeTag;
    if (null != componentOrHandle.canonical && null != componentOrHandle.canonical.nativeTag) return componentOrHandle.canonical.nativeTag;
    var nativeTag = _$$_REQUIRE(_dependencyMap[2]).getNativeTagFromPublicInstance(componentOrHandle);
    if (nativeTag) return nativeTag;
    componentOrHandle = findHostInstance(componentOrHandle);
    return null == componentOrHandle ? componentOrHandle : null != componentOrHandle._nativeTag ? componentOrHandle._nativeTag : _$$_REQUIRE(_dependencyMap[2]).getNativeTagFromPublicInstance(componentOrHandle);
  };
  exports.getInspectorDataForInstance = getInspectorDataForInstance;
  exports.isChildPublicInstance = function () {
    throw Error("isChildPublicInstance() is not available in production.");
  };
  exports.render = function (element, containerTag, callback, options) {
    var root = roots.get(containerTag);
    if (!root) {
      root = nativeOnUncaughtError;
      var onCaughtError = nativeOnCaughtError,
        onRecoverableError = defaultOnRecoverableError;
      options && undefined !== options.onUncaughtError && (root = options.onUncaughtError);
      options && undefined !== options.onCaughtError && (onCaughtError = options.onCaughtError);
      options && undefined !== options.onRecoverableError && (onRecoverableError = options.onRecoverableError);
      options = new FiberRootNode(containerTag, 0, false, "", root, onCaughtError, onRecoverableError, null);
      root = createFiberImplClass(3, null, null, 0);
      options.current = root;
      root.stateNode = options;
      onCaughtError = createCache();
      onCaughtError.refCount++;
      options.pooledCache = onCaughtError;
      onCaughtError.refCount++;
      root.memoizedState = {
        element: null,
        isDehydrated: false,
        cache: onCaughtError
      };
      initializeUpdateQueue(root);
      root = options;
      roots.set(containerTag, root);
    }
    updateContainer(element, root, null, callback);
    a: if (element = root.current, element.child) switch (element.child.tag) {
      case 27:
      case 5:
        element = getPublicInstance(element.child.stateNode);
        break a;
      default:
        element = element.child.stateNode;
    } else element = null;
    return element;
  };
  exports.sendAccessibilityEvent = function (handle, eventType) {
    var nativeTag = null != handle._nativeTag ? handle._nativeTag : _$$_REQUIRE(_dependencyMap[2]).getNativeTagFromPublicInstance(handle);
    null != nativeTag && (handle = _$$_REQUIRE(_dependencyMap[2]).getNodeFromPublicInstance(handle), null != handle ? nativeFabricUIManager.sendAccessibilityEvent(handle, eventType) : _$$_REQUIRE(_dependencyMap[2]).legacySendAccessibilityEvent(nativeTag, eventType));
  };
  exports.unmountComponentAtNode = unmountComponentAtNode;
  exports.unmountComponentAtNodeAndRemoveContainer = function (containerTag) {
    unmountComponentAtNode(containerTag);
    _$$_REQUIRE(_dependencyMap[2]).UIManager.removeRootView(containerTag);
  };
  exports.unstable_batchedUpdates = batchedUpdates$1;
},274,[61,119,261,270]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _StyleSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _View = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[5]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[6]);
  var _excluded = ["animating", "color", "hidesWhenStopped", "onLayout", "size", "style"];
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var PlatformActivityIndicator = _Platform.default.OS === 'android' ? _$$_REQUIRE(_dependencyMap[7]).default : _$$_REQUIRE(_dependencyMap[8]).default;
  var GRAY = '#999999';
  var ActivityIndicator = function ActivityIndicator(_ref, forwardedRef) {
    var _ref$animating = _ref.animating,
      animating = _ref$animating === undefined ? true : _ref$animating,
      _ref$color = _ref.color,
      color = _ref$color === undefined ? _Platform.default.OS === 'ios' ? GRAY : null : _ref$color,
      _ref$hidesWhenStopped = _ref.hidesWhenStopped,
      hidesWhenStopped = _ref$hidesWhenStopped === undefined ? true : _ref$hidesWhenStopped,
      onLayout = _ref.onLayout,
      _ref$size = _ref.size,
      size = _ref$size === undefined ? 'small' : _ref$size,
      style = _ref.style,
      restProps = (0, _objectWithoutProperties2.default)(_ref, _excluded);
    var sizeStyle;
    var sizeProp;
    switch (size) {
      case 'small':
        sizeStyle = styles.sizeSmall;
        sizeProp = 'small';
        break;
      case 'large':
        sizeStyle = styles.sizeLarge;
        sizeProp = 'large';
        break;
      default:
        sizeStyle = {
          height: size,
          width: size
        };
        break;
    }
    var nativeProps = Object.assign({
      animating: animating,
      color: color,
      hidesWhenStopped: hidesWhenStopped
    }, restProps, {
      ref: forwardedRef,
      style: sizeStyle,
      size: sizeProp
    });
    var androidProps = {
      styleAttr: 'Normal',
      indeterminate: true
    };
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_View.default, {
      onLayout: onLayout,
      style: _StyleSheet.default.compose(styles.container, style),
      children: _Platform.default.OS === 'android' ? /*#__PURE__*/(0, _jsxRuntime.jsx)(PlatformActivityIndicator, Object.assign({}, nativeProps, androidProps)) : /*#__PURE__*/(0, _jsxRuntime.jsx)(PlatformActivityIndicator, Object.assign({}, nativeProps))
    });
  };
  var ActivityIndicatorWithRef = React.forwardRef(ActivityIndicator);
  ActivityIndicatorWithRef.displayName = 'ActivityIndicator';
  var styles = _StyleSheet.default.create({
    container: {
      alignItems: 'center',
      justifyContent: 'center'
    },
    sizeSmall: {
      width: 20,
      height: 20
    },
    sizeLarge: {
      width: 36,
      height: 36
    }
  });
  var _default = exports.default = ActivityIndicatorWithRef;
},275,[1,203,253,33,248,119,251,276,282]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _ProgressBarAndroidNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[3]);
  var _excluded = ["styleAttr", "indeterminate", "animating"];
  var React = _$$_REQUIRE(_dependencyMap[4]);
  var ProgressBarAndroidWithForwardedRef = React.forwardRef(function ProgressBarAndroid(_ref, forwardedRef) {
    var _ref$styleAttr = _ref.styleAttr,
      styleAttr = _ref$styleAttr === undefined ? 'Normal' : _ref$styleAttr,
      _ref$indeterminate = _ref.indeterminate,
      indeterminate = _ref$indeterminate === undefined ? true : _ref$indeterminate,
      _ref$animating = _ref.animating,
      animating = _ref$animating === undefined ? true : _ref$animating,
      restProps = (0, _objectWithoutProperties2.default)(_ref, _excluded);
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBarAndroidNativeComponent.default, Object.assign({
      styleAttr: styleAttr,
      indeterminate: indeterminate,
      animating: animating
    }, restProps, {
      ref: forwardedRef
    }));
  });
  var _default = exports.default = ProgressBarAndroidWithForwardedRef;
},276,[1,203,277,251,119]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _ProgressBarAndroidNativeComponent = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_ProgressBarAndroidNativeComponent).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _ProgressBarAndroidNativeComponent[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _ProgressBarAndroidNativeComponent[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _ProgressBarAndroidNativeComponent.default;
},277,[278]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var nativeComponentName = 'AndroidProgressBar';
  export var __INTERNAL_VIEW_CONFIG = {
    uiViewClassName: "AndroidProgressBar",
    validAttributes: {
      styleAttr: true,
      typeAttr: true,
      indeterminate: true,
      progress: true,
      animating: true,
      color: {
        process: _$$_REQUIRE(_dependencyMap[2]).default
      },
      testID: true
    }
  };
  export default _$$_REQUIRE(_dependencyMap[3]).get(nativeComponentName, function () {
    return __INTERNAL_VIEW_CONFIG;
  });
},278,[1,279,89,86]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _requireNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _UIManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  function codegenNativeComponent(componentName, options) {
    if (global.RN$Bridgeless === true && false) {
      console.warn(`Codegen didn't run for ${componentName}. This will be an error in the future. Make sure you are using @react-native/babel-preset when building your JavaScript code.`);
    }
    var componentNameInUse = options && options.paperComponentName != null ? options.paperComponentName : componentName;
    if (options != null && options.paperComponentNameDeprecated != null) {
      if (_UIManager.default.hasViewManagerConfig(componentName)) {
        componentNameInUse = componentName;
      } else if (options.paperComponentNameDeprecated != null && _UIManager.default.hasViewManagerConfig(options.paperComponentNameDeprecated)) {
        componentNameInUse = options.paperComponentNameDeprecated;
      } else {
        var _options$paperCompone;
        throw new Error(`Failed to find native component for either ${componentName} or ${(_options$paperCompone = options.paperComponentNameDeprecated) != null ? _options$paperCompone : '(unknown)'}`);
      }
    }
    return (0, _requireNativeComponent.default)(componentNameInUse);
  }
  var _default = exports.default = codegenNativeComponent;
},279,[1,280,44]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var requireNativeComponent = function requireNativeComponent(uiViewClassName) {
    return _$$_REQUIRE(_dependencyMap[0]).default(uiViewClassName, function () {
      return _$$_REQUIRE(_dependencyMap[1]).default(uiViewClassName);
    });
  };
  var _default = exports.default = requireNativeComponent;
},280,[281,87]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var register = _$$_REQUIRE(_dependencyMap[0]).ReactNativeViewConfigRegistry.register;
  var createReactNativeComponentClass = function createReactNativeComponentClass(name, callback) {
    return register(name, callback);
  };
  var _default = exports.default = createReactNativeComponentClass;
},281,[261]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _ActivityIndicatorViewNativeComponent = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_ActivityIndicatorViewNativeComponent).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _ActivityIndicatorViewNativeComponent[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _ActivityIndicatorViewNativeComponent[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _ActivityIndicatorViewNativeComponent.default;
},282,[283]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var nativeComponentName = 'RCTActivityIndicatorView';
  export var __INTERNAL_VIEW_CONFIG = {
    uiViewClassName: "RCTActivityIndicatorView",
    validAttributes: {
      hidesWhenStopped: true,
      animating: true,
      color: {
        process: _$$_REQUIRE(_dependencyMap[2]).default
      },
      size: true
    }
  };
  export default _$$_REQUIRE(_dependencyMap[3]).get(nativeComponentName, function () {
    return __INTERNAL_VIEW_CONFIG;
  });
},283,[1,279,89,86]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _StyleSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _TouchableNativeFeedback = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _TouchableOpacity = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _View = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[9]);
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var Touchable = _Platform.default.OS === 'android' ? _TouchableNativeFeedback.default : _TouchableOpacity.default;
  var Button = React.forwardRef(function (props, ref) {
    var _accessibilityState2, _accessibilityState3;
    var accessibilityLabel = props.accessibilityLabel,
      accessibilityState = props.accessibilityState,
      ariaBusy = props['aria-busy'],
      ariaChecked = props['aria-checked'],
      ariaDisabled = props['aria-disabled'],
      ariaExpanded = props['aria-expanded'],
      ariaLabel = props['aria-label'],
      ariaSelected = props['aria-selected'],
      importantForAccessibility = props.importantForAccessibility,
      color = props.color,
      onPress = props.onPress,
      touchSoundDisabled = props.touchSoundDisabled,
      title = props.title,
      hasTVPreferredFocus = props.hasTVPreferredFocus,
      nextFocusDown = props.nextFocusDown,
      nextFocusForward = props.nextFocusForward,
      nextFocusLeft = props.nextFocusLeft,
      nextFocusRight = props.nextFocusRight,
      nextFocusUp = props.nextFocusUp,
      testID = props.testID,
      accessible = props.accessible,
      accessibilityActions = props.accessibilityActions,
      accessibilityHint = props.accessibilityHint,
      accessibilityLanguage = props.accessibilityLanguage,
      onAccessibilityAction = props.onAccessibilityAction;
    var buttonStyles = [styles.button];
    var textStyles = [styles.text];
    if (color) {
      if (_Platform.default.OS === 'ios') {
        textStyles.push({
          color: color
        });
      } else {
        buttonStyles.push({
          backgroundColor: color
        });
      }
    }
    var _accessibilityState = {
      busy: ariaBusy != null ? ariaBusy : accessibilityState == null ? undefined : accessibilityState.busy,
      checked: ariaChecked != null ? ariaChecked : accessibilityState == null ? undefined : accessibilityState.checked,
      disabled: ariaDisabled != null ? ariaDisabled : accessibilityState == null ? undefined : accessibilityState.disabled,
      expanded: ariaExpanded != null ? ariaExpanded : accessibilityState == null ? undefined : accessibilityState.expanded,
      selected: ariaSelected != null ? ariaSelected : accessibilityState == null ? undefined : accessibilityState.selected
    };
    var disabled = props.disabled != null ? props.disabled : (_accessibilityState2 = _accessibilityState) == null ? undefined : _accessibilityState2.disabled;
    _accessibilityState = disabled !== ((_accessibilityState3 = _accessibilityState) == null ? undefined : _accessibilityState3.disabled) ? Object.assign({}, _accessibilityState, {
      disabled: disabled
    }) : _accessibilityState;
    if (disabled) {
      buttonStyles.push(styles.buttonDisabled);
      textStyles.push(styles.textDisabled);
    }
    (0, _invariant.default)(typeof title === 'string', 'The title prop of a Button must be a string');
    var formattedTitle = _Platform.default.OS === 'android' ? title.toUpperCase() : title;
    var _importantForAccessibility = importantForAccessibility === 'no' ? 'no-hide-descendants' : importantForAccessibility;
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(Touchable, {
      accessible: accessible,
      accessibilityActions: accessibilityActions,
      onAccessibilityAction: onAccessibilityAction,
      accessibilityLabel: ariaLabel || accessibilityLabel,
      accessibilityHint: accessibilityHint,
      accessibilityLanguage: accessibilityLanguage,
      accessibilityRole: "button",
      accessibilityState: _accessibilityState,
      importantForAccessibility: _importantForAccessibility,
      hasTVPreferredFocus: hasTVPreferredFocus,
      nextFocusDown: nextFocusDown,
      nextFocusForward: nextFocusForward,
      nextFocusLeft: nextFocusLeft,
      nextFocusRight: nextFocusRight,
      nextFocusUp: nextFocusUp,
      testID: testID,
      disabled: disabled,
      onPress: onPress,
      touchSoundDisabled: touchSoundDisabled,
      ref: ref,
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_View.default, {
        style: buttonStyles,
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Text.default, {
          style: textStyles,
          disabled: disabled,
          children: formattedTitle
        })
      })
    });
  });
  Button.displayName = 'Button';
  var styles = _StyleSheet.default.create({
    button: _Platform.default.select({
      ios: {},
      android: {
        elevation: 4,
        backgroundColor: '#2196F3',
        borderRadius: 2
      }
    }),
    text: Object.assign({
      textAlign: 'center',
      margin: 8
    }, _Platform.default.select({
      ios: {
        color: '#007AFF',
        fontSize: 18
      },
      android: {
        color: 'white',
        fontWeight: '500'
      }
    })),
    buttonDisabled: _Platform.default.select({
      ios: {},
      android: {
        elevation: 0,
        backgroundColor: '#dfdfdf'
      }
    }),
    textDisabled: _Platform.default.select({
      ios: {
        color: '#cdcdcd'
      },
      android: {
        color: '#a1a1a1'
      }
    })
  });
  var _default = exports.default = Button;
},284,[1,253,285,33,297,298,248,20,119,251]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var PressabilityDebug = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));
  var _usePressability = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _flattenStyle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _processColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _TextAncestor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));
  var React = _react;
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[10]);
  var _excluded = ["accessible", "accessibilityLabel", "accessibilityState", "allowFontScaling", "aria-busy", "aria-checked", "aria-disabled", "aria-expanded", "aria-label", "aria-selected", "children", "ellipsizeMode", "disabled", "id", "nativeID", "numberOfLines", "onLongPress", "onPress", "onPressIn", "onPressOut", "onResponderGrant", "onResponderMove", "onResponderRelease", "onResponderTerminate", "onResponderTerminationRequest", "onStartShouldSetResponder", "pressRetentionOffset", "selectable", "selectionColor", "suppressHighlighting", "style"];
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var Text = React.forwardRef(function (_ref, forwardedRef) {
    var _accessibilityState2;
    var accessible = _ref.accessible,
      accessibilityLabel = _ref.accessibilityLabel,
      accessibilityState = _ref.accessibilityState,
      allowFontScaling = _ref.allowFontScaling,
      ariaBusy = _ref['aria-busy'],
      ariaChecked = _ref['aria-checked'],
      ariaDisabled = _ref['aria-disabled'],
      ariaExpanded = _ref['aria-expanded'],
      ariaLabel = _ref['aria-label'],
      ariaSelected = _ref['aria-selected'],
      children = _ref.children,
      ellipsizeMode = _ref.ellipsizeMode,
      disabled = _ref.disabled,
      id = _ref.id,
      nativeID = _ref.nativeID,
      numberOfLines = _ref.numberOfLines,
      onLongPress = _ref.onLongPress,
      onPress = _ref.onPress,
      onPressIn = _ref.onPressIn,
      onPressOut = _ref.onPressOut,
      onResponderGrant = _ref.onResponderGrant,
      onResponderMove = _ref.onResponderMove,
      onResponderRelease = _ref.onResponderRelease,
      onResponderTerminate = _ref.onResponderTerminate,
      onResponderTerminationRequest = _ref.onResponderTerminationRequest,
      onStartShouldSetResponder = _ref.onStartShouldSetResponder,
      pressRetentionOffset = _ref.pressRetentionOffset,
      selectable = _ref.selectable,
      selectionColor = _ref.selectionColor,
      suppressHighlighting = _ref.suppressHighlighting,
      style = _ref.style,
      restProps = (0, _objectWithoutProperties2.default)(_ref, _excluded);
    var _accessibilityLabel = ariaLabel != null ? ariaLabel : accessibilityLabel;
    var _accessibilityState = accessibilityState;
    if (ariaBusy != null || ariaChecked != null || ariaDisabled != null || ariaExpanded != null || ariaSelected != null) {
      if (_accessibilityState != null) {
        _accessibilityState = {
          busy: ariaBusy != null ? ariaBusy : _accessibilityState.busy,
          checked: ariaChecked != null ? ariaChecked : _accessibilityState.checked,
          disabled: ariaDisabled != null ? ariaDisabled : _accessibilityState.disabled,
          expanded: ariaExpanded != null ? ariaExpanded : _accessibilityState.expanded,
          selected: ariaSelected != null ? ariaSelected : _accessibilityState.selected
        };
      } else {
        _accessibilityState = {
          busy: ariaBusy,
          checked: ariaChecked,
          disabled: ariaDisabled,
          expanded: ariaExpanded,
          selected: ariaSelected
        };
      }
    }
    var _accessibilityStateDisabled = (_accessibilityState2 = _accessibilityState) == null ? undefined : _accessibilityState2.disabled;
    var _disabled = disabled != null ? disabled : _accessibilityStateDisabled;
    var isPressable = (onPress != null || onLongPress != null || onStartShouldSetResponder != null) && _disabled !== true;
    var _selectionColor = selectionColor != null ? (0, _processColor.default)(selectionColor) : undefined;
    var _style = style;
    var _numberOfLines = numberOfLines;
    if (_numberOfLines != null && !(_numberOfLines >= 0)) {
      _numberOfLines = 0;
    }
    var _selectable = selectable;
    var processedStyle = (0, _flattenStyle.default)(_style);
    if (processedStyle != null) {
      var overrides = null;
      if (typeof processedStyle.fontWeight === 'number') {
        overrides = overrides || {};
        overrides.fontWeight = processedStyle.fontWeight.toString();
      }
      if (processedStyle.userSelect != null) {
        _selectable = userSelectToSelectableMap[processedStyle.userSelect];
        overrides = overrides || {};
        overrides.userSelect = undefined;
      }
      if (processedStyle.verticalAlign != null) {
        overrides = overrides || {};
        overrides.textAlignVertical = verticalAlignToTextAlignVerticalMap[processedStyle.verticalAlign];
        overrides.verticalAlign = undefined;
      }
      if (overrides != null) {
        _style = [_style, overrides];
      }
    }
    var _nativeID = id != null ? id : nativeID;
    var hasTextAncestor = (0, _react.useContext)(_TextAncestor.default);
    if (hasTextAncestor) {
      if (isPressable) {
        return /*#__PURE__*/(0, _jsxRuntime.jsx)(NativePressableVirtualText, {
          ref: forwardedRef,
          textProps: Object.assign({}, restProps, {
            accessibilityLabel: _accessibilityLabel,
            accessibilityState: _accessibilityState,
            nativeID: _nativeID,
            numberOfLines: _numberOfLines,
            selectable: _selectable,
            selectionColor: _selectionColor,
            style: _style,
            disabled: disabled,
            children: children
          }),
          textPressabilityProps: {
            onLongPress: onLongPress,
            onPress: onPress,
            onPressIn: onPressIn,
            onPressOut: onPressOut,
            onResponderGrant: onResponderGrant,
            onResponderMove: onResponderMove,
            onResponderRelease: onResponderRelease,
            onResponderTerminate: onResponderTerminate,
            onResponderTerminationRequest: onResponderTerminationRequest,
            onStartShouldSetResponder: onStartShouldSetResponder,
            pressRetentionOffset: pressRetentionOffset,
            suppressHighlighting: suppressHighlighting
          }
        });
      }
      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_$$_REQUIRE(_dependencyMap[11]).NativeVirtualText, Object.assign({}, restProps, {
        accessibilityLabel: _accessibilityLabel,
        accessibilityState: _accessibilityState,
        nativeID: _nativeID,
        numberOfLines: _numberOfLines,
        ref: forwardedRef,
        selectable: _selectable,
        selectionColor: _selectionColor,
        style: _style,
        disabled: disabled,
        children: children
      }));
    }
    if (_disabled !== _accessibilityStateDisabled && (_disabled != null && _disabled !== false || _accessibilityStateDisabled != null && _accessibilityStateDisabled !== false)) {
      _accessibilityState = Object.assign({}, _accessibilityState, {
        disabled: _disabled
      });
    }
    var _accessible = _Platform.default.select({
      ios: accessible !== false,
      android: accessible == null ? onPress != null || onLongPress != null : accessible,
      default: accessible
    });
    var nativeText = null;
    if (isPressable) {
      nativeText = /*#__PURE__*/(0, _jsxRuntime.jsx)(NativePressableText, {
        ref: forwardedRef,
        textProps: Object.assign({}, restProps, {
          accessibilityLabel: _accessibilityLabel,
          accessibilityState: _accessibilityState,
          accessible: _accessible,
          allowFontScaling: allowFontScaling !== false,
          disabled: _disabled,
          ellipsizeMode: ellipsizeMode != null ? ellipsizeMode : 'tail',
          nativeID: _nativeID,
          numberOfLines: _numberOfLines,
          selectable: _selectable,
          selectionColor: _selectionColor,
          style: _style,
          children: children
        }),
        textPressabilityProps: {
          onLongPress: onLongPress,
          onPress: onPress,
          onPressIn: onPressIn,
          onPressOut: onPressOut,
          onResponderGrant: onResponderGrant,
          onResponderMove: onResponderMove,
          onResponderRelease: onResponderRelease,
          onResponderTerminate: onResponderTerminate,
          onResponderTerminationRequest: onResponderTerminationRequest,
          onStartShouldSetResponder: onStartShouldSetResponder,
          pressRetentionOffset: pressRetentionOffset,
          suppressHighlighting: suppressHighlighting
        }
      });
    } else {
      nativeText = /*#__PURE__*/(0, _jsxRuntime.jsx)(_$$_REQUIRE(_dependencyMap[11]).NativeText, Object.assign({}, restProps, {
        accessibilityLabel: _accessibilityLabel,
        accessibilityState: _accessibilityState,
        accessible: _accessible,
        allowFontScaling: allowFontScaling !== false,
        disabled: _disabled,
        ellipsizeMode: ellipsizeMode != null ? ellipsizeMode : 'tail',
        nativeID: _nativeID,
        numberOfLines: _numberOfLines,
        ref: forwardedRef,
        selectable: _selectable,
        selectionColor: _selectionColor,
        style: _style,
        children: children
      }));
    }
    if (children == null) {
      return nativeText;
    }
    if (Array.isArray(children) && children.length <= 3) {
      var hasNonTextChild = false;
      for (var child of children) {
        if (child != null && typeof child === 'object') {
          hasNonTextChild = true;
          break;
        }
      }
      if (!hasNonTextChild) {
        return nativeText;
      }
    } else if (typeof children !== 'object') {
      return nativeText;
    }
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_TextAncestor.default.Provider, {
      value: true,
      children: nativeText
    });
  });
  Text.displayName = 'Text';
  function useTextPressability(_ref2) {
    var onLongPress = _ref2.onLongPress,
      onPress = _ref2.onPress,
      onPressIn = _ref2.onPressIn,
      onPressOut = _ref2.onPressOut,
      _onResponderGrant = _ref2.onResponderGrant,
      _onResponderMove = _ref2.onResponderMove,
      _onResponderRelease = _ref2.onResponderRelease,
      _onResponderTerminate = _ref2.onResponderTerminate,
      onResponderTerminationRequest = _ref2.onResponderTerminationRequest,
      onStartShouldSetResponder = _ref2.onStartShouldSetResponder,
      pressRetentionOffset = _ref2.pressRetentionOffset,
      suppressHighlighting = _ref2.suppressHighlighting;
    var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      isHighlighted = _useState2[0],
      setHighlighted = _useState2[1];
    var config = (0, _react.useMemo)(function () {
      var _onPressIn = onPressIn;
      var _onPressOut = onPressOut;
      if (_Platform.default.OS === 'ios') {
        _onPressIn = function _onPressIn(event) {
          setHighlighted(suppressHighlighting == null || !suppressHighlighting);
          onPressIn == null ? undefined : onPressIn(event);
        };
        _onPressOut = function _onPressOut(event) {
          setHighlighted(false);
          onPressOut == null ? undefined : onPressOut(event);
        };
      }
      return {
        disabled: false,
        pressRectOffset: pressRetentionOffset,
        onLongPress: onLongPress,
        onPress: onPress,
        onPressIn: _onPressIn,
        onPressOut: _onPressOut
      };
    }, [pressRetentionOffset, onLongPress, onPress, onPressIn, onPressOut, suppressHighlighting]);
    var eventHandlers = (0, _usePressability.default)(config);
    var eventHandlersForText = (0, _react.useMemo)(function () {
      return eventHandlers == null ? null : {
        onResponderGrant: function onResponderGrant(event) {
          eventHandlers.onResponderGrant(event);
          if (_onResponderGrant != null) {
            _onResponderGrant(event);
          }
        },
        onResponderMove: function onResponderMove(event) {
          eventHandlers.onResponderMove(event);
          if (_onResponderMove != null) {
            _onResponderMove(event);
          }
        },
        onResponderRelease: function onResponderRelease(event) {
          eventHandlers.onResponderRelease(event);
          if (_onResponderRelease != null) {
            _onResponderRelease(event);
          }
        },
        onResponderTerminate: function onResponderTerminate(event) {
          eventHandlers.onResponderTerminate(event);
          if (_onResponderTerminate != null) {
            _onResponderTerminate(event);
          }
        },
        onClick: eventHandlers.onClick,
        onResponderTerminationRequest: onResponderTerminationRequest != null ? onResponderTerminationRequest : eventHandlers.onResponderTerminationRequest,
        onStartShouldSetResponder: onStartShouldSetResponder != null ? onStartShouldSetResponder : eventHandlers.onStartShouldSetResponder
      };
    }, [eventHandlers, _onResponderGrant, _onResponderMove, _onResponderRelease, _onResponderTerminate, onResponderTerminationRequest, onStartShouldSetResponder]);
    return (0, _react.useMemo)(function () {
      return [isHighlighted, eventHandlersForText];
    }, [isHighlighted, eventHandlersForText]);
  }
  var NativePressableVirtualText = React.forwardRef(function (_ref3, forwardedRef) {
    var textProps = _ref3.textProps,
      textPressabilityProps = _ref3.textPressabilityProps;
    var _useTextPressability = useTextPressability(textPressabilityProps),
      _useTextPressability2 = (0, _slicedToArray2.default)(_useTextPressability, 2),
      isHighlighted = _useTextPressability2[0],
      eventHandlersForText = _useTextPressability2[1];
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_$$_REQUIRE(_dependencyMap[11]).NativeVirtualText, Object.assign({}, textProps, eventHandlersForText, {
      isHighlighted: isHighlighted,
      isPressable: true,
      ref: forwardedRef
    }));
  });
  var NativePressableText = React.forwardRef(function (_ref4, forwardedRef) {
    var textProps = _ref4.textProps,
      textPressabilityProps = _ref4.textPressabilityProps;
    var _useTextPressability3 = useTextPressability(textPressabilityProps),
      _useTextPressability4 = (0, _slicedToArray2.default)(_useTextPressability3, 2),
      isHighlighted = _useTextPressability4[0],
      eventHandlersForText = _useTextPressability4[1];
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_$$_REQUIRE(_dependencyMap[11]).NativeText, Object.assign({}, textProps, eventHandlersForText, {
      isHighlighted: isHighlighted,
      isPressable: true,
      ref: forwardedRef
    }));
  });
  var userSelectToSelectableMap = {
    auto: true,
    text: true,
    none: false,
    contain: true,
    all: true
  };
  var verticalAlignToTextAlignVerticalMap = {
    auto: 'auto',
    top: 'top',
    bottom: 'bottom',
    middle: 'center'
  };
  var _default = exports.default = Text;
},285,[1,38,203,286,287,128,89,33,249,119,251,296]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PressabilityDebugView = PressabilityDebugView;
  exports.isEnabled = isEnabled;
  exports.setEnabled = setEnabled;
  var _View = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _normalizeColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[4]);
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function PressabilityDebugView(props) {
    return null;
  }
  var isDebugEnabled = false;
  function isEnabled() {
    return false;
  }
  function setEnabled(value) {}
},286,[1,248,90,119,251]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = usePressability;
  var _Pressability = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _react = _$$_REQUIRE(_dependencyMap[2]);
  function usePressability(config) {
    var pressabilityRef = (0, _react.useRef)(null);
    if (config != null && pressabilityRef.current == null) {
      pressabilityRef.current = new _Pressability.default(config);
    }
    var pressability = pressabilityRef.current;
    (0, _react.useEffect)(function () {
      if (config != null && pressability != null) {
        pressability.configure(config);
      }
    }, [config, pressability]);
    (0, _react.useEffect)(function () {
      if (pressability != null) {
        return function () {
          pressability.reset();
        };
      }
    }, [pressability]);
    return pressability == null ? null : pressability.getEventHandlers();
  }
},287,[1,288,119]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _SoundManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _ReactNativeFeatureFlags = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _UIManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _PressabilityPerformanceEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var Transitions = Object.freeze({
    NOT_RESPONDER: {
      DELAY: 'ERROR',
      RESPONDER_GRANT: 'RESPONDER_INACTIVE_PRESS_IN',
      RESPONDER_RELEASE: 'ERROR',
      RESPONDER_TERMINATED: 'ERROR',
      ENTER_PRESS_RECT: 'ERROR',
      LEAVE_PRESS_RECT: 'ERROR',
      LONG_PRESS_DETECTED: 'ERROR'
    },
    RESPONDER_INACTIVE_PRESS_IN: {
      DELAY: 'RESPONDER_ACTIVE_PRESS_IN',
      RESPONDER_GRANT: 'ERROR',
      RESPONDER_RELEASE: 'NOT_RESPONDER',
      RESPONDER_TERMINATED: 'NOT_RESPONDER',
      ENTER_PRESS_RECT: 'RESPONDER_INACTIVE_PRESS_IN',
      LEAVE_PRESS_RECT: 'RESPONDER_INACTIVE_PRESS_OUT',
      LONG_PRESS_DETECTED: 'ERROR'
    },
    RESPONDER_INACTIVE_PRESS_OUT: {
      DELAY: 'RESPONDER_ACTIVE_PRESS_OUT',
      RESPONDER_GRANT: 'ERROR',
      RESPONDER_RELEASE: 'NOT_RESPONDER',
      RESPONDER_TERMINATED: 'NOT_RESPONDER',
      ENTER_PRESS_RECT: 'RESPONDER_INACTIVE_PRESS_IN',
      LEAVE_PRESS_RECT: 'RESPONDER_INACTIVE_PRESS_OUT',
      LONG_PRESS_DETECTED: 'ERROR'
    },
    RESPONDER_ACTIVE_PRESS_IN: {
      DELAY: 'ERROR',
      RESPONDER_GRANT: 'ERROR',
      RESPONDER_RELEASE: 'NOT_RESPONDER',
      RESPONDER_TERMINATED: 'NOT_RESPONDER',
      ENTER_PRESS_RECT: 'RESPONDER_ACTIVE_PRESS_IN',
      LEAVE_PRESS_RECT: 'RESPONDER_ACTIVE_PRESS_OUT',
      LONG_PRESS_DETECTED: 'RESPONDER_ACTIVE_LONG_PRESS_IN'
    },
    RESPONDER_ACTIVE_PRESS_OUT: {
      DELAY: 'ERROR',
      RESPONDER_GRANT: 'ERROR',
      RESPONDER_RELEASE: 'NOT_RESPONDER',
      RESPONDER_TERMINATED: 'NOT_RESPONDER',
      ENTER_PRESS_RECT: 'RESPONDER_ACTIVE_PRESS_IN',
      LEAVE_PRESS_RECT: 'RESPONDER_ACTIVE_PRESS_OUT',
      LONG_PRESS_DETECTED: 'ERROR'
    },
    RESPONDER_ACTIVE_LONG_PRESS_IN: {
      DELAY: 'ERROR',
      RESPONDER_GRANT: 'ERROR',
      RESPONDER_RELEASE: 'NOT_RESPONDER',
      RESPONDER_TERMINATED: 'NOT_RESPONDER',
      ENTER_PRESS_RECT: 'RESPONDER_ACTIVE_LONG_PRESS_IN',
      LEAVE_PRESS_RECT: 'RESPONDER_ACTIVE_LONG_PRESS_OUT',
      LONG_PRESS_DETECTED: 'RESPONDER_ACTIVE_LONG_PRESS_IN'
    },
    RESPONDER_ACTIVE_LONG_PRESS_OUT: {
      DELAY: 'ERROR',
      RESPONDER_GRANT: 'ERROR',
      RESPONDER_RELEASE: 'NOT_RESPONDER',
      RESPONDER_TERMINATED: 'NOT_RESPONDER',
      ENTER_PRESS_RECT: 'RESPONDER_ACTIVE_LONG_PRESS_IN',
      LEAVE_PRESS_RECT: 'RESPONDER_ACTIVE_LONG_PRESS_OUT',
      LONG_PRESS_DETECTED: 'ERROR'
    },
    ERROR: {
      DELAY: 'NOT_RESPONDER',
      RESPONDER_GRANT: 'RESPONDER_INACTIVE_PRESS_IN',
      RESPONDER_RELEASE: 'NOT_RESPONDER',
      RESPONDER_TERMINATED: 'NOT_RESPONDER',
      ENTER_PRESS_RECT: 'NOT_RESPONDER',
      LEAVE_PRESS_RECT: 'NOT_RESPONDER',
      LONG_PRESS_DETECTED: 'NOT_RESPONDER'
    }
  });
  var isActiveSignal = function isActiveSignal(signal) {
    return signal === 'RESPONDER_ACTIVE_PRESS_IN' || signal === 'RESPONDER_ACTIVE_LONG_PRESS_IN';
  };
  var isActivationSignal = function isActivationSignal(signal) {
    return signal === 'RESPONDER_ACTIVE_PRESS_OUT' || signal === 'RESPONDER_ACTIVE_PRESS_IN';
  };
  var isPressInSignal = function isPressInSignal(signal) {
    return signal === 'RESPONDER_INACTIVE_PRESS_IN' || signal === 'RESPONDER_ACTIVE_PRESS_IN' || signal === 'RESPONDER_ACTIVE_LONG_PRESS_IN';
  };
  var isTerminalSignal = function isTerminalSignal(signal) {
    return signal === 'RESPONDER_TERMINATED' || signal === 'RESPONDER_RELEASE';
  };
  var DEFAULT_LONG_PRESS_DELAY_MS = 500;
  var DEFAULT_PRESS_RECT_OFFSETS = {
    bottom: 30,
    left: 20,
    right: 20,
    top: 20
  };
  var DEFAULT_MIN_PRESS_DURATION = 130;
  var DEFAULT_LONG_PRESS_DEACTIVATION_DISTANCE = 10;
  var longPressDeactivationDistance = DEFAULT_LONG_PRESS_DEACTIVATION_DISTANCE;
  var Pressability = exports.default = /*#__PURE__*/function () {
    function Pressability(config) {
      var _this = this;
      (0, _classCallCheck2.default)(this, Pressability);
      this._eventHandlers = null;
      this._hoverInDelayTimeout = null;
      this._hoverOutDelayTimeout = null;
      this._isHovered = false;
      this._longPressDelayTimeout = null;
      this._pressDelayTimeout = null;
      this._pressOutDelayTimeout = null;
      this._responderID = null;
      this._responderRegion = null;
      this._touchState = 'NOT_RESPONDER';
      this._measureCallback = function (left, top, width, height, pageX, pageY) {
        if (!left && !top && !width && !height && !pageX && !pageY) {
          return;
        }
        _this._responderRegion = {
          bottom: pageY + height,
          left: pageX,
          right: pageX + width,
          top: pageY
        };
      };
      this.configure(config);
    }
    return (0, _createClass2.default)(Pressability, [{
      key: "configure",
      value: function configure(config) {
        this._config = config;
      }
    }, {
      key: "reset",
      value: function reset() {
        this._cancelHoverInDelayTimeout();
        this._cancelHoverOutDelayTimeout();
        this._cancelLongPressDelayTimeout();
        this._cancelPressDelayTimeout();
        this._cancelPressOutDelayTimeout();
        this._config = Object.freeze({});
      }
    }, {
      key: "getEventHandlers",
      value: function getEventHandlers() {
        if (this._eventHandlers == null) {
          this._eventHandlers = this._createEventHandlers();
        }
        return this._eventHandlers;
      }
    }, {
      key: "_createEventHandlers",
      value: function _createEventHandlers() {
        var _this2 = this;
        var focusEventHandlers = {
          onBlur: function onBlur(event) {
            var onBlur = _this2._config.onBlur;
            if (onBlur != null) {
              onBlur(event);
            }
          },
          onFocus: function onFocus(event) {
            var onFocus = _this2._config.onFocus;
            if (onFocus != null) {
              onFocus(event);
            }
          }
        };
        var responderEventHandlers = {
          onStartShouldSetResponder: function onStartShouldSetResponder() {
            var _disabled;
            var disabled = _this2._config.disabled;
            return (_disabled = !disabled) != null ? _disabled : true;
          },
          onResponderGrant: function onResponderGrant(event) {
            event.persist();
            _this2._cancelPressOutDelayTimeout();
            _this2._responderID = event.currentTarget;
            _this2._touchState = 'NOT_RESPONDER';
            _this2._receiveSignal('RESPONDER_GRANT', event);
            var delayPressIn = normalizeDelay(_this2._config.delayPressIn);
            if (delayPressIn > 0) {
              _this2._pressDelayTimeout = setTimeout(function () {
                _this2._receiveSignal('DELAY', event);
              }, delayPressIn);
            } else {
              _this2._receiveSignal('DELAY', event);
            }
            var delayLongPress = normalizeDelay(_this2._config.delayLongPress, 10, DEFAULT_LONG_PRESS_DELAY_MS - delayPressIn);
            _this2._longPressDelayTimeout = setTimeout(function () {
              _this2._handleLongPress(event);
            }, delayLongPress + delayPressIn);
            return _this2._config.blockNativeResponder === true;
          },
          onResponderMove: function onResponderMove(event) {
            var onPressMove = _this2._config.onPressMove;
            if (onPressMove != null) {
              onPressMove(event);
            }
            var responderRegion = _this2._responderRegion;
            if (responderRegion == null) {
              return;
            }
            var touch = getTouchFromPressEvent(event);
            if (touch == null) {
              _this2._cancelLongPressDelayTimeout();
              _this2._receiveSignal('LEAVE_PRESS_RECT', event);
              return;
            }
            if (_this2._touchActivatePosition != null) {
              var deltaX = _this2._touchActivatePosition.pageX - touch.pageX;
              var deltaY = _this2._touchActivatePosition.pageY - touch.pageY;
              if (Math.hypot(deltaX, deltaY) > longPressDeactivationDistance) {
                _this2._cancelLongPressDelayTimeout();
              }
            }
            if (_this2._isTouchWithinResponderRegion(touch, responderRegion)) {
              _this2._receiveSignal('ENTER_PRESS_RECT', event);
            } else {
              _this2._cancelLongPressDelayTimeout();
              _this2._receiveSignal('LEAVE_PRESS_RECT', event);
            }
          },
          onResponderRelease: function onResponderRelease(event) {
            _this2._receiveSignal('RESPONDER_RELEASE', event);
          },
          onResponderTerminate: function onResponderTerminate(event) {
            _this2._receiveSignal('RESPONDER_TERMINATED', event);
          },
          onResponderTerminationRequest: function onResponderTerminationRequest() {
            var cancelable = _this2._config.cancelable;
            return cancelable != null ? cancelable : true;
          },
          onClick: function onClick(event) {
            var _event$nativeEvent;
            if (event != null && (_event$nativeEvent = event.nativeEvent) != null && _event$nativeEvent.hasOwnProperty != null && _event$nativeEvent.hasOwnProperty('pointerType')) {
              return;
            }
            if ((event == null ? undefined : event.currentTarget) !== (event == null ? undefined : event.target)) {
              event == null ? undefined : event.stopPropagation();
              return;
            }
            var _this2$_config = _this2._config,
              onPress = _this2$_config.onPress,
              disabled = _this2$_config.disabled;
            if (onPress != null && disabled !== true) {
              onPress(event);
            }
          }
        };
        if (_ReactNativeFeatureFlags.default.shouldPressibilityUseW3CPointerEventsForHover()) {
          var hoverPointerEvents = {
            onPointerEnter: undefined,
            onPointerLeave: undefined
          };
          var _this$_config = this._config,
            onHoverIn = _this$_config.onHoverIn,
            onHoverOut = _this$_config.onHoverOut;
          if (onHoverIn != null) {
            hoverPointerEvents.onPointerEnter = function (event) {
              _this2._isHovered = true;
              _this2._cancelHoverOutDelayTimeout();
              if (onHoverIn != null) {
                var delayHoverIn = normalizeDelay(_this2._config.delayHoverIn);
                if (delayHoverIn > 0) {
                  event.persist();
                  _this2._hoverInDelayTimeout = setTimeout(function () {
                    onHoverIn(convertPointerEventToMouseEvent(event));
                  }, delayHoverIn);
                } else {
                  onHoverIn(convertPointerEventToMouseEvent(event));
                }
              }
            };
          }
          if (onHoverOut != null) {
            hoverPointerEvents.onPointerLeave = function (event) {
              if (_this2._isHovered) {
                _this2._isHovered = false;
                _this2._cancelHoverInDelayTimeout();
                if (onHoverOut != null) {
                  var delayHoverOut = normalizeDelay(_this2._config.delayHoverOut);
                  if (delayHoverOut > 0) {
                    event.persist();
                    _this2._hoverOutDelayTimeout = setTimeout(function () {
                      onHoverOut(convertPointerEventToMouseEvent(event));
                    }, delayHoverOut);
                  } else {
                    onHoverOut(convertPointerEventToMouseEvent(event));
                  }
                }
              }
            };
          }
          return Object.assign({}, focusEventHandlers, responderEventHandlers, hoverPointerEvents);
        } else {
          var mouseEventHandlers = _Platform.default.OS === 'ios' || _Platform.default.OS === 'android' ? null : {
            onMouseEnter: function onMouseEnter(event) {
              if ((0, _$$_REQUIRE(_dependencyMap[9]).isHoverEnabled)()) {
                _this2._isHovered = true;
                _this2._cancelHoverOutDelayTimeout();
                var _onHoverIn = _this2._config.onHoverIn;
                if (_onHoverIn != null) {
                  var delayHoverIn = normalizeDelay(_this2._config.delayHoverIn);
                  if (delayHoverIn > 0) {
                    event.persist();
                    _this2._hoverInDelayTimeout = setTimeout(function () {
                      _onHoverIn(event);
                    }, delayHoverIn);
                  } else {
                    _onHoverIn(event);
                  }
                }
              }
            },
            onMouseLeave: function onMouseLeave(event) {
              if (_this2._isHovered) {
                _this2._isHovered = false;
                _this2._cancelHoverInDelayTimeout();
                var _onHoverOut = _this2._config.onHoverOut;
                if (_onHoverOut != null) {
                  var delayHoverOut = normalizeDelay(_this2._config.delayHoverOut);
                  if (delayHoverOut > 0) {
                    event.persist();
                    _this2._hoverInDelayTimeout = setTimeout(function () {
                      _onHoverOut(event);
                    }, delayHoverOut);
                  } else {
                    _onHoverOut(event);
                  }
                }
              }
            }
          };
          return Object.assign({}, focusEventHandlers, responderEventHandlers, mouseEventHandlers);
        }
      }
    }, {
      key: "_receiveSignal",
      value: function _receiveSignal(signal, event) {
        var _Transitions$prevStat;
        if (event.nativeEvent.timestamp != null) {
          _PressabilityPerformanceEventEmitter.default.emitEvent(function () {
            return {
              signal: signal,
              nativeTimestamp: event.nativeEvent.timestamp
            };
          });
        }
        var prevState = this._touchState;
        var nextState = (_Transitions$prevStat = Transitions[prevState]) == null ? undefined : _Transitions$prevStat[signal];
        if (this._responderID == null && signal === 'RESPONDER_RELEASE') {
          return;
        }
        (0, _invariant.default)(nextState != null && nextState !== 'ERROR', 'Pressability: Invalid signal `%s` for state `%s` on responder: %s', signal, prevState, typeof this._responderID === 'number' ? this._responderID : '<<host component>>');
        if (prevState !== nextState) {
          this._performTransitionSideEffects(prevState, nextState, signal, event);
          this._touchState = nextState;
        }
      }
    }, {
      key: "_performTransitionSideEffects",
      value: function _performTransitionSideEffects(prevState, nextState, signal, event) {
        if (isTerminalSignal(signal)) {
          this._touchActivatePosition = null;
          this._cancelLongPressDelayTimeout();
        }
        var isInitialTransition = prevState === 'NOT_RESPONDER' && nextState === 'RESPONDER_INACTIVE_PRESS_IN';
        var isActivationTransition = !isActivationSignal(prevState) && isActivationSignal(nextState);
        if (isInitialTransition || isActivationTransition) {
          this._measureResponderRegion();
        }
        if (isPressInSignal(prevState) && signal === 'LONG_PRESS_DETECTED') {
          var onLongPress = this._config.onLongPress;
          if (onLongPress != null) {
            onLongPress(event);
          }
        }
        var isPrevActive = isActiveSignal(prevState);
        var isNextActive = isActiveSignal(nextState);
        if (!isPrevActive && isNextActive) {
          this._activate(event);
        } else if (isPrevActive && !isNextActive) {
          this._deactivate(event);
        }
        if (isPressInSignal(prevState) && signal === 'RESPONDER_RELEASE') {
          if (!isNextActive && !isPrevActive) {
            this._activate(event);
            this._deactivate(event);
          }
          var _this$_config2 = this._config,
            _onLongPress = _this$_config2.onLongPress,
            onPress = _this$_config2.onPress,
            android_disableSound = _this$_config2.android_disableSound;
          if (onPress != null) {
            var isPressCanceledByLongPress = _onLongPress != null && prevState === 'RESPONDER_ACTIVE_LONG_PRESS_IN';
            if (!isPressCanceledByLongPress) {
              if (_Platform.default.OS === 'android' && android_disableSound !== true) {
                _SoundManager.default.playTouchSound();
              }
              onPress(event);
            }
          }
        }
        this._cancelPressDelayTimeout();
      }
    }, {
      key: "_activate",
      value: function _activate(event) {
        var onPressIn = this._config.onPressIn;
        var _getTouchFromPressEve = getTouchFromPressEvent(event),
          pageX = _getTouchFromPressEve.pageX,
          pageY = _getTouchFromPressEve.pageY;
        this._touchActivatePosition = {
          pageX: pageX,
          pageY: pageY
        };
        this._touchActivateTime = Date.now();
        if (onPressIn != null) {
          onPressIn(event);
        }
      }
    }, {
      key: "_deactivate",
      value: function _deactivate(event) {
        var onPressOut = this._config.onPressOut;
        if (onPressOut != null) {
          var _this$_touchActivateT;
          var minPressDuration = normalizeDelay(this._config.minPressDuration, 0, DEFAULT_MIN_PRESS_DURATION);
          var pressDuration = Date.now() - ((_this$_touchActivateT = this._touchActivateTime) != null ? _this$_touchActivateT : 0);
          var delayPressOut = Math.max(minPressDuration - pressDuration, normalizeDelay(this._config.delayPressOut));
          if (delayPressOut > 0) {
            event.persist();
            this._pressOutDelayTimeout = setTimeout(function () {
              onPressOut(event);
            }, delayPressOut);
          } else {
            onPressOut(event);
          }
        }
        this._touchActivateTime = null;
      }
    }, {
      key: "_measureResponderRegion",
      value: function _measureResponderRegion() {
        if (this._responderID == null) {
          return;
        }
        if (typeof this._responderID === 'number') {
          _UIManager.default.measure(this._responderID, this._measureCallback);
        } else {
          this._responderID.measure(this._measureCallback);
        }
      }
    }, {
      key: "_isTouchWithinResponderRegion",
      value: function _isTouchWithinResponderRegion(touch, responderRegion) {
        var _pressRectOffset$bott, _pressRectOffset$left, _pressRectOffset$righ, _pressRectOffset$top;
        var hitSlop = (0, _$$_REQUIRE(_dependencyMap[10]).normalizeRect)(this._config.hitSlop);
        var pressRectOffset = (0, _$$_REQUIRE(_dependencyMap[10]).normalizeRect)(this._config.pressRectOffset);
        var regionBottom = responderRegion.bottom;
        var regionLeft = responderRegion.left;
        var regionRight = responderRegion.right;
        var regionTop = responderRegion.top;
        if (hitSlop != null) {
          if (hitSlop.bottom != null) {
            regionBottom += hitSlop.bottom;
          }
          if (hitSlop.left != null) {
            regionLeft -= hitSlop.left;
          }
          if (hitSlop.right != null) {
            regionRight += hitSlop.right;
          }
          if (hitSlop.top != null) {
            regionTop -= hitSlop.top;
          }
        }
        regionBottom += (_pressRectOffset$bott = pressRectOffset == null ? undefined : pressRectOffset.bottom) != null ? _pressRectOffset$bott : DEFAULT_PRESS_RECT_OFFSETS.bottom;
        regionLeft -= (_pressRectOffset$left = pressRectOffset == null ? undefined : pressRectOffset.left) != null ? _pressRectOffset$left : DEFAULT_PRESS_RECT_OFFSETS.left;
        regionRight += (_pressRectOffset$righ = pressRectOffset == null ? undefined : pressRectOffset.right) != null ? _pressRectOffset$righ : DEFAULT_PRESS_RECT_OFFSETS.right;
        regionTop -= (_pressRectOffset$top = pressRectOffset == null ? undefined : pressRectOffset.top) != null ? _pressRectOffset$top : DEFAULT_PRESS_RECT_OFFSETS.top;
        return touch.pageX > regionLeft && touch.pageX < regionRight && touch.pageY > regionTop && touch.pageY < regionBottom;
      }
    }, {
      key: "_handleLongPress",
      value: function _handleLongPress(event) {
        if (this._touchState === 'RESPONDER_ACTIVE_PRESS_IN' || this._touchState === 'RESPONDER_ACTIVE_LONG_PRESS_IN') {
          this._receiveSignal('LONG_PRESS_DETECTED', event);
        }
      }
    }, {
      key: "_cancelHoverInDelayTimeout",
      value: function _cancelHoverInDelayTimeout() {
        if (this._hoverInDelayTimeout != null) {
          clearTimeout(this._hoverInDelayTimeout);
          this._hoverInDelayTimeout = null;
        }
      }
    }, {
      key: "_cancelHoverOutDelayTimeout",
      value: function _cancelHoverOutDelayTimeout() {
        if (this._hoverOutDelayTimeout != null) {
          clearTimeout(this._hoverOutDelayTimeout);
          this._hoverOutDelayTimeout = null;
        }
      }
    }, {
      key: "_cancelLongPressDelayTimeout",
      value: function _cancelLongPressDelayTimeout() {
        if (this._longPressDelayTimeout != null) {
          clearTimeout(this._longPressDelayTimeout);
          this._longPressDelayTimeout = null;
        }
      }
    }, {
      key: "_cancelPressDelayTimeout",
      value: function _cancelPressDelayTimeout() {
        if (this._pressDelayTimeout != null) {
          clearTimeout(this._pressDelayTimeout);
          this._pressDelayTimeout = null;
        }
      }
    }, {
      key: "_cancelPressOutDelayTimeout",
      value: function _cancelPressOutDelayTimeout() {
        if (this._pressOutDelayTimeout != null) {
          clearTimeout(this._pressOutDelayTimeout);
          this._pressOutDelayTimeout = null;
        }
      }
    }], [{
      key: "setLongPressDeactivationDistance",
      value: function setLongPressDeactivationDistance(distance) {
        longPressDeactivationDistance = distance;
      }
    }]);
  }();
  function normalizeDelay(delay) {
    var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    var fallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
    return Math.max(min, delay != null ? delay : fallback);
  }
  var getTouchFromPressEvent = function getTouchFromPressEvent(event) {
    var _event$nativeEvent2 = event.nativeEvent,
      changedTouches = _event$nativeEvent2.changedTouches,
      touches = _event$nativeEvent2.touches;
    if (touches != null && touches.length > 0) {
      return touches[0];
    }
    if (changedTouches != null && changedTouches.length > 0) {
      return changedTouches[0];
    }
    return event.nativeEvent;
  };
  function convertPointerEventToMouseEvent(input) {
    var _input$nativeEvent = input.nativeEvent,
      clientX = _input$nativeEvent.clientX,
      clientY = _input$nativeEvent.clientY;
    return Object.assign({}, input, {
      nativeEvent: {
        clientX: clientX,
        clientY: clientY,
        pageX: clientX,
        pageY: clientY,
        timestamp: input.timeStamp
      }
    });
  }
},288,[1,12,13,289,292,44,33,293,20,294,295]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _NativeSoundManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var SoundManager = {
    playTouchSound: function playTouchSound() {
      if (_NativeSoundManager.default) {
        _NativeSoundManager.default.playTouchSound();
      }
    }
  };
  var _default = exports.default = SoundManager;
},289,[1,290]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeSoundManager = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeSoundManager).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeSoundManager[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeSoundManager[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeSoundManager.default;
},290,[291]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.get('SoundManager');
},291,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var ReactNativeFeatureFlags = {
    shouldEmitW3CPointerEvents: function shouldEmitW3CPointerEvents() {
      return false;
    },
    shouldPressibilityUseW3CPointerEventsForHover: function shouldPressibilityUseW3CPointerEventsForHover() {
      return false;
    }
  };
  var _default = exports.default = ReactNativeFeatureFlags;
},292,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var PressabilityPerformanceEventEmitter = /*#__PURE__*/function () {
    function PressabilityPerformanceEventEmitter() {
      (0, _classCallCheck2.default)(this, PressabilityPerformanceEventEmitter);
      this._listeners = [];
    }
    return (0, _createClass2.default)(PressabilityPerformanceEventEmitter, [{
      key: "addListener",
      value: function addListener(listener) {
        this._listeners.push(listener);
      }
    }, {
      key: "removeListener",
      value: function removeListener(listener) {
        var index = this._listeners.indexOf(listener);
        if (index > -1) {
          this._listeners.splice(index, 1);
        }
      }
    }, {
      key: "emitEvent",
      value: function emitEvent(constructEvent) {
        if (this._listeners.length === 0) {
          return;
        }
        var event = constructEvent();
        this._listeners.forEach(function (listener) {
          return listener(event);
        });
      }
    }]);
  }();
  var PressabilityPerformanceEventEmitterSingleton = new PressabilityPerformanceEventEmitter();
  var _default = exports.default = PressabilityPerformanceEventEmitterSingleton;
},293,[1,12,13]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.isHoverEnabled = isHoverEnabled;
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var isEnabled = false;
  if (_Platform.default.OS === 'web') {
    var canUseDOM = Boolean(typeof window !== 'undefined' && window.document && window.document.createElement);
    if (canUseDOM) {
      var HOVER_THRESHOLD_MS = 1000;
      var lastTouchTimestamp = 0;
      var enableHover = function enableHover() {
        if (isEnabled || Date.now() - lastTouchTimestamp < HOVER_THRESHOLD_MS) {
          return;
        }
        isEnabled = true;
      };
      var disableHover = function disableHover() {
        lastTouchTimestamp = Date.now();
        if (isEnabled) {
          isEnabled = false;
        }
      };
      document.addEventListener('touchstart', disableHover, true);
      document.addEventListener('touchmove', disableHover, true);
      document.addEventListener('mousemove', enableHover, true);
    }
  }
  function isHoverEnabled() {
    return isEnabled;
  }
},294,[1,33]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.createSquare = createSquare;
  exports.normalizeRect = normalizeRect;
  function createSquare(size) {
    return {
      bottom: size,
      left: size,
      right: size,
      top: size
    };
  }
  function normalizeRect(rectOrSize) {
    return typeof rectOrSize === 'number' ? createSquare(rectOrSize) : rectOrSize;
  }
},295,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.NativeVirtualText = exports.NativeText = undefined;
  var _UIManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createReactNativeComponentClass = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var textViewConfig = {
    validAttributes: {
      isHighlighted: true,
      isPressable: true,
      numberOfLines: true,
      ellipsizeMode: true,
      allowFontScaling: true,
      dynamicTypeRamp: true,
      maxFontSizeMultiplier: true,
      disabled: true,
      selectable: true,
      selectionColor: true,
      adjustsFontSizeToFit: true,
      minimumFontScale: true,
      textBreakStrategy: true,
      onTextLayout: true,
      onInlineViewLayout: true,
      dataDetectorType: true,
      android_hyphenationFrequency: true,
      lineBreakStrategyIOS: true
    },
    directEventTypes: {
      topTextLayout: {
        registrationName: 'onTextLayout'
      },
      topInlineViewLayout: {
        registrationName: 'onInlineViewLayout'
      }
    },
    uiViewClassName: 'RCTText'
  };
  var virtualTextViewConfig = {
    validAttributes: {
      isHighlighted: true,
      isPressable: true,
      maxFontSizeMultiplier: true
    },
    uiViewClassName: 'RCTVirtualText'
  };
  var NativeText = exports.NativeText = (0, _createReactNativeComponentClass.default)('RCTText', function () {
    return (0, _$$_REQUIRE(_dependencyMap[3]).createViewConfig)(textViewConfig);
  });
  var NativeVirtualText = exports.NativeVirtualText = !global.RN$Bridgeless && !_UIManager.default.hasViewManagerConfig('RCTVirtualText') ? NativeText : (0, _createReactNativeComponentClass.default)('RCTVirtualText', function () {
    return (0, _$$_REQUIRE(_dependencyMap[3]).createViewConfig)(virtualTextViewConfig);
  });
},296,[1,44,281,121]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _View = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _Pressability = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _processColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[12]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[13]);
  var _excluded = ["onBlur", "onFocus"];
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var TouchableNativeFeedback = /*#__PURE__*/function (_React$Component) {
    function TouchableNativeFeedback() {
      var _this;
      (0, _classCallCheck2.default)(this, TouchableNativeFeedback);
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _callSuper(this, TouchableNativeFeedback, [].concat(args));
      _this.state = {
        pressability: new _Pressability.default(_this._createPressabilityConfig())
      };
      return _this;
    }
    (0, _inherits2.default)(TouchableNativeFeedback, _React$Component);
    return (0, _createClass2.default)(TouchableNativeFeedback, [{
      key: "_createPressabilityConfig",
      value: function _createPressabilityConfig() {
        var _this$props$ariaDisa,
          _this$props$accessibi,
          _this2 = this;
        var accessibilityStateDisabled = (_this$props$ariaDisa = this.props['aria-disabled']) != null ? _this$props$ariaDisa : (_this$props$accessibi = this.props.accessibilityState) == null ? undefined : _this$props$accessibi.disabled;
        return {
          cancelable: !this.props.rejectResponderTermination,
          disabled: this.props.disabled != null ? this.props.disabled : accessibilityStateDisabled,
          hitSlop: this.props.hitSlop,
          delayLongPress: this.props.delayLongPress,
          delayPressIn: this.props.delayPressIn,
          delayPressOut: this.props.delayPressOut,
          minPressDuration: 0,
          pressRectOffset: this.props.pressRetentionOffset,
          android_disableSound: this.props.touchSoundDisabled,
          onLongPress: this.props.onLongPress,
          onPress: this.props.onPress,
          onPressIn: function onPressIn(event) {
            if (_Platform.default.OS === 'android') {
              _this2._dispatchHotspotUpdate(event);
              _this2._dispatchPressedStateChange(true);
            }
            if (_this2.props.onPressIn != null) {
              _this2.props.onPressIn(event);
            }
          },
          onPressMove: function onPressMove(event) {
            if (_Platform.default.OS === 'android') {
              _this2._dispatchHotspotUpdate(event);
            }
          },
          onPressOut: function onPressOut(event) {
            if (_Platform.default.OS === 'android') {
              _this2._dispatchPressedStateChange(false);
            }
            if (_this2.props.onPressOut != null) {
              _this2.props.onPressOut(event);
            }
          }
        };
      }
    }, {
      key: "_dispatchPressedStateChange",
      value: function _dispatchPressedStateChange(pressed) {
        if (_Platform.default.OS === 'android') {
          var hostComponentRef = (0, _$$_REQUIRE(_dependencyMap[14]).findHostInstance_DEPRECATED)(this);
          if (hostComponentRef == null) {
            console.warn("Touchable: Unable to find HostComponent instance. Has your Touchable component been unmounted?");
          } else {
            _$$_REQUIRE(_dependencyMap[15]).Commands.setPressed(hostComponentRef, pressed);
          }
        }
      }
    }, {
      key: "_dispatchHotspotUpdate",
      value: function _dispatchHotspotUpdate(event) {
        if (_Platform.default.OS === 'android') {
          var _event$nativeEvent = event.nativeEvent,
            locationX = _event$nativeEvent.locationX,
            locationY = _event$nativeEvent.locationY;
          var hostComponentRef = (0, _$$_REQUIRE(_dependencyMap[14]).findHostInstance_DEPRECATED)(this);
          if (hostComponentRef == null) {
            console.warn("Touchable: Unable to find HostComponent instance. Has your Touchable component been unmounted?");
          } else {
            _$$_REQUIRE(_dependencyMap[15]).Commands.hotspotUpdate(hostComponentRef, locationX != null ? locationX : 0, locationY != null ? locationY : 0);
          }
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props$ariaBusy, _this$props$accessibi2, _this$props$ariaChec, _this$props$accessibi3, _this$props$ariaDisa2, _this$props$accessibi4, _this$props$ariaExpa, _this$props$accessibi5, _this$props$ariaSele, _this$props$accessibi6, _this$props$ariaValu, _this$props$accessibi7, _this$props$ariaValu2, _this$props$accessibi8, _this$props$ariaValu3, _this$props$accessibi9, _this$props$ariaValu4, _this$props$accessibi10, _this$props$ariaLive, _this$props$ariaLabe, _this$props$ariaModa, _this$props$ariaHidd, _this$props$id;
        var element = React.Children.only(this.props.children);
        var children = [element.props.children];
        var _this$state$pressabil = this.state.pressability.getEventHandlers(),
          onBlur = _this$state$pressabil.onBlur,
          onFocus = _this$state$pressabil.onFocus,
          eventHandlersWithoutBlurAndFocus = (0, _objectWithoutProperties2.default)(_this$state$pressabil, _excluded);
        var _accessibilityState = {
          busy: (_this$props$ariaBusy = this.props['aria-busy']) != null ? _this$props$ariaBusy : (_this$props$accessibi2 = this.props.accessibilityState) == null ? undefined : _this$props$accessibi2.busy,
          checked: (_this$props$ariaChec = this.props['aria-checked']) != null ? _this$props$ariaChec : (_this$props$accessibi3 = this.props.accessibilityState) == null ? undefined : _this$props$accessibi3.checked,
          disabled: (_this$props$ariaDisa2 = this.props['aria-disabled']) != null ? _this$props$ariaDisa2 : (_this$props$accessibi4 = this.props.accessibilityState) == null ? undefined : _this$props$accessibi4.disabled,
          expanded: (_this$props$ariaExpa = this.props['aria-expanded']) != null ? _this$props$ariaExpa : (_this$props$accessibi5 = this.props.accessibilityState) == null ? undefined : _this$props$accessibi5.expanded,
          selected: (_this$props$ariaSele = this.props['aria-selected']) != null ? _this$props$ariaSele : (_this$props$accessibi6 = this.props.accessibilityState) == null ? undefined : _this$props$accessibi6.selected
        };
        _accessibilityState = this.props.disabled != null ? Object.assign({}, _accessibilityState, {
          disabled: this.props.disabled
        }) : _accessibilityState;
        var accessibilityValue = {
          max: (_this$props$ariaValu = this.props['aria-valuemax']) != null ? _this$props$ariaValu : (_this$props$accessibi7 = this.props.accessibilityValue) == null ? undefined : _this$props$accessibi7.max,
          min: (_this$props$ariaValu2 = this.props['aria-valuemin']) != null ? _this$props$ariaValu2 : (_this$props$accessibi8 = this.props.accessibilityValue) == null ? undefined : _this$props$accessibi8.min,
          now: (_this$props$ariaValu3 = this.props['aria-valuenow']) != null ? _this$props$ariaValu3 : (_this$props$accessibi9 = this.props.accessibilityValue) == null ? undefined : _this$props$accessibi9.now,
          text: (_this$props$ariaValu4 = this.props['aria-valuetext']) != null ? _this$props$ariaValu4 : (_this$props$accessibi10 = this.props.accessibilityValue) == null ? undefined : _this$props$accessibi10.text
        };
        var accessibilityLiveRegion = this.props['aria-live'] === 'off' ? 'none' : (_this$props$ariaLive = this.props['aria-live']) != null ? _this$props$ariaLive : this.props.accessibilityLiveRegion;
        var accessibilityLabel = (_this$props$ariaLabe = this.props['aria-label']) != null ? _this$props$ariaLabe : this.props.accessibilityLabel;
        return React.cloneElement.apply(React, [element, Object.assign({}, eventHandlersWithoutBlurAndFocus, getBackgroundProp(this.props.background === undefined ? TouchableNativeFeedback.SelectableBackground() : this.props.background, this.props.useForeground === true), {
          accessible: this.props.accessible !== false,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityLanguage: this.props.accessibilityLanguage,
          accessibilityLabel: accessibilityLabel,
          accessibilityRole: this.props.accessibilityRole,
          accessibilityState: _accessibilityState,
          accessibilityActions: this.props.accessibilityActions,
          onAccessibilityAction: this.props.onAccessibilityAction,
          accessibilityValue: accessibilityValue,
          importantForAccessibility: this.props['aria-hidden'] === true ? 'no-hide-descendants' : this.props.importantForAccessibility,
          accessibilityViewIsModal: (_this$props$ariaModa = this.props['aria-modal']) != null ? _this$props$ariaModa : this.props.accessibilityViewIsModal,
          accessibilityLiveRegion: accessibilityLiveRegion,
          accessibilityElementsHidden: (_this$props$ariaHidd = this.props['aria-hidden']) != null ? _this$props$ariaHidd : this.props.accessibilityElementsHidden,
          hasTVPreferredFocus: this.props.hasTVPreferredFocus,
          hitSlop: this.props.hitSlop,
          focusable: this.props.focusable !== false && this.props.onPress !== undefined && !this.props.disabled,
          nativeID: (_this$props$id = this.props.id) != null ? _this$props$id : this.props.nativeID,
          nextFocusDown: this.props.nextFocusDown,
          nextFocusForward: this.props.nextFocusForward,
          nextFocusLeft: this.props.nextFocusLeft,
          nextFocusRight: this.props.nextFocusRight,
          nextFocusUp: this.props.nextFocusUp,
          onLayout: this.props.onLayout,
          testID: this.props.testID
        })].concat(children));
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps, prevState) {
        this.state.pressability.configure(this._createPressabilityConfig());
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this.state.pressability.configure(this._createPressabilityConfig());
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.state.pressability.reset();
      }
    }]);
  }(React.Component);
  TouchableNativeFeedback.SelectableBackground = function (rippleRadius) {
    return {
      type: 'ThemeAttrAndroid',
      attribute: 'selectableItemBackground',
      rippleRadius: rippleRadius
    };
  };
  TouchableNativeFeedback.SelectableBackgroundBorderless = function (rippleRadius) {
    return {
      type: 'ThemeAttrAndroid',
      attribute: 'selectableItemBackgroundBorderless',
      rippleRadius: rippleRadius
    };
  };
  TouchableNativeFeedback.Ripple = function (color, borderless, rippleRadius) {
    var processedColor = (0, _processColor.default)(color);
    (0, _invariant.default)(processedColor == null || typeof processedColor === 'number', 'Unexpected color given for Ripple color');
    return {
      type: 'RippleAndroid',
      color: processedColor,
      borderless: borderless,
      rippleRadius: rippleRadius
    };
  };
  TouchableNativeFeedback.canUseNativeForeground = function () {
    return _Platform.default.OS === 'android';
  };
  var getBackgroundProp = _Platform.default.OS === 'android' ? function (background, useForeground) {
    return useForeground && TouchableNativeFeedback.canUseNativeForeground() ? {
      nativeForegroundAndroid: background
    } : {
      nativeBackgroundAndroid: background
    };
  } : function (background, useForeground) {
    return null;
  };
  TouchableNativeFeedback.displayName = 'TouchableNativeFeedback';
  var _default = exports.default = TouchableNativeFeedback;
},297,[1,203,12,13,23,25,28,248,288,89,33,20,119,251,57,250]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _Animated = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _Easing = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _Pressability = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _flattenStyle4 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[12]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[13]);
  var _excluded = ["onBlur", "onFocus"];
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var TouchableOpacity = /*#__PURE__*/function (_React$Component) {
    function TouchableOpacity() {
      var _this;
      (0, _classCallCheck2.default)(this, TouchableOpacity);
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _callSuper(this, TouchableOpacity, [].concat(args));
      _this.state = {
        anim: new _Animated.default.Value(_this._getChildStyleOpacityWithDefault()),
        pressability: new _Pressability.default(_this._createPressabilityConfig())
      };
      return _this;
    }
    (0, _inherits2.default)(TouchableOpacity, _React$Component);
    return (0, _createClass2.default)(TouchableOpacity, [{
      key: "_createPressabilityConfig",
      value: function _createPressabilityConfig() {
        var _ref,
          _this$props$disabled,
          _this$props$accessibi,
          _this2 = this;
        return {
          cancelable: !this.props.rejectResponderTermination,
          disabled: (_ref = (_this$props$disabled = this.props.disabled) != null ? _this$props$disabled : this.props['aria-disabled']) != null ? _ref : (_this$props$accessibi = this.props.accessibilityState) == null ? undefined : _this$props$accessibi.disabled,
          hitSlop: this.props.hitSlop,
          delayLongPress: this.props.delayLongPress,
          delayPressIn: this.props.delayPressIn,
          delayPressOut: this.props.delayPressOut,
          minPressDuration: 0,
          pressRectOffset: this.props.pressRetentionOffset,
          onBlur: function onBlur(event) {
            if (_Platform.default.isTV) {
              _this2._opacityInactive(250);
            }
            if (_this2.props.onBlur != null) {
              _this2.props.onBlur(event);
            }
          },
          onFocus: function onFocus(event) {
            if (_Platform.default.isTV) {
              _this2._opacityActive(150);
            }
            if (_this2.props.onFocus != null) {
              _this2.props.onFocus(event);
            }
          },
          onLongPress: this.props.onLongPress,
          onPress: this.props.onPress,
          onPressIn: function onPressIn(event) {
            _this2._opacityActive(event.dispatchConfig.registrationName === 'onResponderGrant' ? 0 : 150);
            if (_this2.props.onPressIn != null) {
              _this2.props.onPressIn(event);
            }
          },
          onPressOut: function onPressOut(event) {
            _this2._opacityInactive(250);
            if (_this2.props.onPressOut != null) {
              _this2.props.onPressOut(event);
            }
          }
        };
      }
    }, {
      key: "_setOpacityTo",
      value: function _setOpacityTo(toValue, duration) {
        _Animated.default.timing(this.state.anim, {
          toValue: toValue,
          duration: duration,
          easing: _Easing.default.inOut(_Easing.default.quad),
          useNativeDriver: true
        }).start();
      }
    }, {
      key: "_opacityActive",
      value: function _opacityActive(duration) {
        var _this$props$activeOpa;
        this._setOpacityTo((_this$props$activeOpa = this.props.activeOpacity) != null ? _this$props$activeOpa : 0.2, duration);
      }
    }, {
      key: "_opacityInactive",
      value: function _opacityInactive(duration) {
        this._setOpacityTo(this._getChildStyleOpacityWithDefault(), duration);
      }
    }, {
      key: "_getChildStyleOpacityWithDefault",
      value: function _getChildStyleOpacityWithDefault() {
        var _flattenStyle;
        var opacity = (_flattenStyle = (0, _flattenStyle4.default)(this.props.style)) == null ? undefined : _flattenStyle.opacity;
        return typeof opacity === 'number' ? opacity : 1;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props$ariaBusy, _this$props$accessibi2, _this$props$ariaChec, _this$props$accessibi3, _this$props$ariaDisa, _this$props$accessibi4, _this$props$ariaExpa, _this$props$accessibi5, _this$props$ariaSele, _this$props$accessibi6, _this$props$ariaValu, _this$props$accessibi7, _this$props$ariaValu2, _this$props$accessibi8, _this$props$ariaValu3, _this$props$accessibi9, _this$props$ariaValu4, _this$props$accessibi10, _this$props$ariaLive, _this$props$ariaLabe, _this$props$ariaModa, _this$props$ariaHidd, _this$props$id;
        var _this$state$pressabil = this.state.pressability.getEventHandlers(),
          onBlur = _this$state$pressabil.onBlur,
          onFocus = _this$state$pressabil.onFocus,
          eventHandlersWithoutBlurAndFocus = (0, _objectWithoutProperties2.default)(_this$state$pressabil, _excluded);
        var _accessibilityState = {
          busy: (_this$props$ariaBusy = this.props['aria-busy']) != null ? _this$props$ariaBusy : (_this$props$accessibi2 = this.props.accessibilityState) == null ? undefined : _this$props$accessibi2.busy,
          checked: (_this$props$ariaChec = this.props['aria-checked']) != null ? _this$props$ariaChec : (_this$props$accessibi3 = this.props.accessibilityState) == null ? undefined : _this$props$accessibi3.checked,
          disabled: (_this$props$ariaDisa = this.props['aria-disabled']) != null ? _this$props$ariaDisa : (_this$props$accessibi4 = this.props.accessibilityState) == null ? undefined : _this$props$accessibi4.disabled,
          expanded: (_this$props$ariaExpa = this.props['aria-expanded']) != null ? _this$props$ariaExpa : (_this$props$accessibi5 = this.props.accessibilityState) == null ? undefined : _this$props$accessibi5.expanded,
          selected: (_this$props$ariaSele = this.props['aria-selected']) != null ? _this$props$ariaSele : (_this$props$accessibi6 = this.props.accessibilityState) == null ? undefined : _this$props$accessibi6.selected
        };
        _accessibilityState = this.props.disabled != null ? Object.assign({}, _accessibilityState, {
          disabled: this.props.disabled
        }) : _accessibilityState;
        var accessibilityValue = {
          max: (_this$props$ariaValu = this.props['aria-valuemax']) != null ? _this$props$ariaValu : (_this$props$accessibi7 = this.props.accessibilityValue) == null ? undefined : _this$props$accessibi7.max,
          min: (_this$props$ariaValu2 = this.props['aria-valuemin']) != null ? _this$props$ariaValu2 : (_this$props$accessibi8 = this.props.accessibilityValue) == null ? undefined : _this$props$accessibi8.min,
          now: (_this$props$ariaValu3 = this.props['aria-valuenow']) != null ? _this$props$ariaValu3 : (_this$props$accessibi9 = this.props.accessibilityValue) == null ? undefined : _this$props$accessibi9.now,
          text: (_this$props$ariaValu4 = this.props['aria-valuetext']) != null ? _this$props$ariaValu4 : (_this$props$accessibi10 = this.props.accessibilityValue) == null ? undefined : _this$props$accessibi10.text
        };
        var accessibilityLiveRegion = this.props['aria-live'] === 'off' ? 'none' : (_this$props$ariaLive = this.props['aria-live']) != null ? _this$props$ariaLive : this.props.accessibilityLiveRegion;
        var accessibilityLabel = (_this$props$ariaLabe = this.props['aria-label']) != null ? _this$props$ariaLabe : this.props.accessibilityLabel;
        return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_Animated.default.View, Object.assign({
          accessible: this.props.accessible !== false,
          accessibilityLabel: accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityLanguage: this.props.accessibilityLanguage,
          accessibilityRole: this.props.accessibilityRole,
          accessibilityState: _accessibilityState,
          accessibilityActions: this.props.accessibilityActions,
          onAccessibilityAction: this.props.onAccessibilityAction,
          accessibilityValue: accessibilityValue,
          importantForAccessibility: this.props['aria-hidden'] === true ? 'no-hide-descendants' : this.props.importantForAccessibility,
          accessibilityViewIsModal: (_this$props$ariaModa = this.props['aria-modal']) != null ? _this$props$ariaModa : this.props.accessibilityViewIsModal,
          accessibilityLiveRegion: accessibilityLiveRegion,
          accessibilityElementsHidden: (_this$props$ariaHidd = this.props['aria-hidden']) != null ? _this$props$ariaHidd : this.props.accessibilityElementsHidden,
          style: [this.props.style, {
            opacity: this.state.anim
          }],
          nativeID: (_this$props$id = this.props.id) != null ? _this$props$id : this.props.nativeID,
          testID: this.props.testID,
          onLayout: this.props.onLayout,
          nextFocusDown: this.props.nextFocusDown,
          nextFocusForward: this.props.nextFocusForward,
          nextFocusLeft: this.props.nextFocusLeft,
          nextFocusRight: this.props.nextFocusRight,
          nextFocusUp: this.props.nextFocusUp,
          hasTVPreferredFocus: this.props.hasTVPreferredFocus,
          hitSlop: this.props.hitSlop,
          focusable: this.props.focusable !== false && this.props.onPress !== undefined && !this.props.disabled,
          ref: this.props.hostRef
        }, eventHandlersWithoutBlurAndFocus, {
          children: [this.props.children, null]
        }));
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps, prevState) {
        var _flattenStyle2, _flattenStyle3;
        this.state.pressability.configure(this._createPressabilityConfig());
        if (this.props.disabled !== prevProps.disabled || ((_flattenStyle2 = (0, _flattenStyle4.default)(prevProps.style)) == null ? undefined : _flattenStyle2.opacity) !== ((_flattenStyle3 = (0, _flattenStyle4.default)(this.props.style)) == null ? undefined : _flattenStyle3.opacity)) {
          this._opacityInactive(250);
        }
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this.state.pressability.configure(this._createPressabilityConfig());
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.state.pressability.reset();
        this.state.anim.resetAnimation();
      }
    }]);
  }(React.Component);
  var Touchable = React.forwardRef(function (props, ref) {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(TouchableOpacity, Object.assign({}, props, {
      hostRef: ref
    }));
  });
  Touchable.displayName = 'TouchableOpacity';
  var _default = exports.default = Touchable;
},298,[1,203,12,13,23,25,28,299,322,288,128,33,119,251]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = exports.default = _$$_REQUIRE(_dependencyMap[0]).default;
},299,[300]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _AnimatedImplementation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _AnimatedMock = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var Animated = _Platform.default.isDisableAnimations ? _AnimatedMock.default : _AnimatedImplementation.default;
  var _default = exports.default = Object.assign({
    get FlatList() {
      return _$$_REQUIRE(_dependencyMap[4]).default;
    },
    get Image() {
      return _$$_REQUIRE(_dependencyMap[5]).default;
    },
    get ScrollView() {
      return _$$_REQUIRE(_dependencyMap[6]).default;
    },
    get SectionList() {
      return _$$_REQUIRE(_dependencyMap[7]).default;
    },
    get Text() {
      return _$$_REQUIRE(_dependencyMap[8]).default;
    },
    get View() {
      return _$$_REQUIRE(_dependencyMap[9]).default;
    }
  }, Animated);
},300,[1,33,301,342,343,361,372,399,401,402]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _DecayAnimation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _SpringAnimation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _TimingAnimation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _createAnimatedComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _AnimatedAddition = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _AnimatedColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _AnimatedDiffClamp = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _AnimatedDivision = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _AnimatedInterpolation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _AnimatedModulo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  var _AnimatedMultiplication = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));
  var _AnimatedNode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));
  var _AnimatedSubtraction = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));
  var _AnimatedTracking = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));
  var _AnimatedValue = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));
  var _AnimatedValueXY = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));
  var add = function add(a, b) {
    return new _AnimatedAddition.default(a, b);
  };
  var subtract = function subtract(a, b) {
    return new _AnimatedSubtraction.default(a, b);
  };
  var divide = function divide(a, b) {
    return new _AnimatedDivision.default(a, b);
  };
  var multiply = function multiply(a, b) {
    return new _AnimatedMultiplication.default(a, b);
  };
  var modulo = function modulo(a, modulus) {
    return new _AnimatedModulo.default(a, modulus);
  };
  var diffClamp = function diffClamp(a, min, max) {
    return new _AnimatedDiffClamp.default(a, min, max);
  };
  var _combineCallbacks = function _combineCallbacks(callback, config) {
    if (callback && config.onComplete) {
      return function () {
        config.onComplete && config.onComplete.apply(config, arguments);
        callback && callback.apply(undefined, arguments);
      };
    } else {
      return callback || config.onComplete;
    }
  };
  var maybeVectorAnim = function maybeVectorAnim(value, config, anim) {
    if (value instanceof _AnimatedValueXY.default) {
      var configX = Object.assign({}, config);
      var configY = Object.assign({}, config);
      for (var key in config) {
        var _config$key = config[key],
          x = _config$key.x,
          y = _config$key.y;
        if (x !== undefined && y !== undefined) {
          configX[key] = x;
          configY[key] = y;
        }
      }
      var aX = anim(value.x, configX);
      var aY = anim(value.y, configY);
      return parallel([aX, aY], {
        stopTogether: false
      });
    } else if (value instanceof _AnimatedColor.default) {
      var configR = Object.assign({}, config);
      var configG = Object.assign({}, config);
      var configB = Object.assign({}, config);
      var configA = Object.assign({}, config);
      for (var _key2 in config) {
        var _config$_key = config[_key2],
          r = _config$_key.r,
          g = _config$_key.g,
          b = _config$_key.b,
          a = _config$_key.a;
        if (r !== undefined && g !== undefined && b !== undefined && a !== undefined) {
          configR[_key2] = r;
          configG[_key2] = g;
          configB[_key2] = b;
          configA[_key2] = a;
        }
      }
      var aR = anim(value.r, configR);
      var aG = anim(value.g, configG);
      var aB = anim(value.b, configB);
      var aA = anim(value.a, configA);
      return parallel([aR, aG, aB, aA], {
        stopTogether: false
      });
    }
    return null;
  };
  var _spring = function spring(value, config) {
    var _start = function start(animatedValue, configuration, callback) {
      callback = _combineCallbacks(callback, configuration);
      var singleValue = animatedValue;
      var singleConfig = configuration;
      singleValue.stopTracking();
      if (configuration.toValue instanceof _AnimatedNode.default) {
        singleValue.track(new _AnimatedTracking.default(singleValue, configuration.toValue, _SpringAnimation.default, singleConfig, callback));
      } else {
        singleValue.animate(new _SpringAnimation.default(singleConfig), callback);
      }
    };
    return maybeVectorAnim(value, config, _spring) || {
      start: function start(callback) {
        _start(value, config, callback);
      },
      stop: function stop() {
        value.stopAnimation();
      },
      reset: function reset() {
        value.resetAnimation();
      },
      _startNativeLoop: function _startNativeLoop(iterations) {
        var singleConfig = Object.assign({}, config, {
          iterations: iterations
        });
        _start(value, singleConfig);
      },
      _isUsingNativeDriver: function _isUsingNativeDriver() {
        return config.useNativeDriver || false;
      }
    };
  };
  var _timing = function timing(value, config) {
    var _start2 = function start(animatedValue, configuration, callback) {
      callback = _combineCallbacks(callback, configuration);
      var singleValue = animatedValue;
      var singleConfig = configuration;
      singleValue.stopTracking();
      if (configuration.toValue instanceof _AnimatedNode.default) {
        singleValue.track(new _AnimatedTracking.default(singleValue, configuration.toValue, _TimingAnimation.default, singleConfig, callback));
      } else {
        singleValue.animate(new _TimingAnimation.default(singleConfig), callback);
      }
    };
    return maybeVectorAnim(value, config, _timing) || {
      start: function start(callback, isLooping) {
        _start2(value, Object.assign({}, config, {
          isLooping: isLooping
        }), callback);
      },
      stop: function stop() {
        value.stopAnimation();
      },
      reset: function reset() {
        value.resetAnimation();
      },
      _startNativeLoop: function _startNativeLoop(iterations) {
        var singleConfig = Object.assign({}, config, {
          iterations: iterations
        });
        _start2(value, singleConfig);
      },
      _isUsingNativeDriver: function _isUsingNativeDriver() {
        return config.useNativeDriver || false;
      }
    };
  };
  var _decay = function decay(value, config) {
    var _start3 = function start(animatedValue, configuration, callback) {
      callback = _combineCallbacks(callback, configuration);
      var singleValue = animatedValue;
      var singleConfig = configuration;
      singleValue.stopTracking();
      singleValue.animate(new _DecayAnimation.default(singleConfig), callback);
    };
    return maybeVectorAnim(value, config, _decay) || {
      start: function start(callback) {
        _start3(value, config, callback);
      },
      stop: function stop() {
        value.stopAnimation();
      },
      reset: function reset() {
        value.resetAnimation();
      },
      _startNativeLoop: function _startNativeLoop(iterations) {
        var singleConfig = Object.assign({}, config, {
          iterations: iterations
        });
        _start3(value, singleConfig);
      },
      _isUsingNativeDriver: function _isUsingNativeDriver() {
        return config.useNativeDriver || false;
      }
    };
  };
  var sequence = function sequence(animations) {
    var current = 0;
    return {
      start: function start(callback, isLooping) {
        var _onComplete = function onComplete(result) {
          if (!result.finished) {
            callback && callback(result);
            return;
          }
          current++;
          if (current === animations.length) {
            current = 0;
            callback && callback(result);
            return;
          }
          animations[current].start(_onComplete, isLooping);
        };
        if (animations.length === 0) {
          callback && callback({
            finished: true
          });
        } else {
          animations[current].start(_onComplete, isLooping);
        }
      },
      stop: function stop() {
        if (current < animations.length) {
          animations[current].stop();
        }
      },
      reset: function reset() {
        animations.forEach(function (animation, idx) {
          if (idx <= current) {
            animation.reset();
          }
        });
        current = 0;
      },
      _startNativeLoop: function _startNativeLoop() {
        throw new Error('Loops run using the native driver cannot contain Animated.sequence animations');
      },
      _isUsingNativeDriver: function _isUsingNativeDriver() {
        return false;
      }
    };
  };
  var parallel = function parallel(animations, config) {
    var doneCount = 0;
    var hasEnded = {};
    var stopTogether = !(config && config.stopTogether === false);
    var result = {
      start: function start(callback, isLooping) {
        if (doneCount === animations.length) {
          callback && callback({
            finished: true
          });
          return;
        }
        animations.forEach(function (animation, idx) {
          var cb = function cb(endResult) {
            hasEnded[idx] = true;
            doneCount++;
            if (doneCount === animations.length) {
              doneCount = 0;
              callback && callback(endResult);
              return;
            }
            if (!endResult.finished && stopTogether) {
              result.stop();
            }
          };
          if (!animation) {
            cb({
              finished: true
            });
          } else {
            animation.start(cb, isLooping);
          }
        });
      },
      stop: function stop() {
        animations.forEach(function (animation, idx) {
          !hasEnded[idx] && animation.stop();
          hasEnded[idx] = true;
        });
      },
      reset: function reset() {
        animations.forEach(function (animation, idx) {
          animation.reset();
          hasEnded[idx] = false;
          doneCount = 0;
        });
      },
      _startNativeLoop: function _startNativeLoop() {
        throw new Error('Loops run using the native driver cannot contain Animated.parallel animations');
      },
      _isUsingNativeDriver: function _isUsingNativeDriver() {
        return false;
      }
    };
    return result;
  };
  var delay = function delay(time) {
    return _timing(new _AnimatedValue.default(0), {
      toValue: 0,
      delay: time,
      duration: 0,
      useNativeDriver: false
    });
  };
  var stagger = function stagger(time, animations) {
    return parallel(animations.map(function (animation, i) {
      return sequence([delay(time * i), animation]);
    }));
  };
  var loop = function loop(animation) {
    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref$iterations = _ref.iterations,
      iterations = _ref$iterations === undefined ? -1 : _ref$iterations,
      _ref$resetBeforeItera = _ref.resetBeforeIteration,
      resetBeforeIteration = _ref$resetBeforeItera === undefined ? true : _ref$resetBeforeItera;
    var isFinished = false;
    var iterationsSoFar = 0;
    return {
      start: function start(callback) {
        var _restart = function restart() {
          var result = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
            finished: true
          };
          if (isFinished || iterationsSoFar === iterations || result.finished === false) {
            callback && callback(result);
          } else {
            iterationsSoFar++;
            resetBeforeIteration && animation.reset();
            animation.start(_restart, iterations === -1);
          }
        };
        if (!animation || iterations === 0) {
          callback && callback({
            finished: true
          });
        } else {
          if (animation._isUsingNativeDriver()) {
            animation._startNativeLoop(iterations);
          } else {
            _restart();
          }
        }
      },
      stop: function stop() {
        isFinished = true;
        animation.stop();
      },
      reset: function reset() {
        iterationsSoFar = 0;
        isFinished = false;
        animation.reset();
      },
      _startNativeLoop: function _startNativeLoop() {
        throw new Error('Loops run using the native driver cannot contain Animated.loop animations');
      },
      _isUsingNativeDriver: function _isUsingNativeDriver() {
        return animation._isUsingNativeDriver();
      }
    };
  };
  function forkEvent(event, listener) {
    if (!event) {
      return listener;
    } else if (event instanceof _$$_REQUIRE(_dependencyMap[17]).AnimatedEvent) {
      event.__addListener(listener);
      return event;
    } else {
      return function () {
        typeof event === 'function' && event.apply(undefined, arguments);
        listener.apply(undefined, arguments);
      };
    }
  }
  function unforkEvent(event, listener) {
    if (event && event instanceof _$$_REQUIRE(_dependencyMap[17]).AnimatedEvent) {
      event.__removeListener(listener);
    }
  }
  var event = function event(argMapping, config) {
    var animatedEvent = new (_$$_REQUIRE(_dependencyMap[17]).AnimatedEvent)(argMapping, config);
    if (animatedEvent.__isNative) {
      return animatedEvent;
    } else {
      return animatedEvent.__getHandler();
    }
  };
  var _default = exports.default = {
    Value: _AnimatedValue.default,
    ValueXY: _AnimatedValueXY.default,
    Color: _AnimatedColor.default,
    Interpolation: _AnimatedInterpolation.default,
    Node: _AnimatedNode.default,
    decay: _decay,
    timing: _timing,
    spring: _spring,
    add: add,
    subtract: subtract,
    divide: divide,
    multiply: multiply,
    modulo: modulo,
    diffClamp: diffClamp,
    delay: delay,
    sequence: sequence,
    parallel: parallel,
    stagger: stagger,
    loop: loop,
    event: event,
    createAnimatedComponent: _createAnimatedComponent.default,
    attachNativeEvent: _$$_REQUIRE(_dependencyMap[17]).attachNativeEvent,
    forkEvent: forkEvent,
    unforkEvent: unforkEvent,
    Event: _$$_REQUIRE(_dependencyMap[17]).AnimatedEvent
  };
},301,[1,302,325,328,329,335,326,336,337,321,338,339,311,340,341,317,324,316]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _Animation2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && "function" == typeof p ? function (t) { return p.apply(e, t); } : p; }
  var DecayAnimation = exports.default = /*#__PURE__*/function (_Animation) {
    function DecayAnimation(config) {
      var _config$deceleration;
      var _this;
      (0, _classCallCheck2.default)(this, DecayAnimation);
      _this = _callSuper(this, DecayAnimation, [config]);
      _this._deceleration = (_config$deceleration = config.deceleration) != null ? _config$deceleration : 0.998;
      _this._velocity = config.velocity;
      _this._platformConfig = config.platformConfig;
      return _this;
    }
    (0, _inherits2.default)(DecayAnimation, _Animation);
    return (0, _createClass2.default)(DecayAnimation, [{
      key: "__getNativeAnimationConfig",
      value: function __getNativeAnimationConfig() {
        return {
          type: 'decay',
          deceleration: this._deceleration,
          velocity: this._velocity,
          iterations: this.__iterations,
          platformConfig: this._platformConfig,
          debugID: this.__getDebugID()
        };
      }
    }, {
      key: "start",
      value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {
        var _this2 = this;
        _superPropGet(DecayAnimation, "start", this, 3)([fromValue, onUpdate, onEnd, previousAnimation, animatedValue]);
        this._lastValue = fromValue;
        this._fromValue = fromValue;
        this._onUpdate = onUpdate;
        this._startTime = Date.now();
        var useNativeDriver = this.__startAnimationIfNative(animatedValue);
        if (!useNativeDriver) {
          this._animationFrame = requestAnimationFrame(function () {
            return _this2.onUpdate();
          });
        }
      }
    }, {
      key: "onUpdate",
      value: function onUpdate() {
        var now = Date.now();
        var value = this._fromValue + this._velocity / (1 - this._deceleration) * (1 - Math.exp(-(1 - this._deceleration) * (now - this._startTime)));
        this._onUpdate(value);
        if (Math.abs(this._lastValue - value) < 0.1) {
          this.__notifyAnimationEnd({
            finished: true
          });
          return;
        }
        this._lastValue = value;
        if (this.__active) {
          this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));
        }
      }
    }, {
      key: "stop",
      value: function stop() {
        _superPropGet(DecayAnimation, "stop", this, 3)([]);
        if (this._animationFrame != null) {
          global.cancelAnimationFrame(this._animationFrame);
        }
        this.__notifyAnimationEnd({
          finished: false
        });
      }
    }]);
  }(_Animation2.default);
},302,[1,12,13,23,25,26,28,303]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _classPrivateFieldLooseBase2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _classPrivateFieldLooseKey2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _NativeAnimatedHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var ReactNativeFeatureFlags = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));
  var _AnimatedProps = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var startNativeAnimationNextId = 1;
  var _nativeID = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("nativeID");
  var _onEnd = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("onEnd");
  var _useNativeDriver = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("useNativeDriver");
  var Animation = exports.default = /*#__PURE__*/function () {
    function Animation(config) {
      var _config$isInteraction, _config$iterations;
      (0, _classCallCheck2.default)(this, Animation);
      Object.defineProperty(this, _nativeID, {
        writable: true,
        value: undefined
      });
      Object.defineProperty(this, _onEnd, {
        writable: true,
        value: undefined
      });
      Object.defineProperty(this, _useNativeDriver, {
        writable: true,
        value: undefined
      });
      (0, _classPrivateFieldLooseBase2.default)(this, _useNativeDriver)[_useNativeDriver] = _NativeAnimatedHelper.default.shouldUseNativeDriver(config);
      this.__active = false;
      this.__isInteraction = (_config$isInteraction = config.isInteraction) != null ? _config$isInteraction : !(0, _classPrivateFieldLooseBase2.default)(this, _useNativeDriver)[_useNativeDriver];
      this.__isLooping = config.isLooping;
      this.__iterations = (_config$iterations = config.iterations) != null ? _config$iterations : 1;
    }
    return (0, _createClass2.default)(Animation, [{
      key: "start",
      value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {
        if (!(0, _classPrivateFieldLooseBase2.default)(this, _useNativeDriver)[_useNativeDriver] && animatedValue.__isNative === true) {
          throw new Error("Attempting to run JS driven animation on animated node that has been moved to \"native\" earlier by starting an animation with `useNativeDriver: true`");
        }
        (0, _classPrivateFieldLooseBase2.default)(this, _onEnd)[_onEnd] = onEnd;
        this.__active = true;
      }
    }, {
      key: "stop",
      value: function stop() {
        if ((0, _classPrivateFieldLooseBase2.default)(this, _nativeID)[_nativeID] != null) {
          var nativeID = (0, _classPrivateFieldLooseBase2.default)(this, _nativeID)[_nativeID];
          var identifier = `${nativeID}:stopAnimation`;
          try {
            _NativeAnimatedHelper.default.API.setWaitingForIdentifier(identifier);
            _NativeAnimatedHelper.default.API.stopAnimation(nativeID);
          } finally {
            _NativeAnimatedHelper.default.API.unsetWaitingForIdentifier(identifier);
          }
        }
        this.__active = false;
      }
    }, {
      key: "__getNativeAnimationConfig",
      value: function __getNativeAnimationConfig() {
        throw new Error('This animation type cannot be offloaded to native');
      }
    }, {
      key: "__findAnimatedPropsNodes",
      value: function __findAnimatedPropsNodes(node) {
        var result = [];
        if (node instanceof _AnimatedProps.default) {
          result.push(node);
          return result;
        }
        for (var child of node.__getChildren()) {
          result.push.apply(result, (0, _toConsumableArray2.default)(this.__findAnimatedPropsNodes(child)));
        }
        return result;
      }
    }, {
      key: "__startAnimationIfNative",
      value: function __startAnimationIfNative(animatedValue) {
        var _this = this;
        if (!(0, _classPrivateFieldLooseBase2.default)(this, _useNativeDriver)[_useNativeDriver]) {
          return false;
        }
        var startNativeAnimationWaitId = `${startNativeAnimationNextId}:startAnimation`;
        startNativeAnimationNextId += 1;
        _NativeAnimatedHelper.default.API.setWaitingForIdentifier(startNativeAnimationWaitId);
        try {
          var config = this.__getNativeAnimationConfig();
          animatedValue.__makeNative(config.platformConfig);
          (0, _classPrivateFieldLooseBase2.default)(this, _nativeID)[_nativeID] = _NativeAnimatedHelper.default.generateNewAnimationId();
          _NativeAnimatedHelper.default.API.startAnimatingNode((0, _classPrivateFieldLooseBase2.default)(this, _nativeID)[_nativeID], animatedValue.__getNativeTag(), config, function (result) {
            _this.__notifyAnimationEnd(result);
            var value = result.value;
            if (value != null) {
              animatedValue.__onAnimatedValueUpdateReceived(value);
              if (_this.__isLooping === true) {
                return;
              }
              _this.__findAnimatedPropsNodes(animatedValue).forEach(function (node) {
                return node.update();
              });
            }
          });
          return true;
        } catch (e) {
          throw e;
        } finally {
          _NativeAnimatedHelper.default.API.unsetWaitingForIdentifier(startNativeAnimationWaitId);
        }
      }
    }, {
      key: "__notifyAnimationEnd",
      value: function __notifyAnimationEnd(result) {
        var callback = (0, _classPrivateFieldLooseBase2.default)(this, _onEnd)[_onEnd];
        if (callback != null) {
          (0, _classPrivateFieldLooseBase2.default)(this, _onEnd)[_onEnd] = null;
          callback(result);
        }
      }
    }, {
      key: "__getDebugID",
      value: function __getDebugID() {
        return undefined;
      }
    }]);
  }();
},303,[1,6,12,13,31,32,304,73,310]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _NativeAnimatedModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _NativeAnimatedTurboModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _NativeEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _RCTDeviceEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var ReactNativeFeatureFlags = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[6]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _nullthrows = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var NativeAnimatedModule = _NativeAnimatedModule.default != null ? _NativeAnimatedModule.default : _NativeAnimatedTurboModule.default;
  var __nativeAnimatedNodeTagCount = 1;
  var __nativeAnimationIdCount = 1;
  var nativeEventEmitter;
  var waitingForQueuedOperations = new Set();
  var queueOperations = false;
  var queue = [];
  var singleOpQueue = [];
  var isSingleOpBatching = _Platform.default.OS === 'android' && (NativeAnimatedModule == null ? undefined : NativeAnimatedModule.queueAndExecuteBatchedOperations) != null && ReactNativeFeatureFlags.animatedShouldUseSingleOp();
  var flushQueueImmediate = null;
  var eventListenerGetValueCallbacks = {};
  var eventListenerAnimationFinishedCallbacks = {};
  var globalEventEmitterGetValueListener = null;
  var globalEventEmitterAnimationFinishedListener = null;
  function createNativeOperations() {
    var methodNames = ['createAnimatedNode', 'updateAnimatedNodeConfig', 'getValue', 'startListeningToAnimatedNodeValue', 'stopListeningToAnimatedNodeValue', 'connectAnimatedNodes', 'disconnectAnimatedNodes', 'startAnimatingNode', 'stopAnimation', 'setAnimatedNodeValue', 'setAnimatedNodeOffset', 'flattenAnimatedNodeOffset', 'extractAnimatedNodeOffset', 'connectAnimatedNodeToView', 'disconnectAnimatedNodeFromView', 'restoreDefaultValues', 'dropAnimatedNode', 'addAnimatedEventToView', 'removeAnimatedEventFromView', 'addListener', 'removeListener'];
    var nativeOperations = {};
    if (isSingleOpBatching) {
      var _loop = function _loop() {
        var methodName = methodNames[ii];
        var operationID = ii + 1;
        nativeOperations[methodName] = function () {
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          singleOpQueue.push.apply(singleOpQueue, [operationID].concat(args));
        };
      };
      for (var ii = 0, length = methodNames.length; ii < length; ii++) {
        _loop();
      }
    } else {
      var _loop2 = function _loop2() {
        var methodName = methodNames[_ii];
        nativeOperations[methodName] = function () {
          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            args[_key2] = arguments[_key2];
          }
          var method = (0, _nullthrows.default)(NativeAnimatedModule)[methodName];
          if (queueOperations || queue.length !== 0) {
            queue.push(function () {
              return method.apply(undefined, args);
            });
          } else {
            method.apply(undefined, args);
          }
        };
      };
      for (var _ii = 0, _length = methodNames.length; _ii < _length; _ii++) {
        _loop2();
      }
    }
    return nativeOperations;
  }
  var NativeOperations = createNativeOperations();
  var API = {
    getValue: isSingleOpBatching ? function (tag, saveValueCallback) {
      if (saveValueCallback) {
        eventListenerGetValueCallbacks[tag] = saveValueCallback;
      }
      NativeOperations.getValue(tag);
    } : function (tag, saveValueCallback) {
      NativeOperations.getValue(tag, saveValueCallback);
    },
    setWaitingForIdentifier: function setWaitingForIdentifier(id) {
      waitingForQueuedOperations.add(id);
      queueOperations = true;
      if (ReactNativeFeatureFlags.animatedShouldDebounceQueueFlush() && flushQueueImmediate) {
        if (ReactNativeFeatureFlags.enableAnimatedClearImmediateFix()) {
          clearImmediate(flushQueueImmediate);
        } else {
          clearTimeout(flushQueueImmediate);
        }
      }
    },
    unsetWaitingForIdentifier: function unsetWaitingForIdentifier(id) {
      waitingForQueuedOperations.delete(id);
      if (waitingForQueuedOperations.size === 0) {
        queueOperations = false;
        API.disableQueue();
      }
    },
    disableQueue: function disableQueue() {
      (0, _invariant.default)(NativeAnimatedModule, 'Native animated module is not available');
      if (ReactNativeFeatureFlags.animatedShouldDebounceQueueFlush()) {
        var prevImmediate = flushQueueImmediate;
        clearImmediate(prevImmediate);
        flushQueueImmediate = setImmediate(API.flushQueue);
      } else {
        API.flushQueue();
      }
    },
    flushQueue: isSingleOpBatching ? function () {
      (0, _invariant.default)(NativeAnimatedModule, 'Native animated module is not available');
      flushQueueImmediate = null;
      if (singleOpQueue.length === 0) {
        return;
      }
      ensureGlobalEventEmitterListeners();
      NativeAnimatedModule == null ? undefined : NativeAnimatedModule.queueAndExecuteBatchedOperations == null ? undefined : NativeAnimatedModule.queueAndExecuteBatchedOperations(singleOpQueue);
      singleOpQueue.length = 0;
    } : function () {
      (0, _invariant.default)(NativeAnimatedModule, 'Native animated module is not available');
      flushQueueImmediate = null;
      if (queue.length === 0) {
        return;
      }
      if (_Platform.default.OS === 'android') {
        NativeAnimatedModule == null ? undefined : NativeAnimatedModule.startOperationBatch == null ? undefined : NativeAnimatedModule.startOperationBatch();
      }
      for (var q = 0, l = queue.length; q < l; q++) {
        queue[q]();
      }
      queue.length = 0;
      if (_Platform.default.OS === 'android') {
        NativeAnimatedModule == null ? undefined : NativeAnimatedModule.finishOperationBatch == null ? undefined : NativeAnimatedModule.finishOperationBatch();
      }
    },
    createAnimatedNode: function createAnimatedNode(tag, config) {
      NativeOperations.createAnimatedNode(tag, config);
    },
    updateAnimatedNodeConfig: function updateAnimatedNodeConfig(tag, config) {
      NativeOperations.updateAnimatedNodeConfig == null ? undefined : NativeOperations.updateAnimatedNodeConfig(tag, config);
    },
    startListeningToAnimatedNodeValue: function startListeningToAnimatedNodeValue(tag) {
      NativeOperations.startListeningToAnimatedNodeValue(tag);
    },
    stopListeningToAnimatedNodeValue: function stopListeningToAnimatedNodeValue(tag) {
      NativeOperations.stopListeningToAnimatedNodeValue(tag);
    },
    connectAnimatedNodes: function connectAnimatedNodes(parentTag, childTag) {
      NativeOperations.connectAnimatedNodes(parentTag, childTag);
    },
    disconnectAnimatedNodes: function disconnectAnimatedNodes(parentTag, childTag) {
      NativeOperations.disconnectAnimatedNodes(parentTag, childTag);
    },
    startAnimatingNode: isSingleOpBatching ? function (animationId, nodeTag, config, endCallback) {
      if (endCallback) {
        eventListenerAnimationFinishedCallbacks[animationId] = endCallback;
      }
      NativeOperations.startAnimatingNode(animationId, nodeTag, config);
    } : function (animationId, nodeTag, config, endCallback) {
      NativeOperations.startAnimatingNode(animationId, nodeTag, config, endCallback);
    },
    stopAnimation: function stopAnimation(animationId) {
      NativeOperations.stopAnimation(animationId);
    },
    setAnimatedNodeValue: function setAnimatedNodeValue(nodeTag, value) {
      NativeOperations.setAnimatedNodeValue(nodeTag, value);
    },
    setAnimatedNodeOffset: function setAnimatedNodeOffset(nodeTag, offset) {
      NativeOperations.setAnimatedNodeOffset(nodeTag, offset);
    },
    flattenAnimatedNodeOffset: function flattenAnimatedNodeOffset(nodeTag) {
      NativeOperations.flattenAnimatedNodeOffset(nodeTag);
    },
    extractAnimatedNodeOffset: function extractAnimatedNodeOffset(nodeTag) {
      NativeOperations.extractAnimatedNodeOffset(nodeTag);
    },
    connectAnimatedNodeToView: function connectAnimatedNodeToView(nodeTag, viewTag) {
      NativeOperations.connectAnimatedNodeToView(nodeTag, viewTag);
    },
    disconnectAnimatedNodeFromView: function disconnectAnimatedNodeFromView(nodeTag, viewTag) {
      NativeOperations.disconnectAnimatedNodeFromView(nodeTag, viewTag);
    },
    restoreDefaultValues: function restoreDefaultValues(nodeTag) {
      NativeOperations.restoreDefaultValues == null ? undefined : NativeOperations.restoreDefaultValues(nodeTag);
    },
    dropAnimatedNode: function dropAnimatedNode(tag) {
      NativeOperations.dropAnimatedNode(tag);
    },
    addAnimatedEventToView: function addAnimatedEventToView(viewTag, eventName, eventMapping) {
      NativeOperations.addAnimatedEventToView(viewTag, eventName, eventMapping);
    },
    removeAnimatedEventFromView: function removeAnimatedEventFromView(viewTag, eventName, animatedNodeTag) {
      NativeOperations.removeAnimatedEventFromView(viewTag, eventName, animatedNodeTag);
    }
  };
  function ensureGlobalEventEmitterListeners() {
    if (globalEventEmitterGetValueListener && globalEventEmitterAnimationFinishedListener) {
      return;
    }
    globalEventEmitterGetValueListener = _RCTDeviceEventEmitter.default.addListener('onNativeAnimatedModuleGetValue', function (params) {
      var tag = params.tag;
      var callback = eventListenerGetValueCallbacks[tag];
      if (!callback) {
        return;
      }
      callback(params.value);
      delete eventListenerGetValueCallbacks[tag];
    });
    globalEventEmitterAnimationFinishedListener = _RCTDeviceEventEmitter.default.addListener('onNativeAnimatedModuleAnimationFinished', function (params) {
      var animations = Array.isArray(params) ? params : [params];
      for (var animation of animations) {
        var animationId = animation.animationId;
        var callback = eventListenerAnimationFinishedCallbacks[animationId];
        if (callback) {
          callback(animation);
          delete eventListenerAnimationFinishedCallbacks[animationId];
        }
      }
    });
  }
  function generateNewNodeTag() {
    return __nativeAnimatedNodeTagCount++;
  }
  function generateNewAnimationId() {
    return __nativeAnimationIdCount++;
  }
  function assertNativeAnimatedModule() {
    (0, _invariant.default)(NativeAnimatedModule, 'Native animated module is not available');
  }
  var _warnedMissingNativeAnimated = false;
  function shouldUseNativeDriver(config) {
    if (config.useNativeDriver == null) {
      console.warn("Animated: `useNativeDriver` was not specified. This is a required option and must be explicitly set to `true` or `false`");
    }
    if (config.useNativeDriver === true && !NativeAnimatedModule) {
      {
        if (!_warnedMissingNativeAnimated) {
          console.warn("Animated: `useNativeDriver` is not supported because the native animated module is missing. Falling back to JS-based animation. To resolve this, add `RCTAnimation` module to this app, or remove `useNativeDriver`. Make sure to run `bundle exec pod install` first. Read more about autolinking: https://github.com/react-native-community/cli/blob/master/docs/autolinking.md");
          _warnedMissingNativeAnimated = true;
        }
      }
      return false;
    }
    return config.useNativeDriver || false;
  }
  function transformDataType(value) {
    if (typeof value !== 'string') {
      return value;
    }
    if (value.endsWith('deg')) {
      var degrees = parseFloat(value) || 0;
      return degrees * Math.PI / 180.0;
    } else if (value.endsWith('rad')) {
      return parseFloat(value) || 0;
    } else {
      return value;
    }
  }
  var _default = exports.default = {
    API: API,
    generateNewNodeTag: generateNewNodeTag,
    generateNewAnimationId: generateNewAnimationId,
    assertNativeAnimatedModule: assertNativeAnimatedModule,
    shouldUseNativeDriver: shouldUseNativeDriver,
    transformDataType: transformDataType,
    get nativeEventEmitter() {
      if (!nativeEventEmitter) {
        nativeEventEmitter = new _NativeEventEmitter.default(_Platform.default.OS !== 'ios' ? null : NativeAnimatedModule);
      }
      return nativeEventEmitter;
    }
  };
},304,[1,305,308,191,22,33,73,20,45]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeAnimatedModule = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeAnimatedModule).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeAnimatedModule[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeAnimatedModule[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeAnimatedModule.default;
},305,[306]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _shouldUseTurboAnimatedModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var NativeModule = !(0, _shouldUseTurboAnimatedModule.default)() ? TurboModuleRegistry.get('NativeAnimatedModule') : null;
  var _default = exports.default = NativeModule;
},306,[1,307,36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  function shouldUseTurboAnimatedModule() {
    return _Platform.default.OS === 'ios' && global.RN$Bridgeless === true;
  }
  var _default = exports.default = shouldUseTurboAnimatedModule;
},307,[1,33]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeAnimatedTurboModule = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeAnimatedTurboModule).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeAnimatedTurboModule[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeAnimatedTurboModule[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeAnimatedTurboModule.default;
},308,[309]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _shouldUseTurboAnimatedModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var NativeModule = (0, _shouldUseTurboAnimatedModule.default)() ? TurboModuleRegistry.get('NativeAnimatedTurboModule') : null;
  var _default = exports.default = NativeModule;
},309,[1,307,36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _classPrivateFieldLooseBase2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _classPrivateFieldLooseKey2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _NativeAnimatedHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  var _AnimatedNode2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));
  var _AnimatedObject = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));
  var _AnimatedStyle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));
  var _Object$hasOwn;
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && "function" == typeof p ? function (t) { return p.apply(e, t); } : p; }
  function createAnimatedProps(inputProps, allowlist) {
    var nodeKeys = [];
    var nodes = [];
    var props = {};
    var keys = Object.keys(inputProps);
    for (var ii = 0, length = keys.length; ii < length; ii++) {
      var key = keys[ii];
      var value = inputProps[key];
      if (allowlist == null || hasOwn(allowlist, key)) {
        var node = undefined;
        if (key === 'style') {
          node = _AnimatedStyle.default.from(value, allowlist == null ? undefined : allowlist.style);
        } else if (value instanceof _AnimatedNode2.default) {
          node = value;
        } else {
          node = _AnimatedObject.default.from(value);
        }
        if (node == null) {
          props[key] = value;
        } else {
          nodeKeys.push(key);
          nodes.push(node);
          props[key] = node;
        }
      } else {
        props[key] = value;
      }
    }
    return [nodeKeys, nodes, props];
  }
  var _animatedView = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("animatedView");
  var _callback = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("callback");
  var _nodeKeys = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("nodeKeys");
  var _nodes = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("nodes");
  var _props = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("props");
  var AnimatedProps = exports.default = /*#__PURE__*/function (_AnimatedNode) {
    function AnimatedProps(inputProps, callback, allowlist, config) {
      var _this;
      (0, _classCallCheck2.default)(this, AnimatedProps);
      _this = _callSuper(this, AnimatedProps, [config]);
      Object.defineProperty(_this, _animatedView, {
        writable: true,
        value: null
      });
      Object.defineProperty(_this, _callback, {
        writable: true,
        value: undefined
      });
      Object.defineProperty(_this, _nodeKeys, {
        writable: true,
        value: undefined
      });
      Object.defineProperty(_this, _nodes, {
        writable: true,
        value: undefined
      });
      Object.defineProperty(_this, _props, {
        writable: true,
        value: undefined
      });
      var _createAnimatedProps = createAnimatedProps(inputProps, allowlist),
        _createAnimatedProps2 = (0, _slicedToArray2.default)(_createAnimatedProps, 3),
        nodeKeys = _createAnimatedProps2[0],
        nodes = _createAnimatedProps2[1],
        props = _createAnimatedProps2[2];
      (0, _classPrivateFieldLooseBase2.default)(_this, _nodeKeys)[_nodeKeys] = nodeKeys;
      (0, _classPrivateFieldLooseBase2.default)(_this, _nodes)[_nodes] = nodes;
      (0, _classPrivateFieldLooseBase2.default)(_this, _props)[_props] = props;
      (0, _classPrivateFieldLooseBase2.default)(_this, _callback)[_callback] = callback;
      return _this;
    }
    (0, _inherits2.default)(AnimatedProps, _AnimatedNode);
    return (0, _createClass2.default)(AnimatedProps, [{
      key: "__getValue",
      value: function __getValue() {
        var props = {};
        var keys = Object.keys((0, _classPrivateFieldLooseBase2.default)(this, _props)[_props]);
        for (var ii = 0, length = keys.length; ii < length; ii++) {
          var key = keys[ii];
          var value = (0, _classPrivateFieldLooseBase2.default)(this, _props)[_props][key];
          if (value instanceof _AnimatedNode2.default) {
            props[key] = value.__getValue();
          } else if (value instanceof _$$_REQUIRE(_dependencyMap[15]).AnimatedEvent) {
            props[key] = value.__getHandler();
          } else {
            props[key] = value;
          }
        }
        return props;
      }
    }, {
      key: "__getValueWithStaticProps",
      value: function __getValueWithStaticProps(staticProps) {
        var props = Object.assign({}, staticProps);
        var keys = Object.keys(staticProps);
        for (var ii = 0, length = keys.length; ii < length; ii++) {
          var key = keys[ii];
          var maybeNode = (0, _classPrivateFieldLooseBase2.default)(this, _props)[_props][key];
          if (key === 'style' && maybeNode instanceof _AnimatedStyle.default) {
            props[key] = maybeNode.__getValueWithStaticStyle(staticProps.style);
          } else if (maybeNode instanceof _AnimatedNode2.default) {
            props[key] = maybeNode.__getValue();
          } else if (maybeNode instanceof _$$_REQUIRE(_dependencyMap[15]).AnimatedEvent) {
            props[key] = maybeNode.__getHandler();
          }
        }
        return props;
      }
    }, {
      key: "__getAnimatedValue",
      value: function __getAnimatedValue() {
        var props = {};
        var nodeKeys = (0, _classPrivateFieldLooseBase2.default)(this, _nodeKeys)[_nodeKeys];
        var nodes = (0, _classPrivateFieldLooseBase2.default)(this, _nodes)[_nodes];
        for (var ii = 0, length = nodes.length; ii < length; ii++) {
          var key = nodeKeys[ii];
          var node = nodes[ii];
          props[key] = node.__getAnimatedValue();
        }
        return props;
      }
    }, {
      key: "__attach",
      value: function __attach() {
        var nodes = (0, _classPrivateFieldLooseBase2.default)(this, _nodes)[_nodes];
        for (var ii = 0, length = nodes.length; ii < length; ii++) {
          var node = nodes[ii];
          node.__addChild(this);
        }
        _superPropGet(AnimatedProps, "__attach", this, 3)([]);
      }
    }, {
      key: "__detach",
      value: function __detach() {
        if (this.__isNative && (0, _classPrivateFieldLooseBase2.default)(this, _animatedView)[_animatedView]) {
          this.__disconnectAnimatedView();
        }
        (0, _classPrivateFieldLooseBase2.default)(this, _animatedView)[_animatedView] = null;
        var nodes = (0, _classPrivateFieldLooseBase2.default)(this, _nodes)[_nodes];
        for (var ii = 0, length = nodes.length; ii < length; ii++) {
          var node = nodes[ii];
          node.__removeChild(this);
        }
        _superPropGet(AnimatedProps, "__detach", this, 3)([]);
      }
    }, {
      key: "update",
      value: function update() {
        (0, _classPrivateFieldLooseBase2.default)(this, _callback)[_callback]();
      }
    }, {
      key: "__makeNative",
      value: function __makeNative(platformConfig) {
        var nodes = (0, _classPrivateFieldLooseBase2.default)(this, _nodes)[_nodes];
        for (var ii = 0, length = nodes.length; ii < length; ii++) {
          var node = nodes[ii];
          node.__makeNative(platformConfig);
        }
        if (!this.__isNative) {
          this.__isNative = true;
          _superPropGet(AnimatedProps, "__setPlatformConfig", this, 3)([platformConfig]);
          if ((0, _classPrivateFieldLooseBase2.default)(this, _animatedView)[_animatedView]) {
            this.__connectAnimatedView();
          }
        }
      }
    }, {
      key: "setNativeView",
      value: function setNativeView(animatedView) {
        if ((0, _classPrivateFieldLooseBase2.default)(this, _animatedView)[_animatedView] === animatedView) {
          return;
        }
        (0, _classPrivateFieldLooseBase2.default)(this, _animatedView)[_animatedView] = animatedView;
        if (this.__isNative) {
          this.__connectAnimatedView();
        }
      }
    }, {
      key: "__connectAnimatedView",
      value: function __connectAnimatedView() {
        (0, _invariant.default)(this.__isNative, 'Expected node to be marked as "native"');
        var nativeViewTag = (0, _$$_REQUIRE(_dependencyMap[16]).findNodeHandle)((0, _classPrivateFieldLooseBase2.default)(this, _animatedView)[_animatedView]);
        if (nativeViewTag == null) {
          {
            throw new Error('Unable to locate attached view in the native tree');
          }
        }
        _NativeAnimatedHelper.default.API.connectAnimatedNodeToView(this.__getNativeTag(), nativeViewTag);
      }
    }, {
      key: "__disconnectAnimatedView",
      value: function __disconnectAnimatedView() {
        (0, _invariant.default)(this.__isNative, 'Expected node to be marked as "native"');
        var nativeViewTag = (0, _$$_REQUIRE(_dependencyMap[16]).findNodeHandle)((0, _classPrivateFieldLooseBase2.default)(this, _animatedView)[_animatedView]);
        if (nativeViewTag == null) {
          {
            throw new Error('Unable to locate attached view in the native tree');
          }
        }
        _NativeAnimatedHelper.default.API.disconnectAnimatedNodeFromView(this.__getNativeTag(), nativeViewTag);
      }
    }, {
      key: "__restoreDefaultValues",
      value: function __restoreDefaultValues() {
        if (this.__isNative) {
          _NativeAnimatedHelper.default.API.restoreDefaultValues(this.__getNativeTag());
        }
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        var platformConfig = this.__getPlatformConfig();
        var propsConfig = {};
        var nodeKeys = (0, _classPrivateFieldLooseBase2.default)(this, _nodeKeys)[_nodeKeys];
        var nodes = (0, _classPrivateFieldLooseBase2.default)(this, _nodes)[_nodes];
        for (var ii = 0, length = nodes.length; ii < length; ii++) {
          var key = nodeKeys[ii];
          var node = nodes[ii];
          node.__makeNative(platformConfig);
          propsConfig[key] = node.__getNativeTag();
        }
        return {
          type: 'props',
          props: propsConfig,
          debugID: this.__getDebugID()
        };
      }
    }]);
  }(_AnimatedNode2.default);
  var _hasOwnProp = Object.prototype.hasOwnProperty;
  var hasOwn = (_Object$hasOwn = Object.hasOwn) != null ? _Object$hasOwn : function (obj, prop) {
    return _hasOwnProp.call(obj, prop);
  };
},310,[1,38,12,13,23,25,26,28,31,32,304,311,312,314,20,316,57]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _classPrivateFieldLooseBase2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _classPrivateFieldLooseKey2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _NativeAnimatedHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _uniqueId = 1;
  var _assertNativeAnimatedModule2 = function _assertNativeAnimatedModule() {
    _NativeAnimatedHelper.default.assertNativeAnimatedModule();
    _assertNativeAnimatedModule2 = null;
  };
  var _listeners = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("listeners");
  var AnimatedNode = exports.default = /*#__PURE__*/function () {
    function AnimatedNode(config) {
      (0, _classCallCheck2.default)(this, AnimatedNode);
      Object.defineProperty(this, _listeners, {
        writable: true,
        value: new Map()
      });
      this._platformConfig = undefined;
      this.__isNative = false;
      this.__nativeTag = undefined;
      this.__debugID = undefined;
    }
    return (0, _createClass2.default)(AnimatedNode, [{
      key: "__attach",
      value: function __attach() {}
    }, {
      key: "__detach",
      value: function __detach() {
        this.removeAllListeners();
        if (this.__isNative && this.__nativeTag != null) {
          _NativeAnimatedHelper.default.API.dropAnimatedNode(this.__nativeTag);
          this.__nativeTag = undefined;
        }
      }
    }, {
      key: "__getValue",
      value: function __getValue() {}
    }, {
      key: "__getAnimatedValue",
      value: function __getAnimatedValue() {
        return this.__getValue();
      }
    }, {
      key: "__addChild",
      value: function __addChild(child) {}
    }, {
      key: "__removeChild",
      value: function __removeChild(child) {}
    }, {
      key: "__getChildren",
      value: function __getChildren() {
        return [];
      }
    }, {
      key: "__makeNative",
      value: function __makeNative(platformConfig) {
        (0, _invariant.default)(this.__isNative, 'This node cannot be made a "native" animated node');
        this._platformConfig = platformConfig;
      }
    }, {
      key: "addListener",
      value: function addListener(callback) {
        var id = String(_uniqueId++);
        (0, _classPrivateFieldLooseBase2.default)(this, _listeners)[_listeners].set(id, callback);
        return id;
      }
    }, {
      key: "removeListener",
      value: function removeListener(id) {
        (0, _classPrivateFieldLooseBase2.default)(this, _listeners)[_listeners].delete(id);
      }
    }, {
      key: "removeAllListeners",
      value: function removeAllListeners() {
        (0, _classPrivateFieldLooseBase2.default)(this, _listeners)[_listeners].clear();
      }
    }, {
      key: "hasListeners",
      value: function hasListeners() {
        return (0, _classPrivateFieldLooseBase2.default)(this, _listeners)[_listeners].size > 0;
      }
    }, {
      key: "__onAnimatedValueUpdateReceived",
      value: function __onAnimatedValueUpdateReceived(value) {
        this.__callListeners(value);
      }
    }, {
      key: "__callListeners",
      value: function __callListeners(value) {
        var event = {
          value: value
        };
        (0, _classPrivateFieldLooseBase2.default)(this, _listeners)[_listeners].forEach(function (listener) {
          listener(event);
        });
      }
    }, {
      key: "__getNativeTag",
      value: function __getNativeTag() {
        var nativeTag = this.__nativeTag;
        if (nativeTag == null) {
          _assertNativeAnimatedModule2 == null ? undefined : _assertNativeAnimatedModule2();
          (0, _invariant.default)(this.__isNative, 'Attempt to get native tag from node not marked as "native"');
          nativeTag = _NativeAnimatedHelper.default.generateNewNodeTag();
          this.__nativeTag = nativeTag;
          var config = this.__getNativeConfig();
          if (this._platformConfig) {
            config.platformConfig = this._platformConfig;
          }
          _NativeAnimatedHelper.default.API.createAnimatedNode(nativeTag, config);
        }
        return nativeTag;
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        throw new Error('This JS animated node type cannot be used as native animated node');
      }
    }, {
      key: "__getPlatformConfig",
      value: function __getPlatformConfig() {
        return this._platformConfig;
      }
    }, {
      key: "__setPlatformConfig",
      value: function __setPlatformConfig(platformConfig) {
        this._platformConfig = platformConfig;
      }
    }, {
      key: "toJSON",
      value: function toJSON() {
        return this.__getValue();
      }
    }, {
      key: "__getDebugID",
      value: function __getDebugID() {
        return undefined;
      }
    }]);
  }();
},311,[1,12,13,31,32,304,20]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  exports.isPlainObject = isPlainObject;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _classPrivateFieldLooseBase2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _classPrivateFieldLooseKey2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _AnimatedNode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _AnimatedWithChildren2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && "function" == typeof p ? function (t) { return p.apply(e, t); } : p; }
  var MAX_DEPTH = 5;
  function isPlainObject(value) {
    return value !== null && typeof value === 'object' && Object.getPrototypeOf(value).isPrototypeOf(Object) && !React.isValidElement(value);
  }
  function flatAnimatedNodes(value) {
    var nodes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
    if (depth >= MAX_DEPTH) {
      return nodes;
    }
    if (value instanceof _AnimatedNode.default) {
      nodes.push(value);
    } else if (Array.isArray(value)) {
      for (var ii = 0, length = value.length; ii < length; ii++) {
        var element = value[ii];
        flatAnimatedNodes(element, nodes, depth + 1);
      }
    } else if (isPlainObject(value)) {
      var keys = Object.keys(value);
      for (var _ii2 = 0, _length2 = keys.length; _ii2 < _length2; _ii2++) {
        var key = keys[_ii2];
        flatAnimatedNodes(value[key], nodes, depth + 1);
      }
    }
    return nodes;
  }
  function mapAnimatedNodes(value, fn) {
    var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
    if (depth >= MAX_DEPTH) {
      return value;
    }
    if (value instanceof _AnimatedNode.default) {
      return fn(value);
    } else if (Array.isArray(value)) {
      return value.map(function (element) {
        return mapAnimatedNodes(element, fn, depth + 1);
      });
    } else if (isPlainObject(value)) {
      var result = {};
      var keys = Object.keys(value);
      for (var ii = 0, length = keys.length; ii < length; ii++) {
        var key = keys[ii];
        result[key] = mapAnimatedNodes(value[key], fn, depth + 1);
      }
      return result;
    } else {
      return value;
    }
  }
  var _nodes = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("nodes");
  var AnimatedObject = exports.default = /*#__PURE__*/function (_AnimatedWithChildren) {
    function AnimatedObject(nodes, value, config) {
      var _this;
      (0, _classCallCheck2.default)(this, AnimatedObject);
      _this = _callSuper(this, AnimatedObject, [config]);
      Object.defineProperty(_this, _nodes, {
        writable: true,
        value: undefined
      });
      (0, _classPrivateFieldLooseBase2.default)(_this, _nodes)[_nodes] = nodes;
      _this._value = value;
      return _this;
    }
    (0, _inherits2.default)(AnimatedObject, _AnimatedWithChildren);
    return (0, _createClass2.default)(AnimatedObject, [{
      key: "__getValue",
      value: function __getValue() {
        return mapAnimatedNodes(this._value, function (node) {
          return node.__getValue();
        });
      }
    }, {
      key: "__getValueWithStaticObject",
      value: function __getValueWithStaticObject(staticObject) {
        var nodes = (0, _classPrivateFieldLooseBase2.default)(this, _nodes)[_nodes];
        var index = 0;
        return mapAnimatedNodes(staticObject, function () {
          return nodes[index++].__getValue();
        });
      }
    }, {
      key: "__getAnimatedValue",
      value: function __getAnimatedValue() {
        return mapAnimatedNodes(this._value, function (node) {
          return node.__getAnimatedValue();
        });
      }
    }, {
      key: "__attach",
      value: function __attach() {
        var nodes = (0, _classPrivateFieldLooseBase2.default)(this, _nodes)[_nodes];
        for (var ii = 0, length = nodes.length; ii < length; ii++) {
          var node = nodes[ii];
          node.__addChild(this);
        }
        _superPropGet(AnimatedObject, "__attach", this, 3)([]);
      }
    }, {
      key: "__detach",
      value: function __detach() {
        var nodes = (0, _classPrivateFieldLooseBase2.default)(this, _nodes)[_nodes];
        for (var ii = 0, length = nodes.length; ii < length; ii++) {
          var node = nodes[ii];
          node.__removeChild(this);
        }
        _superPropGet(AnimatedObject, "__detach", this, 3)([]);
      }
    }, {
      key: "__makeNative",
      value: function __makeNative(platformConfig) {
        var nodes = (0, _classPrivateFieldLooseBase2.default)(this, _nodes)[_nodes];
        for (var ii = 0, length = nodes.length; ii < length; ii++) {
          var node = nodes[ii];
          node.__makeNative(platformConfig);
        }
        _superPropGet(AnimatedObject, "__makeNative", this, 3)([platformConfig]);
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        return {
          type: 'object',
          value: mapAnimatedNodes(this._value, function (node) {
            return {
              nodeTag: node.__getNativeTag()
            };
          }),
          debugID: this.__getDebugID()
        };
      }
    }], [{
      key: "from",
      value: function from(value) {
        var nodes = flatAnimatedNodes(value);
        if (nodes.length === 0) {
          return null;
        }
        return new AnimatedObject(nodes, value);
      }
    }]);
  }(_AnimatedWithChildren2.default);
},312,[1,12,13,23,25,26,28,31,32,311,313,119]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _NativeAnimatedHelper2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _AnimatedNode2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && "function" == typeof p ? function (t) { return p.apply(e, t); } : p; }
  var _NativeAnimatedHelper = _NativeAnimatedHelper2.default.API,
    connectAnimatedNodes = _NativeAnimatedHelper.connectAnimatedNodes,
    disconnectAnimatedNodes = _NativeAnimatedHelper.disconnectAnimatedNodes;
  var AnimatedWithChildren = exports.default = /*#__PURE__*/function (_AnimatedNode) {
    function AnimatedWithChildren() {
      var _this;
      (0, _classCallCheck2.default)(this, AnimatedWithChildren);
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _callSuper(this, AnimatedWithChildren, [].concat(args));
      _this._children = [];
      return _this;
    }
    (0, _inherits2.default)(AnimatedWithChildren, _AnimatedNode);
    return (0, _createClass2.default)(AnimatedWithChildren, [{
      key: "__makeNative",
      value: function __makeNative(platformConfig) {
        if (!this.__isNative) {
          this.__isNative = true;
          var children = this._children;
          var length = children.length;
          if (length > 0) {
            for (var ii = 0; ii < length; ii++) {
              var child = children[ii];
              child.__makeNative(platformConfig);
              connectAnimatedNodes(this.__getNativeTag(), child.__getNativeTag());
            }
          }
        }
        _superPropGet(AnimatedWithChildren, "__makeNative", this, 3)([platformConfig]);
      }
    }, {
      key: "__addChild",
      value: function __addChild(child) {
        if (this._children.length === 0) {
          this.__attach();
        }
        this._children.push(child);
        if (this.__isNative) {
          child.__makeNative(this.__getPlatformConfig());
          connectAnimatedNodes(this.__getNativeTag(), child.__getNativeTag());
        }
      }
    }, {
      key: "__removeChild",
      value: function __removeChild(child) {
        var index = this._children.indexOf(child);
        if (index === -1) {
          console.warn("Trying to remove a child that doesn't exist");
          return;
        }
        if (this.__isNative && child.__isNative) {
          disconnectAnimatedNodes(this.__getNativeTag(), child.__getNativeTag());
        }
        this._children.splice(index, 1);
        if (this._children.length === 0) {
          this.__detach();
        }
      }
    }, {
      key: "__getChildren",
      value: function __getChildren() {
        return this._children;
      }
    }, {
      key: "__callListeners",
      value: function __callListeners(value) {
        _superPropGet(AnimatedWithChildren, "__callListeners", this, 3)([value]);
        if (!this.__isNative) {
          var children = this._children;
          for (var ii = 0, length = children.length; ii < length; ii++) {
            var child = children[ii];
            if (child.__getValue) {
              child.__callListeners(child.__getValue());
            }
          }
        }
      }
    }]);
  }(_AnimatedNode2.default);
},313,[1,12,13,23,25,26,28,304,311]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _classPrivateFieldLooseBase2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _classPrivateFieldLooseKey2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var ReactNativeFeatureFlags = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));
  var _flattenStyle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));
  var _AnimatedNode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));
  var _AnimatedObject = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));
  var _AnimatedTransform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));
  var _AnimatedWithChildren2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));
  var _Object$hasOwn;
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && "function" == typeof p ? function (t) { return p.apply(e, t); } : p; }
  function createAnimatedStyle(inputStyle, allowlist, keepUnanimatedValues) {
    var nodeKeys = [];
    var nodes = [];
    var style = {};
    var keys = Object.keys(inputStyle);
    for (var ii = 0, length = keys.length; ii < length; ii++) {
      var key = keys[ii];
      var value = inputStyle[key];
      if (allowlist == null || hasOwn(allowlist, key)) {
        var node = undefined;
        if (value != null && key === 'transform') {
          node = ReactNativeFeatureFlags.shouldUseAnimatedObjectForTransform() ? _AnimatedObject.default.from(value) : _AnimatedTransform.default.from(value);
        } else if (value instanceof _AnimatedNode.default) {
          node = value;
        } else {
          node = _AnimatedObject.default.from(value);
        }
        if (node == null) {
          if (keepUnanimatedValues) {
            style[key] = value;
          }
        } else {
          nodeKeys.push(key);
          nodes.push(node);
          style[key] = node;
        }
      } else {
        if (keepUnanimatedValues) {
          style[key] = value;
        }
      }
    }
    return [nodeKeys, nodes, style];
  }
  var _inputStyle = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("inputStyle");
  var _nodeKeys = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("nodeKeys");
  var _nodes = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("nodes");
  var _style = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("style");
  var AnimatedStyle = exports.default = /*#__PURE__*/function (_AnimatedWithChildren) {
    function AnimatedStyle(nodeKeys, nodes, style, inputStyle, config) {
      var _this;
      (0, _classCallCheck2.default)(this, AnimatedStyle);
      _this = _callSuper(this, AnimatedStyle, [config]);
      Object.defineProperty(_this, _inputStyle, {
        writable: true,
        value: undefined
      });
      Object.defineProperty(_this, _nodeKeys, {
        writable: true,
        value: undefined
      });
      Object.defineProperty(_this, _nodes, {
        writable: true,
        value: undefined
      });
      Object.defineProperty(_this, _style, {
        writable: true,
        value: undefined
      });
      (0, _classPrivateFieldLooseBase2.default)(_this, _nodeKeys)[_nodeKeys] = nodeKeys;
      (0, _classPrivateFieldLooseBase2.default)(_this, _nodes)[_nodes] = nodes;
      (0, _classPrivateFieldLooseBase2.default)(_this, _style)[_style] = style;
      (0, _classPrivateFieldLooseBase2.default)(_this, _inputStyle)[_inputStyle] = inputStyle;
      return _this;
    }
    (0, _inherits2.default)(AnimatedStyle, _AnimatedWithChildren);
    return (0, _createClass2.default)(AnimatedStyle, [{
      key: "__getValue",
      value: function __getValue() {
        var style = {};
        var keys = Object.keys((0, _classPrivateFieldLooseBase2.default)(this, _style)[_style]);
        for (var ii = 0, length = keys.length; ii < length; ii++) {
          var key = keys[ii];
          var value = (0, _classPrivateFieldLooseBase2.default)(this, _style)[_style][key];
          if (value instanceof _AnimatedNode.default) {
            style[key] = value.__getValue();
          } else {
            style[key] = value;
          }
        }
        return _Platform.default.OS === 'web' ? [(0, _classPrivateFieldLooseBase2.default)(this, _inputStyle)[_inputStyle], style] : style;
      }
    }, {
      key: "__getValueWithStaticStyle",
      value: function __getValueWithStaticStyle(staticStyle) {
        var flatStaticStyle = (0, _flattenStyle.default)(staticStyle);
        var style = flatStaticStyle == null ? {} : flatStaticStyle === staticStyle ? Object.assign({}, flatStaticStyle) : flatStaticStyle;
        var keys = Object.keys(style);
        for (var ii = 0, length = keys.length; ii < length; ii++) {
          var key = keys[ii];
          var maybeNode = (0, _classPrivateFieldLooseBase2.default)(this, _style)[_style][key];
          if (key === 'transform' && maybeNode instanceof _AnimatedTransform.default) {
            style[key] = maybeNode.__getValueWithStaticTransforms(Array.isArray(style[key]) ? style[key] : []);
          } else if (maybeNode instanceof _AnimatedObject.default) {
            style[key] = maybeNode.__getValueWithStaticObject(style[key]);
          } else if (maybeNode instanceof _AnimatedNode.default) {
            style[key] = maybeNode.__getValue();
          }
        }
        return _Platform.default.OS === 'web' ? [(0, _classPrivateFieldLooseBase2.default)(this, _inputStyle)[_inputStyle], style] : style;
      }
    }, {
      key: "__getAnimatedValue",
      value: function __getAnimatedValue() {
        var style = {};
        var nodeKeys = (0, _classPrivateFieldLooseBase2.default)(this, _nodeKeys)[_nodeKeys];
        var nodes = (0, _classPrivateFieldLooseBase2.default)(this, _nodes)[_nodes];
        for (var ii = 0, length = nodes.length; ii < length; ii++) {
          var key = nodeKeys[ii];
          var node = nodes[ii];
          style[key] = node.__getAnimatedValue();
        }
        return style;
      }
    }, {
      key: "__attach",
      value: function __attach() {
        var nodes = (0, _classPrivateFieldLooseBase2.default)(this, _nodes)[_nodes];
        for (var ii = 0, length = nodes.length; ii < length; ii++) {
          var node = nodes[ii];
          node.__addChild(this);
        }
        _superPropGet(AnimatedStyle, "__attach", this, 3)([]);
      }
    }, {
      key: "__detach",
      value: function __detach() {
        var nodes = (0, _classPrivateFieldLooseBase2.default)(this, _nodes)[_nodes];
        for (var ii = 0, length = nodes.length; ii < length; ii++) {
          var node = nodes[ii];
          node.__removeChild(this);
        }
        _superPropGet(AnimatedStyle, "__detach", this, 3)([]);
      }
    }, {
      key: "__makeNative",
      value: function __makeNative(platformConfig) {
        var nodes = (0, _classPrivateFieldLooseBase2.default)(this, _nodes)[_nodes];
        for (var ii = 0, length = nodes.length; ii < length; ii++) {
          var node = nodes[ii];
          node.__makeNative(platformConfig);
        }
        _superPropGet(AnimatedStyle, "__makeNative", this, 3)([platformConfig]);
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        var platformConfig = this.__getPlatformConfig();
        var styleConfig = {};
        var nodeKeys = (0, _classPrivateFieldLooseBase2.default)(this, _nodeKeys)[_nodeKeys];
        var nodes = (0, _classPrivateFieldLooseBase2.default)(this, _nodes)[_nodes];
        for (var ii = 0, length = nodes.length; ii < length; ii++) {
          var key = nodeKeys[ii];
          var node = nodes[ii];
          node.__makeNative(platformConfig);
          styleConfig[key] = node.__getNativeTag();
        }
        return {
          type: 'style',
          style: styleConfig,
          debugID: this.__getDebugID()
        };
      }
    }], [{
      key: "from",
      value: function from(inputStyle, allowlist) {
        var flatStyle = (0, _flattenStyle.default)(inputStyle);
        if (flatStyle == null) {
          return null;
        }
        var _createAnimatedStyle = createAnimatedStyle(flatStyle, allowlist, _Platform.default.OS !== 'web'),
          _createAnimatedStyle2 = (0, _slicedToArray2.default)(_createAnimatedStyle, 3),
          nodeKeys = _createAnimatedStyle2[0],
          nodes = _createAnimatedStyle2[1],
          style = _createAnimatedStyle2[2];
        if (nodes.length === 0) {
          return null;
        }
        return new AnimatedStyle(nodeKeys, nodes, style, inputStyle);
      }
    }]);
  }(_AnimatedWithChildren2.default);
  var _hasOwnProp = Object.prototype.hasOwnProperty;
  var hasOwn = (_Object$hasOwn = Object.hasOwn) != null ? _Object$hasOwn : function (obj, prop) {
    return _hasOwnProp.call(obj, prop);
  };
},314,[1,38,12,13,23,25,26,28,31,32,73,128,33,311,312,315,313]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _classPrivateFieldLooseBase2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _classPrivateFieldLooseKey2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _NativeAnimatedHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _AnimatedNode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  var _AnimatedWithChildren2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && "function" == typeof p ? function (t) { return p.apply(e, t); } : p; }
  function flatAnimatedNodes(transforms) {
    var nodes = [];
    for (var ii = 0, length = transforms.length; ii < length; ii++) {
      var transform = transforms[ii];
      for (var key in transform) {
        var value = transform[key];
        if (value instanceof _AnimatedNode.default) {
          nodes.push(value);
        }
      }
    }
    return nodes;
  }
  var _nodes = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("nodes");
  var AnimatedTransform = exports.default = /*#__PURE__*/function (_AnimatedWithChildren) {
    function AnimatedTransform(nodes, transforms, config) {
      var _this;
      (0, _classCallCheck2.default)(this, AnimatedTransform);
      _this = _callSuper(this, AnimatedTransform, [config]);
      Object.defineProperty(_this, _nodes, {
        writable: true,
        value: undefined
      });
      (0, _classPrivateFieldLooseBase2.default)(_this, _nodes)[_nodes] = nodes;
      _this._transforms = transforms;
      return _this;
    }
    (0, _inherits2.default)(AnimatedTransform, _AnimatedWithChildren);
    return (0, _createClass2.default)(AnimatedTransform, [{
      key: "__makeNative",
      value: function __makeNative(platformConfig) {
        var nodes = (0, _classPrivateFieldLooseBase2.default)(this, _nodes)[_nodes];
        for (var ii = 0, length = nodes.length; ii < length; ii++) {
          var node = nodes[ii];
          node.__makeNative(platformConfig);
        }
        _superPropGet(AnimatedTransform, "__makeNative", this, 3)([platformConfig]);
      }
    }, {
      key: "__getValue",
      value: function __getValue() {
        return mapTransforms(this._transforms, function (animatedNode) {
          return animatedNode.__getValue();
        });
      }
    }, {
      key: "__getValueWithStaticTransforms",
      value: function __getValueWithStaticTransforms(staticTransforms) {
        var values = [];
        mapTransforms(this._transforms, function (node) {
          values.push(node.__getValue());
        });
        return mapTransforms(staticTransforms, function () {
          return values.shift();
        });
      }
    }, {
      key: "__getAnimatedValue",
      value: function __getAnimatedValue() {
        return mapTransforms(this._transforms, function (animatedNode) {
          return animatedNode.__getAnimatedValue();
        });
      }
    }, {
      key: "__attach",
      value: function __attach() {
        var nodes = (0, _classPrivateFieldLooseBase2.default)(this, _nodes)[_nodes];
        for (var ii = 0, length = nodes.length; ii < length; ii++) {
          var node = nodes[ii];
          node.__addChild(this);
        }
        _superPropGet(AnimatedTransform, "__attach", this, 3)([]);
      }
    }, {
      key: "__detach",
      value: function __detach() {
        var nodes = (0, _classPrivateFieldLooseBase2.default)(this, _nodes)[_nodes];
        for (var ii = 0, length = nodes.length; ii < length; ii++) {
          var node = nodes[ii];
          node.__removeChild(this);
        }
        _superPropGet(AnimatedTransform, "__detach", this, 3)([]);
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        var transformsConfig = [];
        var transforms = this._transforms;
        for (var ii = 0, length = transforms.length; ii < length; ii++) {
          var transform = transforms[ii];
          for (var key in transform) {
            var value = transform[key];
            if (value instanceof _AnimatedNode.default) {
              transformsConfig.push({
                type: 'animated',
                property: key,
                nodeTag: value.__getNativeTag()
              });
            } else {
              transformsConfig.push({
                type: 'static',
                property: key,
                value: _NativeAnimatedHelper.default.transformDataType(value)
              });
            }
          }
        }
        return {
          type: 'transform',
          transforms: transformsConfig,
          debugID: this.__getDebugID()
        };
      }
    }], [{
      key: "from",
      value: function from(transforms) {
        var nodes = flatAnimatedNodes(Array.isArray(transforms) ? transforms : []);
        if (nodes.length === 0) {
          return null;
        }
        return new AnimatedTransform(nodes, transforms);
      }
    }]);
  }(_AnimatedWithChildren2.default);
  function mapTransforms(transforms, mapFunction) {
    return transforms.map(function (transform) {
      var result = {};
      for (var key in transform) {
        var value = transform[key];
        if (value instanceof _AnimatedNode.default) {
          result[key] = mapFunction(value);
        } else if (Array.isArray(value)) {
          result[key] = value.map(function (element) {
            return element instanceof _AnimatedNode.default ? mapFunction(element) : element;
          });
        } else if (typeof value === 'object') {
          var object = {};
          for (var propertyName in value) {
            var propertyValue = value[propertyName];
            object[propertyName] = propertyValue instanceof _AnimatedNode.default ? mapFunction(propertyValue) : propertyValue;
          }
          result[key] = object;
        } else {
          result[key] = value;
        }
      }
      return result;
    });
  }
},315,[1,12,13,23,25,26,28,31,32,304,311,313]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AnimatedEvent = undefined;
  exports.attachNativeEvent = attachNativeEvent;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _NativeAnimatedHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _AnimatedValue = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _AnimatedValueXY = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  function attachNativeEvent(viewRef, eventName, argMapping, platformConfig) {
    var eventMappings = [];
    var _traverse = function traverse(value, path) {
      if (value instanceof _AnimatedValue.default) {
        value.__makeNative(platformConfig);
        eventMappings.push({
          nativeEventPath: path,
          animatedValueTag: value.__getNativeTag()
        });
      } else if (value instanceof _AnimatedValueXY.default) {
        _traverse(value.x, path.concat('x'));
        _traverse(value.y, path.concat('y'));
      } else if (typeof value === 'object') {
        for (var _key2 in value) {
          _traverse(value[_key2], path.concat(_key2));
        }
      }
    };
    (0, _invariant.default)(argMapping[0] && argMapping[0].nativeEvent, 'Native driven events only support animated values contained inside `nativeEvent`.');
    _traverse(argMapping[0].nativeEvent, []);
    var viewTag = (0, _$$_REQUIRE(_dependencyMap[7]).findNodeHandle)(viewRef);
    if (viewTag != null) {
      eventMappings.forEach(function (mapping) {
        _NativeAnimatedHelper.default.API.addAnimatedEventToView(viewTag, eventName, mapping);
      });
    }
    return {
      detach: function detach() {
        if (viewTag != null) {
          eventMappings.forEach(function (mapping) {
            _NativeAnimatedHelper.default.API.removeAnimatedEventFromView(viewTag, eventName, mapping.animatedValueTag);
          });
        }
      }
    };
  }
  var AnimatedEvent = exports.AnimatedEvent = /*#__PURE__*/function () {
    function AnimatedEvent(argMapping, config) {
      var _this = this;
      (0, _classCallCheck2.default)(this, AnimatedEvent);
      this._listeners = [];
      this._callListeners = function () {
        for (var _len = arguments.length, args = new Array(_len), _key3 = 0; _key3 < _len; _key3++) {
          args[_key3] = arguments[_key3];
        }
        _this._listeners.forEach(function (listener) {
          return listener.apply(undefined, args);
        });
      };
      this._argMapping = argMapping;
      if (config == null) {
        console.warn('Animated.event now requires a second argument for options');
        config = {
          useNativeDriver: false
        };
      }
      if (config.listener) {
        this.__addListener(config.listener);
      }
      this._attachedEvent = null;
      this.__isNative = _NativeAnimatedHelper.default.shouldUseNativeDriver(config);
      this.__platformConfig = config.platformConfig;
    }
    return (0, _createClass2.default)(AnimatedEvent, [{
      key: "__addListener",
      value: function __addListener(callback) {
        this._listeners.push(callback);
      }
    }, {
      key: "__removeListener",
      value: function __removeListener(callback) {
        this._listeners = this._listeners.filter(function (listener) {
          return listener !== callback;
        });
      }
    }, {
      key: "__attach",
      value: function __attach(viewRef, eventName) {
        (0, _invariant.default)(this.__isNative, 'Only native driven events need to be attached.');
        this._attachedEvent = attachNativeEvent(viewRef, eventName, this._argMapping, this.__platformConfig);
      }
    }, {
      key: "__detach",
      value: function __detach(viewTag, eventName) {
        (0, _invariant.default)(this.__isNative, 'Only native driven events need to be detached.');
        this._attachedEvent && this._attachedEvent.detach();
      }
    }, {
      key: "__getHandler",
      value: function __getHandler() {
        var _this2 = this;
        if (this.__isNative) {
          {
            return this._callListeners;
          }
        }
        var validatedMapping = false;
        return function () {
          for (var _len3 = arguments.length, args = new Array(_len3), _key5 = 0; _key5 < _len3; _key5++) {
            args[_key5] = arguments[_key5];
          }
          var _traverse2 = function traverse(recMapping, recEvt) {
            if (recMapping instanceof _AnimatedValue.default) {
              if (typeof recEvt === 'number') {
                recMapping.setValue(recEvt);
              }
            } else if (recMapping instanceof _AnimatedValueXY.default) {
              if (typeof recEvt === 'object') {
                _traverse2(recMapping.x, recEvt.x);
                _traverse2(recMapping.y, recEvt.y);
              }
            } else if (typeof recMapping === 'object') {
              for (var mappingKey in recMapping) {
                _traverse2(recMapping[mappingKey], recEvt[mappingKey]);
              }
            }
          };
          _this2._argMapping.forEach(function (mapping, idx) {
            _traverse2(mapping, args[idx]);
          });
          _this2._callListeners.apply(_this2, args);
        };
      }
    }]);
  }();
},316,[1,12,13,304,317,324,20,57]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  exports.flushValue = flushValue;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _classPrivateFieldLooseBase2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _classPrivateFieldLooseKey2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _NativeAnimatedHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _InteractionManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  var _AnimatedInterpolation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));
  var _AnimatedWithChildren2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && "function" == typeof p ? function (t) { return p.apply(e, t); } : p; }
  var NativeAnimatedAPI = _NativeAnimatedHelper.default.API;
  function flushValue(rootNode) {
    var leaves = new Set();
    function findAnimatedStyles(node) {
      if (typeof node.update === 'function') {
        leaves.add(node);
      } else {
        node.__getChildren().forEach(findAnimatedStyles);
      }
    }
    findAnimatedStyles(rootNode);
    leaves.forEach(function (leaf) {
      return leaf.update();
    });
  }
  function _executeAsAnimatedBatch(id, operation) {
    NativeAnimatedAPI.setWaitingForIdentifier(id);
    operation();
    NativeAnimatedAPI.unsetWaitingForIdentifier(id);
  }
  var _listenerCount = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("listenerCount");
  var _updateSubscription = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("updateSubscription");
  var _ensureUpdateSubscriptionExists = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("ensureUpdateSubscriptionExists");
  var AnimatedValue = exports.default = /*#__PURE__*/function (_AnimatedWithChildren) {
    function AnimatedValue(value, config) {
      var _this;
      (0, _classCallCheck2.default)(this, AnimatedValue);
      _this = _callSuper(this, AnimatedValue, [config]);
      Object.defineProperty(_this, _ensureUpdateSubscriptionExists, {
        value: _ensureUpdateSubscriptionExists2
      });
      Object.defineProperty(_this, _listenerCount, {
        writable: true,
        value: 0
      });
      Object.defineProperty(_this, _updateSubscription, {
        writable: true,
        value: null
      });
      if (typeof value !== 'number') {
        throw new Error('AnimatedValue: Attempting to set value to undefined');
      }
      _this._startingValue = _this._value = value;
      _this._offset = 0;
      _this._animation = null;
      if (config && config.useNativeDriver) {
        _this.__makeNative();
      }
      return _this;
    }
    (0, _inherits2.default)(AnimatedValue, _AnimatedWithChildren);
    return (0, _createClass2.default)(AnimatedValue, [{
      key: "__detach",
      value: function __detach() {
        var _this2 = this;
        if (this.__isNative) {
          NativeAnimatedAPI.getValue(this.__getNativeTag(), function (value) {
            _this2._value = value - _this2._offset;
          });
        }
        this.stopAnimation();
        _superPropGet(AnimatedValue, "__detach", this, 3)([]);
      }
    }, {
      key: "__getValue",
      value: function __getValue() {
        return this._value + this._offset;
      }
    }, {
      key: "__makeNative",
      value: function __makeNative(platformConfig) {
        _superPropGet(AnimatedValue, "__makeNative", this, 3)([platformConfig]);
        if ((0, _classPrivateFieldLooseBase2.default)(this, _listenerCount)[_listenerCount] > 0) {
          (0, _classPrivateFieldLooseBase2.default)(this, _ensureUpdateSubscriptionExists)[_ensureUpdateSubscriptionExists]();
        }
      }
    }, {
      key: "addListener",
      value: function addListener(callback) {
        var id = _superPropGet(AnimatedValue, "addListener", this, 3)([callback]);
        (0, _classPrivateFieldLooseBase2.default)(this, _listenerCount)[_listenerCount]++;
        if (this.__isNative) {
          (0, _classPrivateFieldLooseBase2.default)(this, _ensureUpdateSubscriptionExists)[_ensureUpdateSubscriptionExists]();
        }
        return id;
      }
    }, {
      key: "removeListener",
      value: function removeListener(id) {
        _superPropGet(AnimatedValue, "removeListener", this, 3)([id]);
        (0, _classPrivateFieldLooseBase2.default)(this, _listenerCount)[_listenerCount]--;
        if (this.__isNative && (0, _classPrivateFieldLooseBase2.default)(this, _listenerCount)[_listenerCount] === 0) {
          var _classPrivateFieldLoo;
          (_classPrivateFieldLoo = (0, _classPrivateFieldLooseBase2.default)(this, _updateSubscription)[_updateSubscription]) == null ? undefined : _classPrivateFieldLoo.remove();
        }
      }
    }, {
      key: "removeAllListeners",
      value: function removeAllListeners() {
        _superPropGet(AnimatedValue, "removeAllListeners", this, 3)([]);
        (0, _classPrivateFieldLooseBase2.default)(this, _listenerCount)[_listenerCount] = 0;
        if (this.__isNative) {
          var _classPrivateFieldLoo2;
          (_classPrivateFieldLoo2 = (0, _classPrivateFieldLooseBase2.default)(this, _updateSubscription)[_updateSubscription]) == null ? undefined : _classPrivateFieldLoo2.remove();
        }
      }
    }, {
      key: "setValue",
      value: function setValue(value) {
        var _this3 = this;
        if (this._animation) {
          this._animation.stop();
          this._animation = null;
        }
        this._updateValue(value, !this.__isNative);
        if (this.__isNative) {
          _executeAsAnimatedBatch(this.__getNativeTag().toString(), function () {
            return NativeAnimatedAPI.setAnimatedNodeValue(_this3.__getNativeTag(), value);
          });
        }
      }
    }, {
      key: "setOffset",
      value: function setOffset(offset) {
        this._offset = offset;
        if (this.__isNative) {
          NativeAnimatedAPI.setAnimatedNodeOffset(this.__getNativeTag(), offset);
        }
      }
    }, {
      key: "flattenOffset",
      value: function flattenOffset() {
        this._value += this._offset;
        this._offset = 0;
        if (this.__isNative) {
          NativeAnimatedAPI.flattenAnimatedNodeOffset(this.__getNativeTag());
        }
      }
    }, {
      key: "extractOffset",
      value: function extractOffset() {
        this._offset += this._value;
        this._value = 0;
        if (this.__isNative) {
          NativeAnimatedAPI.extractAnimatedNodeOffset(this.__getNativeTag());
        }
      }
    }, {
      key: "stopAnimation",
      value: function stopAnimation(callback) {
        this.stopTracking();
        this._animation && this._animation.stop();
        this._animation = null;
        if (callback) {
          if (this.__isNative) {
            NativeAnimatedAPI.getValue(this.__getNativeTag(), callback);
          } else {
            callback(this.__getValue());
          }
        }
      }
    }, {
      key: "resetAnimation",
      value: function resetAnimation(callback) {
        this.stopAnimation(callback);
        this._value = this._startingValue;
        if (this.__isNative) {
          NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), this._startingValue);
        }
      }
    }, {
      key: "__onAnimatedValueUpdateReceived",
      value: function __onAnimatedValueUpdateReceived(value) {
        this._updateValue(value, false);
      }
    }, {
      key: "interpolate",
      value: function interpolate(config) {
        return new _AnimatedInterpolation.default(this, config);
      }
    }, {
      key: "animate",
      value: function animate(animation, callback) {
        var _this4 = this;
        var handle = null;
        if (animation.__isInteraction) {
          handle = _InteractionManager.default.createInteractionHandle();
        }
        var previousAnimation = this._animation;
        this._animation && this._animation.stop();
        this._animation = animation;
        animation.start(this._value, function (value) {
          _this4._updateValue(value, true);
        }, function (result) {
          _this4._animation = null;
          if (handle !== null) {
            _InteractionManager.default.clearInteractionHandle(handle);
          }
          callback && callback(result);
        }, previousAnimation, this);
      }
    }, {
      key: "stopTracking",
      value: function stopTracking() {
        this._tracking && this._tracking.__detach();
        this._tracking = null;
      }
    }, {
      key: "track",
      value: function track(tracking) {
        this.stopTracking();
        this._tracking = tracking;
        this._tracking && this._tracking.update();
      }
    }, {
      key: "_updateValue",
      value: function _updateValue(value, flush) {
        if (value === undefined) {
          throw new Error('AnimatedValue: Attempting to set value to undefined');
        }
        this._value = value;
        if (flush) {
          flushValue(this);
        }
        this.__callListeners(this.__getValue());
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        return {
          type: 'value',
          value: this._value,
          offset: this._offset,
          debugID: this.__getDebugID()
        };
      }
    }]);
  }(_AnimatedWithChildren2.default);
  function _ensureUpdateSubscriptionExists2() {
    var _this5 = this;
    if ((0, _classPrivateFieldLooseBase2.default)(this, _updateSubscription)[_updateSubscription] != null) {
      return;
    }
    var nativeTag = this.__getNativeTag();
    NativeAnimatedAPI.startListeningToAnimatedNodeValue(nativeTag);
    var subscription = _NativeAnimatedHelper.default.nativeEventEmitter.addListener('onAnimatedValueUpdate', function (data) {
      if (data.tag === nativeTag) {
        _this5.__onAnimatedValueUpdateReceived(data.value);
      }
    });
    (0, _classPrivateFieldLooseBase2.default)(this, _updateSubscription)[_updateSubscription] = {
      remove: function remove() {
        if ((0, _classPrivateFieldLooseBase2.default)(_this5, _updateSubscription)[_updateSubscription] == null) {
          return;
        }
        (0, _classPrivateFieldLooseBase2.default)(_this5, _updateSubscription)[_updateSubscription] = null;
        subscription.remove();
        NativeAnimatedAPI.stopListeningToAnimatedNodeValue(nativeTag);
      }
    };
  }
},317,[1,12,13,23,25,26,28,31,32,304,318,321,313]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var ReactNativeFeatureFlags = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));
  var _EventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _emitter = new _EventEmitter.default();
  var DEBUG_DELAY = 0;
  var DEBUG = false;
  var InteractionManagerImpl = {
    Events: {
      interactionStart: 'interactionStart',
      interactionComplete: 'interactionComplete'
    },
    runAfterInteractions: function runAfterInteractions(task) {
      var tasks = [];
      var promise = new Promise(function (resolve) {
        _scheduleUpdate();
        if (task) {
          tasks.push(task);
        }
        tasks.push({
          run: resolve,
          name: 'resolve ' + (task && task.name || '?')
        });
        _taskQueue.enqueueTasks(tasks);
      });
      return {
        then: promise.then.bind(promise),
        cancel: function cancel() {
          _taskQueue.cancelTasks(tasks);
        }
      };
    },
    createInteractionHandle: function createInteractionHandle() {
      DEBUG;
      _scheduleUpdate();
      var handle = ++_inc;
      _addInteractionSet.add(handle);
      return handle;
    },
    clearInteractionHandle: function clearInteractionHandle(handle) {
      DEBUG;
      _$$_REQUIRE(_dependencyMap[3])(!!handle, 'InteractionManager: Must provide a handle to clear.');
      _scheduleUpdate();
      _addInteractionSet.delete(handle);
      _deleteInteractionSet.add(handle);
    },
    addListener: _emitter.addListener.bind(_emitter),
    setDeadline: function setDeadline(deadline) {
      _deadline = deadline;
    }
  };
  var _interactionSet = new Set();
  var _addInteractionSet = new Set();
  var _deleteInteractionSet = new Set();
  var _taskQueue = new (_$$_REQUIRE(_dependencyMap[4]).default)({
    onMoreTasks: _scheduleUpdate
  });
  var _nextUpdateHandle = 0;
  var _inc = 0;
  var _deadline = -1;
  function _scheduleUpdate() {
    if (!_nextUpdateHandle) {
      if (_deadline > 0) {
        _nextUpdateHandle = setTimeout(_processUpdate, 0);
      } else {
        _nextUpdateHandle = setImmediate(_processUpdate);
      }
    }
  }
  function _processUpdate() {
    _nextUpdateHandle = 0;
    var interactionCount = _interactionSet.size;
    _addInteractionSet.forEach(function (handle) {
      return _interactionSet.add(handle);
    });
    _deleteInteractionSet.forEach(function (handle) {
      return _interactionSet.delete(handle);
    });
    var nextInteractionCount = _interactionSet.size;
    if (interactionCount !== 0 && nextInteractionCount === 0) {
      _emitter.emit(InteractionManager.Events.interactionComplete);
    } else if (interactionCount === 0 && nextInteractionCount !== 0) {
      _emitter.emit(InteractionManager.Events.interactionStart);
    }
    if (nextInteractionCount === 0) {
      while (_taskQueue.hasTasksToProcess()) {
        _taskQueue.processNext();
        if (_deadline > 0 && _$$_REQUIRE(_dependencyMap[5]).default.getEventLoopRunningTime() >= _deadline) {
          _scheduleUpdate();
          break;
        }
      }
    }
    _addInteractionSet.clear();
    _deleteInteractionSet.clear();
  }
  var InteractionManager = ReactNativeFeatureFlags.disableInteractionManager() ? _$$_REQUIRE(_dependencyMap[6]).default : InteractionManagerImpl;
  var _default = exports.default = InteractionManager;
},318,[1,73,30,20,319,4,320]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var DEBUG = false;
  var TaskQueue = /*#__PURE__*/function () {
    function TaskQueue(_ref) {
      var onMoreTasks = _ref.onMoreTasks;
      (0, _classCallCheck2.default)(this, TaskQueue);
      this._onMoreTasks = onMoreTasks;
      this._queueStack = [{
        tasks: [],
        popable: false
      }];
    }
    return (0, _createClass2.default)(TaskQueue, [{
      key: "enqueue",
      value: function enqueue(task) {
        this._getCurrentQueue().push(task);
      }
    }, {
      key: "enqueueTasks",
      value: function enqueueTasks(tasks) {
        var _this = this;
        tasks.forEach(function (task) {
          return _this.enqueue(task);
        });
      }
    }, {
      key: "cancelTasks",
      value: function cancelTasks(tasksToCancel) {
        this._queueStack = this._queueStack.map(function (queue) {
          return Object.assign({}, queue, {
            tasks: queue.tasks.filter(function (task) {
              return tasksToCancel.indexOf(task) === -1;
            })
          });
        }).filter(function (queue, idx) {
          return queue.tasks.length > 0 || idx === 0;
        });
      }
    }, {
      key: "hasTasksToProcess",
      value: function hasTasksToProcess() {
        return this._getCurrentQueue().length > 0;
      }
    }, {
      key: "processNext",
      value: function processNext() {
        var queue = this._getCurrentQueue();
        if (queue.length) {
          var task = queue.shift();
          try {
            if (typeof task === 'object' && task.gen) {
              DEBUG;
              this._genPromise(task);
            } else if (typeof task === 'object' && task.run) {
              DEBUG;
              task.run();
            } else {
              _$$_REQUIRE(_dependencyMap[3])(typeof task === 'function', 'Expected Function, SimpleTask, or PromiseTask, but got:\n' + JSON.stringify(task, null, 2));
              DEBUG;
              task();
            }
          } catch (e) {
            e.message = 'TaskQueue: Error with task ' + (task.name || '') + ': ' + e.message;
            throw e;
          }
        }
      }
    }, {
      key: "_getCurrentQueue",
      value: function _getCurrentQueue() {
        var stackIdx = this._queueStack.length - 1;
        var queue = this._queueStack[stackIdx];
        if (queue.popable && queue.tasks.length === 0 && this._queueStack.length > 1) {
          this._queueStack.pop();
          DEBUG;
          return this._getCurrentQueue();
        } else {
          return queue.tasks;
        }
      }
    }, {
      key: "_genPromise",
      value: function _genPromise(task) {
        var _this2 = this;
        this._queueStack.push({
          tasks: [],
          popable: false
        });
        var stackIdx = this._queueStack.length - 1;
        var stackItem = this._queueStack[stackIdx];
        DEBUG;
        DEBUG;
        task.gen().then(function () {
          DEBUG;
          stackItem.popable = true;
          _this2.hasTasksToProcess() && _this2._onMoreTasks();
        }).catch(function (ex) {
          setTimeout(function () {
            ex.message = `TaskQueue: Error resolving Promise in task ${task.name}: ${ex.message}`;
            throw ex;
          }, 0);
        });
      }
    }]);
  }();
  var _default = exports.default = TaskQueue;
},319,[1,12,13,20]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  function reject(error) {
    setTimeout(function () {
      throw error;
    }, 0);
  }
  var InteractionManagerStub = {
    Events: {
      interactionStart: 'interactionStart',
      interactionComplete: 'interactionComplete'
    },
    runAfterInteractions: function runAfterInteractions(task) {
      var immediateID;
      var promise = new Promise(function (resolve) {
        immediateID = setImmediate(function () {
          if (typeof task === 'object' && task !== null) {
            if (typeof task.gen === 'function') {
              task.gen().then(resolve, reject);
            } else if (typeof task.run === 'function') {
              try {
                task.run();
                resolve();
              } catch (error) {
                reject(error);
              }
            } else {
              reject(new TypeError(`Task "${task.name}" missing gen or run.`));
            }
          } else if (typeof task === 'function') {
            try {
              task();
              resolve();
            } catch (error) {
              reject(error);
            }
          } else {
            reject(new TypeError('Invalid task of type: ' + typeof task));
          }
        });
      });
      return {
        then: promise.then.bind(promise),
        cancel: function cancel() {
          clearImmediate(immediateID);
        }
      };
    },
    createInteractionHandle: function createInteractionHandle() {
      return -1;
    },
    clearInteractionHandle: function clearInteractionHandle(handle) {
      _$$_REQUIRE(_dependencyMap[0])(!!handle, 'InteractionManager: Must provide a handle to clear.');
    },
    addListener: function addListener() {
      return {
        remove: function remove() {}
      };
    },
    setDeadline: function setDeadline(deadline) {}
  };
  var _default = exports.default = InteractionManagerStub;
},320,[20]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _NativeAnimatedHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _normalizeColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _processColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _Easing = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  var _AnimatedWithChildren2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && "function" == typeof p ? function (t) { return p.apply(e, t); } : p; }
  function createNumericInterpolation(config) {
    var outputRange = config.outputRange;
    var inputRange = config.inputRange;
    var easing = config.easing || _Easing.default.linear;
    var extrapolateLeft = 'extend';
    if (config.extrapolateLeft !== undefined) {
      extrapolateLeft = config.extrapolateLeft;
    } else if (config.extrapolate !== undefined) {
      extrapolateLeft = config.extrapolate;
    }
    var extrapolateRight = 'extend';
    if (config.extrapolateRight !== undefined) {
      extrapolateRight = config.extrapolateRight;
    } else if (config.extrapolate !== undefined) {
      extrapolateRight = config.extrapolate;
    }
    return function (input) {
      (0, _invariant.default)(typeof input === 'number', 'Cannot interpolation an input which is not a number');
      var range = findRange(input, inputRange);
      return interpolate(input, inputRange[range], inputRange[range + 1], outputRange[range], outputRange[range + 1], easing, extrapolateLeft, extrapolateRight);
    };
  }
  function interpolate(input, inputMin, inputMax, outputMin, outputMax, easing, extrapolateLeft, extrapolateRight) {
    var result = input;
    if (result < inputMin) {
      if (extrapolateLeft === 'identity') {
        return result;
      } else if (extrapolateLeft === 'clamp') {
        result = inputMin;
      } else if (extrapolateLeft === 'extend') {}
    }
    if (result > inputMax) {
      if (extrapolateRight === 'identity') {
        return result;
      } else if (extrapolateRight === 'clamp') {
        result = inputMax;
      } else if (extrapolateRight === 'extend') {}
    }
    if (outputMin === outputMax) {
      return outputMin;
    }
    if (inputMin === inputMax) {
      if (input <= inputMin) {
        return outputMin;
      }
      return outputMax;
    }
    if (inputMin === -(1 / 0)) {
      result = -result;
    } else if (inputMax === Infinity) {
      result = result - inputMin;
    } else {
      result = (result - inputMin) / (inputMax - inputMin);
    }
    result = easing(result);
    if (outputMin === -(1 / 0)) {
      result = -result;
    } else if (outputMax === Infinity) {
      result = result + outputMin;
    } else {
      result = result * (outputMax - outputMin) + outputMin;
    }
    return result;
  }
  var numericComponentRegex = /[+-]?(?:\d+\.?\d*|\.\d+)(?:[eE][+-]?\d+)?/g;
  function mapStringToNumericComponents(input) {
    var normalizedColor = (0, _normalizeColor.default)(input);
    (0, _invariant.default)(normalizedColor == null || typeof normalizedColor !== 'object', 'PlatformColors are not supported');
    if (typeof normalizedColor === 'number') {
      normalizedColor = normalizedColor || 0;
      var r = (normalizedColor & 0xff000000) >>> 24;
      var g = (normalizedColor & 0x00ff0000) >>> 16;
      var b = (normalizedColor & 0x0000ff00) >>> 8;
      var a = (normalizedColor & 0x000000ff) / 255;
      return {
        isColor: true,
        components: [r, g, b, a]
      };
    } else {
      var components = [];
      var lastMatchEnd = 0;
      var match;
      while ((match = numericComponentRegex.exec(input)) != null) {
        if (match.index > lastMatchEnd) {
          components.push(input.substring(lastMatchEnd, match.index));
        }
        components.push(parseFloat(match[0]));
        lastMatchEnd = match.index + match[0].length;
      }
      (0, _invariant.default)(components.length > 0, 'outputRange must contain color or value with numeric component');
      if (lastMatchEnd < input.length) {
        components.push(input.substring(lastMatchEnd, input.length));
      }
      return {
        isColor: false,
        components: components
      };
    }
  }
  function createStringInterpolation(config) {
    (0, _invariant.default)(config.outputRange.length >= 2, 'Bad output range');
    var outputRange = config.outputRange.map(mapStringToNumericComponents);
    var isColor = outputRange[0].isColor;
    var numericComponents = outputRange.map(function (output) {
      return isColor ? output.components : output.components.filter(function (c) {
        return typeof c === 'number';
      });
    });
    var interpolations = numericComponents[0].map(function (_, i) {
      return createNumericInterpolation(Object.assign({}, config, {
        outputRange: numericComponents.map(function (components) {
          return components[i];
        })
      }));
    });
    if (!isColor) {
      return function (input) {
        var values = interpolations.map(function (interpolation) {
          return interpolation(input);
        });
        var i = 0;
        return outputRange[0].components.map(function (c) {
          return typeof c === 'number' ? values[i++] : c;
        }).join('');
      };
    } else {
      return function (input) {
        var result = interpolations.map(function (interpolation, i) {
          var value = interpolation(input);
          return i < 3 ? Math.round(value) : Math.round(value * 1000) / 1000;
        });
        return `rgba(${result[0]}, ${result[1]}, ${result[2]}, ${result[3]})`;
      };
    }
  }
  function findRange(input, inputRange) {
    var i;
    for (i = 1; i < inputRange.length - 1; ++i) {
      if (inputRange[i] >= input) {
        break;
      }
    }
    return i - 1;
  }
  var AnimatedInterpolation = exports.default = /*#__PURE__*/function (_AnimatedWithChildren) {
    function AnimatedInterpolation(parent, config) {
      var _this;
      (0, _classCallCheck2.default)(this, AnimatedInterpolation);
      _this = _callSuper(this, AnimatedInterpolation, [config]);
      _this._parent = parent;
      _this._config = config;
      return _this;
    }
    (0, _inherits2.default)(AnimatedInterpolation, _AnimatedWithChildren);
    return (0, _createClass2.default)(AnimatedInterpolation, [{
      key: "_getInterpolation",
      value: function _getInterpolation() {
        if (!this._interpolation) {
          var config = this._config;
          if (config.outputRange && typeof config.outputRange[0] === 'string') {
            this._interpolation = createStringInterpolation(config);
          } else {
            this._interpolation = createNumericInterpolation(config);
          }
        }
        return this._interpolation;
      }
    }, {
      key: "__makeNative",
      value: function __makeNative(platformConfig) {
        this._parent.__makeNative(platformConfig);
        _superPropGet(AnimatedInterpolation, "__makeNative", this, 3)([platformConfig]);
      }
    }, {
      key: "__getValue",
      value: function __getValue() {
        var parentValue = this._parent.__getValue();
        (0, _invariant.default)(typeof parentValue === 'number', 'Cannot interpolate an input which is not a number.');
        return this._getInterpolation()(parentValue);
      }
    }, {
      key: "interpolate",
      value: function interpolate(config) {
        return new AnimatedInterpolation(this, config);
      }
    }, {
      key: "__attach",
      value: function __attach() {
        this._parent.__addChild(this);
        _superPropGet(AnimatedInterpolation, "__attach", this, 3)([]);
      }
    }, {
      key: "__detach",
      value: function __detach() {
        this._parent.__removeChild(this);
        _superPropGet(AnimatedInterpolation, "__detach", this, 3)([]);
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        var outputRange = this._config.outputRange;
        var outputType = null;
        if (typeof outputRange[0] === 'string') {
          outputRange = outputRange.map(function (value) {
            var processedColor = (0, _processColor.default)(value);
            if (typeof processedColor === 'number') {
              outputType = 'color';
              return processedColor;
            } else {
              return _NativeAnimatedHelper.default.transformDataType(value);
            }
          });
        }
        return {
          inputRange: this._config.inputRange,
          outputRange: outputRange,
          outputType: outputType,
          extrapolateLeft: this._config.extrapolateLeft || this._config.extrapolate || 'extend',
          extrapolateRight: this._config.extrapolateRight || this._config.extrapolate || 'extend',
          type: 'interpolation',
          debugID: this.__getDebugID()
        };
      }
    }]);
  }(_AnimatedWithChildren2.default);
},321,[1,12,13,23,25,26,28,304,90,89,322,313,20]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _ease;
  var Easing = {
    step0: function step0(n) {
      return n > 0 ? 1 : 0;
    },
    step1: function step1(n) {
      return n >= 1 ? 1 : 0;
    },
    linear: function linear(t) {
      return t;
    },
    ease: function ease(t) {
      if (!_ease) {
        _ease = Easing.bezier(0.42, 0, 1, 1);
      }
      return _ease(t);
    },
    quad: function quad(t) {
      return t * t;
    },
    cubic: function cubic(t) {
      return t * t * t;
    },
    poly: function poly(n) {
      return function (t) {
        return Math.pow(t, n);
      };
    },
    sin: function sin(t) {
      return 1 - Math.cos(t * Math.PI / 2);
    },
    circle: function circle(t) {
      return 1 - Math.sqrt(1 - t * t);
    },
    exp: function exp(t) {
      return Math.pow(2, 10 * (t - 1));
    },
    elastic: function elastic() {
      var bounciness = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
      var p = bounciness * Math.PI;
      return function (t) {
        return 1 - Math.pow(Math.cos(t * Math.PI / 2), 3) * Math.cos(t * p);
      };
    },
    back: function back() {
      var s = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1.70158;
      return function (t) {
        return t * t * ((s + 1) * t - s);
      };
    },
    bounce: function bounce(t) {
      if (t < 0.36363636363636365) {
        return 7.5625 * t * t;
      }
      if (t < 0.7272727272727273) {
        var _t = t - 0.5454545454545454;
        return 7.5625 * _t * _t + 0.75;
      }
      if (t < 0.9090909090909091) {
        var _t2 = t - 0.8181818181818182;
        return 7.5625 * _t2 * _t2 + 0.9375;
      }
      var t2 = t - 0.9545454545454546;
      return 7.5625 * t2 * t2 + 0.984375;
    },
    bezier: function bezier(x1, y1, x2, y2) {
      var _bezier = _$$_REQUIRE(_dependencyMap[0]).default;
      return _bezier(x1, y1, x2, y2);
    },
    in: function _in(easing) {
      return easing;
    },
    out: function out(easing) {
      return function (t) {
        return 1 - easing(1 - t);
      };
    },
    inOut: function inOut(easing) {
      return function (t) {
        if (t < 0.5) {
          return easing(t * 2) / 2;
        }
        return 1 - easing((1 - t) * 2) / 2;
      };
    }
  };
  var _default = exports.default = Easing;
},322,[323]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = bezier;
  var NEWTON_ITERATIONS = 4;
  var NEWTON_MIN_SLOPE = 0.001;
  var SUBDIVISION_PRECISION = 0.0000001;
  var SUBDIVISION_MAX_ITERATIONS = 10;
  var kSplineTableSize = 11;
  var kSampleStepSize = 0.1;
  var float32ArraySupported = typeof Float32Array === 'function';
  function A(aA1, aA2) {
    return 1.0 - 3.0 * aA2 + 3.0 * aA1;
  }
  function B(aA1, aA2) {
    return 3.0 * aA2 - 6.0 * aA1;
  }
  function C(aA1) {
    return 3.0 * aA1;
  }
  function calcBezier(aT, aA1, aA2) {
    return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;
  }
  function getSlope(aT, aA1, aA2) {
    return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);
  }
  function binarySubdivide(aX, _aA, _aB, mX1, mX2) {
    var currentX,
      currentT,
      i = 0,
      aA = _aA,
      aB = _aB;
    do {
      currentT = aA + (aB - aA) / 2.0;
      currentX = calcBezier(currentT, mX1, mX2) - aX;
      if (currentX > 0.0) {
        aB = currentT;
      } else {
        aA = currentT;
      }
    } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);
    return currentT;
  }
  function newtonRaphsonIterate(aX, _aGuessT, mX1, mX2) {
    var aGuessT = _aGuessT;
    for (var i = 0; i < NEWTON_ITERATIONS; ++i) {
      var currentSlope = getSlope(aGuessT, mX1, mX2);
      if (currentSlope === 0.0) {
        return aGuessT;
      }
      var currentX = calcBezier(aGuessT, mX1, mX2) - aX;
      aGuessT -= currentX / currentSlope;
    }
    return aGuessT;
  }
  function bezier(mX1, mY1, mX2, mY2) {
    if (!(mX1 >= 0 && mX1 <= 1 && mX2 >= 0 && mX2 <= 1)) {
      throw new Error('bezier x values must be in [0, 1] range');
    }
    var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);
    if (mX1 !== mY1 || mX2 !== mY2) {
      for (var i = 0; i < kSplineTableSize; ++i) {
        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);
      }
    }
    function getTForX(aX) {
      var intervalStart = 0.0;
      var currentSample = 1;
      var lastSample = 10;
      for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {
        intervalStart += kSampleStepSize;
      }
      --currentSample;
      var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);
      var guessForT = intervalStart + dist * kSampleStepSize;
      var initialSlope = getSlope(guessForT, mX1, mX2);
      if (initialSlope >= NEWTON_MIN_SLOPE) {
        return newtonRaphsonIterate(aX, guessForT, mX1, mX2);
      } else if (initialSlope === 0.0) {
        return guessForT;
      } else {
        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);
      }
    }
    return function BezierEasing(x) {
      if (mX1 === mY1 && mX2 === mY2) {
        return x;
      }
      if (x === 0) {
        return 0;
      }
      if (x === 1) {
        return 1;
      }
      return calcBezier(getTForX(x), mY1, mY2);
    };
  }
},323,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _AnimatedValue = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _AnimatedWithChildren2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && "function" == typeof p ? function (t) { return p.apply(e, t); } : p; }
  var _uniqueId = 1;
  var AnimatedValueXY = exports.default = /*#__PURE__*/function (_AnimatedWithChildren) {
    function AnimatedValueXY(valueIn, config) {
      var _this;
      (0, _classCallCheck2.default)(this, AnimatedValueXY);
      _this = _callSuper(this, AnimatedValueXY, [config]);
      var value = valueIn || {
        x: 0,
        y: 0
      };
      if (typeof value.x === 'number' && typeof value.y === 'number') {
        _this.x = new _AnimatedValue.default(value.x);
        _this.y = new _AnimatedValue.default(value.y);
      } else {
        (0, _invariant.default)(value.x instanceof _AnimatedValue.default && value.y instanceof _AnimatedValue.default, "AnimatedValueXY must be initialized with an object of numbers or AnimatedValues.");
        _this.x = value.x;
        _this.y = value.y;
      }
      _this._listeners = {};
      if (config && config.useNativeDriver) {
        _this.__makeNative();
      }
      return _this;
    }
    (0, _inherits2.default)(AnimatedValueXY, _AnimatedWithChildren);
    return (0, _createClass2.default)(AnimatedValueXY, [{
      key: "setValue",
      value: function setValue(value) {
        this.x.setValue(value.x);
        this.y.setValue(value.y);
      }
    }, {
      key: "setOffset",
      value: function setOffset(offset) {
        this.x.setOffset(offset.x);
        this.y.setOffset(offset.y);
      }
    }, {
      key: "flattenOffset",
      value: function flattenOffset() {
        this.x.flattenOffset();
        this.y.flattenOffset();
      }
    }, {
      key: "extractOffset",
      value: function extractOffset() {
        this.x.extractOffset();
        this.y.extractOffset();
      }
    }, {
      key: "__getValue",
      value: function __getValue() {
        return {
          x: this.x.__getValue(),
          y: this.y.__getValue()
        };
      }
    }, {
      key: "resetAnimation",
      value: function resetAnimation(callback) {
        this.x.resetAnimation();
        this.y.resetAnimation();
        callback && callback(this.__getValue());
      }
    }, {
      key: "stopAnimation",
      value: function stopAnimation(callback) {
        this.x.stopAnimation();
        this.y.stopAnimation();
        callback && callback(this.__getValue());
      }
    }, {
      key: "addListener",
      value: function addListener(callback) {
        var _this2 = this;
        var id = String(_uniqueId++);
        var jointCallback = function jointCallback(_ref) {
          var number = _ref.value;
          callback(_this2.__getValue());
        };
        this._listeners[id] = {
          x: this.x.addListener(jointCallback),
          y: this.y.addListener(jointCallback)
        };
        return id;
      }
    }, {
      key: "removeListener",
      value: function removeListener(id) {
        this.x.removeListener(this._listeners[id].x);
        this.y.removeListener(this._listeners[id].y);
        delete this._listeners[id];
      }
    }, {
      key: "removeAllListeners",
      value: function removeAllListeners() {
        this.x.removeAllListeners();
        this.y.removeAllListeners();
        this._listeners = {};
      }
    }, {
      key: "getLayout",
      value: function getLayout() {
        return {
          left: this.x,
          top: this.y
        };
      }
    }, {
      key: "getTranslateTransform",
      value: function getTranslateTransform() {
        return [{
          translateX: this.x
        }, {
          translateY: this.y
        }];
      }
    }, {
      key: "__attach",
      value: function __attach() {
        this.x.__addChild(this);
        this.y.__addChild(this);
        _superPropGet(AnimatedValueXY, "__attach", this, 3)([]);
      }
    }, {
      key: "__detach",
      value: function __detach() {
        this.x.__removeChild(this);
        this.y.__removeChild(this);
        _superPropGet(AnimatedValueXY, "__detach", this, 3)([]);
      }
    }, {
      key: "__makeNative",
      value: function __makeNative(platformConfig) {
        this.x.__makeNative(platformConfig);
        this.y.__makeNative(platformConfig);
        _superPropGet(AnimatedValueXY, "__makeNative", this, 3)([platformConfig]);
      }
    }]);
  }(_AnimatedWithChildren2.default);
},324,[1,12,13,23,25,26,28,317,313,20]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _readOnlyError2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _AnimatedColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var SpringConfig = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));
  var _Animation2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && "function" == typeof p ? function (t) { return p.apply(e, t); } : p; }
  var SpringAnimation = exports.default = /*#__PURE__*/function (_Animation) {
    function SpringAnimation(config) {
      var _config$overshootClam, _config$restDisplacem, _config$restSpeedThre, _config$velocity, _config$velocity2, _config$delay;
      var _this;
      (0, _classCallCheck2.default)(this, SpringAnimation);
      _this = _callSuper(this, SpringAnimation, [config]);
      _this._overshootClamping = (_config$overshootClam = config.overshootClamping) != null ? _config$overshootClam : false;
      _this._restDisplacementThreshold = (_config$restDisplacem = config.restDisplacementThreshold) != null ? _config$restDisplacem : 0.001;
      _this._restSpeedThreshold = (_config$restSpeedThre = config.restSpeedThreshold) != null ? _config$restSpeedThre : 0.001;
      _this._initialVelocity = (_config$velocity = config.velocity) != null ? _config$velocity : 0;
      _this._lastVelocity = (_config$velocity2 = config.velocity) != null ? _config$velocity2 : 0;
      _this._toValue = config.toValue;
      _this._delay = (_config$delay = config.delay) != null ? _config$delay : 0;
      _this._platformConfig = config.platformConfig;
      if (config.stiffness !== undefined || config.damping !== undefined || config.mass !== undefined) {
        var _config$stiffness, _config$damping, _config$mass;
        (0, _invariant.default)(config.bounciness === undefined && config.speed === undefined && config.tension === undefined && config.friction === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');
        _this._stiffness = (_config$stiffness = config.stiffness) != null ? _config$stiffness : 100;
        _this._damping = (_config$damping = config.damping) != null ? _config$damping : 10;
        _this._mass = (_config$mass = config.mass) != null ? _config$mass : 1;
      } else if (config.bounciness !== undefined || config.speed !== undefined) {
        var _config$bounciness, _config$speed;
        (0, _invariant.default)(config.tension === undefined && config.friction === undefined && config.stiffness === undefined && config.damping === undefined && config.mass === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');
        var springConfig = SpringConfig.fromBouncinessAndSpeed((_config$bounciness = config.bounciness) != null ? _config$bounciness : 8, (_config$speed = config.speed) != null ? _config$speed : 12);
        _this._stiffness = springConfig.stiffness;
        _this._damping = springConfig.damping;
        _this._mass = 1;
      } else {
        var _config$tension, _config$friction;
        var _springConfig = SpringConfig.fromOrigamiTensionAndFriction((_config$tension = config.tension) != null ? _config$tension : 40, (_config$friction = config.friction) != null ? _config$friction : 7);
        _this._stiffness = _springConfig.stiffness;
        _this._damping = _springConfig.damping;
        _this._mass = 1;
      }
      (0, _invariant.default)(_this._stiffness > 0, 'Stiffness value must be greater than 0');
      (0, _invariant.default)(_this._damping > 0, 'Damping value must be greater than 0');
      (0, _invariant.default)(_this._mass > 0, 'Mass value must be greater than 0');
      return _this;
    }
    (0, _inherits2.default)(SpringAnimation, _Animation);
    return (0, _createClass2.default)(SpringAnimation, [{
      key: "__getNativeAnimationConfig",
      value: function __getNativeAnimationConfig() {
        var _this$_initialVelocit;
        return {
          type: 'spring',
          overshootClamping: this._overshootClamping,
          restDisplacementThreshold: this._restDisplacementThreshold,
          restSpeedThreshold: this._restSpeedThreshold,
          stiffness: this._stiffness,
          damping: this._damping,
          mass: this._mass,
          initialVelocity: (_this$_initialVelocit = this._initialVelocity) != null ? _this$_initialVelocit : this._lastVelocity,
          toValue: this._toValue,
          iterations: this.__iterations,
          platformConfig: this._platformConfig,
          debugID: this.__getDebugID()
        };
      }
    }, {
      key: "start",
      value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {
        var _this2 = this;
        _superPropGet(SpringAnimation, "start", this, 3)([fromValue, onUpdate, onEnd, previousAnimation, animatedValue]);
        this._startPosition = fromValue;
        this._lastPosition = this._startPosition;
        this._onUpdate = onUpdate;
        this._lastTime = Date.now();
        this._frameTime = 0.0;
        if (previousAnimation instanceof SpringAnimation) {
          var internalState = previousAnimation.getInternalState();
          this._lastPosition = internalState.lastPosition;
          this._lastVelocity = internalState.lastVelocity;
          this._initialVelocity = this._lastVelocity;
          this._lastTime = internalState.lastTime;
        }
        var start = function start() {
          var useNativeDriver = _this2.__startAnimationIfNative(animatedValue);
          if (!useNativeDriver) {
            _this2.onUpdate();
          }
        };
        if (this._delay) {
          this._timeout = setTimeout(start, this._delay);
        } else {
          start();
        }
      }
    }, {
      key: "getInternalState",
      value: function getInternalState() {
        return {
          lastPosition: this._lastPosition,
          lastVelocity: this._lastVelocity,
          lastTime: this._lastTime
        };
      }
    }, {
      key: "onUpdate",
      value: function onUpdate() {
        var MAX_STEPS = 64;
        var now = Date.now();
        if (now > this._lastTime + MAX_STEPS) {
          now = this._lastTime + MAX_STEPS;
        }
        var deltaTime = (now - this._lastTime) / 1000;
        this._frameTime += deltaTime;
        var c = this._damping;
        var m = this._mass;
        var k = this._stiffness;
        var v0 = -this._initialVelocity;
        var zeta = c / (2 * Math.sqrt(k * m));
        var omega0 = Math.sqrt(k / m);
        var omega1 = omega0 * Math.sqrt(1.0 - zeta * zeta);
        var x0 = this._toValue - this._startPosition;
        var position = 0.0;
        var velocity = 0.0;
        var t = this._frameTime;
        if (zeta < 1) {
          var envelope = Math.exp(-zeta * omega0 * t);
          position = this._toValue - envelope * ((v0 + zeta * omega0 * x0) / omega1 * Math.sin(omega1 * t) + x0 * Math.cos(omega1 * t));
          velocity = zeta * omega0 * envelope * (Math.sin(omega1 * t) * (v0 + zeta * omega0 * x0) / omega1 + x0 * Math.cos(omega1 * t)) - envelope * (Math.cos(omega1 * t) * (v0 + zeta * omega0 * x0) - omega1 * x0 * Math.sin(omega1 * t));
        } else {
          var _envelope = Math.exp(-omega0 * t);
          position = this._toValue - _envelope * (x0 + (v0 + omega0 * x0) * t);
          velocity = _envelope * (v0 * (t * omega0 - 1) + t * x0 * (omega0 * omega0));
        }
        this._lastTime = now;
        this._lastPosition = position;
        this._lastVelocity = velocity;
        this._onUpdate(position);
        if (!this.__active) {
          return;
        }
        var isOvershooting = false;
        if (this._overshootClamping && this._stiffness !== 0) {
          if (this._startPosition < this._toValue) {
            isOvershooting = position > this._toValue;
          } else {
            isOvershooting = position < this._toValue;
          }
        }
        var isVelocity = Math.abs(velocity) <= this._restSpeedThreshold;
        var isDisplacement = true;
        if (this._stiffness !== 0) {
          isDisplacement = Math.abs(this._toValue - position) <= this._restDisplacementThreshold;
        }
        if (isOvershooting || isVelocity && isDisplacement) {
          if (this._stiffness !== 0) {
            this._lastPosition = this._toValue;
            this._lastVelocity = 0;
            this._onUpdate(this._toValue);
          }
          this.__notifyAnimationEnd({
            finished: true
          });
          return;
        }
        this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));
      }
    }, {
      key: "stop",
      value: function stop() {
        _superPropGet(SpringAnimation, "stop", this, 3)([]);
        clearTimeout(this._timeout);
        if (this._animationFrame != null) {
          global.cancelAnimationFrame(this._animationFrame);
        }
        this.__notifyAnimationEnd({
          finished: false
        });
      }
    }]);
  }(_Animation2.default);
},325,[1,134,12,13,23,25,26,28,326,327,303,20]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _NativeAnimatedHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _normalizeColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _AnimatedValue = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));
  var _AnimatedWithChildren2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && "function" == typeof p ? function (t) { return p.apply(e, t); } : p; }
  var NativeAnimatedAPI = _NativeAnimatedHelper.default.API;
  var defaultColor = {
    r: 0,
    g: 0,
    b: 0,
    a: 1.0
  };
  function processColor(color) {
    if (color === undefined || color === null) {
      return null;
    }
    if (isRgbaValue(color)) {
      return color;
    }
    var normalizedColor = (0, _normalizeColor.default)(color);
    if (normalizedColor === undefined || normalizedColor === null) {
      return null;
    }
    if (typeof normalizedColor === 'object') {
      var processedColorObj = (0, _$$_REQUIRE(_dependencyMap[11]).processColorObject)(normalizedColor);
      if (processedColorObj != null) {
        return processedColorObj;
      }
    } else if (typeof normalizedColor === 'number') {
      var r = (normalizedColor & 0xff000000) >>> 24;
      var g = (normalizedColor & 0x00ff0000) >>> 16;
      var b = (normalizedColor & 0x0000ff00) >>> 8;
      var a = (normalizedColor & 0x000000ff) / 255;
      return {
        r: r,
        g: g,
        b: b,
        a: a
      };
    }
    return null;
  }
  function isRgbaValue(value) {
    return value && typeof value.r === 'number' && typeof value.g === 'number' && typeof value.b === 'number' && typeof value.a === 'number';
  }
  function isRgbaAnimatedValue(value) {
    return value && value.r instanceof _AnimatedValue.default && value.g instanceof _AnimatedValue.default && value.b instanceof _AnimatedValue.default && value.a instanceof _AnimatedValue.default;
  }
  var AnimatedColor = exports.default = /*#__PURE__*/function (_AnimatedWithChildren) {
    function AnimatedColor(valueIn, config) {
      var _this;
      (0, _classCallCheck2.default)(this, AnimatedColor);
      _this = _callSuper(this, AnimatedColor, [config]);
      _this._suspendCallbacks = 0;
      var value = valueIn != null ? valueIn : defaultColor;
      if (isRgbaAnimatedValue(value)) {
        var rgbaAnimatedValue = value;
        _this.r = rgbaAnimatedValue.r;
        _this.g = rgbaAnimatedValue.g;
        _this.b = rgbaAnimatedValue.b;
        _this.a = rgbaAnimatedValue.a;
      } else {
        var _processColor;
        var processedColor = (_processColor = processColor(value)) != null ? _processColor : defaultColor;
        var initColor = defaultColor;
        if (isRgbaValue(processedColor)) {
          initColor = processedColor;
        } else {
          _this.nativeColor = processedColor;
        }
        _this.r = new _AnimatedValue.default(initColor.r);
        _this.g = new _AnimatedValue.default(initColor.g);
        _this.b = new _AnimatedValue.default(initColor.b);
        _this.a = new _AnimatedValue.default(initColor.a);
      }
      if (config != null && config.useNativeDriver) {
        _this.__makeNative();
      }
      return _this;
    }
    (0, _inherits2.default)(AnimatedColor, _AnimatedWithChildren);
    return (0, _createClass2.default)(AnimatedColor, [{
      key: "setValue",
      value: function setValue(value) {
        var _processColor2,
          _this2 = this;
        var shouldUpdateNodeConfig = false;
        if (this.__isNative) {
          var nativeTag = this.__getNativeTag();
          NativeAnimatedAPI.setWaitingForIdentifier(nativeTag.toString());
        }
        var processedColor = (_processColor2 = processColor(value)) != null ? _processColor2 : defaultColor;
        this._withSuspendedCallbacks(function () {
          if (isRgbaValue(processedColor)) {
            var rgbaValue = processedColor;
            _this2.r.setValue(rgbaValue.r);
            _this2.g.setValue(rgbaValue.g);
            _this2.b.setValue(rgbaValue.b);
            _this2.a.setValue(rgbaValue.a);
            if (_this2.nativeColor != null) {
              _this2.nativeColor = null;
              shouldUpdateNodeConfig = true;
            }
          } else {
            var nativeColor = processedColor;
            if (_this2.nativeColor !== nativeColor) {
              _this2.nativeColor = nativeColor;
              shouldUpdateNodeConfig = true;
            }
          }
        });
        if (this.__isNative) {
          var _nativeTag = this.__getNativeTag();
          if (shouldUpdateNodeConfig) {
            NativeAnimatedAPI.updateAnimatedNodeConfig(_nativeTag, this.__getNativeConfig());
          }
          NativeAnimatedAPI.unsetWaitingForIdentifier(_nativeTag.toString());
        } else {
          (0, _AnimatedValue.flushValue)(this);
        }
        this.__callListeners(this.__getValue());
      }
    }, {
      key: "setOffset",
      value: function setOffset(offset) {
        this.r.setOffset(offset.r);
        this.g.setOffset(offset.g);
        this.b.setOffset(offset.b);
        this.a.setOffset(offset.a);
      }
    }, {
      key: "flattenOffset",
      value: function flattenOffset() {
        this.r.flattenOffset();
        this.g.flattenOffset();
        this.b.flattenOffset();
        this.a.flattenOffset();
      }
    }, {
      key: "extractOffset",
      value: function extractOffset() {
        this.r.extractOffset();
        this.g.extractOffset();
        this.b.extractOffset();
        this.a.extractOffset();
      }
    }, {
      key: "stopAnimation",
      value: function stopAnimation(callback) {
        this.r.stopAnimation();
        this.g.stopAnimation();
        this.b.stopAnimation();
        this.a.stopAnimation();
        callback && callback(this.__getValue());
      }
    }, {
      key: "resetAnimation",
      value: function resetAnimation(callback) {
        this.r.resetAnimation();
        this.g.resetAnimation();
        this.b.resetAnimation();
        this.a.resetAnimation();
        callback && callback(this.__getValue());
      }
    }, {
      key: "__getValue",
      value: function __getValue() {
        if (this.nativeColor != null) {
          return this.nativeColor;
        } else {
          return `rgba(${this.r.__getValue()}, ${this.g.__getValue()}, ${this.b.__getValue()}, ${this.a.__getValue()})`;
        }
      }
    }, {
      key: "__attach",
      value: function __attach() {
        this.r.__addChild(this);
        this.g.__addChild(this);
        this.b.__addChild(this);
        this.a.__addChild(this);
        _superPropGet(AnimatedColor, "__attach", this, 3)([]);
      }
    }, {
      key: "__detach",
      value: function __detach() {
        this.r.__removeChild(this);
        this.g.__removeChild(this);
        this.b.__removeChild(this);
        this.a.__removeChild(this);
        _superPropGet(AnimatedColor, "__detach", this, 3)([]);
      }
    }, {
      key: "_withSuspendedCallbacks",
      value: function _withSuspendedCallbacks(callback) {
        this._suspendCallbacks++;
        callback();
        this._suspendCallbacks--;
      }
    }, {
      key: "__callListeners",
      value: function __callListeners(value) {
        if (this._suspendCallbacks === 0) {
          _superPropGet(AnimatedColor, "__callListeners", this, 3)([value]);
        }
      }
    }, {
      key: "__makeNative",
      value: function __makeNative(platformConfig) {
        this.r.__makeNative(platformConfig);
        this.g.__makeNative(platformConfig);
        this.b.__makeNative(platformConfig);
        this.a.__makeNative(platformConfig);
        _superPropGet(AnimatedColor, "__makeNative", this, 3)([platformConfig]);
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        return {
          type: 'color',
          r: this.r.__getNativeTag(),
          g: this.g.__getNativeTag(),
          b: this.b.__getNativeTag(),
          a: this.a.__getNativeTag(),
          nativeColor: this.nativeColor,
          debugID: this.__getDebugID()
        };
      }
    }]);
  }(_AnimatedWithChildren2.default);
},326,[1,12,13,23,25,26,28,304,90,317,313,92]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.fromBouncinessAndSpeed = fromBouncinessAndSpeed;
  exports.fromOrigamiTensionAndFriction = fromOrigamiTensionAndFriction;
  function stiffnessFromOrigamiValue(oValue) {
    return (oValue - 30) * 3.62 + 194;
  }
  function dampingFromOrigamiValue(oValue) {
    return (oValue - 8) * 3 + 25;
  }
  function fromOrigamiTensionAndFriction(tension, friction) {
    return {
      stiffness: stiffnessFromOrigamiValue(tension),
      damping: dampingFromOrigamiValue(friction)
    };
  }
  function fromBouncinessAndSpeed(bounciness, speed) {
    function normalize(value, startValue, endValue) {
      return (value - startValue) / (endValue - startValue);
    }
    function projectNormal(n, start, end) {
      return start + n * (end - start);
    }
    function linearInterpolation(t, start, end) {
      return t * end + (1 - t) * start;
    }
    function quadraticOutInterpolation(t, start, end) {
      return linearInterpolation(2 * t - t * t, start, end);
    }
    function b3Friction1(x) {
      return 0.0007 * Math.pow(x, 3) - 0.031 * Math.pow(x, 2) + 0.64 * x + 1.28;
    }
    function b3Friction2(x) {
      return 0.000044 * Math.pow(x, 3) - 0.006 * Math.pow(x, 2) + 0.36 * x + 2;
    }
    function b3Friction3(x) {
      return 0.00000045 * Math.pow(x, 3) - 0.000332 * Math.pow(x, 2) + 0.1078 * x + 5.84;
    }
    function b3Nobounce(tension) {
      if (tension <= 18) {
        return b3Friction1(tension);
      } else if (tension > 18 && tension <= 44) {
        return b3Friction2(tension);
      } else {
        return b3Friction3(tension);
      }
    }
    var b = normalize(bounciness / 1.7, 0, 20);
    b = projectNormal(b, 0, 0.8);
    var s = normalize(speed / 1.7, 0, 20);
    var bouncyTension = projectNormal(s, 0.5, 200);
    var bouncyFriction = quadraticOutInterpolation(b, b3Nobounce(bouncyTension), 0.01);
    return {
      stiffness: stiffnessFromOrigamiValue(bouncyTension),
      damping: dampingFromOrigamiValue(bouncyFriction)
    };
  }
},327,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _readOnlyError2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _AnimatedColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _Animation2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && "function" == typeof p ? function (t) { return p.apply(e, t); } : p; }
  var _easeInOut;
  function easeInOut() {
    if (!_easeInOut) {
      var Easing = _$$_REQUIRE(_dependencyMap[10]).default;
      _easeInOut = Easing.inOut(Easing.ease);
    }
    return _easeInOut;
  }
  var TimingAnimation = exports.default = /*#__PURE__*/function (_Animation) {
    function TimingAnimation(config) {
      var _config$easing, _config$duration, _config$delay;
      var _this;
      (0, _classCallCheck2.default)(this, TimingAnimation);
      _this = _callSuper(this, TimingAnimation, [config]);
      _this._toValue = config.toValue;
      _this._easing = (_config$easing = config.easing) != null ? _config$easing : easeInOut();
      _this._duration = (_config$duration = config.duration) != null ? _config$duration : 500;
      _this._delay = (_config$delay = config.delay) != null ? _config$delay : 0;
      _this._platformConfig = config.platformConfig;
      return _this;
    }
    (0, _inherits2.default)(TimingAnimation, _Animation);
    return (0, _createClass2.default)(TimingAnimation, [{
      key: "__getNativeAnimationConfig",
      value: function __getNativeAnimationConfig() {
        var frameDuration = 16.666666666666668;
        var frames = [];
        var numFrames = Math.round(this._duration / frameDuration);
        for (var frame = 0; frame < numFrames; frame++) {
          frames.push(this._easing(frame / numFrames));
        }
        frames.push(this._easing(1));
        return {
          type: 'frames',
          frames: frames,
          toValue: this._toValue,
          iterations: this.__iterations,
          platformConfig: this._platformConfig,
          debugID: this.__getDebugID()
        };
      }
    }, {
      key: "start",
      value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {
        var _this2 = this;
        _superPropGet(TimingAnimation, "start", this, 3)([fromValue, onUpdate, onEnd, previousAnimation, animatedValue]);
        this._fromValue = fromValue;
        this._onUpdate = onUpdate;
        var start = function start() {
          _this2._startTime = Date.now();
          var useNativeDriver = _this2.__startAnimationIfNative(animatedValue);
          if (!useNativeDriver) {
            if (_this2._duration === 0) {
              _this2._onUpdate(_this2._toValue);
              _this2.__notifyAnimationEnd({
                finished: true
              });
            } else {
              _this2._animationFrame = requestAnimationFrame(function () {
                return _this2.onUpdate();
              });
            }
          }
        };
        if (this._delay) {
          this._timeout = setTimeout(start, this._delay);
        } else {
          start();
        }
      }
    }, {
      key: "onUpdate",
      value: function onUpdate() {
        var now = Date.now();
        if (now >= this._startTime + this._duration) {
          if (this._duration === 0) {
            this._onUpdate(this._toValue);
          } else {
            this._onUpdate(this._fromValue + this._easing(1) * (this._toValue - this._fromValue));
          }
          this.__notifyAnimationEnd({
            finished: true
          });
          return;
        }
        this._onUpdate(this._fromValue + this._easing((now - this._startTime) / this._duration) * (this._toValue - this._fromValue));
        if (this.__active) {
          this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));
        }
      }
    }, {
      key: "stop",
      value: function stop() {
        _superPropGet(TimingAnimation, "stop", this, 3)([]);
        clearTimeout(this._timeout);
        if (this._animationFrame != null) {
          global.cancelAnimationFrame(this._animationFrame);
        }
        this.__notifyAnimationEnd({
          finished: false
        });
      }
    }]);
  }(_Animation2.default);
},328,[1,134,12,13,23,25,26,28,326,303,322]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = createAnimatedComponent;
  exports.unstable_createAnimatedComponentWithAllowlist = unstable_createAnimatedComponentWithAllowlist;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createAnimatedPropsHook = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _composeStyles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _View = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _useMergeRefs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[6]));
  var React = _react;
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[7]);
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function createAnimatedComponent(Component) {
    return unstable_createAnimatedComponentWithAllowlist(Component, null);
  }
  function unstable_createAnimatedComponentWithAllowlist(Component, allowlist) {
    var useAnimatedProps = (0, _createAnimatedPropsHook.default)(allowlist);
    var AnimatedComponent = React.forwardRef(function (props, forwardedRef) {
      var _useAnimatedProps = useAnimatedProps(props),
        _useAnimatedProps2 = (0, _slicedToArray2.default)(_useAnimatedProps, 2),
        reducedProps = _useAnimatedProps2[0],
        callbackRef = _useAnimatedProps2[1];
      var ref = (0, _useMergeRefs.default)(callbackRef, forwardedRef);
      var passthroughAnimatedPropExplicitValues = reducedProps.passthroughAnimatedPropExplicitValues,
        style = reducedProps.style;
      var passthroughStyle = passthroughAnimatedPropExplicitValues == null ? undefined : passthroughAnimatedPropExplicitValues.style;
      var mergedStyle = (0, _react.useMemo)(function () {
        return (0, _composeStyles.default)(style, passthroughStyle);
      }, [passthroughStyle, style]);
      return /*#__PURE__*/(0, _jsxRuntime.jsx)(Component, Object.assign({}, reducedProps, passthroughAnimatedPropExplicitValues, {
        style: mergedStyle,
        ref: ref
      }));
    });
    AnimatedComponent.displayName = `Animated(${Component.displayName || 'Anonymous'})`;
    return AnimatedComponent;
  }
},329,[1,38,330,254,248,334,119,251]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = createAnimatedPropsHook;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _AnimatedNode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _AnimatedProps = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _AnimatedValue = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _useRefEffect = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var ReactNativeFeatureFlags = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[6]));
  var _NativeAnimatedHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _react = _$$_REQUIRE(_dependencyMap[8]);
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function createAnimatedPropsHook(allowlist) {
    var useAnimatedPropsMemo = (0, _$$_REQUIRE(_dependencyMap[9]).createAnimatedPropsMemoHook)(allowlist);
    return function useAnimatedProps(props) {
      var _useReducer = (0, _react.useReducer)(function (count) {
          return count + 1;
        }, 0),
        _useReducer2 = (0, _slicedToArray2.default)(_useReducer, 2),
        scheduleUpdate = _useReducer2[1];
      var onUpdateRef = (0, _react.useRef)(null);
      var timerRef = (0, _react.useRef)(null);
      var node = useAnimatedPropsMemo(function () {
        return new _AnimatedProps.default(props, function () {
          return onUpdateRef.current == null ? undefined : onUpdateRef.current();
        }, allowlist);
      }, props);
      var useNativePropsInFabric = ReactNativeFeatureFlags.shouldUseSetNativePropsInFabric();
      (0, _react.useEffect)(function () {
        _NativeAnimatedHelper.default.API.flushQueue();
        var drivenAnimationEndedListener = null;
        if (node.__isNative) {
          drivenAnimationEndedListener = _NativeAnimatedHelper.default.nativeEventEmitter.addListener('onUserDrivenAnimationEnded', function (data) {
            node.update();
          });
        }
        return function () {
          var _drivenAnimationEnded;
          (_drivenAnimationEnded = drivenAnimationEndedListener) == null ? undefined : _drivenAnimationEnded.remove();
        };
      });
      var useAnimatedPropsLifecycle = ReactNativeFeatureFlags.scheduleAnimatedCleanupInMicrotask() ? useAnimatedPropsLifecycleWithCleanupInMicrotask : useAnimatedPropsLifecycleWithPrevNodeRef;
      useAnimatedPropsLifecycle(node);
      var refEffect = (0, _react.useCallback)(function (instance) {
        node.setNativeView(instance);
        onUpdateRef.current = function () {
          var isFabricNode = isFabricInstance(instance);
          if (node.__isNative) {
            if (isFabricNode) {
              scheduleUpdate();
            }
            return;
          }
          if (typeof instance !== 'object' || typeof (instance == null ? undefined : instance.setNativeProps) !== 'function') {
            return scheduleUpdate();
          }
          if (!isFabricNode) {
            return instance.setNativeProps(node.__getAnimatedValue());
          }
          if (!useNativePropsInFabric) {
            return scheduleUpdate();
          }
          instance.setNativeProps(node.__getAnimatedValue());
          if (timerRef.current != null) {
            clearTimeout(timerRef.current);
          }
          timerRef.current = setTimeout(function () {
            timerRef.current = null;
            scheduleUpdate();
          }, 48);
        };
        var target = getEventTarget(instance);
        var events = [];
        var animatedValueListeners = [];
        for (var propName in props) {
          var propValue = props[propName];
          if (propValue instanceof _$$_REQUIRE(_dependencyMap[10]).AnimatedEvent && propValue.__isNative) {
            propValue.__attach(target, propName);
            events.push([propName, propValue]);
            addListenersToPropsValue(propValue, animatedValueListeners);
          }
        }
        return function () {
          onUpdateRef.current = null;
          for (var _ref3 of events) {
            var _ref2 = (0, _slicedToArray2.default)(_ref3, 2);
            var _propName = _ref2[0];
            var _propValue = _ref2[1];
            _propValue.__detach(target, _propName);
          }
          for (var _ref5 of animatedValueListeners) {
            var _propValue2 = _ref5.propValue;
            var listenerId = _ref5.listenerId;
            _propValue2.removeListener(listenerId);
          }
        };
      }, [node, useNativePropsInFabric, props]);
      var callbackRef = (0, _useRefEffect.default)(refEffect);
      return [reduceAnimatedProps(node, props), callbackRef];
    };
  }
  function reduceAnimatedProps(node, props) {
    return Object.assign({}, node.__getValueWithStaticProps(props), {
      collapsable: false
    });
  }
  function addListenersToPropsValue(propValue, accumulator) {
    if (propValue instanceof _AnimatedValue.default) {
      var listenerId = propValue.addListener(function () {});
      accumulator.push({
        propValue: propValue,
        listenerId: listenerId
      });
    } else if (Array.isArray(propValue)) {
      for (var prop of propValue) {
        addListenersToPropsValue(prop, accumulator);
      }
    } else if (propValue instanceof Object) {
      addAnimatedValuesListenersToProps(propValue, accumulator);
    }
  }
  function addAnimatedValuesListenersToProps(props, accumulator) {
    for (var propName in props) {
      var propValue = props[propName];
      addListenersToPropsValue(propValue, accumulator);
    }
  }
  function useAnimatedPropsLifecycleWithPrevNodeRef(node) {
    var prevNodeRef = (0, _react.useRef)(null);
    var isUnmountingRef = (0, _react.useRef)(false);
    (0, _react.useInsertionEffect)(function () {
      isUnmountingRef.current = false;
      return function () {
        isUnmountingRef.current = true;
      };
    }, []);
    (0, _react.useInsertionEffect)(function () {
      node.__attach();
      if (prevNodeRef.current != null) {
        var prevNode = prevNodeRef.current;
        prevNode.__restoreDefaultValues();
        prevNode.__detach();
        prevNodeRef.current = null;
      }
      return function () {
        if (isUnmountingRef.current) {
          node.__detach();
        } else {
          prevNodeRef.current = node;
        }
      };
    }, [node]);
  }
  function useAnimatedPropsLifecycleWithCleanupInMicrotask(node) {
    var isMounted = (0, _react.useRef)(false);
    (0, _react.useInsertionEffect)(function () {
      isMounted.current = true;
      node.__attach();
      return function () {
        isMounted.current = false;
        queueMicrotask(function () {
          if (isMounted.current) {
            node.__restoreDefaultValues();
          }
          node.__detach();
        });
      };
    }, [node]);
  }
  function getEventTarget(instance) {
    return typeof instance === 'object' && typeof (instance == null ? undefined : instance.getScrollableNode) === 'function' ? instance.getScrollableNode() : instance;
  }
  function isFabricInstance(instance) {
    var _instance$getScrollRe;
    return (0, _$$_REQUIRE(_dependencyMap[11]).isPublicInstance)(instance) || (0, _$$_REQUIRE(_dependencyMap[11]).isPublicInstance)(instance == null ? undefined : instance.getNativeScrollRef == null ? undefined : instance.getNativeScrollRef()) || (0, _$$_REQUIRE(_dependencyMap[11]).isPublicInstance)(instance == null ? undefined : instance.getScrollResponder == null ? undefined : (_instance$getScrollRe = instance.getScrollResponder()) == null ? undefined : _instance$getScrollRe.getNativeScrollRef == null ? undefined : _instance$getScrollRe.getNativeScrollRef());
  }
},330,[1,38,311,310,317,331,73,304,119,332,316,333]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = useRefEffect;
  var _react = _$$_REQUIRE(_dependencyMap[0]);
  function useRefEffect(effect) {
    var cleanupRef = (0, _react.useRef)(undefined);
    return (0, _react.useCallback)(function (instance) {
      if (cleanupRef.current) {
        cleanupRef.current();
        cleanupRef.current = undefined;
      }
      if (instance != null) {
        cleanupRef.current = effect(instance);
      }
    }, [effect]);
  }
},331,[119]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.areCompositeKeysEqual = areCompositeKeysEqual;
  exports.createAnimatedPropsMemoHook = createAnimatedPropsMemoHook;
  exports.createCompositeKeyForProps = createCompositeKeyForProps;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _AnimatedNode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _flattenStyle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var ReactNativeFeatureFlags = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));
  var _nullthrows = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _react = _$$_REQUIRE(_dependencyMap[6]);
  var _Object$hasOwn;
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function createAnimatedPropsMemoHook(allowlist) {
    return function useAnimatedPropsMemo(create, props) {
      var useAnimatedPropsImpl = ReactNativeFeatureFlags.avoidStateUpdateInAnimatedPropsMemo() ? useAnimatedPropsMemo_ref : useAnimatedPropsMemo_state;
      return useAnimatedPropsImpl(create, props);
    };
    function useAnimatedPropsMemo_ref(create, props) {
      var compositeKey = (0, _react.useMemo)(function () {
        return createCompositeKeyForProps(props, allowlist);
      }, [props]);
      var prevRef = (0, _react.useRef)();
      var prev = prevRef.current;
      var next = prev != null && areCompositeKeysEqual(prev.compositeKey, compositeKey, allowlist) ? prev : {
        compositeKey: compositeKey,
        node: create()
      };
      (0, _react.useInsertionEffect)(function () {
        prevRef.current = next;
      }, [next]);
      return next.node;
    }
    function useAnimatedPropsMemo_state(create, props) {
      var compositeKey = (0, _react.useMemo)(function () {
        return createCompositeKeyForProps(props, allowlist);
      }, [props]);
      var _useState = (0, _react.useState)(function () {
          return {
            allowlist: allowlist,
            compositeKey: compositeKey,
            value: create()
          };
        }),
        _useState2 = (0, _slicedToArray2.default)(_useState, 2),
        state = _useState2[0],
        setState = _useState2[1];
      if (state.allowlist !== allowlist || !areCompositeKeysEqual(state.compositeKey, compositeKey)) {
        setState({
          allowlist: allowlist,
          compositeKey: compositeKey,
          value: create()
        });
      }
      return state.value;
    }
  }
  function createCompositeKeyForProps(props, allowlist) {
    var compositeKey = null;
    var keys = Object.keys(props);
    for (var ii = 0, length = keys.length; ii < length; ii++) {
      var key = keys[ii];
      var value = props[key];
      if (allowlist == null || hasOwn(allowlist, key)) {
        var compositeKeyComponent = undefined;
        if (key === 'style') {
          var flatStyle = (0, _flattenStyle.default)(value);
          if (flatStyle != null) {
            compositeKeyComponent = createCompositeKeyForObject(flatStyle, allowlist == null ? undefined : allowlist.style);
          }
        } else if (value instanceof _AnimatedNode.default || value instanceof _$$_REQUIRE(_dependencyMap[7]).AnimatedEvent) {
          compositeKeyComponent = value;
        } else if (Array.isArray(value)) {
          compositeKeyComponent = allowlist == null ? value : createCompositeKeyForArray(value);
        } else if ((0, _$$_REQUIRE(_dependencyMap[8]).isPlainObject)(value)) {
          compositeKeyComponent = allowlist == null ? value : createCompositeKeyForObject(value);
        }
        if (compositeKeyComponent != null) {
          if (compositeKey == null) {
            compositeKey = {};
          }
          compositeKey[key] = compositeKeyComponent;
        }
      }
    }
    return compositeKey;
  }
  function createCompositeKeyForArray(array) {
    var compositeKey = null;
    for (var ii = 0, length = array.length; ii < length; ii++) {
      var value = array[ii];
      var compositeKeyComponent = undefined;
      if (value instanceof _AnimatedNode.default) {
        compositeKeyComponent = value;
      } else if (Array.isArray(value)) {
        compositeKeyComponent = createCompositeKeyForArray(value);
      } else if ((0, _$$_REQUIRE(_dependencyMap[8]).isPlainObject)(value)) {
        compositeKeyComponent = createCompositeKeyForObject(value);
      }
      if (compositeKeyComponent != null) {
        if (compositeKey == null) {
          compositeKey = new Array(array.length).fill(null);
        }
        compositeKey[ii] = compositeKeyComponent;
      }
    }
    return compositeKey;
  }
  function createCompositeKeyForObject(object, allowlist) {
    var compositeKey = null;
    var keys = Object.keys(object);
    for (var ii = 0, length = keys.length; ii < length; ii++) {
      var key = keys[ii];
      if (allowlist == null || hasOwn(allowlist, key)) {
        var value = object[key];
        var compositeKeyComponent = undefined;
        if (value instanceof _AnimatedNode.default) {
          compositeKeyComponent = value;
        } else if (Array.isArray(value)) {
          compositeKeyComponent = createCompositeKeyForArray(value);
        } else if ((0, _$$_REQUIRE(_dependencyMap[8]).isPlainObject)(value)) {
          compositeKeyComponent = createCompositeKeyForObject(value);
        }
        if (compositeKeyComponent != null) {
          if (compositeKey == null) {
            compositeKey = {};
          }
          compositeKey[key] = compositeKeyComponent;
        }
      }
    }
    return compositeKey;
  }
  function areCompositeKeysEqual(maybePrev, maybeNext, allowlist) {
    if (maybePrev === maybeNext) {
      return true;
    }
    if (maybePrev === null || maybeNext === null) {
      return false;
    }
    var prev = maybePrev;
    var next = maybeNext;
    var keys = Object.keys(prev);
    var length = keys.length;
    if (length !== Object.keys(next).length) {
      return false;
    }
    for (var ii = 0; ii < length; ii++) {
      var key = keys[ii];
      if (!hasOwn(next, key)) {
        return false;
      }
      var prevComponent = prev[key];
      var nextComponent = next[key];
      if (key === 'style') {
        if (!areCompositeKeyComponentsEqual(prevComponent, nextComponent)) {
          return false;
        }
      } else if (prevComponent instanceof _AnimatedNode.default || prevComponent instanceof _$$_REQUIRE(_dependencyMap[7]).AnimatedEvent) {
        if (prevComponent !== nextComponent) {
          return false;
        }
      } else {
        if (allowlist == null) {
          if (prevComponent !== nextComponent) {
            return false;
          }
        } else {
          if (!areCompositeKeyComponentsEqual(prevComponent, nextComponent)) {
            return false;
          }
        }
      }
    }
    return true;
  }
  function areCompositeKeyComponentsEqual(prev, next) {
    if (prev === next) {
      return true;
    }
    if (prev instanceof _AnimatedNode.default) {
      return prev === next;
    }
    if (Array.isArray(prev)) {
      if (!Array.isArray(next)) {
        return false;
      }
      var length = prev.length;
      if (length !== next.length) {
        return false;
      }
      for (var ii = 0; ii < length; ii++) {
        if (!areCompositeKeyComponentsEqual(prev[ii], next[ii])) {
          return false;
        }
      }
      return true;
    }
    if ((0, _$$_REQUIRE(_dependencyMap[8]).isPlainObject)(prev)) {
      if (!(0, _$$_REQUIRE(_dependencyMap[8]).isPlainObject)(next)) {
        return false;
      }
      var keys = Object.keys(prev);
      var _length = keys.length;
      if (_length !== Object.keys(next).length) {
        return false;
      }
      for (var _ii2 = 0; _ii2 < _length; _ii2++) {
        var key = keys[_ii2];
        if (!hasOwn((0, _nullthrows.default)(next), key) || !areCompositeKeyComponentsEqual(prev[key], next[key])) {
          return false;
        }
      }
      return true;
    }
    return false;
  }
  var _hasOwnProp = Object.prototype.hasOwnProperty;
  var hasOwn = (_Object$hasOwn = Object.hasOwn) != null ? _Object$hasOwn : function (obj, prop) {
    return _hasOwnProp.call(obj, prop);
  };
},332,[1,38,311,128,73,45,119,316,312]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.isPublicInstance = isPublicInstance;
  function isPublicInstance(maybeInstance) {
    return maybeInstance != null && (maybeInstance.__nativeTag != null || isLegacyFabricInstance(maybeInstance));
  }
  function isLegacyFabricInstance(maybeInstance) {
    return maybeInstance != null && maybeInstance['_internalInstanceHandle'] != null && maybeInstance['_internalInstanceHandle'].stateNode != null && maybeInstance['_internalInstanceHandle'].stateNode.canonical != null;
  }
},333,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = useMergeRefs;
  var _useRefEffect = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));
  var React = _react;
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function useMergeRefs() {
    for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {
      refs[_key] = arguments[_key];
    }
    var refEffect = (0, _react.useCallback)(function (current) {
      var cleanups = refs.map(function (ref) {
        if (ref == null) {
          return undefined;
        } else {
          if (typeof ref === 'function') {
            var cleanup = ref(current);
            return typeof cleanup === 'function' ? cleanup : function () {
              ref(null);
            };
          } else {
            ref.current = current;
            return function () {
              ref.current = null;
            };
          }
        }
      });
      return function () {
        for (var cleanup of cleanups) {
          cleanup == null ? undefined : cleanup();
        }
      };
    }, [].concat(refs));
    return (0, _useRefEffect.default)(refEffect);
  }
},334,[1,331,119]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _AnimatedInterpolation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _AnimatedValue = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _AnimatedWithChildren2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && "function" == typeof p ? function (t) { return p.apply(e, t); } : p; }
  var AnimatedAddition = exports.default = /*#__PURE__*/function (_AnimatedWithChildren) {
    function AnimatedAddition(a, b, config) {
      var _this;
      (0, _classCallCheck2.default)(this, AnimatedAddition);
      _this = _callSuper(this, AnimatedAddition, [config]);
      _this._a = typeof a === 'number' ? new _AnimatedValue.default(a) : a;
      _this._b = typeof b === 'number' ? new _AnimatedValue.default(b) : b;
      return _this;
    }
    (0, _inherits2.default)(AnimatedAddition, _AnimatedWithChildren);
    return (0, _createClass2.default)(AnimatedAddition, [{
      key: "__makeNative",
      value: function __makeNative(platformConfig) {
        this._a.__makeNative(platformConfig);
        this._b.__makeNative(platformConfig);
        _superPropGet(AnimatedAddition, "__makeNative", this, 3)([platformConfig]);
      }
    }, {
      key: "__getValue",
      value: function __getValue() {
        return this._a.__getValue() + this._b.__getValue();
      }
    }, {
      key: "interpolate",
      value: function interpolate(config) {
        return new _AnimatedInterpolation.default(this, config);
      }
    }, {
      key: "__attach",
      value: function __attach() {
        this._a.__addChild(this);
        this._b.__addChild(this);
        _superPropGet(AnimatedAddition, "__attach", this, 3)([]);
      }
    }, {
      key: "__detach",
      value: function __detach() {
        this._a.__removeChild(this);
        this._b.__removeChild(this);
        _superPropGet(AnimatedAddition, "__detach", this, 3)([]);
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        return {
          type: 'addition',
          input: [this._a.__getNativeTag(), this._b.__getNativeTag()],
          debugID: this.__getDebugID()
        };
      }
    }]);
  }(_AnimatedWithChildren2.default);
},335,[1,12,13,23,25,26,28,321,317,313]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _AnimatedInterpolation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _AnimatedWithChildren2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && "function" == typeof p ? function (t) { return p.apply(e, t); } : p; }
  var AnimatedDiffClamp = exports.default = /*#__PURE__*/function (_AnimatedWithChildren) {
    function AnimatedDiffClamp(a, min, max, config) {
      var _this;
      (0, _classCallCheck2.default)(this, AnimatedDiffClamp);
      _this = _callSuper(this, AnimatedDiffClamp, [config]);
      _this._a = a;
      _this._min = min;
      _this._max = max;
      _this._value = _this._lastValue = _this._a.__getValue();
      return _this;
    }
    (0, _inherits2.default)(AnimatedDiffClamp, _AnimatedWithChildren);
    return (0, _createClass2.default)(AnimatedDiffClamp, [{
      key: "__makeNative",
      value: function __makeNative(platformConfig) {
        this._a.__makeNative(platformConfig);
        _superPropGet(AnimatedDiffClamp, "__makeNative", this, 3)([platformConfig]);
      }
    }, {
      key: "interpolate",
      value: function interpolate(config) {
        return new _AnimatedInterpolation.default(this, config);
      }
    }, {
      key: "__getValue",
      value: function __getValue() {
        var value = this._a.__getValue();
        var diff = value - this._lastValue;
        this._lastValue = value;
        this._value = Math.min(Math.max(this._value + diff, this._min), this._max);
        return this._value;
      }
    }, {
      key: "__attach",
      value: function __attach() {
        this._a.__addChild(this);
        _superPropGet(AnimatedDiffClamp, "__attach", this, 3)([]);
      }
    }, {
      key: "__detach",
      value: function __detach() {
        this._a.__removeChild(this);
        _superPropGet(AnimatedDiffClamp, "__detach", this, 3)([]);
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        return {
          type: 'diffclamp',
          input: this._a.__getNativeTag(),
          min: this._min,
          max: this._max,
          debugID: this.__getDebugID()
        };
      }
    }]);
  }(_AnimatedWithChildren2.default);
},336,[1,12,13,23,25,26,28,321,313]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _AnimatedInterpolation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _AnimatedNode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _AnimatedValue = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _AnimatedWithChildren2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && "function" == typeof p ? function (t) { return p.apply(e, t); } : p; }
  var AnimatedDivision = exports.default = /*#__PURE__*/function (_AnimatedWithChildren) {
    function AnimatedDivision(a, b, config) {
      var _this;
      (0, _classCallCheck2.default)(this, AnimatedDivision);
      _this = _callSuper(this, AnimatedDivision, [config]);
      _this._warnedAboutDivideByZero = false;
      if (b === 0 || b instanceof _AnimatedNode.default && b.__getValue() === 0) {
        console.error('Detected potential division by zero in AnimatedDivision');
      }
      _this._a = typeof a === 'number' ? new _AnimatedValue.default(a) : a;
      _this._b = typeof b === 'number' ? new _AnimatedValue.default(b) : b;
      return _this;
    }
    (0, _inherits2.default)(AnimatedDivision, _AnimatedWithChildren);
    return (0, _createClass2.default)(AnimatedDivision, [{
      key: "__makeNative",
      value: function __makeNative(platformConfig) {
        this._a.__makeNative(platformConfig);
        this._b.__makeNative(platformConfig);
        _superPropGet(AnimatedDivision, "__makeNative", this, 3)([platformConfig]);
      }
    }, {
      key: "__getValue",
      value: function __getValue() {
        var a = this._a.__getValue();
        var b = this._b.__getValue();
        if (b === 0) {
          if (!this._warnedAboutDivideByZero) {
            console.error('Detected division by zero in AnimatedDivision');
            this._warnedAboutDivideByZero = true;
          }
          return 0;
        }
        this._warnedAboutDivideByZero = false;
        return a / b;
      }
    }, {
      key: "interpolate",
      value: function interpolate(config) {
        return new _AnimatedInterpolation.default(this, config);
      }
    }, {
      key: "__attach",
      value: function __attach() {
        this._a.__addChild(this);
        this._b.__addChild(this);
        _superPropGet(AnimatedDivision, "__attach", this, 3)([]);
      }
    }, {
      key: "__detach",
      value: function __detach() {
        this._a.__removeChild(this);
        this._b.__removeChild(this);
        _superPropGet(AnimatedDivision, "__detach", this, 3)([]);
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        return {
          type: 'division',
          input: [this._a.__getNativeTag(), this._b.__getNativeTag()],
          debugID: this.__getDebugID()
        };
      }
    }]);
  }(_AnimatedWithChildren2.default);
},337,[1,12,13,23,25,26,28,321,311,317,313]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _AnimatedInterpolation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _AnimatedWithChildren2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && "function" == typeof p ? function (t) { return p.apply(e, t); } : p; }
  var AnimatedModulo = exports.default = /*#__PURE__*/function (_AnimatedWithChildren) {
    function AnimatedModulo(a, modulus, config) {
      var _this;
      (0, _classCallCheck2.default)(this, AnimatedModulo);
      _this = _callSuper(this, AnimatedModulo, [config]);
      _this._a = a;
      _this._modulus = modulus;
      return _this;
    }
    (0, _inherits2.default)(AnimatedModulo, _AnimatedWithChildren);
    return (0, _createClass2.default)(AnimatedModulo, [{
      key: "__makeNative",
      value: function __makeNative(platformConfig) {
        this._a.__makeNative(platformConfig);
        _superPropGet(AnimatedModulo, "__makeNative", this, 3)([platformConfig]);
      }
    }, {
      key: "__getValue",
      value: function __getValue() {
        return (this._a.__getValue() % this._modulus + this._modulus) % this._modulus;
      }
    }, {
      key: "interpolate",
      value: function interpolate(config) {
        return new _AnimatedInterpolation.default(this, config);
      }
    }, {
      key: "__attach",
      value: function __attach() {
        this._a.__addChild(this);
        _superPropGet(AnimatedModulo, "__attach", this, 3)([]);
      }
    }, {
      key: "__detach",
      value: function __detach() {
        this._a.__removeChild(this);
        _superPropGet(AnimatedModulo, "__detach", this, 3)([]);
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        return {
          type: 'modulus',
          input: this._a.__getNativeTag(),
          modulus: this._modulus,
          debugID: this.__getDebugID()
        };
      }
    }]);
  }(_AnimatedWithChildren2.default);
},338,[1,12,13,23,25,26,28,321,313]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _AnimatedInterpolation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _AnimatedValue = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _AnimatedWithChildren2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && "function" == typeof p ? function (t) { return p.apply(e, t); } : p; }
  var AnimatedMultiplication = exports.default = /*#__PURE__*/function (_AnimatedWithChildren) {
    function AnimatedMultiplication(a, b, config) {
      var _this;
      (0, _classCallCheck2.default)(this, AnimatedMultiplication);
      _this = _callSuper(this, AnimatedMultiplication, [config]);
      _this._a = typeof a === 'number' ? new _AnimatedValue.default(a) : a;
      _this._b = typeof b === 'number' ? new _AnimatedValue.default(b) : b;
      return _this;
    }
    (0, _inherits2.default)(AnimatedMultiplication, _AnimatedWithChildren);
    return (0, _createClass2.default)(AnimatedMultiplication, [{
      key: "__makeNative",
      value: function __makeNative(platformConfig) {
        this._a.__makeNative(platformConfig);
        this._b.__makeNative(platformConfig);
        _superPropGet(AnimatedMultiplication, "__makeNative", this, 3)([platformConfig]);
      }
    }, {
      key: "__getValue",
      value: function __getValue() {
        return this._a.__getValue() * this._b.__getValue();
      }
    }, {
      key: "interpolate",
      value: function interpolate(config) {
        return new _AnimatedInterpolation.default(this, config);
      }
    }, {
      key: "__attach",
      value: function __attach() {
        this._a.__addChild(this);
        this._b.__addChild(this);
        _superPropGet(AnimatedMultiplication, "__attach", this, 3)([]);
      }
    }, {
      key: "__detach",
      value: function __detach() {
        this._a.__removeChild(this);
        this._b.__removeChild(this);
        _superPropGet(AnimatedMultiplication, "__detach", this, 3)([]);
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        return {
          type: 'multiplication',
          input: [this._a.__getNativeTag(), this._b.__getNativeTag()],
          debugID: this.__getDebugID()
        };
      }
    }]);
  }(_AnimatedWithChildren2.default);
},339,[1,12,13,23,25,26,28,321,317,313]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _AnimatedInterpolation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _AnimatedValue = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _AnimatedWithChildren2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && "function" == typeof p ? function (t) { return p.apply(e, t); } : p; }
  var AnimatedSubtraction = exports.default = /*#__PURE__*/function (_AnimatedWithChildren) {
    function AnimatedSubtraction(a, b, config) {
      var _this;
      (0, _classCallCheck2.default)(this, AnimatedSubtraction);
      _this = _callSuper(this, AnimatedSubtraction, [config]);
      _this._a = typeof a === 'number' ? new _AnimatedValue.default(a) : a;
      _this._b = typeof b === 'number' ? new _AnimatedValue.default(b) : b;
      return _this;
    }
    (0, _inherits2.default)(AnimatedSubtraction, _AnimatedWithChildren);
    return (0, _createClass2.default)(AnimatedSubtraction, [{
      key: "__makeNative",
      value: function __makeNative(platformConfig) {
        this._a.__makeNative(platformConfig);
        this._b.__makeNative(platformConfig);
        _superPropGet(AnimatedSubtraction, "__makeNative", this, 3)([platformConfig]);
      }
    }, {
      key: "__getValue",
      value: function __getValue() {
        return this._a.__getValue() - this._b.__getValue();
      }
    }, {
      key: "interpolate",
      value: function interpolate(config) {
        return new _AnimatedInterpolation.default(this, config);
      }
    }, {
      key: "__attach",
      value: function __attach() {
        this._a.__addChild(this);
        this._b.__addChild(this);
        _superPropGet(AnimatedSubtraction, "__attach", this, 3)([]);
      }
    }, {
      key: "__detach",
      value: function __detach() {
        this._a.__removeChild(this);
        this._b.__removeChild(this);
        _superPropGet(AnimatedSubtraction, "__detach", this, 3)([]);
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        return {
          type: 'subtraction',
          input: [this._a.__getNativeTag(), this._b.__getNativeTag()],
          debugID: this.__getDebugID()
        };
      }
    }]);
  }(_AnimatedWithChildren2.default);
},340,[1,12,13,23,25,26,28,321,317,313]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _NativeAnimatedHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _AnimatedNode2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && "function" == typeof p ? function (t) { return p.apply(e, t); } : p; }
  var AnimatedTracking = exports.default = /*#__PURE__*/function (_AnimatedNode) {
    function AnimatedTracking(value, parent, animationClass, animationConfig, callback, config) {
      var _this;
      (0, _classCallCheck2.default)(this, AnimatedTracking);
      _this = _callSuper(this, AnimatedTracking, [config]);
      _this._value = value;
      _this._parent = parent;
      _this._animationClass = animationClass;
      _this._animationConfig = animationConfig;
      _this._useNativeDriver = _NativeAnimatedHelper.default.shouldUseNativeDriver(animationConfig);
      _this._callback = callback;
      _this.__attach();
      return _this;
    }
    (0, _inherits2.default)(AnimatedTracking, _AnimatedNode);
    return (0, _createClass2.default)(AnimatedTracking, [{
      key: "__makeNative",
      value: function __makeNative(platformConfig) {
        this.__isNative = true;
        this._parent.__makeNative(platformConfig);
        _superPropGet(AnimatedTracking, "__makeNative", this, 3)([platformConfig]);
        this._value.__makeNative(platformConfig);
      }
    }, {
      key: "__getValue",
      value: function __getValue() {
        return this._parent.__getValue();
      }
    }, {
      key: "__attach",
      value: function __attach() {
        this._parent.__addChild(this);
        if (this._useNativeDriver) {
          var platformConfig = this._animationConfig.platformConfig;
          this.__makeNative(platformConfig);
        }
        _superPropGet(AnimatedTracking, "__attach", this, 3)([]);
      }
    }, {
      key: "__detach",
      value: function __detach() {
        this._parent.__removeChild(this);
        _superPropGet(AnimatedTracking, "__detach", this, 3)([]);
      }
    }, {
      key: "update",
      value: function update() {
        this._value.animate(new this._animationClass(Object.assign({}, this._animationConfig, {
          toValue: this._animationConfig.toValue.__getValue()
        })), this._callback);
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        var animation = new this._animationClass(Object.assign({}, this._animationConfig, {
          toValue: undefined
        }));
        var animationConfig = animation.__getNativeAnimationConfig();
        return {
          type: 'tracking',
          animationId: _NativeAnimatedHelper.default.generateNewAnimationId(),
          animationConfig: animationConfig,
          toValue: this._parent.__getNativeTag(),
          value: this._value.__getNativeTag(),
          debugID: this.__getDebugID()
        };
      }
    }]);
  }(_AnimatedNode2.default);
},341,[1,12,13,23,25,26,28,304,311]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _AnimatedImplementation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createAnimatedComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _AnimatedColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _AnimatedInterpolation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _AnimatedNode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _AnimatedValue = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _AnimatedValueXY = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var inAnimationCallback = false;
  function mockAnimationStart(start) {
    return function (callback) {
      var guardedCallback = callback == null ? callback : function () {
        if (inAnimationCallback) {
          console.warn('Ignoring recursive animation callback when running mock animations');
          return;
        }
        inAnimationCallback = true;
        try {
          callback.apply(undefined, arguments);
        } finally {
          inAnimationCallback = false;
        }
      };
      start(guardedCallback);
    };
  }
  var emptyAnimation = {
    start: function start() {},
    stop: function stop() {},
    reset: function reset() {},
    _startNativeLoop: function _startNativeLoop() {},
    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return false;
    }
  };
  var mockCompositeAnimation = function mockCompositeAnimation(animations) {
    return Object.assign({}, emptyAnimation, {
      start: mockAnimationStart(function (callback) {
        animations.forEach(function (animation) {
          return animation.start();
        });
        callback == null ? undefined : callback({
          finished: true
        });
      })
    });
  };
  var spring = function spring(value, config) {
    var anyValue = value;
    return Object.assign({}, emptyAnimation, {
      start: mockAnimationStart(function (callback) {
        anyValue.setValue(config.toValue);
        callback == null ? undefined : callback({
          finished: true
        });
      })
    });
  };
  var timing = function timing(value, config) {
    var anyValue = value;
    return Object.assign({}, emptyAnimation, {
      start: mockAnimationStart(function (callback) {
        anyValue.setValue(config.toValue);
        callback == null ? undefined : callback({
          finished: true
        });
      })
    });
  };
  var decay = function decay(value, config) {
    return emptyAnimation;
  };
  var sequence = function sequence(animations) {
    return mockCompositeAnimation(animations);
  };
  var parallel = function parallel(animations, config) {
    return mockCompositeAnimation(animations);
  };
  var delay = function delay(time) {
    return emptyAnimation;
  };
  var stagger = function stagger(time, animations) {
    return mockCompositeAnimation(animations);
  };
  var loop = function loop(animation) {
    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref$iterations = _ref.iterations,
      iterations = _ref$iterations === undefined ? -1 : _ref$iterations;
    return emptyAnimation;
  };
  var _default = exports.default = {
    Value: _AnimatedValue.default,
    ValueXY: _AnimatedValueXY.default,
    Color: _AnimatedColor.default,
    Interpolation: _AnimatedInterpolation.default,
    Node: _AnimatedNode.default,
    decay: decay,
    timing: timing,
    spring: spring,
    add: _AnimatedImplementation.default.add,
    subtract: _AnimatedImplementation.default.subtract,
    divide: _AnimatedImplementation.default.divide,
    multiply: _AnimatedImplementation.default.multiply,
    modulo: _AnimatedImplementation.default.modulo,
    diffClamp: _AnimatedImplementation.default.diffClamp,
    delay: delay,
    sequence: sequence,
    parallel: parallel,
    stagger: stagger,
    loop: loop,
    event: _AnimatedImplementation.default.event,
    createAnimatedComponent: _createAnimatedComponent.default,
    attachNativeEvent: _$$_REQUIRE(_dependencyMap[8]).attachNativeEvent,
    forkEvent: _AnimatedImplementation.default.forkEvent,
    unforkEvent: _AnimatedImplementation.default.unforkEvent,
    Event: _$$_REQUIRE(_dependencyMap[8]).AnimatedEvent
  };
},342,[1,301,329,326,321,311,317,324,316]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _FlatList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createAnimatedComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = (0, _createAnimatedComponent.default)(_FlatList.default);
},343,[1,344,329,119]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var ReactNativeFeatureFlags = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));
  var _View = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _virtualizedLists = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _memoizeOne = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[12]);
  var _excluded = ["numColumns", "columnWrapperStyle", "removeClippedSubviews", "strictMode"];
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var VirtualizedList = _virtualizedLists.default.VirtualizedList;
  var defaultKeyExtractor = _virtualizedLists.default.keyExtractor;
  function removeClippedSubviewsOrDefault(removeClippedSubviews) {
    if (ReactNativeFeatureFlags.shouldUseRemoveClippedSubviewsAsDefaultOnIOS()) {
      return removeClippedSubviews != null ? removeClippedSubviews : true;
    } else {
      return removeClippedSubviews != null ? removeClippedSubviews : true;
    }
  }
  function numColumnsOrDefault(numColumns) {
    return numColumns != null ? numColumns : 1;
  }
  function isArrayLike(data) {
    return typeof Object(data).length === 'number';
  }
  var FlatList = /*#__PURE__*/function (_React$PureComponent) {
    function FlatList(_props) {
      var _this;
      (0, _classCallCheck2.default)(this, FlatList);
      _this = _callSuper(this, FlatList, [_props]);
      _this._virtualizedListPairs = [];
      _this._captureRef = function (ref) {
        _this._listRef = ref;
      };
      _this._getItem = function (data, index) {
        var numColumns = numColumnsOrDefault(_this.props.numColumns);
        if (numColumns > 1) {
          var ret = [];
          for (var kk = 0; kk < numColumns; kk++) {
            var itemIndex = index * numColumns + kk;
            if (itemIndex < data.length) {
              var _item = data[itemIndex];
              ret.push(_item);
            }
          }
          return ret;
        } else {
          return data[index];
        }
      };
      _this._getItemCount = function (data) {
        if (data != null && isArrayLike(data)) {
          var numColumns = numColumnsOrDefault(_this.props.numColumns);
          return numColumns > 1 ? Math.ceil(data.length / numColumns) : data.length;
        } else {
          return 0;
        }
      };
      _this._keyExtractor = function (items, index) {
        var _this$props$keyExtrac;
        var numColumns = numColumnsOrDefault(_this.props.numColumns);
        var keyExtractor = (_this$props$keyExtrac = _this.props.keyExtractor) != null ? _this$props$keyExtrac : defaultKeyExtractor;
        if (numColumns > 1) {
          _$$_REQUIRE(_dependencyMap[13])(Array.isArray(items), "FlatList: Encountered internal consistency error, expected each item to consist of an array with 1-%s columns; instead, received a single item.", numColumns);
          return items.map(function (item, kk) {
            return keyExtractor(item, index * numColumns + kk);
          }).join(':');
        }
        return keyExtractor(items, index);
      };
      _this._renderer = function (ListItemComponent, renderItem, columnWrapperStyle, numColumns, extraData) {
        var cols = numColumnsOrDefault(numColumns);
        var render = function render(props) {
          if (ListItemComponent) {
            return /*#__PURE__*/(0, _jsxRuntime.jsx)(ListItemComponent, Object.assign({}, props));
          } else if (renderItem) {
            return renderItem(props);
          } else {
            return null;
          }
        };
        var renderProp = function renderProp(info) {
          if (cols > 1) {
            var _item2 = info.item,
              _index = info.index;
            _$$_REQUIRE(_dependencyMap[13])(Array.isArray(_item2), 'Expected array of items with numColumns > 1');
            return /*#__PURE__*/(0, _jsxRuntime.jsx)(_View.default, {
              style: _$$_REQUIRE(_dependencyMap[14]).default.compose(styles.row, columnWrapperStyle),
              children: _item2.map(function (it, kk) {
                var element = render({
                  item: it,
                  index: _index * cols + kk,
                  separators: info.separators
                });
                return element != null ? /*#__PURE__*/(0, _jsxRuntime.jsx)(_react.default.Fragment, {
                  children: element
                }, kk) : null;
              })
            });
          } else {
            return render(info);
          }
        };
        return ListItemComponent ? {
          ListItemComponent: renderProp
        } : {
          renderItem: renderProp
        };
      };
      _this._memoizedRenderer = (0, _memoizeOne.default)(_this._renderer);
      _this._checkProps(_this.props);
      if (_this.props.viewabilityConfigCallbackPairs) {
        _this._virtualizedListPairs = _this.props.viewabilityConfigCallbackPairs.map(function (pair) {
          return {
            viewabilityConfig: pair.viewabilityConfig,
            onViewableItemsChanged: _this._createOnViewableItemsChanged(pair.onViewableItemsChanged)
          };
        });
      } else if (_this.props.onViewableItemsChanged) {
        _this._virtualizedListPairs.push({
          viewabilityConfig: _this.props.viewabilityConfig,
          onViewableItemsChanged: _this._createOnViewableItemsChanged(function () {
            var _this$props;
            _$$_REQUIRE(_dependencyMap[13])(_this.props.onViewableItemsChanged, "Changing the nullability of onViewableItemsChanged is not supported. Once a function or null is supplied that cannot be changed.");
            return (_this$props = _this.props).onViewableItemsChanged.apply(_this$props, arguments);
          })
        });
      }
      return _this;
    }
    (0, _inherits2.default)(FlatList, _React$PureComponent);
    return (0, _createClass2.default)(FlatList, [{
      key: "scrollToEnd",
      value: function scrollToEnd(params) {
        if (this._listRef) {
          this._listRef.scrollToEnd(params);
        }
      }
    }, {
      key: "scrollToIndex",
      value: function scrollToIndex(params) {
        if (this._listRef) {
          this._listRef.scrollToIndex(params);
        }
      }
    }, {
      key: "scrollToItem",
      value: function scrollToItem(params) {
        if (this._listRef) {
          this._listRef.scrollToItem(params);
        }
      }
    }, {
      key: "scrollToOffset",
      value: function scrollToOffset(params) {
        if (this._listRef) {
          this._listRef.scrollToOffset(params);
        }
      }
    }, {
      key: "recordInteraction",
      value: function recordInteraction() {
        if (this._listRef) {
          this._listRef.recordInteraction();
        }
      }
    }, {
      key: "flashScrollIndicators",
      value: function flashScrollIndicators() {
        if (this._listRef) {
          this._listRef.flashScrollIndicators();
        }
      }
    }, {
      key: "getScrollResponder",
      value: function getScrollResponder() {
        if (this._listRef) {
          return this._listRef.getScrollResponder();
        }
      }
    }, {
      key: "getNativeScrollRef",
      value: function getNativeScrollRef() {
        if (this._listRef) {
          return this._listRef.getScrollRef();
        }
      }
    }, {
      key: "getScrollableNode",
      value: function getScrollableNode() {
        if (this._listRef) {
          return this._listRef.getScrollableNode();
        }
      }
    }, {
      key: "setNativeProps",
      value: function setNativeProps(props) {
        if (this._listRef) {
          this._listRef.setNativeProps(props);
        }
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        _$$_REQUIRE(_dependencyMap[13])(prevProps.numColumns === this.props.numColumns, "Changing numColumns on the fly is not supported. Change the key prop on FlatList when changing the number of columns to force a fresh render of the component.");
        _$$_REQUIRE(_dependencyMap[13])(prevProps.onViewableItemsChanged == null === (this.props.onViewableItemsChanged == null), 'Changing onViewableItemsChanged nullability on the fly is not supported');
        _$$_REQUIRE(_dependencyMap[13])(!_$$_REQUIRE(_dependencyMap[15]).default(prevProps.viewabilityConfig, this.props.viewabilityConfig), 'Changing viewabilityConfig on the fly is not supported');
        _$$_REQUIRE(_dependencyMap[13])(prevProps.viewabilityConfigCallbackPairs === this.props.viewabilityConfigCallbackPairs, 'Changing viewabilityConfigCallbackPairs on the fly is not supported');
        this._checkProps(this.props);
      }
    }, {
      key: "_checkProps",
      value: function _checkProps(props) {
        var getItem = props.getItem,
          getItemCount = props.getItemCount,
          horizontal = props.horizontal,
          columnWrapperStyle = props.columnWrapperStyle,
          onViewableItemsChanged = props.onViewableItemsChanged,
          viewabilityConfigCallbackPairs = props.viewabilityConfigCallbackPairs;
        var numColumns = numColumnsOrDefault(this.props.numColumns);
        _$$_REQUIRE(_dependencyMap[13])(!getItem && !getItemCount, 'FlatList does not support custom data formats.');
        if (numColumns > 1) {
          _$$_REQUIRE(_dependencyMap[13])(!horizontal, 'numColumns does not support horizontal.');
        } else {
          _$$_REQUIRE(_dependencyMap[13])(!columnWrapperStyle, 'columnWrapperStyle not supported for single column lists');
        }
        _$$_REQUIRE(_dependencyMap[13])(!(onViewableItemsChanged && viewabilityConfigCallbackPairs), "FlatList does not support setting both onViewableItemsChanged and viewabilityConfigCallbackPairs.");
      }
    }, {
      key: "_pushMultiColumnViewable",
      value: function _pushMultiColumnViewable(arr, v) {
        var _this$props$keyExtrac2;
        var numColumns = numColumnsOrDefault(this.props.numColumns);
        var keyExtractor = (_this$props$keyExtrac2 = this.props.keyExtractor) != null ? _this$props$keyExtrac2 : defaultKeyExtractor;
        v.item.forEach(function (item, ii) {
          _$$_REQUIRE(_dependencyMap[13])(v.index != null, 'Missing index!');
          var index = v.index * numColumns + ii;
          arr.push(Object.assign({}, v, {
            item: item,
            key: keyExtractor(item, index),
            index: index
          }));
        });
      }
    }, {
      key: "_createOnViewableItemsChanged",
      value: function _createOnViewableItemsChanged(onViewableItemsChanged) {
        var _this2 = this;
        return function (info) {
          var numColumns = numColumnsOrDefault(_this2.props.numColumns);
          if (onViewableItemsChanged) {
            if (numColumns > 1) {
              var changed = [];
              var viewableItems = [];
              info.viewableItems.forEach(function (v) {
                return _this2._pushMultiColumnViewable(viewableItems, v);
              });
              info.changed.forEach(function (v) {
                return _this2._pushMultiColumnViewable(changed, v);
              });
              onViewableItemsChanged({
                viewableItems: viewableItems,
                changed: changed
              });
            } else {
              onViewableItemsChanged(info);
            }
          }
        };
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props2 = this.props,
          numColumns = _this$props2.numColumns,
          columnWrapperStyle = _this$props2.columnWrapperStyle,
          _removeClippedSubviews = _this$props2.removeClippedSubviews,
          _this$props2$strictMo = _this$props2.strictMode,
          strictMode = _this$props2$strictMo === undefined ? false : _this$props2$strictMo,
          restProps = (0, _objectWithoutProperties2.default)(_this$props2, _excluded);
        var renderer = strictMode ? this._memoizedRenderer : this._renderer;
        return /*#__PURE__*/(0, _jsxRuntime.jsx)(VirtualizedList, Object.assign({}, restProps, {
          getItem: this._getItem,
          getItemCount: this._getItemCount,
          keyExtractor: this._keyExtractor,
          ref: this._captureRef,
          viewabilityConfigCallbackPairs: this._virtualizedListPairs,
          removeClippedSubviews: removeClippedSubviewsOrDefault(_removeClippedSubviews)
        }, renderer(this.props.ListItemComponent, this.props.renderItem, columnWrapperStyle, numColumns, this.props.extraData)));
      }
    }]);
  }(_react.default.PureComponent);
  var styles = _$$_REQUIRE(_dependencyMap[14]).default.create({
    row: {
      flexDirection: 'row'
    }
  });
  var _default = exports.default = FlatList;
},344,[1,203,12,13,23,25,28,73,248,345,360,119,251,20,253,129]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = exports.default = {
    keyExtractor: _$$_REQUIRE(_dependencyMap[0]).keyExtractor,
    get VirtualizedList() {
      return _$$_REQUIRE(_dependencyMap[1]).default;
    },
    get VirtualizedSectionList() {
      return _$$_REQUIRE(_dependencyMap[2]).default;
    },
    get VirtualizedListContextResetter() {
      var VirtualizedListContext = _$$_REQUIRE(_dependencyMap[3]);
      return VirtualizedListContext.VirtualizedListContextResetter;
    },
    get ViewabilityHelper() {
      return _$$_REQUIRE(_dependencyMap[4]).default;
    },
    get FillRateHelper() {
      return _$$_REQUIRE(_dependencyMap[5]).default;
    }
  };
},345,[346,347,359,356,354,351]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.computeWindowedRenderLimits = computeWindowedRenderLimits;
  exports.elementsThatOverlapOffsets = elementsThatOverlapOffsets;
  exports.keyExtractor = keyExtractor;
  exports.newRangeCount = newRangeCount;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var ReactNativeFeatureFlags = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function elementsThatOverlapOffsets(offsets, props, listMetrics) {
    var zoomScale = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;
    var itemCount = props.getItemCount(props.data);
    var result = [];
    for (var offsetIndex = 0; offsetIndex < offsets.length; offsetIndex++) {
      var currentOffset = offsets[offsetIndex];
      var left = 0;
      var right = itemCount - 1;
      while (left <= right) {
        var mid = left + Math.floor((right - left) / 2);
        var frame = listMetrics.getCellMetricsApprox(mid, props);
        var scaledOffsetStart = frame.offset * zoomScale;
        var scaledOffsetEnd = (frame.offset + frame.length) * zoomScale;
        if (mid === 0 && currentOffset < scaledOffsetStart || mid !== 0 && currentOffset <= scaledOffsetStart) {
          right = mid - 1;
        } else if (currentOffset > scaledOffsetEnd) {
          left = mid + 1;
        } else {
          result[offsetIndex] = mid;
          break;
        }
      }
    }
    return result;
  }
  function newRangeCount(prev, next) {
    return next.last - next.first + 1 - Math.max(0, 1 + Math.min(next.last, prev.last) - Math.max(next.first, prev.first));
  }
  function computeWindowedRenderLimits(props, maxToRenderPerBatch, windowSize, prev, listMetrics, scrollMetrics) {
    var itemCount = props.getItemCount(props.data);
    if (itemCount === 0) {
      return {
        first: 0,
        last: -1
      };
    }
    var offset = scrollMetrics.offset,
      velocity = scrollMetrics.velocity,
      visibleLength = scrollMetrics.visibleLength,
      _scrollMetrics$zoomSc = scrollMetrics.zoomScale,
      zoomScale = _scrollMetrics$zoomSc === undefined ? 1 : _scrollMetrics$zoomSc;
    var visibleBegin = Math.max(0, offset);
    var visibleEnd = visibleBegin + visibleLength;
    var overscanLength = (windowSize - 1) * visibleLength;
    var leadFactor = 0.5;
    var fillPreference = velocity > 1 ? 'after' : velocity < -1 ? 'before' : 'none';
    var overscanBegin = Math.max(0, visibleBegin - 0.5 * overscanLength);
    var overscanEnd = Math.max(0, visibleEnd + leadFactor * overscanLength);
    var lastItemOffset = listMetrics.getCellMetricsApprox(itemCount - 1, props).offset * zoomScale;
    if (lastItemOffset < overscanBegin) {
      return {
        first: Math.max(0, itemCount - 1 - maxToRenderPerBatch),
        last: itemCount - 1
      };
    }
    var _elementsThatOverlapO = elementsThatOverlapOffsets([overscanBegin, visibleBegin, visibleEnd, overscanEnd], props, listMetrics, zoomScale),
      _elementsThatOverlapO2 = (0, _slicedToArray2.default)(_elementsThatOverlapO, 4),
      overscanFirst = _elementsThatOverlapO2[0],
      first = _elementsThatOverlapO2[1],
      last = _elementsThatOverlapO2[2],
      overscanLast = _elementsThatOverlapO2[3];
    overscanFirst = overscanFirst == null ? 0 : overscanFirst;
    first = first == null ? Math.max(0, overscanFirst) : first;
    overscanLast = overscanLast == null ? itemCount - 1 : overscanLast;
    last = last == null ? Math.min(overscanLast, first + maxToRenderPerBatch - 1) : last;
    var visible = {
      first: first,
      last: last
    };
    var newCellCount = newRangeCount(prev, visible);
    while (true) {
      if (first <= overscanFirst && last >= overscanLast) {
        break;
      }
      var maxNewCells = newCellCount >= maxToRenderPerBatch;
      var firstWillAddMore = undefined;
      var lastWillAddMore = undefined;
      if (ReactNativeFeatureFlags.fixVirtualizeListCollapseWindowSize()) {
        firstWillAddMore = first <= prev.first;
        lastWillAddMore = last >= prev.last;
      } else {
        firstWillAddMore = first <= prev.first || first > prev.last;
        lastWillAddMore = last >= prev.last || last < prev.first;
      }
      var firstShouldIncrement = first > overscanFirst && (!maxNewCells || !firstWillAddMore);
      var lastShouldIncrement = last < overscanLast && (!maxNewCells || !lastWillAddMore);
      if (maxNewCells && !firstShouldIncrement && !lastShouldIncrement) {
        break;
      }
      if (firstShouldIncrement && !(fillPreference === 'after' && lastShouldIncrement && lastWillAddMore)) {
        if (firstWillAddMore) {
          newCellCount++;
        }
        first--;
      }
      if (lastShouldIncrement && !(fillPreference === 'before' && firstShouldIncrement && firstWillAddMore)) {
        if (lastWillAddMore) {
          newCellCount++;
        }
        last++;
      }
    }
    if (!(last >= first && first >= 0 && last < itemCount && first >= overscanFirst && last <= overscanLast && first <= visible.first && last >= visible.last)) {
      throw new Error('Bad window calculation ' + JSON.stringify({
        first: first,
        last: last,
        itemCount: itemCount,
        overscanFirst: overscanFirst,
        overscanLast: overscanLast,
        visible: visible
      }));
    }
    return {
      first: first,
      last: last
    };
  }
  function keyExtractor(item, index) {
    if (typeof item === 'object' && (item == null ? undefined : item.key) != null) {
      return item.key;
    }
    if (typeof item === 'object' && (item == null ? undefined : item.id) != null) {
      return item.id;
    }
    return String(index);
  }
},346,[1,38,73]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _clamp = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _infoLog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  var _ChildListCollection = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));
  var _FillRateHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));
  var _ListMetricsAggregator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));
  var _StateSafePureComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));
  var _ViewabilityHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));
  var _VirtualizedListCellRenderer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));
  var _nullthrows = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[19]));
  var _reactNative = _$$_REQUIRE(_dependencyMap[20]);
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[21]);
  var _excluded = ["onContentSizeChange"];
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var ON_EDGE_REACHED_EPSILON = 0.001;
  var _usedIndexForKey = false;
  var _keylessItemComponentName = '';
  function getScrollingThreshold(threshold, visibleLength) {
    return threshold * visibleLength / 2;
  }
  var VirtualizedList = /*#__PURE__*/function (_StateSafePureCompone) {
    function VirtualizedList(_props) {
      var _this$props$maintainV, _this$props$maintainV2;
      var _this;
      (0, _classCallCheck2.default)(this, VirtualizedList);
      _this = _callSuper(this, VirtualizedList, [_props]);
      _this._getScrollMetrics = function () {
        return _this._scrollMetrics;
      };
      _this._getOutermostParentListRef = function () {
        if (_this._isNestedWithSameOrientation()) {
          return _this.context.getOutermostParentListRef();
        } else {
          return _this;
        }
      };
      _this._registerAsNestedChild = function (childList) {
        _this._nestedChildLists.add(childList.ref, childList.cellKey);
        if (_this._hasInteracted) {
          childList.ref.recordInteraction();
        }
      };
      _this._unregisterAsNestedChild = function (childList) {
        _this._nestedChildLists.remove(childList.ref);
      };
      _this._onUpdateSeparators = function (keys, newProps) {
        keys.forEach(function (key) {
          var ref = key != null && _this._cellRefs[key];
          ref && ref.updateSeparatorProps(newProps);
        });
      };
      _this._getSpacerKey = function (isVertical) {
        return isVertical ? 'height' : 'width';
      };
      _this._cellRefs = {};
      _this._listMetrics = new _ListMetricsAggregator.default();
      _this._footerLength = 0;
      _this._hasTriggeredInitialScrollToIndex = false;
      _this._hasInteracted = false;
      _this._hasMore = false;
      _this._hasWarned = {};
      _this._headerLength = 0;
      _this._hiPriInProgress = false;
      _this._indicesToKeys = new Map();
      _this._lastFocusedCellKey = null;
      _this._nestedChildLists = new _ChildListCollection.default();
      _this._offsetFromParentVirtualizedList = 0;
      _this._pendingViewabilityUpdate = false;
      _this._prevParentOffset = 0;
      _this._scrollMetrics = {
        dOffset: 0,
        dt: 10,
        offset: 0,
        timestamp: 0,
        velocity: 0,
        visibleLength: 0,
        zoomScale: 1
      };
      _this._scrollRef = null;
      _this._sentStartForContentLength = 0;
      _this._sentEndForContentLength = 0;
      _this._updateCellsToRenderTimeoutID = null;
      _this._viewabilityTuples = [];
      _this._captureScrollRef = function (ref) {
        _this._scrollRef = ref;
      };
      _this._defaultRenderScrollComponent = function (props) {
        var onRefresh = props.onRefresh;
        if (_this._isNestedWithSameOrientation()) {
          var onContentSizeChange = props.onContentSizeChange,
            otherProps = (0, _objectWithoutProperties2.default)(props, _excluded);
          return /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.View, Object.assign({}, otherProps));
        } else if (onRefresh) {
          var _props$refreshing;
          (0, _invariant.default)(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify((_props$refreshing = props.refreshing) != null ? _props$refreshing : 'undefined') + '`');
          return /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.ScrollView, Object.assign({}, props, {
            refreshControl: props.refreshControl == null ? /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.RefreshControl, {
              refreshing: props.refreshing,
              onRefresh: onRefresh,
              progressViewOffset: props.progressViewOffset
            }) : props.refreshControl
          }));
        } else {
          return /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.ScrollView, Object.assign({}, props));
        }
      };
      _this._onCellLayout = function (e, cellKey, cellIndex) {
        var layoutHasChanged = _this._listMetrics.notifyCellLayout({
          cellIndex: cellIndex,
          cellKey: cellKey,
          layout: e.nativeEvent.layout,
          orientation: _this._orientation()
        });
        if (layoutHasChanged) {
          _this._scheduleCellsToRenderUpdate();
        }
        _this._triggerRemeasureForChildListsInCell(cellKey);
        _this._computeBlankness();
        _this._updateViewableItems(_this.props, _this.state.cellsAroundViewport);
      };
      _this._onCellFocusCapture = function (cellKey) {
        _this._lastFocusedCellKey = cellKey;
        _this._updateCellsToRender();
      };
      _this._onCellUnmount = function (cellKey) {
        delete _this._cellRefs[cellKey];
        _this._listMetrics.notifyCellUnmounted(cellKey);
      };
      _this._onLayout = function (e) {
        if (_this._isNestedWithSameOrientation()) {
          _this.measureLayoutRelativeToContainingList();
        } else {
          _this._scrollMetrics.visibleLength = _this._selectLength(e.nativeEvent.layout);
        }
        _this.props.onLayout && _this.props.onLayout(e);
        _this._scheduleCellsToRenderUpdate();
        _this._maybeCallOnEdgeReached();
      };
      _this._onLayoutEmpty = function (e) {
        _this.props.onLayout && _this.props.onLayout(e);
      };
      _this._onLayoutFooter = function (e) {
        _this._triggerRemeasureForChildListsInCell(_this._getFooterCellKey());
        _this._footerLength = _this._selectLength(e.nativeEvent.layout);
      };
      _this._onLayoutHeader = function (e) {
        _this._headerLength = _this._selectLength(e.nativeEvent.layout);
      };
      _this._onContentSizeChange = function (width, height) {
        _this._listMetrics.notifyListContentLayout({
          layout: {
            width: width,
            height: height
          },
          orientation: _this._orientation()
        });
        _this._maybeScrollToInitialScrollIndex(width, height);
        if (_this.props.onContentSizeChange) {
          _this.props.onContentSizeChange(width, height);
        }
        _this._scheduleCellsToRenderUpdate();
        _this._maybeCallOnEdgeReached();
      };
      _this._convertParentScrollMetrics = function (metrics) {
        var offset = metrics.offset - _this._offsetFromParentVirtualizedList;
        var visibleLength = metrics.visibleLength;
        var dOffset = offset - _this._scrollMetrics.offset;
        var contentLength = _this._listMetrics.getContentLength();
        return {
          visibleLength: visibleLength,
          contentLength: contentLength,
          offset: offset,
          dOffset: dOffset
        };
      };
      _this._onScroll = function (e) {
        _this._nestedChildLists.forEach(function (childList) {
          childList._onScroll(e);
        });
        if (_this.props.onScroll) {
          _this.props.onScroll(e);
        }
        var timestamp = e.timeStamp;
        var visibleLength = _this._selectLength(e.nativeEvent.layoutMeasurement);
        var contentLength = _this._selectLength(e.nativeEvent.contentSize);
        var offset = _this._offsetFromScrollEvent(e);
        var dOffset = offset - _this._scrollMetrics.offset;
        if (_this._isNestedWithSameOrientation()) {
          if (_this._listMetrics.getContentLength() === 0) {
            return;
          }
          var _this$_convertParentS = _this._convertParentScrollMetrics({
            visibleLength: visibleLength,
            offset: offset
          });
          visibleLength = _this$_convertParentS.visibleLength;
          contentLength = _this$_convertParentS.contentLength;
          offset = _this$_convertParentS.offset;
          dOffset = _this$_convertParentS.dOffset;
        }
        var dt = _this._scrollMetrics.timestamp ? Math.max(1, timestamp - _this._scrollMetrics.timestamp) : 1;
        var velocity = dOffset / dt;
        if (dt > 500 && _this._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !_this._hasWarned.perf) {
          (0, _infoLog.default)("VirtualizedList: You have a large list that is slow to update - make sure your renderItem function renders components that follow React performance best practices like PureComponent, shouldComponentUpdate, etc.", {
            dt: dt,
            prevDt: _this._scrollMetrics.dt,
            contentLength: contentLength
          });
          _this._hasWarned.perf = true;
        }
        var zoomScale = e.nativeEvent.zoomScale < 0 ? 1 : e.nativeEvent.zoomScale;
        _this._scrollMetrics = {
          dt: dt,
          dOffset: dOffset,
          offset: offset,
          timestamp: timestamp,
          velocity: velocity,
          visibleLength: visibleLength,
          zoomScale: zoomScale
        };
        if (_this.state.pendingScrollUpdateCount > 0) {
          _this.setState(function (state) {
            return {
              pendingScrollUpdateCount: state.pendingScrollUpdateCount - 1
            };
          });
        }
        _this._updateViewableItems(_this.props, _this.state.cellsAroundViewport);
        if (!_this.props) {
          return;
        }
        _this._maybeCallOnEdgeReached();
        if (velocity !== 0) {
          _this._fillRateHelper.activate();
        }
        _this._computeBlankness();
        _this._scheduleCellsToRenderUpdate();
      };
      _this._onScrollBeginDrag = function (e) {
        _this._nestedChildLists.forEach(function (childList) {
          childList._onScrollBeginDrag(e);
        });
        _this._viewabilityTuples.forEach(function (tuple) {
          tuple.viewabilityHelper.recordInteraction();
        });
        _this._hasInteracted = true;
        _this.props.onScrollBeginDrag && _this.props.onScrollBeginDrag(e);
      };
      _this._onScrollEndDrag = function (e) {
        _this._nestedChildLists.forEach(function (childList) {
          childList._onScrollEndDrag(e);
        });
        var velocity = e.nativeEvent.velocity;
        if (velocity) {
          _this._scrollMetrics.velocity = _this._selectOffset(velocity);
        }
        _this._computeBlankness();
        _this.props.onScrollEndDrag && _this.props.onScrollEndDrag(e);
      };
      _this._onMomentumScrollBegin = function (e) {
        _this._nestedChildLists.forEach(function (childList) {
          childList._onMomentumScrollBegin(e);
        });
        _this.props.onMomentumScrollBegin && _this.props.onMomentumScrollBegin(e);
      };
      _this._onMomentumScrollEnd = function (e) {
        _this._nestedChildLists.forEach(function (childList) {
          childList._onMomentumScrollEnd(e);
        });
        _this._scrollMetrics.velocity = 0;
        _this._computeBlankness();
        _this.props.onMomentumScrollEnd && _this.props.onMomentumScrollEnd(e);
      };
      _this._updateCellsToRender = function () {
        _this._updateViewableItems(_this.props, _this.state.cellsAroundViewport);
        _this.setState(function (state, props) {
          var cellsAroundViewport = _this._adjustCellsAroundViewport(props, state.cellsAroundViewport, state.pendingScrollUpdateCount);
          var renderMask = VirtualizedList._createRenderMask(props, cellsAroundViewport, _this._getNonViewportRenderRegions(props));
          if (cellsAroundViewport.first === state.cellsAroundViewport.first && cellsAroundViewport.last === state.cellsAroundViewport.last && renderMask.equals(state.renderMask)) {
            return null;
          }
          return {
            cellsAroundViewport: cellsAroundViewport,
            renderMask: renderMask
          };
        });
      };
      _this._createViewToken = function (index, isViewable, props) {
        var data = props.data,
          getItem = props.getItem;
        var item = getItem(data, index);
        return {
          index: index,
          item: item,
          key: VirtualizedList._keyExtractor(item, index, props),
          isViewable: isViewable
        };
      };
      _this._getNonViewportRenderRegions = function (props) {
        if (!(_this._lastFocusedCellKey && _this._cellRefs[_this._lastFocusedCellKey])) {
          return [];
        }
        var lastFocusedCellRenderer = _this._cellRefs[_this._lastFocusedCellKey];
        var focusedCellIndex = lastFocusedCellRenderer.props.index;
        var itemCount = props.getItemCount(props.data);
        if (focusedCellIndex >= itemCount || VirtualizedList._getItemKey(props, focusedCellIndex) !== _this._lastFocusedCellKey) {
          return [];
        }
        var first = focusedCellIndex;
        var heightOfCellsBeforeFocused = 0;
        for (var i = first - 1; i >= 0 && heightOfCellsBeforeFocused < _this._scrollMetrics.visibleLength; i--) {
          first--;
          heightOfCellsBeforeFocused += _this._listMetrics.getCellMetricsApprox(i, props).length;
        }
        var last = focusedCellIndex;
        var heightOfCellsAfterFocused = 0;
        for (var _i2 = last + 1; _i2 < itemCount && heightOfCellsAfterFocused < _this._scrollMetrics.visibleLength; _i2++) {
          last++;
          heightOfCellsAfterFocused += _this._listMetrics.getCellMetricsApprox(_i2, props).length;
        }
        return [{
          first: first,
          last: last
        }];
      };
      _this._checkProps(_props);
      _this._fillRateHelper = new _FillRateHelper.default(_this._listMetrics);
      if (_this.props.viewabilityConfigCallbackPairs) {
        _this._viewabilityTuples = _this.props.viewabilityConfigCallbackPairs.map(function (pair) {
          return {
            viewabilityHelper: new _ViewabilityHelper.default(pair.viewabilityConfig),
            onViewableItemsChanged: pair.onViewableItemsChanged
          };
        });
      } else {
        var _this$props = _this.props,
          onViewableItemsChanged = _this$props.onViewableItemsChanged,
          viewabilityConfig = _this$props.viewabilityConfig;
        if (onViewableItemsChanged) {
          _this._viewabilityTuples.push({
            viewabilityHelper: new _ViewabilityHelper.default(viewabilityConfig),
            onViewableItemsChanged: onViewableItemsChanged
          });
        }
      }
      var initialRenderRegion = VirtualizedList._initialRenderRegion(_props);
      var minIndexForVisible = (_this$props$maintainV = (_this$props$maintainV2 = _this.props.maintainVisibleContentPosition) == null ? undefined : _this$props$maintainV2.minIndexForVisible) != null ? _this$props$maintainV : 0;
      _this.state = {
        cellsAroundViewport: initialRenderRegion,
        renderMask: VirtualizedList._createRenderMask(_props, initialRenderRegion),
        firstVisibleItemKey: _this.props.getItemCount(_this.props.data) > minIndexForVisible ? VirtualizedList._getItemKey(_this.props, minIndexForVisible) : null,
        pendingScrollUpdateCount: _this.props.initialScrollIndex != null && _this.props.initialScrollIndex > 0 ? 1 : 0
      };
      return _this;
    }
    (0, _inherits2.default)(VirtualizedList, _StateSafePureCompone);
    return (0, _createClass2.default)(VirtualizedList, [{
      key: "scrollToEnd",
      value: function scrollToEnd(params) {
        var animated = params ? params.animated : true;
        var veryLast = this.props.getItemCount(this.props.data) - 1;
        if (veryLast < 0) {
          return;
        }
        var frame = this._listMetrics.getCellMetricsApprox(veryLast, this.props);
        var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);
        this.scrollToOffset({
          animated: animated,
          offset: offset
        });
      }
    }, {
      key: "scrollToIndex",
      value: function scrollToIndex(params) {
        var _this$props2 = this.props,
          data = _this$props2.data,
          getItemCount = _this$props2.getItemCount,
          getItemLayout = _this$props2.getItemLayout,
          onScrollToIndexFailed = _this$props2.onScrollToIndexFailed;
        var animated = params.animated,
          index = params.index,
          viewOffset = params.viewOffset,
          viewPosition = params.viewPosition;
        (0, _invariant.default)(index >= 0, `scrollToIndex out of range: requested index ${index} but minimum is 0`);
        (0, _invariant.default)(getItemCount(data) >= 1, `scrollToIndex out of range: item length ${getItemCount(data)} but minimum is 1`);
        (0, _invariant.default)(index < getItemCount(data), `scrollToIndex out of range: requested index ${index} is out of 0 to ${getItemCount(data) - 1}`);
        if (!getItemLayout && index > this._listMetrics.getHighestMeasuredCellIndex()) {
          (0, _invariant.default)(!!onScrollToIndexFailed, "scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, otherwise there is no way to know the location of offscreen indices or handle failures.");
          onScrollToIndexFailed({
            averageItemLength: this._listMetrics.getAverageCellLength(),
            highestMeasuredFrameIndex: this._listMetrics.getHighestMeasuredCellIndex(),
            index: index
          });
          return;
        }
        var frame = this._listMetrics.getCellMetricsApprox(Math.floor(index), this.props);
        var offset = Math.max(0, this._listMetrics.getCellOffsetApprox(index, this.props) - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);
        this.scrollToOffset({
          offset: offset,
          animated: animated
        });
      }
    }, {
      key: "scrollToItem",
      value: function scrollToItem(params) {
        var item = params.item;
        var _this$props3 = this.props,
          data = _this$props3.data,
          getItem = _this$props3.getItem,
          getItemCount = _this$props3.getItemCount;
        var itemCount = getItemCount(data);
        for (var index = 0; index < itemCount; index++) {
          if (getItem(data, index) === item) {
            this.scrollToIndex(Object.assign({}, params, {
              index: index
            }));
            break;
          }
        }
      }
    }, {
      key: "scrollToOffset",
      value: function scrollToOffset(params) {
        var animated = params.animated,
          offset = params.offset;
        var scrollRef = this._scrollRef;
        if (scrollRef == null) {
          return;
        }
        if (scrollRef.scrollTo == null) {
          console.warn("No scrollTo method provided. This may be because you have two nested VirtualizedLists with the same orientation, or because you are using a custom component that does not implement scrollTo.");
          return;
        }
        var _this$_orientation = this._orientation(),
          horizontal = _this$_orientation.horizontal,
          rtl = _this$_orientation.rtl;
        if (horizontal && rtl && !this._listMetrics.hasContentLength()) {
          console.warn('scrollToOffset may not be called in RTL before content is laid out');
          return;
        }
        scrollRef.scrollTo(Object.assign({
          animated: animated
        }, this._scrollToParamsFromOffset(offset)));
      }
    }, {
      key: "_scrollToParamsFromOffset",
      value: function _scrollToParamsFromOffset(offset) {
        var _this$_orientation2 = this._orientation(),
          horizontal = _this$_orientation2.horizontal,
          rtl = _this$_orientation2.rtl;
        if (horizontal && rtl) {
          var cartOffset = this._listMetrics.cartesianOffset(offset + this._scrollMetrics.visibleLength);
          return horizontal ? {
            x: cartOffset
          } : {
            y: cartOffset
          };
        } else {
          return horizontal ? {
            x: offset
          } : {
            y: offset
          };
        }
      }
    }, {
      key: "recordInteraction",
      value: function recordInteraction() {
        this._nestedChildLists.forEach(function (childList) {
          childList.recordInteraction();
        });
        this._viewabilityTuples.forEach(function (t) {
          t.viewabilityHelper.recordInteraction();
        });
        this._updateViewableItems(this.props, this.state.cellsAroundViewport);
      }
    }, {
      key: "flashScrollIndicators",
      value: function flashScrollIndicators() {
        if (this._scrollRef == null) {
          return;
        }
        this._scrollRef.flashScrollIndicators();
      }
    }, {
      key: "getScrollResponder",
      value: function getScrollResponder() {
        if (this._scrollRef && this._scrollRef.getScrollResponder) {
          return this._scrollRef.getScrollResponder();
        }
      }
    }, {
      key: "getScrollableNode",
      value: function getScrollableNode() {
        if (this._scrollRef && this._scrollRef.getScrollableNode) {
          return this._scrollRef.getScrollableNode();
        } else {
          return (0, _reactNative.findNodeHandle)(this._scrollRef);
        }
      }
    }, {
      key: "getScrollRef",
      value: function getScrollRef() {
        if (this._scrollRef && this._scrollRef.getScrollRef) {
          return this._scrollRef.getScrollRef();
        } else {
          return this._scrollRef;
        }
      }
    }, {
      key: "setNativeProps",
      value: function setNativeProps(props) {
        if (this._scrollRef) {
          this._scrollRef.setNativeProps(props);
        }
      }
    }, {
      key: "_getCellKey",
      value: function _getCellKey() {
        var _this$context;
        return ((_this$context = this.context) == null ? undefined : _this$context.cellKey) || 'rootList';
      }
    }, {
      key: "hasMore",
      value: function hasMore() {
        return this._hasMore;
      }
    }, {
      key: "_checkProps",
      value: function _checkProps(props) {
        var onScroll = props.onScroll,
          windowSize = props.windowSize,
          getItemCount = props.getItemCount,
          data = props.data,
          initialScrollIndex = props.initialScrollIndex;
        (0, _invariant.default)(!onScroll || !onScroll.__isNative, "Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent to support native onScroll events with useNativeDriver");
        (0, _invariant.default)((0, _$$_REQUIRE(_dependencyMap[22]).windowSizeOrDefault)(windowSize) > 0, 'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.');
        (0, _invariant.default)(getItemCount, 'VirtualizedList: The "getItemCount" prop must be provided');
        var itemCount = getItemCount(data);
        if (initialScrollIndex != null && !this._hasTriggeredInitialScrollToIndex && (initialScrollIndex < 0 || itemCount > 0 && initialScrollIndex >= itemCount) && !this._hasWarned.initialScrollIndex) {
          console.warn(`initialScrollIndex "${initialScrollIndex}" is not valid (list has ${itemCount} items)`);
          this._hasWarned.initialScrollIndex = true;
        }
      }
    }, {
      key: "_adjustCellsAroundViewport",
      value: function _adjustCellsAroundViewport(props, cellsAroundViewport, pendingScrollUpdateCount) {
        var data = props.data,
          getItemCount = props.getItemCount;
        var onEndReachedThreshold = (0, _$$_REQUIRE(_dependencyMap[22]).onEndReachedThresholdOrDefault)(props.onEndReachedThreshold);
        var _this$_scrollMetrics = this._scrollMetrics,
          offset = _this$_scrollMetrics.offset,
          visibleLength = _this$_scrollMetrics.visibleLength;
        var contentLength = this._listMetrics.getContentLength();
        var distanceFromEnd = contentLength - visibleLength - offset;
        if (visibleLength <= 0 || contentLength <= 0) {
          return cellsAroundViewport.last >= getItemCount(data) ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props) : cellsAroundViewport;
        }
        var newCellsAroundViewport;
        if (props.disableVirtualization) {
          var renderAhead = distanceFromEnd < onEndReachedThreshold * visibleLength ? (0, _$$_REQUIRE(_dependencyMap[22]).maxToRenderPerBatchOrDefault)(props.maxToRenderPerBatch) : 0;
          newCellsAroundViewport = {
            first: 0,
            last: Math.min(cellsAroundViewport.last + renderAhead, getItemCount(data) - 1)
          };
        } else {
          if (pendingScrollUpdateCount > 0) {
            return cellsAroundViewport.last >= getItemCount(data) ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props) : cellsAroundViewport;
          }
          newCellsAroundViewport = (0, _$$_REQUIRE(_dependencyMap[23]).computeWindowedRenderLimits)(props, (0, _$$_REQUIRE(_dependencyMap[22]).maxToRenderPerBatchOrDefault)(props.maxToRenderPerBatch), (0, _$$_REQUIRE(_dependencyMap[22]).windowSizeOrDefault)(props.windowSize), cellsAroundViewport, this._listMetrics, this._scrollMetrics);
          (0, _invariant.default)(newCellsAroundViewport.last < getItemCount(data), 'computeWindowedRenderLimits() should return range in-bounds');
        }
        if (this._nestedChildLists.size() > 0) {
          var childIdx = this._findFirstChildWithMore(newCellsAroundViewport.first, newCellsAroundViewport.last);
          newCellsAroundViewport.last = childIdx != null ? childIdx : newCellsAroundViewport.last;
        }
        return newCellsAroundViewport;
      }
    }, {
      key: "_findFirstChildWithMore",
      value: function _findFirstChildWithMore(first, last) {
        for (var ii = first; ii <= last; ii++) {
          var cellKeyForIndex = this._indicesToKeys.get(ii);
          if (cellKeyForIndex != null && this._nestedChildLists.anyInCell(cellKeyForIndex, function (childList) {
            return childList.hasMore();
          })) {
            return ii;
          }
        }
        return null;
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        if (this._isNestedWithSameOrientation()) {
          this.context.registerAsNestedChild({
            ref: this,
            cellKey: this.context.cellKey
          });
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this._isNestedWithSameOrientation()) {
          this.context.unregisterAsNestedChild({
            ref: this
          });
        }
        clearTimeout(this._updateCellsToRenderTimeoutID);
        this._viewabilityTuples.forEach(function (tuple) {
          tuple.viewabilityHelper.dispose();
        });
        this._fillRateHelper.deactivateAndFlush();
      }
    }, {
      key: "_pushCells",
      value: function _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {
        var _this2 = this;
        var _this$props4 = this.props,
          CellRendererComponent = _this$props4.CellRendererComponent,
          ItemSeparatorComponent = _this$props4.ItemSeparatorComponent,
          ListHeaderComponent = _this$props4.ListHeaderComponent,
          ListItemComponent = _this$props4.ListItemComponent,
          data = _this$props4.data,
          debug = _this$props4.debug,
          getItem = _this$props4.getItem,
          getItemCount = _this$props4.getItemCount,
          getItemLayout = _this$props4.getItemLayout,
          horizontal = _this$props4.horizontal,
          renderItem = _this$props4.renderItem;
        var stickyOffset = ListHeaderComponent ? 1 : 0;
        var end = getItemCount(data) - 1;
        var prevCellKey;
        last = Math.min(end, last);
        var _loop = function _loop() {
          var item = getItem(data, ii);
          var key = VirtualizedList._keyExtractor(item, ii, _this2.props);
          _this2._indicesToKeys.set(ii, key);
          if (stickyIndicesFromProps.has(ii + stickyOffset)) {
            stickyHeaderIndices.push(cells.length);
          }
          var shouldListenForLayout = getItemLayout == null || debug || _this2._fillRateHelper.enabled();
          cells.push(/*#__PURE__*/(0, _jsxRuntime.jsx)(_VirtualizedListCellRenderer.default, Object.assign({
            CellRendererComponent: CellRendererComponent,
            ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,
            ListItemComponent: ListItemComponent,
            cellKey: key,
            horizontal: horizontal,
            index: ii,
            inversionStyle: inversionStyle,
            item: item,
            prevCellKey: prevCellKey,
            onUpdateSeparators: _this2._onUpdateSeparators,
            onCellFocusCapture: _this2._onCellFocusCapture,
            onUnmount: _this2._onCellUnmount,
            ref: function ref(_ref) {
              _this2._cellRefs[key] = _ref;
            },
            renderItem: renderItem
          }, shouldListenForLayout && {
            onCellLayout: _this2._onCellLayout
          }), key));
          prevCellKey = key;
        };
        for (var ii = first; ii <= last; ii++) {
          _loop();
        }
      }
    }, {
      key: "_isNestedWithSameOrientation",
      value: function _isNestedWithSameOrientation() {
        var nestedContext = this.context;
        return !!(nestedContext && !!nestedContext.horizontal === (0, _$$_REQUIRE(_dependencyMap[22]).horizontalOrDefault)(this.props.horizontal));
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this,
          _this$props$scrollEve;
        this._checkProps(this.props);
        var _this$props5 = this.props,
          ListEmptyComponent = _this$props5.ListEmptyComponent,
          ListFooterComponent = _this$props5.ListFooterComponent,
          ListHeaderComponent = _this$props5.ListHeaderComponent;
        var _this$props6 = this.props,
          data = _this$props6.data,
          horizontal = _this$props6.horizontal;
        var inversionStyle = this.props.inverted ? (0, _$$_REQUIRE(_dependencyMap[22]).horizontalOrDefault)(this.props.horizontal) ? styles.horizontallyInverted : styles.verticallyInverted : null;
        var cells = [];
        var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);
        var stickyHeaderIndices = [];
        if (ListHeaderComponent) {
          if (stickyIndicesFromProps.has(0)) {
            stickyHeaderIndices.push(0);
          }
          var element = React.isValidElement(ListHeaderComponent) ? ListHeaderComponent : /*#__PURE__*/(0, _jsxRuntime.jsx)(ListHeaderComponent, {});
          cells.push(/*#__PURE__*/(0, _jsxRuntime.jsx)(_$$_REQUIRE(_dependencyMap[24]).VirtualizedListCellContextProvider, {
            cellKey: this._getCellKey() + '-header',
            children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.View, {
              collapsable: false,
              onLayout: this._onLayoutHeader,
              style: _reactNative.StyleSheet.compose(inversionStyle, this.props.ListHeaderComponentStyle),
              children: element
            })
          }, "$header"));
        }
        var itemCount = this.props.getItemCount(data);
        if (itemCount === 0 && ListEmptyComponent) {
          var _element = React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : /*#__PURE__*/(0, _jsxRuntime.jsx)(ListEmptyComponent, {});
          cells.push(/*#__PURE__*/(0, _jsxRuntime.jsx)(_$$_REQUIRE(_dependencyMap[24]).VirtualizedListCellContextProvider, {
            cellKey: this._getCellKey() + '-empty',
            children: React.cloneElement(_element, {
              onLayout: function onLayout(event) {
                _this3._onLayoutEmpty(event);
                if (_element.props.onLayout) {
                  _element.props.onLayout(event);
                }
              },
              style: _reactNative.StyleSheet.compose(inversionStyle, _element.props.style)
            })
          }, "$empty"));
        }
        if (itemCount > 0) {
          _usedIndexForKey = false;
          _keylessItemComponentName = '';
          var spacerKey = this._getSpacerKey(!horizontal);
          var renderRegions = this.state.renderMask.enumerateRegions();
          var lastRegion = renderRegions[renderRegions.length - 1];
          var lastSpacer = lastRegion != null && lastRegion.isSpacer ? lastRegion : null;
          for (var section of renderRegions) {
            if (section.isSpacer) {
              if (this.props.disableVirtualization) {
                continue;
              }
              var isLastSpacer = section === lastSpacer;
              var constrainToMeasured = isLastSpacer && !this.props.getItemLayout;
              var last = constrainToMeasured ? (0, _clamp.default)(section.first - 1, section.last, this._listMetrics.getHighestMeasuredCellIndex()) : section.last;
              var firstMetrics = this._listMetrics.getCellMetricsApprox(section.first, this.props);
              var lastMetrics = this._listMetrics.getCellMetricsApprox(last, this.props);
              var spacerSize = lastMetrics.offset + lastMetrics.length - firstMetrics.offset;
              cells.push(/*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.View, {
                style: (0, _defineProperty2.default)({}, spacerKey, spacerSize)
              }, `$spacer-${section.first}`));
            } else {
              this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, section.first, section.last, inversionStyle);
            }
          }
          if (!this._hasWarned.keys && _usedIndexForKey) {
            console.warn("VirtualizedList: missing keys for items, make sure to specify a key or id property on each item or provide a custom keyExtractor.", _keylessItemComponentName);
            this._hasWarned.keys = true;
          }
        }
        if (ListFooterComponent) {
          var _element2 = React.isValidElement(ListFooterComponent) ? ListFooterComponent : /*#__PURE__*/(0, _jsxRuntime.jsx)(ListFooterComponent, {});
          cells.push(/*#__PURE__*/(0, _jsxRuntime.jsx)(_$$_REQUIRE(_dependencyMap[24]).VirtualizedListCellContextProvider, {
            cellKey: this._getFooterCellKey(),
            children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.View, {
              onLayout: this._onLayoutFooter,
              style: _reactNative.StyleSheet.compose(inversionStyle, this.props.ListFooterComponentStyle),
              children: _element2
            })
          }, "$footer"));
        }
        var scrollProps = Object.assign({}, this.props, {
          onContentSizeChange: this._onContentSizeChange,
          onLayout: this._onLayout,
          onScroll: this._onScroll,
          onScrollBeginDrag: this._onScrollBeginDrag,
          onScrollEndDrag: this._onScrollEndDrag,
          onMomentumScrollBegin: this._onMomentumScrollBegin,
          onMomentumScrollEnd: this._onMomentumScrollEnd,
          scrollEventThrottle: (_this$props$scrollEve = this.props.scrollEventThrottle) != null ? _this$props$scrollEve : 0.0001,
          invertStickyHeaders: this.props.invertStickyHeaders !== undefined ? this.props.invertStickyHeaders : this.props.inverted,
          stickyHeaderIndices: stickyHeaderIndices,
          style: inversionStyle ? [inversionStyle, this.props.style] : this.props.style,
          isInvertedVirtualizedList: this.props.inverted,
          maintainVisibleContentPosition: this.props.maintainVisibleContentPosition != null ? Object.assign({}, this.props.maintainVisibleContentPosition, {
            minIndexForVisible: this.props.maintainVisibleContentPosition.minIndexForVisible + (this.props.ListHeaderComponent ? 1 : 0)
          }) : undefined
        });
        this._hasMore = this.state.cellsAroundViewport.last < itemCount - 1;
        var innerRet = /*#__PURE__*/(0, _jsxRuntime.jsx)(_$$_REQUIRE(_dependencyMap[24]).VirtualizedListContextProvider, {
          value: {
            cellKey: null,
            getScrollMetrics: this._getScrollMetrics,
            horizontal: (0, _$$_REQUIRE(_dependencyMap[22]).horizontalOrDefault)(this.props.horizontal),
            getOutermostParentListRef: this._getOutermostParentListRef,
            registerAsNestedChild: this._registerAsNestedChild,
            unregisterAsNestedChild: this._unregisterAsNestedChild
          },
          children: React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {
            ref: this._captureScrollRef
          }, cells)
        });
        var ret = innerRet;
        if (this.props.debug) {
          return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactNative.View, {
            style: styles.debug,
            children: [ret, this._renderDebugOverlay()]
          });
        } else {
          return ret;
        }
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        var _this$props7 = this.props,
          data = _this$props7.data,
          extraData = _this$props7.extraData,
          getItemLayout = _this$props7.getItemLayout;
        if (data !== prevProps.data || extraData !== prevProps.extraData) {
          this._viewabilityTuples.forEach(function (tuple) {
            tuple.viewabilityHelper.resetViewableIndices();
          });
        }
        var hiPriInProgress = this._hiPriInProgress;
        this._scheduleCellsToRenderUpdate();
        if (hiPriInProgress) {
          this._hiPriInProgress = false;
        }
        if (getItemLayout != null) {
          this._maybeCallOnEdgeReached();
        }
      }
    }, {
      key: "_computeBlankness",
      value: function _computeBlankness() {
        this._fillRateHelper.computeBlankness(this.props, this.state.cellsAroundViewport, this._scrollMetrics);
      }
    }, {
      key: "_triggerRemeasureForChildListsInCell",
      value: function _triggerRemeasureForChildListsInCell(cellKey) {
        this._nestedChildLists.forEachInCell(cellKey, function (childList) {
          childList.measureLayoutRelativeToContainingList();
        });
      }
    }, {
      key: "measureLayoutRelativeToContainingList",
      value: function measureLayoutRelativeToContainingList() {
        var _this4 = this;
        try {
          if (!this._scrollRef) {
            return;
          }
          this._scrollRef.measureLayout(this.context.getOutermostParentListRef().getScrollRef(), function (x, y, width, height) {
            _this4._offsetFromParentVirtualizedList = _this4._selectOffset({
              x: x,
              y: y
            });
            _this4._listMetrics.notifyListContentLayout({
              layout: {
                width: width,
                height: height
              },
              orientation: _this4._orientation()
            });
            var scrollMetrics = _this4._convertParentScrollMetrics(_this4.context.getScrollMetrics());
            var metricsChanged = _this4._scrollMetrics.visibleLength !== scrollMetrics.visibleLength || _this4._scrollMetrics.offset !== scrollMetrics.offset;
            if (metricsChanged) {
              _this4._scrollMetrics.visibleLength = scrollMetrics.visibleLength;
              _this4._scrollMetrics.offset = scrollMetrics.offset;
              _this4._nestedChildLists.forEach(function (childList) {
                childList.measureLayoutRelativeToContainingList();
              });
            }
          }, function (error) {
            console.warn("VirtualizedList: Encountered an error while measuring a list's offset from its containing VirtualizedList.");
          });
        } catch (error) {
          console.warn('measureLayoutRelativeToContainingList threw an error', error.stack);
        }
      }
    }, {
      key: "_getFooterCellKey",
      value: function _getFooterCellKey() {
        return this._getCellKey() + '-footer';
      }
    }, {
      key: "_renderDebugOverlay",
      value: function _renderDebugOverlay() {
        var normalize = this._scrollMetrics.visibleLength / (this._listMetrics.getContentLength() || 1);
        var framesInLayout = [];
        var itemCount = this.props.getItemCount(this.props.data);
        for (var ii = 0; ii < itemCount; ii++) {
          var frame = this._listMetrics.getCellMetricsApprox(ii, this.props);
          if (frame.isMounted) {
            framesInLayout.push(frame);
          }
        }
        var windowTop = this._listMetrics.getCellMetricsApprox(this.state.cellsAroundViewport.first, this.props).offset;
        var frameLast = this._listMetrics.getCellMetricsApprox(this.state.cellsAroundViewport.last, this.props);
        var windowLen = frameLast.offset + frameLast.length - windowTop;
        var visTop = this._scrollMetrics.offset;
        var visLen = this._scrollMetrics.visibleLength;
        return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactNative.View, {
          style: [styles.debugOverlayBase, styles.debugOverlay],
          children: [framesInLayout.map(function (f, ii) {
            return /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.View, {
              style: [styles.debugOverlayBase, styles.debugOverlayFrame, {
                top: f.offset * normalize,
                height: f.length * normalize
              }]
            }, 'f' + ii);
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.View, {
            style: [styles.debugOverlayBase, styles.debugOverlayFrameLast, {
              top: windowTop * normalize,
              height: windowLen * normalize
            }]
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.View, {
            style: [styles.debugOverlayBase, styles.debugOverlayFrameVis, {
              top: visTop * normalize,
              height: visLen * normalize
            }]
          })]
        });
      }
    }, {
      key: "_selectLength",
      value: function _selectLength(metrics) {
        return !(0, _$$_REQUIRE(_dependencyMap[22]).horizontalOrDefault)(this.props.horizontal) ? metrics.height : metrics.width;
      }
    }, {
      key: "_selectOffset",
      value: function _selectOffset(_ref3) {
        var x = _ref3.x,
          y = _ref3.y;
        return this._orientation().horizontal ? x : y;
      }
    }, {
      key: "_orientation",
      value: function _orientation() {
        return {
          horizontal: (0, _$$_REQUIRE(_dependencyMap[22]).horizontalOrDefault)(this.props.horizontal),
          rtl: _reactNative.I18nManager.isRTL
        };
      }
    }, {
      key: "_maybeCallOnEdgeReached",
      value: function _maybeCallOnEdgeReached() {
        var _this$props8 = this.props,
          data = _this$props8.data,
          getItemCount = _this$props8.getItemCount,
          onStartReached = _this$props8.onStartReached,
          onStartReachedThreshold = _this$props8.onStartReachedThreshold,
          onEndReached = _this$props8.onEndReached,
          onEndReachedThreshold = _this$props8.onEndReachedThreshold;
        if (!this._listMetrics.hasContentLength() || this._scrollMetrics.visibleLength === 0) {
          return;
        }
        if (this.state.pendingScrollUpdateCount > 0) {
          return;
        }
        var _this$_scrollMetrics2 = this._scrollMetrics,
          visibleLength = _this$_scrollMetrics2.visibleLength,
          offset = _this$_scrollMetrics2.offset;
        var distanceFromStart = offset;
        var distanceFromEnd = this._listMetrics.getContentLength() - visibleLength - offset;
        if (distanceFromStart < ON_EDGE_REACHED_EPSILON) {
          distanceFromStart = 0;
        }
        if (distanceFromEnd < ON_EDGE_REACHED_EPSILON) {
          distanceFromEnd = 0;
        }
        var DEFAULT_THRESHOLD_PX = 2;
        var startThreshold = onStartReachedThreshold != null ? onStartReachedThreshold * visibleLength : DEFAULT_THRESHOLD_PX;
        var endThreshold = onEndReachedThreshold != null ? onEndReachedThreshold * visibleLength : DEFAULT_THRESHOLD_PX;
        var isWithinStartThreshold = distanceFromStart <= startThreshold;
        var isWithinEndThreshold = distanceFromEnd <= endThreshold;
        if (onEndReached && this.state.cellsAroundViewport.last === getItemCount(data) - 1 && isWithinEndThreshold && this._listMetrics.getContentLength() !== this._sentEndForContentLength) {
          this._sentEndForContentLength = this._listMetrics.getContentLength();
          onEndReached({
            distanceFromEnd: distanceFromEnd
          });
        }
        if (onStartReached != null && this.state.cellsAroundViewport.first === 0 && isWithinStartThreshold && this._listMetrics.getContentLength() !== this._sentStartForContentLength) {
          this._sentStartForContentLength = this._listMetrics.getContentLength();
          onStartReached({
            distanceFromStart: distanceFromStart
          });
        }
        if (!isWithinStartThreshold) {
          this._sentStartForContentLength = 0;
        }
        if (!isWithinEndThreshold) {
          this._sentEndForContentLength = 0;
        }
      }
    }, {
      key: "_maybeScrollToInitialScrollIndex",
      value: function _maybeScrollToInitialScrollIndex(contentWidth, contentHeight) {
        if (contentWidth > 0 && contentHeight > 0 && this.props.initialScrollIndex != null && this.props.initialScrollIndex > 0 && !this._hasTriggeredInitialScrollToIndex) {
          if (this.props.contentOffset == null) {
            if (this.props.initialScrollIndex < this.props.getItemCount(this.props.data)) {
              this.scrollToIndex({
                animated: false,
                index: (0, _nullthrows.default)(this.props.initialScrollIndex)
              });
            } else {
              this.scrollToEnd({
                animated: false
              });
            }
          }
          this._hasTriggeredInitialScrollToIndex = true;
        }
      }
    }, {
      key: "unstable_onScroll",
      value: function unstable_onScroll(e) {
        this._onScroll(e);
      }
    }, {
      key: "_offsetFromScrollEvent",
      value: function _offsetFromScrollEvent(e) {
        var _e$nativeEvent = e.nativeEvent,
          contentOffset = _e$nativeEvent.contentOffset,
          contentSize = _e$nativeEvent.contentSize,
          layoutMeasurement = _e$nativeEvent.layoutMeasurement;
        var _this$_orientation3 = this._orientation(),
          horizontal = _this$_orientation3.horizontal,
          rtl = _this$_orientation3.rtl;
        if (horizontal && rtl) {
          return this._selectLength(contentSize) - (this._selectOffset(contentOffset) + this._selectLength(layoutMeasurement));
        } else {
          return this._selectOffset(contentOffset);
        }
      }
    }, {
      key: "_scheduleCellsToRenderUpdate",
      value: function _scheduleCellsToRenderUpdate() {
        var _this5 = this;
        if ((this._listMetrics.getAverageCellLength() > 0 || this.props.getItemLayout != null) && this._shouldRenderWithPriority() && !this._hiPriInProgress) {
          this._hiPriInProgress = true;
          if (this._updateCellsToRenderTimeoutID != null) {
            clearTimeout(this._updateCellsToRenderTimeoutID);
            this._updateCellsToRenderTimeoutID = null;
          }
          this._updateCellsToRender();
          return;
        } else {
          if (this._updateCellsToRenderTimeoutID == null) {
            var _this$props$updateCel;
            this._updateCellsToRenderTimeoutID = setTimeout(function () {
              _this5._updateCellsToRenderTimeoutID = null;
              _this5._updateCellsToRender();
            }, (_this$props$updateCel = this.props.updateCellsBatchingPeriod) != null ? _this$props$updateCel : 50);
          }
        }
      }
    }, {
      key: "_shouldRenderWithPriority",
      value: function _shouldRenderWithPriority() {
        var _this$state$cellsArou = this.state.cellsAroundViewport,
          first = _this$state$cellsArou.first,
          last = _this$state$cellsArou.last;
        var _this$_scrollMetrics3 = this._scrollMetrics,
          offset = _this$_scrollMetrics3.offset,
          visibleLength = _this$_scrollMetrics3.visibleLength,
          velocity = _this$_scrollMetrics3.velocity;
        var itemCount = this.props.getItemCount(this.props.data);
        var hiPri = false;
        var onStartReachedThreshold = (0, _$$_REQUIRE(_dependencyMap[22]).onStartReachedThresholdOrDefault)(this.props.onStartReachedThreshold);
        var onEndReachedThreshold = (0, _$$_REQUIRE(_dependencyMap[22]).onEndReachedThresholdOrDefault)(this.props.onEndReachedThreshold);
        if (first > 0) {
          var distTop = offset - this._listMetrics.getCellMetricsApprox(first, this.props).offset;
          hiPri = distTop < 0 || velocity < -2 && distTop < getScrollingThreshold(onStartReachedThreshold, visibleLength);
        }
        if (!hiPri && last >= 0 && last < itemCount - 1) {
          var distBottom = this._listMetrics.getCellMetricsApprox(last, this.props).offset - (offset + visibleLength);
          hiPri = distBottom < 0 || velocity > 2 && distBottom < getScrollingThreshold(onEndReachedThreshold, visibleLength);
        }
        return hiPri;
      }
    }, {
      key: "unstable_onScrollBeginDrag",
      value: function unstable_onScrollBeginDrag(e) {
        this._onScrollBeginDrag(e);
      }
    }, {
      key: "unstable_onScrollEndDrag",
      value: function unstable_onScrollEndDrag(e) {
        this._onScrollEndDrag(e);
      }
    }, {
      key: "unstable_onMomentumScrollBegin",
      value: function unstable_onMomentumScrollBegin(e) {
        this._onMomentumScrollBegin(e);
      }
    }, {
      key: "unstable_onMomentumScrollEnd",
      value: function unstable_onMomentumScrollEnd(e) {
        this._onMomentumScrollEnd(e);
      }
    }, {
      key: "__getListMetrics",
      value: function __getListMetrics() {
        return this._listMetrics;
      }
    }, {
      key: "_updateViewableItems",
      value: function _updateViewableItems(props, cellsAroundViewport) {
        var _this6 = this;
        if (this.state.pendingScrollUpdateCount > 0) {
          return;
        }
        this._viewabilityTuples.forEach(function (tuple) {
          tuple.viewabilityHelper.onUpdate(props, _this6._scrollMetrics.offset, _this6._scrollMetrics.visibleLength, _this6._listMetrics, _this6._createViewToken, tuple.onViewableItemsChanged, cellsAroundViewport);
        });
      }
    }], [{
      key: "_findItemIndexWithKey",
      value: function _findItemIndexWithKey(props, key, hint) {
        var itemCount = props.getItemCount(props.data);
        if (hint != null && hint >= 0 && hint < itemCount) {
          var curKey = VirtualizedList._getItemKey(props, hint);
          if (curKey === key) {
            return hint;
          }
        }
        for (var ii = 0; ii < itemCount; ii++) {
          var _curKey = VirtualizedList._getItemKey(props, ii);
          if (_curKey === key) {
            return ii;
          }
        }
        return null;
      }
    }, {
      key: "_getItemKey",
      value: function _getItemKey(props, index) {
        var item = props.getItem(props.data, index);
        return VirtualizedList._keyExtractor(item, index, props);
      }
    }, {
      key: "_createRenderMask",
      value: function _createRenderMask(props, cellsAroundViewport, additionalRegions) {
        var itemCount = props.getItemCount(props.data);
        (0, _invariant.default)(cellsAroundViewport.first >= 0 && cellsAroundViewport.last >= cellsAroundViewport.first - 1 && cellsAroundViewport.last < itemCount, `Invalid cells around viewport "[${cellsAroundViewport.first}, ${cellsAroundViewport.last}]" was passed to VirtualizedList._createRenderMask`);
        var renderMask = new (_$$_REQUIRE(_dependencyMap[25]).CellRenderMask)(itemCount);
        if (itemCount > 0) {
          var allRegions = [cellsAroundViewport].concat((0, _toConsumableArray2.default)(additionalRegions != null ? additionalRegions : []));
          for (var region of allRegions) {
            renderMask.addCells(region);
          }
          if (props.initialScrollIndex == null || props.initialScrollIndex <= 0) {
            var initialRegion = VirtualizedList._initialRenderRegion(props);
            renderMask.addCells(initialRegion);
          }
          var stickyIndicesSet = new Set(props.stickyHeaderIndices);
          VirtualizedList._ensureClosestStickyHeader(props, stickyIndicesSet, renderMask, cellsAroundViewport.first);
        }
        return renderMask;
      }
    }, {
      key: "_initialRenderRegion",
      value: function _initialRenderRegion(props) {
        var _props$initialScrollI;
        var itemCount = props.getItemCount(props.data);
        var firstCellIndex = Math.max(0, Math.min(itemCount - 1, Math.floor((_props$initialScrollI = props.initialScrollIndex) != null ? _props$initialScrollI : 0)));
        var lastCellIndex = Math.min(itemCount, firstCellIndex + (0, _$$_REQUIRE(_dependencyMap[22]).initialNumToRenderOrDefault)(props.initialNumToRender)) - 1;
        return {
          first: firstCellIndex,
          last: lastCellIndex
        };
      }
    }, {
      key: "_ensureClosestStickyHeader",
      value: function _ensureClosestStickyHeader(props, stickyIndicesSet, renderMask, cellIdx) {
        var stickyOffset = props.ListHeaderComponent ? 1 : 0;
        for (var itemIdx = cellIdx - 1; itemIdx >= 0; itemIdx--) {
          if (stickyIndicesSet.has(itemIdx + stickyOffset)) {
            renderMask.addCells({
              first: itemIdx,
              last: itemIdx
            });
            break;
          }
        }
      }
    }, {
      key: "getDerivedStateFromProps",
      value: function getDerivedStateFromProps(newProps, prevState) {
        var _newProps$maintainVis, _newProps$maintainVis2;
        var itemCount = newProps.getItemCount(newProps.data);
        if (itemCount === prevState.renderMask.numCells()) {
          return prevState;
        }
        var maintainVisibleContentPositionAdjustment = null;
        var prevFirstVisibleItemKey = prevState.firstVisibleItemKey;
        var minIndexForVisible = (_newProps$maintainVis = (_newProps$maintainVis2 = newProps.maintainVisibleContentPosition) == null ? undefined : _newProps$maintainVis2.minIndexForVisible) != null ? _newProps$maintainVis : 0;
        var newFirstVisibleItemKey = newProps.getItemCount(newProps.data) > minIndexForVisible ? VirtualizedList._getItemKey(newProps, minIndexForVisible) : null;
        if (newProps.maintainVisibleContentPosition != null && prevFirstVisibleItemKey != null && newFirstVisibleItemKey != null) {
          if (newFirstVisibleItemKey !== prevFirstVisibleItemKey) {
            var hint = itemCount - prevState.renderMask.numCells() + minIndexForVisible;
            var firstVisibleItemIndex = VirtualizedList._findItemIndexWithKey(newProps, prevFirstVisibleItemKey, hint);
            maintainVisibleContentPositionAdjustment = firstVisibleItemIndex != null ? firstVisibleItemIndex - minIndexForVisible : null;
          } else {
            maintainVisibleContentPositionAdjustment = null;
          }
        }
        var constrainedCells = VirtualizedList._constrainToItemCount(maintainVisibleContentPositionAdjustment != null ? {
          first: prevState.cellsAroundViewport.first + maintainVisibleContentPositionAdjustment,
          last: prevState.cellsAroundViewport.last + maintainVisibleContentPositionAdjustment
        } : prevState.cellsAroundViewport, newProps);
        return {
          cellsAroundViewport: constrainedCells,
          renderMask: VirtualizedList._createRenderMask(newProps, constrainedCells),
          firstVisibleItemKey: newFirstVisibleItemKey,
          pendingScrollUpdateCount: maintainVisibleContentPositionAdjustment != null ? prevState.pendingScrollUpdateCount + 1 : prevState.pendingScrollUpdateCount
        };
      }
    }, {
      key: "_constrainToItemCount",
      value: function _constrainToItemCount(cells, props) {
        var itemCount = props.getItemCount(props.data);
        var lastPossibleCellIndex = itemCount - 1;
        var maxToRenderPerBatch = (0, _$$_REQUIRE(_dependencyMap[22]).maxToRenderPerBatchOrDefault)(props.maxToRenderPerBatch);
        var maxFirst = Math.max(0, lastPossibleCellIndex - maxToRenderPerBatch);
        return {
          first: (0, _clamp.default)(0, cells.first, maxFirst),
          last: Math.min(lastPossibleCellIndex, cells.last)
        };
      }
    }, {
      key: "_keyExtractor",
      value: function _keyExtractor(item, index, props) {
        if (props.keyExtractor != null) {
          return props.keyExtractor(item, index);
        }
        var key = (0, _$$_REQUIRE(_dependencyMap[23]).keyExtractor)(item, index);
        if (key === String(index)) {
          _usedIndexForKey = true;
          if (item.type && item.type.displayName) {
            _keylessItemComponentName = item.type.displayName;
          }
        }
        return key;
      }
    }]);
  }(_StateSafePureComponent.default);
  VirtualizedList.contextType = _$$_REQUIRE(_dependencyMap[24]).VirtualizedListContext;
  var styles = _reactNative.StyleSheet.create({
    verticallyInverted: _reactNative.Platform.OS === 'android' ? {
      transform: [{
        scale: -1
      }]
    } : {
      transform: [{
        scaleY: -1
      }]
    },
    horizontallyInverted: {
      transform: [{
        scaleX: -1
      }]
    },
    debug: {
      flex: 1
    },
    debugOverlayBase: {
      position: 'absolute',
      top: 0,
      right: 0
    },
    debugOverlay: {
      bottom: 0,
      width: 20,
      borderColor: 'blue',
      borderWidth: 1
    },
    debugOverlayFrame: {
      left: 0,
      backgroundColor: 'orange'
    },
    debugOverlayFrameLast: {
      left: 0,
      borderColor: 'green',
      borderWidth: 2
    },
    debugOverlayFrameVis: {
      left: 0,
      borderColor: 'red',
      borderWidth: 2
    }
  });
  var _default = exports.default = VirtualizedList;
},347,[1,6,99,203,12,13,23,25,28,348,349,350,351,352,353,354,355,20,45,119,2,251,357,346,356,358]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  function clamp(min, value, max) {
    if (value < min) {
      return min;
    }
    if (value > max) {
      return max;
    }
    return value;
  }
  var _default = exports.default = clamp;
},348,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  function infoLog() {
    var _console;
    return (_console = console).log.apply(_console, arguments);
  }
  var _default = exports.default = infoLog;
},349,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var ChildListCollection = exports.default = /*#__PURE__*/function () {
    function ChildListCollection() {
      (0, _classCallCheck2.default)(this, ChildListCollection);
      this._cellKeyToChildren = new Map();
      this._childrenToCellKey = new Map();
    }
    return (0, _createClass2.default)(ChildListCollection, [{
      key: "add",
      value: function add(list, cellKey) {
        var _this$_cellKeyToChild;
        (0, _invariant.default)(!this._childrenToCellKey.has(list), 'Trying to add already present child list');
        var cellLists = (_this$_cellKeyToChild = this._cellKeyToChildren.get(cellKey)) != null ? _this$_cellKeyToChild : new Set();
        cellLists.add(list);
        this._cellKeyToChildren.set(cellKey, cellLists);
        this._childrenToCellKey.set(list, cellKey);
      }
    }, {
      key: "remove",
      value: function remove(list) {
        var cellKey = this._childrenToCellKey.get(list);
        (0, _invariant.default)(cellKey != null, 'Trying to remove non-present child list');
        this._childrenToCellKey.delete(list);
        var cellLists = this._cellKeyToChildren.get(cellKey);
        (0, _invariant.default)(cellLists, '_cellKeyToChildren should contain cellKey');
        cellLists.delete(list);
        if (cellLists.size === 0) {
          this._cellKeyToChildren.delete(cellKey);
        }
      }
    }, {
      key: "forEach",
      value: function forEach(fn) {
        for (var listSet of this._cellKeyToChildren.values()) {
          for (var list of listSet) {
            fn(list);
          }
        }
      }
    }, {
      key: "forEachInCell",
      value: function forEachInCell(cellKey, fn) {
        var _this$_cellKeyToChild2;
        var listSet = (_this$_cellKeyToChild2 = this._cellKeyToChildren.get(cellKey)) != null ? _this$_cellKeyToChild2 : [];
        for (var list of listSet) {
          fn(list);
        }
      }
    }, {
      key: "anyInCell",
      value: function anyInCell(cellKey, fn) {
        var _this$_cellKeyToChild3;
        var listSet = (_this$_cellKeyToChild3 = this._cellKeyToChildren.get(cellKey)) != null ? _this$_cellKeyToChild3 : [];
        for (var list of listSet) {
          if (fn(list)) {
            return true;
          }
        }
        return false;
      }
    }, {
      key: "size",
      value: function size() {
        return this._childrenToCellKey.size;
      }
    }]);
  }();
},350,[1,12,13,20]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _ListMetricsAggregator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var Info = /*#__PURE__*/(0, _createClass2.default)(function Info() {
    (0, _classCallCheck2.default)(this, Info);
    this.any_blank_count = 0;
    this.any_blank_ms = 0;
    this.any_blank_speed_sum = 0;
    this.mostly_blank_count = 0;
    this.mostly_blank_ms = 0;
    this.pixels_blank = 0;
    this.pixels_sampled = 0;
    this.pixels_scrolled = 0;
    this.total_time_spent = 0;
    this.sample_count = 0;
  });
  var DEBUG = false;
  var _listeners = [];
  var _minSampleCount = 10;
  var _sampleRate = null;
  var FillRateHelper = /*#__PURE__*/function () {
    function FillRateHelper(listMetrics) {
      (0, _classCallCheck2.default)(this, FillRateHelper);
      this._anyBlankStartTime = null;
      this._enabled = false;
      this._info = new Info();
      this._mostlyBlankStartTime = null;
      this._samplesStartTime = null;
      this._listMetrics = listMetrics;
      this._enabled = (_sampleRate || 0) > Math.random();
      this._resetData();
    }
    return (0, _createClass2.default)(FillRateHelper, [{
      key: "activate",
      value: function activate() {
        if (this._enabled && this._samplesStartTime == null) {
          DEBUG;
          this._samplesStartTime = global.performance.now();
        }
      }
    }, {
      key: "deactivateAndFlush",
      value: function deactivateAndFlush() {
        if (!this._enabled) {
          return;
        }
        var start = this._samplesStartTime;
        if (start == null) {
          DEBUG;
          return;
        }
        if (this._info.sample_count < _minSampleCount) {
          this._resetData();
          return;
        }
        var total_time_spent = global.performance.now() - start;
        var info = Object.assign({}, this._info, {
          total_time_spent: total_time_spent
        });
        _listeners.forEach(function (listener) {
          return listener(info);
        });
        this._resetData();
      }
    }, {
      key: "computeBlankness",
      value: function computeBlankness(props, cellsAroundViewport, scrollMetrics) {
        if (!this._enabled || props.getItemCount(props.data) === 0 || cellsAroundViewport.last < cellsAroundViewport.first || this._samplesStartTime == null) {
          return 0;
        }
        var dOffset = scrollMetrics.dOffset,
          offset = scrollMetrics.offset,
          velocity = scrollMetrics.velocity,
          visibleLength = scrollMetrics.visibleLength;
        this._info.sample_count++;
        this._info.pixels_sampled += Math.round(visibleLength);
        this._info.pixels_scrolled += Math.round(Math.abs(dOffset));
        var scrollSpeed = Math.round(Math.abs(velocity) * 1000);
        var now = global.performance.now();
        if (this._anyBlankStartTime != null) {
          this._info.any_blank_ms += now - this._anyBlankStartTime;
        }
        this._anyBlankStartTime = null;
        if (this._mostlyBlankStartTime != null) {
          this._info.mostly_blank_ms += now - this._mostlyBlankStartTime;
        }
        this._mostlyBlankStartTime = null;
        var blankTop = 0;
        var first = cellsAroundViewport.first;
        var firstFrame = this._listMetrics.getCellMetrics(first, props);
        while (first <= cellsAroundViewport.last && (!firstFrame || !firstFrame.isMounted)) {
          firstFrame = this._listMetrics.getCellMetrics(first, props);
          first++;
        }
        if (firstFrame && first > 0) {
          blankTop = Math.min(visibleLength, Math.max(0, firstFrame.offset - offset));
        }
        var blankBottom = 0;
        var last = cellsAroundViewport.last;
        var lastFrame = this._listMetrics.getCellMetrics(last, props);
        while (last >= cellsAroundViewport.first && (!lastFrame || !lastFrame.isMounted)) {
          lastFrame = this._listMetrics.getCellMetrics(last, props);
          last--;
        }
        if (lastFrame && last < props.getItemCount(props.data) - 1) {
          var bottomEdge = lastFrame.offset + lastFrame.length;
          blankBottom = Math.min(visibleLength, Math.max(0, offset + visibleLength - bottomEdge));
        }
        var pixels_blank = Math.round(blankTop + blankBottom);
        var blankness = pixels_blank / visibleLength;
        if (blankness > 0) {
          this._anyBlankStartTime = now;
          this._info.any_blank_speed_sum += scrollSpeed;
          this._info.any_blank_count++;
          this._info.pixels_blank += pixels_blank;
          if (blankness > 0.5) {
            this._mostlyBlankStartTime = now;
            this._info.mostly_blank_count++;
          }
        } else if (scrollSpeed < 0.01 || Math.abs(dOffset) < 1) {
          this.deactivateAndFlush();
        }
        return blankness;
      }
    }, {
      key: "enabled",
      value: function enabled() {
        return this._enabled;
      }
    }, {
      key: "_resetData",
      value: function _resetData() {
        this._anyBlankStartTime = null;
        this._info = new Info();
        this._mostlyBlankStartTime = null;
        this._samplesStartTime = null;
      }
    }], [{
      key: "addListener",
      value: function addListener(callback) {
        if (_sampleRate === null) {
          console.warn('Call `FillRateHelper.setSampleRate` before `addListener`.');
        }
        _listeners.push(callback);
        return {
          remove: function remove() {
            _listeners = _listeners.filter(function (listener) {
              return callback !== listener;
            });
          }
        };
      }
    }, {
      key: "setSampleRate",
      value: function setSampleRate(sampleRate) {
        _sampleRate = sampleRate;
      }
    }, {
      key: "setMinSampleCount",
      value: function setMinSampleCount(minSampleCount) {
        _minSampleCount = minSampleCount;
      }
    }]);
  }();
  var _default = exports.default = FillRateHelper;
},351,[1,13,12,352]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var ListMetricsAggregator = exports.default = /*#__PURE__*/function () {
    function ListMetricsAggregator() {
      (0, _classCallCheck2.default)(this, ListMetricsAggregator);
      this._averageCellLength = 0;
      this._cellMetrics = new Map();
      this._highestMeasuredCellIndex = 0;
      this._measuredCellsLength = 0;
      this._measuredCellsCount = 0;
      this._orientation = {
        horizontal: false,
        rtl: false
      };
    }
    return (0, _createClass2.default)(ListMetricsAggregator, [{
      key: "notifyCellLayout",
      value: function notifyCellLayout(_ref) {
        var cellIndex = _ref.cellIndex,
          cellKey = _ref.cellKey,
          orientation = _ref.orientation,
          layout = _ref.layout;
        this._invalidateIfOrientationChanged(orientation);
        var next = {
          index: cellIndex,
          length: this._selectLength(layout),
          isMounted: true,
          offset: this.flowRelativeOffset(layout)
        };
        var curr = this._cellMetrics.get(cellKey);
        if (!curr || next.offset !== curr.offset || next.length !== curr.length) {
          if (curr) {
            var dLength = next.length - curr.length;
            this._measuredCellsLength += dLength;
          } else {
            this._measuredCellsLength += next.length;
            this._measuredCellsCount += 1;
          }
          this._averageCellLength = this._measuredCellsLength / this._measuredCellsCount;
          this._cellMetrics.set(cellKey, next);
          this._highestMeasuredCellIndex = Math.max(this._highestMeasuredCellIndex, cellIndex);
          return true;
        } else {
          curr.isMounted = true;
          return false;
        }
      }
    }, {
      key: "notifyCellUnmounted",
      value: function notifyCellUnmounted(cellKey) {
        var curr = this._cellMetrics.get(cellKey);
        if (curr) {
          curr.isMounted = false;
        }
      }
    }, {
      key: "notifyListContentLayout",
      value: function notifyListContentLayout(_ref2) {
        var orientation = _ref2.orientation,
          layout = _ref2.layout;
        this._invalidateIfOrientationChanged(orientation);
        this._contentLength = this._selectLength(layout);
      }
    }, {
      key: "getAverageCellLength",
      value: function getAverageCellLength() {
        return this._averageCellLength;
      }
    }, {
      key: "getHighestMeasuredCellIndex",
      value: function getHighestMeasuredCellIndex() {
        return this._highestMeasuredCellIndex;
      }
    }, {
      key: "getCellMetricsApprox",
      value: function getCellMetricsApprox(index, props) {
        var frame = this.getCellMetrics(index, props);
        if (frame && frame.index === index) {
          return frame;
        } else {
          var offset;
          var highestMeasuredCellIndex = this.getHighestMeasuredCellIndex();
          if (highestMeasuredCellIndex < index) {
            var highestMeasuredCellFrame = this.getCellMetrics(highestMeasuredCellIndex, props);
            if (highestMeasuredCellFrame) {
              offset = highestMeasuredCellFrame.offset + highestMeasuredCellFrame.length + this._averageCellLength * (index - highestMeasuredCellIndex - 1);
            }
          }
          if (offset == null) {
            offset = this._averageCellLength * index;
          }
          var data = props.data,
            getItemCount = props.getItemCount;
          (0, _invariant.default)(index >= 0 && index < getItemCount(data), 'Tried to get frame for out of range index ' + index);
          return {
            length: this._averageCellLength,
            offset: offset,
            index: index,
            isMounted: false
          };
        }
      }
    }, {
      key: "getCellMetrics",
      value: function getCellMetrics(index, props) {
        var _props$keyExtractor;
        var data = props.data,
          getItem = props.getItem,
          getItemCount = props.getItemCount,
          getItemLayout = props.getItemLayout;
        (0, _invariant.default)(index >= 0 && index < getItemCount(data), 'Tried to get metrics for out of range cell index ' + index);
        var keyExtractor = (_props$keyExtractor = props.keyExtractor) != null ? _props$keyExtractor : _$$_REQUIRE(_dependencyMap[4]).keyExtractor;
        var frame = this._cellMetrics.get(keyExtractor(getItem(data, index), index));
        if (frame && frame.index === index) {
          return frame;
        }
        if (getItemLayout) {
          var _getItemLayout = getItemLayout(data, index),
            length = _getItemLayout.length,
            offset = _getItemLayout.offset;
          return {
            index: index,
            length: length,
            offset: offset,
            isMounted: true
          };
        }
        return null;
      }
    }, {
      key: "getCellOffsetApprox",
      value: function getCellOffsetApprox(index, props) {
        if (Number.isInteger(index)) {
          return this.getCellMetricsApprox(index, props).offset;
        } else {
          var frameMetrics = this.getCellMetricsApprox(Math.floor(index), props);
          var remainder = index - Math.floor(index);
          return frameMetrics.offset + remainder * frameMetrics.length;
        }
      }
    }, {
      key: "getContentLength",
      value: function getContentLength() {
        var _this$_contentLength;
        return (_this$_contentLength = this._contentLength) != null ? _this$_contentLength : 0;
      }
    }, {
      key: "hasContentLength",
      value: function hasContentLength() {
        return this._contentLength != null;
      }
    }, {
      key: "flowRelativeOffset",
      value: function flowRelativeOffset(layout, referenceContentLength) {
        var _this$_orientation = this._orientation,
          horizontal = _this$_orientation.horizontal,
          rtl = _this$_orientation.rtl;
        if (horizontal && rtl) {
          var contentLength = referenceContentLength != null ? referenceContentLength : this._contentLength;
          (0, _invariant.default)(contentLength != null, 'ListMetricsAggregator must be notified of list content layout before resolving offsets');
          return contentLength - (this._selectOffset(layout) + this._selectLength(layout));
        } else {
          return this._selectOffset(layout);
        }
      }
    }, {
      key: "cartesianOffset",
      value: function cartesianOffset(flowRelativeOffset) {
        var _this$_orientation2 = this._orientation,
          horizontal = _this$_orientation2.horizontal,
          rtl = _this$_orientation2.rtl;
        if (horizontal && rtl) {
          (0, _invariant.default)(this._contentLength != null, 'ListMetricsAggregator must be notified of list content layout before resolving offsets');
          return this._contentLength - flowRelativeOffset;
        } else {
          return flowRelativeOffset;
        }
      }
    }, {
      key: "_invalidateIfOrientationChanged",
      value: function _invalidateIfOrientationChanged(orientation) {
        if (orientation.rtl !== this._orientation.rtl) {
          this._cellMetrics.clear();
        }
        if (orientation.horizontal !== this._orientation.horizontal) {
          this._averageCellLength = 0;
          this._highestMeasuredCellIndex = 0;
          this._measuredCellsLength = 0;
          this._measuredCellsCount = 0;
        }
        this._orientation = orientation;
      }
    }, {
      key: "_selectLength",
      value: function _selectLength(_ref3) {
        var width = _ref3.width,
          height = _ref3.height;
        return this._orientation.horizontal ? width : height;
      }
    }, {
      key: "_selectOffset",
      value: function _selectOffset(_ref4) {
        var x = _ref4.x,
          y = _ref4.y;
        return this._orientation.horizontal ? x : y;
      }
    }]);
  }();
},352,[1,12,13,20,346]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && "function" == typeof p ? function (t) { return p.apply(e, t); } : p; }
  var StateSafePureComponent = exports.default = /*#__PURE__*/function (_React$PureComponent) {
    function StateSafePureComponent(props) {
      var _this;
      (0, _classCallCheck2.default)(this, StateSafePureComponent);
      _this = _callSuper(this, StateSafePureComponent, [props]);
      _this._inAsyncStateUpdate = false;
      _this._installSetStateHooks();
      return _this;
    }
    (0, _inherits2.default)(StateSafePureComponent, _React$PureComponent);
    return (0, _createClass2.default)(StateSafePureComponent, [{
      key: "setState",
      value: function setState(partialState, callback) {
        var _this2 = this;
        if (typeof partialState === 'function') {
          _superPropGet(StateSafePureComponent, "setState", this, 3)([function (state, props) {
            _this2._inAsyncStateUpdate = true;
            var ret;
            try {
              ret = partialState(state, props);
            } catch (err) {
              throw err;
            } finally {
              _this2._inAsyncStateUpdate = false;
            }
            return ret;
          }, callback]);
        } else {
          _superPropGet(StateSafePureComponent, "setState", this, 3)([partialState, callback]);
        }
      }
    }, {
      key: "_installSetStateHooks",
      value: function _installSetStateHooks() {
        var that = this;
        var props = this.props,
          state = this.state;
        Object.defineProperty(this, 'props', {
          get: function get() {
            (0, _invariant.default)(!that._inAsyncStateUpdate, '"this.props" should not be accessed during state updates');
            return props;
          },
          set: function set(newProps) {
            props = newProps;
          }
        });
        Object.defineProperty(this, 'state', {
          get: function get() {
            (0, _invariant.default)(!that._inAsyncStateUpdate, '"this.state" should not be acceessed during state updates');
            return state;
          },
          set: function set(newState) {
            state = newState;
          }
        });
      }
    }]);
  }(React.PureComponent);
},353,[1,12,13,23,25,26,28,20,119]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _ListMetricsAggregator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var ViewabilityHelper = /*#__PURE__*/function () {
    function ViewabilityHelper() {
      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
        viewAreaCoveragePercentThreshold: 0
      };
      (0, _classCallCheck2.default)(this, ViewabilityHelper);
      this._hasInteracted = false;
      this._timers = new Set();
      this._viewableIndices = [];
      this._viewableItems = new Map();
      this._config = config;
    }
    return (0, _createClass2.default)(ViewabilityHelper, [{
      key: "dispose",
      value: function dispose() {
        this._timers.forEach(clearTimeout);
      }
    }, {
      key: "computeViewableItems",
      value: function computeViewableItems(props, scrollOffset, viewportHeight, listMetrics, renderRange) {
        var itemCount = props.getItemCount(props.data);
        var _this$_config = this._config,
          itemVisiblePercentThreshold = _this$_config.itemVisiblePercentThreshold,
          viewAreaCoveragePercentThreshold = _this$_config.viewAreaCoveragePercentThreshold;
        var viewAreaMode = viewAreaCoveragePercentThreshold != null;
        var viewablePercentThreshold = viewAreaMode ? viewAreaCoveragePercentThreshold : itemVisiblePercentThreshold;
        _$$_REQUIRE(_dependencyMap[5])(viewablePercentThreshold != null && itemVisiblePercentThreshold != null !== (viewAreaCoveragePercentThreshold != null), 'Must set exactly one of itemVisiblePercentThreshold or viewAreaCoveragePercentThreshold');
        var viewableIndices = [];
        if (itemCount === 0) {
          return viewableIndices;
        }
        var firstVisible = -1;
        var _ref = renderRange || {
            first: 0,
            last: itemCount - 1
          },
          first = _ref.first,
          last = _ref.last;
        if (last >= itemCount) {
          console.warn('Invalid render range computing viewability ' + JSON.stringify({
            renderRange: renderRange,
            itemCount: itemCount
          }));
          return [];
        }
        for (var idx = first; idx <= last; idx++) {
          var metrics = listMetrics.getCellMetrics(idx, props);
          if (!metrics) {
            continue;
          }
          var top = Math.floor(metrics.offset - scrollOffset);
          var bottom = Math.floor(top + metrics.length);
          if (top < viewportHeight && bottom > 0) {
            firstVisible = idx;
            if (_isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, metrics.length)) {
              viewableIndices.push(idx);
            }
          } else if (firstVisible >= 0) {
            break;
          }
        }
        return viewableIndices;
      }
    }, {
      key: "onUpdate",
      value: function onUpdate(props, scrollOffset, viewportHeight, listMetrics, createViewToken, onViewableItemsChanged, renderRange) {
        var _this = this;
        var itemCount = props.getItemCount(props.data);
        if (this._config.waitForInteraction && !this._hasInteracted || itemCount === 0 || !listMetrics.getCellMetrics(0, props)) {
          return;
        }
        var viewableIndices = [];
        if (itemCount) {
          viewableIndices = this.computeViewableItems(props, scrollOffset, viewportHeight, listMetrics, renderRange);
        }
        if (this._viewableIndices.length === viewableIndices.length && this._viewableIndices.every(function (v, ii) {
          return v === viewableIndices[ii];
        })) {
          return;
        }
        this._viewableIndices = viewableIndices;
        if (this._config.minimumViewTime) {
          var handle = setTimeout(function () {
            _this._timers.delete(handle);
            _this._onUpdateSync(props, viewableIndices, onViewableItemsChanged, createViewToken);
          }, this._config.minimumViewTime);
          this._timers.add(handle);
        } else {
          this._onUpdateSync(props, viewableIndices, onViewableItemsChanged, createViewToken);
        }
      }
    }, {
      key: "resetViewableIndices",
      value: function resetViewableIndices() {
        this._viewableIndices = [];
      }
    }, {
      key: "recordInteraction",
      value: function recordInteraction() {
        this._hasInteracted = true;
      }
    }, {
      key: "_onUpdateSync",
      value: function _onUpdateSync(props, viewableIndicesToCheck, onViewableItemsChanged, createViewToken) {
        var _this2 = this;
        viewableIndicesToCheck = viewableIndicesToCheck.filter(function (ii) {
          return _this2._viewableIndices.includes(ii);
        });
        var prevItems = this._viewableItems;
        var nextItems = new Map(viewableIndicesToCheck.map(function (ii) {
          var viewable = createViewToken(ii, true, props);
          return [viewable.key, viewable];
        }));
        var changed = [];
        for (var _ref4 of nextItems) {
          var _ref3 = (0, _slicedToArray2.default)(_ref4, 2);
          var key = _ref3[0];
          var viewable = _ref3[1];
          if (!prevItems.has(key)) {
            changed.push(viewable);
          }
        }
        for (var _ref7 of prevItems) {
          var _ref6 = (0, _slicedToArray2.default)(_ref7, 2);
          var _key = _ref6[0];
          var _viewable = _ref6[1];
          if (!nextItems.has(_key)) {
            changed.push(Object.assign({}, _viewable, {
              isViewable: false
            }));
          }
        }
        if (changed.length > 0) {
          this._viewableItems = nextItems;
          onViewableItemsChanged({
            viewableItems: Array.from(nextItems.values()),
            changed: changed,
            viewabilityConfig: this._config
          });
        }
      }
    }]);
  }();
  function _isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, itemLength) {
    if (_isEntirelyVisible(top, bottom, viewportHeight)) {
      return true;
    } else {
      var pixels = _getPixelsVisible(top, bottom, viewportHeight);
      var percent = 100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);
      return percent >= viewablePercentThreshold;
    }
  }
  function _getPixelsVisible(top, bottom, viewportHeight) {
    var visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);
    return Math.max(0, visibleHeight);
  }
  function _isEntirelyVisible(top, bottom, viewportHeight) {
    return top >= 0 && bottom <= viewportHeight && bottom > top;
  }
  var _default = exports.default = ViewabilityHelper;
},354,[1,38,12,13,352,20]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));
  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[9]);
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var CellRenderer = exports.default = /*#__PURE__*/function (_React$PureComponent) {
    function CellRenderer() {
      var _this;
      (0, _classCallCheck2.default)(this, CellRenderer);
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _callSuper(this, CellRenderer, [].concat(args));
      _this.state = {
        separatorProps: {
          highlighted: false,
          leadingItem: _this.props.item
        }
      };
      _this._separators = {
        highlight: function highlight() {
          var _this$props = _this.props,
            cellKey = _this$props.cellKey,
            prevCellKey = _this$props.prevCellKey;
          _this.props.onUpdateSeparators([cellKey, prevCellKey], {
            highlighted: true
          });
        },
        unhighlight: function unhighlight() {
          var _this$props2 = _this.props,
            cellKey = _this$props2.cellKey,
            prevCellKey = _this$props2.prevCellKey;
          _this.props.onUpdateSeparators([cellKey, prevCellKey], {
            highlighted: false
          });
        },
        updateProps: function updateProps(select, newProps) {
          var _this$props3 = _this.props,
            cellKey = _this$props3.cellKey,
            prevCellKey = _this$props3.prevCellKey;
          _this.props.onUpdateSeparators([select === 'leading' ? prevCellKey : cellKey], newProps);
        }
      };
      _this._onLayout = function (nativeEvent) {
        _this.props.onCellLayout == null ? undefined : _this.props.onCellLayout(nativeEvent, _this.props.cellKey, _this.props.index);
      };
      _this._onCellFocusCapture = function (e) {
        _this.props.onCellFocusCapture == null ? undefined : _this.props.onCellFocusCapture(_this.props.cellKey);
      };
      return _this;
    }
    (0, _inherits2.default)(CellRenderer, _React$PureComponent);
    return (0, _createClass2.default)(CellRenderer, [{
      key: "updateSeparatorProps",
      value: function updateSeparatorProps(newProps) {
        this.setState(function (state) {
          return {
            separatorProps: Object.assign({}, state.separatorProps, newProps)
          };
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.props.onUnmount(this.props.cellKey);
      }
    }, {
      key: "_renderElement",
      value: function _renderElement(renderItem, ListItemComponent, item, index) {
        if (renderItem && ListItemComponent) {
          console.warn("VirtualizedList: Both ListItemComponent and renderItem props are present. ListItemComponent will take precedence over renderItem.");
        }
        if (ListItemComponent) {
          return /*#__PURE__*/(0, _jsxRuntime.jsx)(ListItemComponent, {
            item: item,
            index: index,
            separators: this._separators
          });
        }
        if (renderItem) {
          return renderItem({
            item: item,
            index: index,
            separators: this._separators
          });
        }
        (0, _invariant.default)(false, 'VirtualizedList: Either ListItemComponent or renderItem props are required but none were found.');
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props4 = this.props,
          CellRendererComponent = _this$props4.CellRendererComponent,
          ItemSeparatorComponent = _this$props4.ItemSeparatorComponent,
          ListItemComponent = _this$props4.ListItemComponent,
          cellKey = _this$props4.cellKey,
          horizontal = _this$props4.horizontal,
          item = _this$props4.item,
          index = _this$props4.index,
          inversionStyle = _this$props4.inversionStyle,
          onCellLayout = _this$props4.onCellLayout,
          renderItem = _this$props4.renderItem;
        var element = this._renderElement(renderItem, ListItemComponent, item, index);
        var itemSeparator = React.isValidElement(ItemSeparatorComponent) ? ItemSeparatorComponent : ItemSeparatorComponent && /*#__PURE__*/(0, _jsxRuntime.jsx)(ItemSeparatorComponent, Object.assign({}, this.state.separatorProps));
        var cellStyle = inversionStyle ? horizontal ? [styles.rowReverse, inversionStyle] : [styles.columnReverse, inversionStyle] : horizontal ? [styles.row, inversionStyle] : inversionStyle;
        var result = !CellRendererComponent ? /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactNative.View, Object.assign({
          style: cellStyle,
          onFocusCapture: this._onCellFocusCapture
        }, onCellLayout && {
          onLayout: this._onLayout
        }, {
          children: [element, itemSeparator]
        })) : /*#__PURE__*/(0, _jsxRuntime.jsxs)(CellRendererComponent, Object.assign({
          cellKey: cellKey,
          index: index,
          item: item,
          style: cellStyle,
          onFocusCapture: this._onCellFocusCapture
        }, onCellLayout && {
          onLayout: this._onLayout
        }, {
          children: [element, itemSeparator]
        }));
        return /*#__PURE__*/(0, _jsxRuntime.jsx)(_$$_REQUIRE(_dependencyMap[10]).VirtualizedListCellContextProvider, {
          cellKey: this.props.cellKey,
          children: result
        });
      }
    }], [{
      key: "getDerivedStateFromProps",
      value: function getDerivedStateFromProps(props, prevState) {
        if (props.item !== prevState.separatorProps.leadingItem) {
          return {
            separatorProps: Object.assign({}, prevState.separatorProps, {
              leadingItem: props.item
            })
          };
        }
        return null;
      }
    }]);
  }(React.PureComponent);
  var styles = _reactNative.StyleSheet.create({
    row: {
      flexDirection: 'row'
    },
    rowReverse: {
      flexDirection: 'row-reverse'
    },
    columnReverse: {
      flexDirection: 'column-reverse'
    }
  });
},355,[1,12,13,23,25,28,20,119,2,251,356]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.VirtualizedListCellContextProvider = VirtualizedListCellContextProvider;
  exports.VirtualizedListContext = undefined;
  exports.VirtualizedListContextProvider = VirtualizedListContextProvider;
  exports.VirtualizedListContextResetter = VirtualizedListContextResetter;
  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  var React = _react;
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[1]);
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var VirtualizedListContext = exports.VirtualizedListContext = React.createContext(null);
  function VirtualizedListContextResetter(_ref) {
    var children = _ref.children;
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(VirtualizedListContext.Provider, {
      value: null,
      children: children
    });
  }
  function VirtualizedListContextProvider(_ref2) {
    var children = _ref2.children,
      value = _ref2.value;
    var context = (0, _react.useMemo)(function () {
      return {
        cellKey: null,
        getScrollMetrics: value.getScrollMetrics,
        horizontal: value.horizontal,
        getOutermostParentListRef: value.getOutermostParentListRef,
        registerAsNestedChild: value.registerAsNestedChild,
        unregisterAsNestedChild: value.unregisterAsNestedChild
      };
    }, [value.getScrollMetrics, value.horizontal, value.getOutermostParentListRef, value.registerAsNestedChild, value.unregisterAsNestedChild]);
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(VirtualizedListContext.Provider, {
      value: context,
      children: children
    });
  }
  function VirtualizedListCellContextProvider(_ref3) {
    var cellKey = _ref3.cellKey,
      children = _ref3.children;
    var currContext = (0, _react.useContext)(VirtualizedListContext);
    var context = (0, _react.useMemo)(function () {
      return currContext == null ? null : Object.assign({}, currContext, {
        cellKey: cellKey
      });
    }, [currContext, cellKey]);
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(VirtualizedListContext.Provider, {
      value: context,
      children: children
    });
  }
},356,[119,251]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.horizontalOrDefault = horizontalOrDefault;
  exports.initialNumToRenderOrDefault = initialNumToRenderOrDefault;
  exports.maxToRenderPerBatchOrDefault = maxToRenderPerBatchOrDefault;
  exports.onEndReachedThresholdOrDefault = onEndReachedThresholdOrDefault;
  exports.onStartReachedThresholdOrDefault = onStartReachedThresholdOrDefault;
  exports.windowSizeOrDefault = windowSizeOrDefault;
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function horizontalOrDefault(horizontal) {
    return horizontal != null ? horizontal : false;
  }
  function initialNumToRenderOrDefault(initialNumToRender) {
    return initialNumToRender != null ? initialNumToRender : 10;
  }
  function maxToRenderPerBatchOrDefault(maxToRenderPerBatch) {
    return maxToRenderPerBatch != null ? maxToRenderPerBatch : 10;
  }
  function onStartReachedThresholdOrDefault(onStartReachedThreshold) {
    return onStartReachedThreshold != null ? onStartReachedThreshold : 2;
  }
  function onEndReachedThresholdOrDefault(onEndReachedThreshold) {
    return onEndReachedThreshold != null ? onEndReachedThreshold : 2;
  }
  function windowSizeOrDefault(windowSize) {
    return windowSize != null ? windowSize : 21;
  }
},357,[119]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.CellRenderMask = undefined;
  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var CellRenderMask = exports.CellRenderMask = /*#__PURE__*/function () {
    function CellRenderMask(numCells) {
      (0, _classCallCheck2.default)(this, CellRenderMask);
      (0, _invariant.default)(numCells >= 0, 'CellRenderMask must contain a non-negative number os cells');
      this._numCells = numCells;
      if (numCells === 0) {
        this._regions = [];
      } else {
        this._regions = [{
          first: 0,
          last: numCells - 1,
          isSpacer: true
        }];
      }
    }
    return (0, _createClass2.default)(CellRenderMask, [{
      key: "enumerateRegions",
      value: function enumerateRegions() {
        return this._regions;
      }
    }, {
      key: "addCells",
      value: function addCells(cells) {
        var _this$_regions;
        (0, _invariant.default)(cells.first >= 0 && cells.first < this._numCells && cells.last >= -1 && cells.last < this._numCells && cells.last >= cells.first - 1, 'CellRenderMask.addCells called with invalid cell range');
        if (cells.last < cells.first) {
          return;
        }
        var _this$_findRegion = this._findRegion(cells.first),
          _this$_findRegion2 = (0, _slicedToArray2.default)(_this$_findRegion, 2),
          firstIntersect = _this$_findRegion2[0],
          firstIntersectIdx = _this$_findRegion2[1];
        var _this$_findRegion3 = this._findRegion(cells.last),
          _this$_findRegion4 = (0, _slicedToArray2.default)(_this$_findRegion3, 2),
          lastIntersect = _this$_findRegion4[0],
          lastIntersectIdx = _this$_findRegion4[1];
        if (firstIntersectIdx === lastIntersectIdx && !firstIntersect.isSpacer) {
          return;
        }
        var newLeadRegion = [];
        var newTailRegion = [];
        var newMainRegion = Object.assign({}, cells, {
          isSpacer: false
        });
        if (firstIntersect.first < newMainRegion.first) {
          if (firstIntersect.isSpacer) {
            newLeadRegion.push({
              first: firstIntersect.first,
              last: newMainRegion.first - 1,
              isSpacer: true
            });
          } else {
            newMainRegion.first = firstIntersect.first;
          }
        }
        if (lastIntersect.last > newMainRegion.last) {
          if (lastIntersect.isSpacer) {
            newTailRegion.push({
              first: newMainRegion.last + 1,
              last: lastIntersect.last,
              isSpacer: true
            });
          } else {
            newMainRegion.last = lastIntersect.last;
          }
        }
        var replacementRegions = [].concat(newLeadRegion, [newMainRegion], newTailRegion);
        var numRegionsToDelete = lastIntersectIdx - firstIntersectIdx + 1;
        (_this$_regions = this._regions).splice.apply(_this$_regions, [firstIntersectIdx, numRegionsToDelete].concat((0, _toConsumableArray2.default)(replacementRegions)));
      }
    }, {
      key: "numCells",
      value: function numCells() {
        return this._numCells;
      }
    }, {
      key: "equals",
      value: function equals(other) {
        return this._numCells === other._numCells && this._regions.length === other._regions.length && this._regions.every(function (region, i) {
          return region.first === other._regions[i].first && region.last === other._regions[i].last && region.isSpacer === other._regions[i].isSpacer;
        });
      }
    }, {
      key: "_findRegion",
      value: function _findRegion(cellIdx) {
        var firstIdx = 0;
        var lastIdx = this._regions.length - 1;
        while (firstIdx <= lastIdx) {
          var middleIdx = Math.floor((firstIdx + lastIdx) / 2);
          var middleRegion = this._regions[middleIdx];
          if (cellIdx >= middleRegion.first && cellIdx <= middleRegion.last) {
            return [middleRegion, middleIdx];
          } else if (cellIdx < middleRegion.first) {
            lastIdx = middleIdx - 1;
          } else if (cellIdx > middleRegion.last) {
            firstIdx = middleIdx + 1;
          }
        }
        (0, _invariant.default)(false, `A region was not found containing cellIdx ${cellIdx}`);
      }
    }]);
  }();
},358,[1,6,38,12,13,20]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _VirtualizedList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[11]);
  var _excluded = ["ItemSeparatorComponent", "SectionSeparatorComponent", "renderItem", "renderSectionFooter", "renderSectionHeader", "sections", "stickySectionHeadersEnabled"];
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var VirtualizedSectionList = /*#__PURE__*/function (_React$PureComponent) {
    function VirtualizedSectionList() {
      var _this;
      (0, _classCallCheck2.default)(this, VirtualizedSectionList);
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _callSuper(this, VirtualizedSectionList, [].concat(args));
      _this._keyExtractor = function (item, index) {
        var info = _this._subExtractor(index);
        return info && info.key || String(index);
      };
      _this._convertViewable = function (viewable) {
        var _info$index;
        (0, _invariant.default)(viewable.index != null, 'Received a broken ViewToken');
        var info = _this._subExtractor(viewable.index);
        if (!info) {
          return null;
        }
        var keyExtractorWithNullableIndex = info.section.keyExtractor;
        var keyExtractorWithNonNullableIndex = _this.props.keyExtractor || _$$_REQUIRE(_dependencyMap[12]).keyExtractor;
        var key = keyExtractorWithNullableIndex != null ? keyExtractorWithNullableIndex(viewable.item, info.index) : keyExtractorWithNonNullableIndex(viewable.item, (_info$index = info.index) != null ? _info$index : 0);
        return Object.assign({}, viewable, {
          index: info.index,
          key: key,
          section: info.section
        });
      };
      _this._onViewableItemsChanged = function (_ref) {
        var viewableItems = _ref.viewableItems,
          changed = _ref.changed;
        var onViewableItemsChanged = _this.props.onViewableItemsChanged;
        if (onViewableItemsChanged != null) {
          onViewableItemsChanged({
            viewableItems: viewableItems.map(_this._convertViewable, _this).filter(Boolean),
            changed: changed.map(_this._convertViewable, _this).filter(Boolean)
          });
        }
      };
      _this._renderItem = function (listItemCount) {
        return function (_ref2) {
          var item = _ref2.item,
            index = _ref2.index;
          var info = _this._subExtractor(index);
          if (!info) {
            return null;
          }
          var infoIndex = info.index;
          if (infoIndex == null) {
            var section = info.section;
            if (info.header === true) {
              var renderSectionHeader = _this.props.renderSectionHeader;
              return renderSectionHeader ? renderSectionHeader({
                section: section
              }) : null;
            } else {
              var renderSectionFooter = _this.props.renderSectionFooter;
              return renderSectionFooter ? renderSectionFooter({
                section: section
              }) : null;
            }
          } else {
            var renderItem = info.section.renderItem || _this.props.renderItem;
            var SeparatorComponent = _this._getSeparatorComponent(index, info, listItemCount);
            (0, _invariant.default)(renderItem, 'no renderItem!');
            return /*#__PURE__*/(0, _jsxRuntime.jsx)(ItemWithSeparator, {
              SeparatorComponent: SeparatorComponent,
              LeadingSeparatorComponent: infoIndex === 0 ? _this.props.SectionSeparatorComponent : undefined,
              cellKey: info.key,
              index: infoIndex,
              item: item,
              leadingItem: info.leadingItem,
              leadingSection: info.leadingSection,
              prevCellKey: (_this._subExtractor(index - 1) || {}).key,
              setSelfHighlightCallback: _this._setUpdateHighlightFor,
              setSelfUpdatePropsCallback: _this._setUpdatePropsFor,
              updateHighlightFor: _this._updateHighlightFor,
              updatePropsFor: _this._updatePropsFor,
              renderItem: renderItem,
              section: info.section,
              trailingItem: info.trailingItem,
              trailingSection: info.trailingSection,
              inverted: !!_this.props.inverted
            });
          }
        };
      };
      _this._updatePropsFor = function (cellKey, value) {
        var updateProps = _this._updatePropsMap[cellKey];
        if (updateProps != null) {
          updateProps(value);
        }
      };
      _this._updateHighlightFor = function (cellKey, value) {
        var updateHighlight = _this._updateHighlightMap[cellKey];
        if (updateHighlight != null) {
          updateHighlight(value);
        }
      };
      _this._setUpdateHighlightFor = function (cellKey, updateHighlightFn) {
        if (updateHighlightFn != null) {
          _this._updateHighlightMap[cellKey] = updateHighlightFn;
        } else {
          delete _this._updateHighlightFor[cellKey];
        }
      };
      _this._setUpdatePropsFor = function (cellKey, updatePropsFn) {
        if (updatePropsFn != null) {
          _this._updatePropsMap[cellKey] = updatePropsFn;
        } else {
          delete _this._updatePropsMap[cellKey];
        }
      };
      _this._updateHighlightMap = {};
      _this._updatePropsMap = {};
      _this._captureRef = function (ref) {
        _this._listRef = ref;
      };
      return _this;
    }
    (0, _inherits2.default)(VirtualizedSectionList, _React$PureComponent);
    return (0, _createClass2.default)(VirtualizedSectionList, [{
      key: "scrollToLocation",
      value: function scrollToLocation(params) {
        var index = params.itemIndex;
        for (var i = 0; i < params.sectionIndex; i++) {
          index += this.props.getItemCount(this.props.sections[i].data) + 2;
        }
        var viewOffset = params.viewOffset || 0;
        if (this._listRef == null) {
          return;
        }
        var listRef = this._listRef;
        if (params.itemIndex > 0 && this.props.stickySectionHeadersEnabled) {
          var frame = listRef.__getListMetrics().getCellMetricsApprox(index - params.itemIndex, listRef.props);
          viewOffset += frame.length;
        }
        var toIndexParams = Object.assign({}, params, {
          viewOffset: viewOffset,
          index: index
        });
        this._listRef.scrollToIndex(toIndexParams);
      }
    }, {
      key: "getListRef",
      value: function getListRef() {
        return this._listRef;
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;
        var _this$props = this.props,
          ItemSeparatorComponent = _this$props.ItemSeparatorComponent,
          SectionSeparatorComponent = _this$props.SectionSeparatorComponent,
          _renderItem = _this$props.renderItem,
          renderSectionFooter = _this$props.renderSectionFooter,
          renderSectionHeader = _this$props.renderSectionHeader,
          _sections = _this$props.sections,
          stickySectionHeadersEnabled = _this$props.stickySectionHeadersEnabled,
          passThroughProps = (0, _objectWithoutProperties2.default)(_this$props, _excluded);
        var listHeaderOffset = this.props.ListHeaderComponent ? 1 : 0;
        var stickyHeaderIndices = this.props.stickySectionHeadersEnabled ? [] : undefined;
        var itemCount = 0;
        for (var section of this.props.sections) {
          if (stickyHeaderIndices != null) {
            stickyHeaderIndices.push(itemCount + listHeaderOffset);
          }
          itemCount += 2;
          itemCount += this.props.getItemCount(section.data);
        }
        var renderItem = this._renderItem(itemCount);
        return /*#__PURE__*/(0, _jsxRuntime.jsx)(_VirtualizedList.default, Object.assign({}, passThroughProps, {
          keyExtractor: this._keyExtractor,
          stickyHeaderIndices: stickyHeaderIndices,
          renderItem: renderItem,
          data: this.props.sections,
          getItem: function getItem(sections, index) {
            return _this2._getItem(_this2.props, sections, index);
          },
          getItemCount: function getItemCount() {
            return itemCount;
          },
          onViewableItemsChanged: this.props.onViewableItemsChanged ? this._onViewableItemsChanged : undefined,
          ref: this._captureRef
        }));
      }
    }, {
      key: "_getItem",
      value: function _getItem(props, sections, index) {
        if (!sections) {
          return null;
        }
        var itemIdx = index - 1;
        for (var i = 0; i < sections.length; i++) {
          var section = sections[i];
          var sectionData = section.data;
          var itemCount = props.getItemCount(sectionData);
          if (itemIdx === -1 || itemIdx === itemCount) {
            return section;
          } else if (itemIdx < itemCount) {
            return props.getItem(sectionData, itemIdx);
          } else {
            itemIdx -= itemCount + 2;
          }
        }
        return null;
      }
    }, {
      key: "_subExtractor",
      value: function _subExtractor(index) {
        var itemIndex = index;
        var _this$props2 = this.props,
          getItem = _this$props2.getItem,
          getItemCount = _this$props2.getItemCount,
          keyExtractor = _this$props2.keyExtractor,
          sections = _this$props2.sections;
        for (var i = 0; i < sections.length; i++) {
          var section = sections[i];
          var sectionData = section.data;
          var key = section.key || String(i);
          itemIndex -= 1;
          if (itemIndex >= getItemCount(sectionData) + 1) {
            itemIndex -= getItemCount(sectionData) + 1;
          } else if (itemIndex === -1) {
            return {
              section: section,
              key: key + ':header',
              index: null,
              header: true,
              trailingSection: sections[i + 1]
            };
          } else if (itemIndex === getItemCount(sectionData)) {
            return {
              section: section,
              key: key + ':footer',
              index: null,
              header: false,
              trailingSection: sections[i + 1]
            };
          } else {
            var extractor = section.keyExtractor || keyExtractor || _$$_REQUIRE(_dependencyMap[12]).keyExtractor;
            return {
              section: section,
              key: key + ':' + extractor(getItem(sectionData, itemIndex), itemIndex),
              index: itemIndex,
              leadingItem: getItem(sectionData, itemIndex - 1),
              leadingSection: sections[i - 1],
              trailingItem: getItem(sectionData, itemIndex + 1),
              trailingSection: sections[i + 1]
            };
          }
        }
      }
    }, {
      key: "_getSeparatorComponent",
      value: function _getSeparatorComponent(index, info, listItemCount) {
        info = info || this._subExtractor(index);
        if (!info) {
          return null;
        }
        var ItemSeparatorComponent = info.section.ItemSeparatorComponent || this.props.ItemSeparatorComponent;
        var SectionSeparatorComponent = this.props.SectionSeparatorComponent;
        var isLastItemInList = index === listItemCount - 1;
        var isLastItemInSection = info.index === this.props.getItemCount(info.section.data) - 1;
        if (SectionSeparatorComponent && isLastItemInSection) {
          return SectionSeparatorComponent;
        }
        if (ItemSeparatorComponent && !isLastItemInSection && !isLastItemInList) {
          return ItemSeparatorComponent;
        }
        return null;
      }
    }]);
  }(React.PureComponent);
  function ItemWithSeparator(props) {
    var LeadingSeparatorComponent = props.LeadingSeparatorComponent,
      SeparatorComponent = props.SeparatorComponent,
      cellKey = props.cellKey,
      prevCellKey = props.prevCellKey,
      setSelfHighlightCallback = props.setSelfHighlightCallback,
      updateHighlightFor = props.updateHighlightFor,
      setSelfUpdatePropsCallback = props.setSelfUpdatePropsCallback,
      updatePropsFor = props.updatePropsFor,
      item = props.item,
      index = props.index,
      section = props.section,
      inverted = props.inverted;
    var _React$useState = React.useState(false),
      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),
      leadingSeparatorHiglighted = _React$useState2[0],
      setLeadingSeparatorHighlighted = _React$useState2[1];
    var _React$useState3 = React.useState(false),
      _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),
      separatorHighlighted = _React$useState4[0],
      setSeparatorHighlighted = _React$useState4[1];
    var _React$useState5 = React.useState({
        leadingItem: props.leadingItem,
        leadingSection: props.leadingSection,
        section: props.section,
        trailingItem: props.item,
        trailingSection: props.trailingSection
      }),
      _React$useState6 = (0, _slicedToArray2.default)(_React$useState5, 2),
      leadingSeparatorProps = _React$useState6[0],
      setLeadingSeparatorProps = _React$useState6[1];
    var _React$useState7 = React.useState({
        leadingItem: props.item,
        leadingSection: props.leadingSection,
        section: props.section,
        trailingItem: props.trailingItem,
        trailingSection: props.trailingSection
      }),
      _React$useState8 = (0, _slicedToArray2.default)(_React$useState7, 2),
      separatorProps = _React$useState8[0],
      setSeparatorProps = _React$useState8[1];
    React.useEffect(function () {
      setSelfHighlightCallback(cellKey, setSeparatorHighlighted);
      setSelfUpdatePropsCallback(cellKey, setSeparatorProps);
      return function () {
        setSelfUpdatePropsCallback(cellKey, null);
        setSelfHighlightCallback(cellKey, null);
      };
    }, [cellKey, setSelfHighlightCallback, setSeparatorProps, setSelfUpdatePropsCallback]);
    var separators = {
      highlight: function highlight() {
        setLeadingSeparatorHighlighted(true);
        setSeparatorHighlighted(true);
        if (prevCellKey != null) {
          updateHighlightFor(prevCellKey, true);
        }
      },
      unhighlight: function unhighlight() {
        setLeadingSeparatorHighlighted(false);
        setSeparatorHighlighted(false);
        if (prevCellKey != null) {
          updateHighlightFor(prevCellKey, false);
        }
      },
      updateProps: function updateProps(select, newProps) {
        if (select === 'leading') {
          if (LeadingSeparatorComponent != null) {
            setLeadingSeparatorProps(Object.assign({}, leadingSeparatorProps, newProps));
          } else if (prevCellKey != null) {
            updatePropsFor(prevCellKey, Object.assign({}, leadingSeparatorProps, newProps));
          }
        } else if (select === 'trailing' && SeparatorComponent != null) {
          setSeparatorProps(Object.assign({}, separatorProps, newProps));
        }
      }
    };
    var element = props.renderItem({
      item: item,
      index: index,
      section: section,
      separators: separators
    });
    var leadingSeparator = LeadingSeparatorComponent != null && /*#__PURE__*/(0, _jsxRuntime.jsx)(LeadingSeparatorComponent, Object.assign({
      highlighted: leadingSeparatorHiglighted
    }, leadingSeparatorProps));
    var separator = SeparatorComponent != null && /*#__PURE__*/(0, _jsxRuntime.jsx)(SeparatorComponent, Object.assign({
      highlighted: separatorHighlighted
    }, separatorProps));
    var RenderSeparator = leadingSeparator || separator;
    var firstSeparator = inverted === false ? leadingSeparator : separator;
    var secondSeparator = inverted === false ? separator : leadingSeparator;
    return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
      children: [RenderSeparator ? firstSeparator : null, element, RenderSeparator ? secondSeparator : null]
    });
  }
  var _default = exports.default = VirtualizedSectionList;
},359,[1,38,203,12,13,23,25,28,347,20,119,251,346]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var safeIsNaN = Number.isNaN || function ponyfill(value) {
    return typeof value === 'number' && value !== value;
  };
  function isEqual(first, second) {
    if (first === second) {
      return true;
    }
    if (safeIsNaN(first) && safeIsNaN(second)) {
      return true;
    }
    return false;
  }
  function areInputsEqual(newInputs, lastInputs) {
    if (newInputs.length !== lastInputs.length) {
      return false;
    }
    for (var i = 0; i < newInputs.length; i++) {
      if (!isEqual(newInputs[i], lastInputs[i])) {
        return false;
      }
    }
    return true;
  }
  function memoizeOne(resultFn, isEqual) {
    if (isEqual === undefined) {
      isEqual = areInputsEqual;
    }
    var lastThis;
    var lastArgs = [];
    var lastResult;
    var calledOnce = false;
    function memoized() {
      var newArgs = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        newArgs[_i] = arguments[_i];
      }
      if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {
        return lastResult;
      }
      lastResult = resultFn.apply(this, newArgs);
      calledOnce = true;
      lastThis = this;
      lastArgs = newArgs;
      return lastResult;
    }
    return memoized;
  }
  module.exports = memoizeOne;
},360,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _Image = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createAnimatedComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = (0, _createAnimatedComponent.default)(_Image.default);
},361,[1,362,329,119]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _asyncToGenerator2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _flattenStyle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _StyleSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _TextAncestor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _ImageAnalyticsTagContext = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _ImageViewNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _NativeImageLoaderAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _resolveAssetSource = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _TextInlineImageNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[11]);
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _requestId = 1;
  function generateRequestId() {
    return _requestId++;
  }
  function getSize(url, success, failure) {
    var promise = _NativeImageLoaderAndroid.default.getSize(url);
    if (typeof success !== 'function') {
      return promise;
    }
    promise.then(function (sizes) {
      return success(sizes.width, sizes.height);
    }).catch(failure || function () {
      console.warn('Failed to get size for image: ' + url);
    });
  }
  function getSizeWithHeaders(url, headers, success, failure) {
    var promise = _NativeImageLoaderAndroid.default.getSizeWithHeaders(url, headers);
    if (typeof success !== 'function') {
      return promise;
    }
    promise.then(function (sizes) {
      return success(sizes.width, sizes.height);
    }).catch(failure || function () {
      console.warn('Failed to get size for image: ' + url);
    });
  }
  function prefetchWithMetadata(url, queryRootName, rootTag, callback) {
    return prefetch(url, callback);
  }
  function prefetch(url, callback) {
    var requestId = generateRequestId();
    callback && callback(requestId);
    return _NativeImageLoaderAndroid.default.prefetchImage(url, requestId);
  }
  function abortPrefetch(requestId) {
    _NativeImageLoaderAndroid.default.abortRequest(requestId);
  }
  function queryCache(_x) {
    return _queryCache.apply(this, arguments);
  }
  function _queryCache() {
    _queryCache = (0, _asyncToGenerator2.default)(function* (urls) {
      return _NativeImageLoaderAndroid.default.queryCache(urls);
    });
    return _queryCache.apply(this, arguments);
  }
  var BaseImage = React.forwardRef(function (props, forwardedRef) {
    var _source$, _ref, _props$ariaLabel, _props$ariaLabelledb, _props$ariaBusy, _props$accessibilityS, _props$ariaChecked, _props$accessibilityS2, _props$ariaDisabled, _props$accessibilityS3, _props$ariaExpanded, _props$accessibilityS4, _props$ariaSelected, _props$accessibilityS5;
    var source = (0, _$$_REQUIRE(_dependencyMap[12]).getImageSourcesFromImageProps)(props) || {
      uri: undefined,
      width: undefined,
      height: undefined
    };
    var defaultSource = (0, _resolveAssetSource.default)(props.defaultSource);
    var loadingIndicatorSource = (0, _resolveAssetSource.default)(props.loadingIndicatorSource);
    if (props.children != null) {
      throw new Error('The <Image> component cannot contain children. If you want to render content on top of the image, consider using the <ImageBackground> component or absolute positioning.');
    }
    if (props.defaultSource != null && props.loadingIndicatorSource != null) {
      throw new Error('The <Image> component cannot have defaultSource and loadingIndicatorSource at the same time. Please use either defaultSource or loadingIndicatorSource.');
    }
    var style;
    var sources;
    if (Array.isArray(source)) {
      style = [styles.base, props.style];
      sources = source;
    } else {
      var _source$width, _source$height;
      var uri = source.uri;
      if (uri === '') {
        console.warn('source.uri should not be an empty string');
      }
      var _width = (_source$width = source.width) != null ? _source$width : props.width;
      var _height = (_source$height = source.height) != null ? _source$height : props.height;
      style = [{
        width: _width,
        height: _height
      }, styles.base, props.style];
      sources = [source];
    }
    var onLoadStart = props.onLoadStart,
      onLoad = props.onLoad,
      onLoadEnd = props.onLoadEnd,
      onError = props.onError;
    var nativeProps = Object.assign({}, props, {
      style: style,
      shouldNotifyLoadEvents: !!(onLoadStart || onLoad || onLoadEnd || onError),
      src: sources,
      source: sources,
      headers: (source == null ? undefined : (_source$ = source[0]) == null ? undefined : _source$.headers) || (source == null ? undefined : source.headers),
      defaultSource: defaultSource ? defaultSource.uri : null,
      loadingIndicatorSrc: loadingIndicatorSource ? loadingIndicatorSource.uri : null,
      accessibilityLabel: (_ref = (_props$ariaLabel = props['aria-label']) != null ? _props$ariaLabel : props.accessibilityLabel) != null ? _ref : props.alt,
      accessibilityLabelledBy: (_props$ariaLabelledb = props == null ? undefined : props['aria-labelledby']) != null ? _props$ariaLabelledb : props == null ? undefined : props.accessibilityLabelledBy,
      accessible: props.alt !== undefined ? true : props.accessible,
      accessibilityState: {
        busy: (_props$ariaBusy = props['aria-busy']) != null ? _props$ariaBusy : (_props$accessibilityS = props.accessibilityState) == null ? undefined : _props$accessibilityS.busy,
        checked: (_props$ariaChecked = props['aria-checked']) != null ? _props$ariaChecked : (_props$accessibilityS2 = props.accessibilityState) == null ? undefined : _props$accessibilityS2.checked,
        disabled: (_props$ariaDisabled = props['aria-disabled']) != null ? _props$ariaDisabled : (_props$accessibilityS3 = props.accessibilityState) == null ? undefined : _props$accessibilityS3.disabled,
        expanded: (_props$ariaExpanded = props['aria-expanded']) != null ? _props$ariaExpanded : (_props$accessibilityS4 = props.accessibilityState) == null ? undefined : _props$accessibilityS4.expanded,
        selected: (_props$ariaSelected = props['aria-selected']) != null ? _props$ariaSelected : (_props$accessibilityS5 = props.accessibilityState) == null ? undefined : _props$accessibilityS5.selected
      }
    });
    var flattenedStyle = (0, _flattenStyle.default)(style);
    var objectFit = (0, _$$_REQUIRE(_dependencyMap[13]).convertObjectFitToResizeMode)(flattenedStyle == null ? undefined : flattenedStyle.objectFit);
    var resizeMode = objectFit || props.resizeMode || (flattenedStyle == null ? undefined : flattenedStyle.resizeMode) || 'cover';
    var actualRef = (0, _$$_REQUIRE(_dependencyMap[14]).useWrapRefWithImageAttachedCallbacks)(forwardedRef);
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_ImageAnalyticsTagContext.default.Consumer, {
      children: function children(analyticTag) {
        var nativePropsWithAnalytics = analyticTag !== null ? Object.assign({}, nativeProps, {
          internal_analyticTag: analyticTag
        }) : nativeProps;
        return /*#__PURE__*/(0, _jsxRuntime.jsx)(_TextAncestor.default.Consumer, {
          children: function children(hasTextAncestor) {
            if (hasTextAncestor) {
              return /*#__PURE__*/(0, _jsxRuntime.jsx)(_TextInlineImageNativeComponent.default, {
                style: style,
                resizeMode: resizeMode,
                headers: nativeProps.headers,
                src: sources,
                ref: actualRef
              });
            }
            return /*#__PURE__*/(0, _jsxRuntime.jsx)(_ImageViewNativeComponent.default, Object.assign({}, nativePropsWithAnalytics, {
              resizeMode: resizeMode,
              ref: actualRef
            }));
          }
        });
      }
    });
  });
  var imageComponentDecorator = (0, _$$_REQUIRE(_dependencyMap[14]).unstable_getImageComponentDecorator)();
  if (imageComponentDecorator != null) {
    BaseImage = imageComponentDecorator(BaseImage);
  }
  var Image = BaseImage;
  Image.displayName = 'Image';
  Image.getSize = getSize;
  Image.getSizeWithHeaders = getSizeWithHeaders;
  Image.prefetch = prefetch;
  Image.prefetchWithMetadata = prefetchWithMetadata;
  Image.abortPrefetch = abortPrefetch;
  Image.queryCache = queryCache;
  Image.resolveAssetSource = _resolveAssetSource.default;
  var styles = _StyleSheet.default.create({
    base: {
      overflow: 'hidden'
    }
  });
  var _default = exports.default = Image;
},362,[1,363,128,253,249,364,365,366,106,368,119,251,369,370,371]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function asyncGeneratorStep(n, t, e, r, o, a, c) {
    try {
      var i = n[a](c),
        u = i.value;
    } catch (n) {
      return void e(n);
    }
    i.done ? t(u) : Promise.resolve(u).then(r, o);
  }
  function _asyncToGenerator(n) {
    return function () {
      var t = this,
        e = arguments;
      return new Promise(function (r, o) {
        var a = n.apply(t, e);
        function _next(n) {
          asyncGeneratorStep(a, r, o, _next, _throw, "next", n);
        }
        function _throw(n) {
          asyncGeneratorStep(a, r, o, _next, _throw, "throw", n);
        }
        _next(undefined);
      });
    };
  }
  module.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports["default"] = module.exports;
},363,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var Context = React.createContext(null);
  var _default = exports.default = Context;
},364,[119]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.__INTERNAL_VIEW_CONFIG = exports.Commands = undefined;
  var NativeComponentRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));
  var _codegenNativeCommands = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var Commands = exports.Commands = (0, _codegenNativeCommands.default)({
    supportedCommands: ['setIsVisible_EXPERIMENTAL']
  });
  var __INTERNAL_VIEW_CONFIG = exports.__INTERNAL_VIEW_CONFIG = _Platform.default.OS === 'android' ? {
    uiViewClassName: 'RCTImageView',
    bubblingEventTypes: {},
    directEventTypes: {
      topLoadStart: {
        registrationName: 'onLoadStart'
      },
      topProgress: {
        registrationName: 'onProgress'
      },
      topError: {
        registrationName: 'onError'
      },
      topLoad: {
        registrationName: 'onLoad'
      },
      topLoadEnd: {
        registrationName: 'onLoadEnd'
      }
    },
    validAttributes: {
      blurRadius: true,
      defaultSource: true,
      internal_analyticTag: true,
      resizeMethod: true,
      resizeMode: true,
      resizeMultiplier: true,
      tintColor: {
        process: _$$_REQUIRE(_dependencyMap[4]).default
      },
      borderBottomLeftRadius: true,
      borderTopLeftRadius: true,
      src: true,
      source: true,
      borderRadius: true,
      headers: true,
      shouldNotifyLoadEvents: true,
      overlayColor: {
        process: _$$_REQUIRE(_dependencyMap[4]).default
      },
      borderColor: {
        process: _$$_REQUIRE(_dependencyMap[4]).default
      },
      accessible: true,
      progressiveRenderingEnabled: true,
      fadeDuration: true,
      borderBottomRightRadius: true,
      borderTopRightRadius: true,
      loadingIndicatorSrc: true
    }
  } : {
    uiViewClassName: 'RCTImageView',
    bubblingEventTypes: {},
    directEventTypes: {
      topLoadStart: {
        registrationName: 'onLoadStart'
      },
      topProgress: {
        registrationName: 'onProgress'
      },
      topError: {
        registrationName: 'onError'
      },
      topPartialLoad: {
        registrationName: 'onPartialLoad'
      },
      topLoad: {
        registrationName: 'onLoad'
      },
      topLoadEnd: {
        registrationName: 'onLoadEnd'
      }
    },
    validAttributes: Object.assign({
      blurRadius: true,
      capInsets: {
        diff: _$$_REQUIRE(_dependencyMap[5]).default
      },
      defaultSource: {
        process: _$$_REQUIRE(_dependencyMap[6]).default
      },
      internal_analyticTag: true,
      resizeMode: true,
      source: true,
      tintColor: {
        process: _$$_REQUIRE(_dependencyMap[4]).default
      }
    }, (0, _$$_REQUIRE(_dependencyMap[7]).ConditionallyIgnoredEventHandlers)({
      onLoadStart: true,
      onLoad: true,
      onLoadEnd: true,
      onProgress: true,
      onError: true,
      onPartialLoad: true
    }))
  };
  var ImageViewNativeComponent = NativeComponentRegistry.get('RCTImageView', function () {
    return __INTERNAL_VIEW_CONFIG;
  });
  var _default = exports.default = ImageViewNativeComponent;
},365,[1,86,125,33,89,104,106,124]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeImageLoaderAndroid = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeImageLoaderAndroid).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeImageLoaderAndroid[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeImageLoaderAndroid[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeImageLoaderAndroid.default;
},366,[367]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.getEnforcing('ImageLoader');
},367,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.__INTERNAL_VIEW_CONFIG = undefined;
  var NativeComponentRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var __INTERNAL_VIEW_CONFIG = exports.__INTERNAL_VIEW_CONFIG = {
    uiViewClassName: 'RCTTextInlineImage',
    bubblingEventTypes: {},
    directEventTypes: {},
    validAttributes: {
      resizeMode: true,
      src: true,
      tintColor: {
        process: _$$_REQUIRE(_dependencyMap[1]).default
      },
      headers: true
    }
  };
  var TextInlineImage = NativeComponentRegistry.get('RCTTextInlineImage', function () {
    return __INTERNAL_VIEW_CONFIG;
  });
  var _default = exports.default = TextInlineImage;
},368,[86,89]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getImageSourcesFromImageProps = getImageSourcesFromImageProps;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _resolveAssetSource = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  function getImageSourcesFromImageProps(imageProps) {
    var source = (0, _resolveAssetSource.default)(imageProps.source);
    var sources;
    var crossOrigin = imageProps.crossOrigin,
      referrerPolicy = imageProps.referrerPolicy,
      src = imageProps.src,
      srcSet = imageProps.srcSet,
      width = imageProps.width,
      height = imageProps.height;
    var headers = {};
    if (crossOrigin === 'use-credentials') {
      headers['Access-Control-Allow-Credentials'] = 'true';
    }
    if (referrerPolicy != null) {
      headers['Referrer-Policy'] = referrerPolicy;
    }
    if (srcSet != null) {
      var sourceList = [];
      var srcSetList = srcSet.split(', ');
      var shouldUseSrcForDefaultScale = true;
      srcSetList.forEach(function (imageSrc) {
        var _imageSrc$split = imageSrc.split(' '),
          _imageSrc$split2 = (0, _slicedToArray2.default)(_imageSrc$split, 2),
          uri = _imageSrc$split2[0],
          _imageSrc$split2$ = _imageSrc$split2[1],
          xScale = _imageSrc$split2$ === undefined ? '1x' : _imageSrc$split2$;
        if (!xScale.endsWith('x')) {
          console.warn('The provided format for scale is not supported yet. Please use scales like 1x, 2x, etc.');
        } else {
          var scale = parseInt(xScale.split('x')[0], 10);
          if (!isNaN(scale)) {
            shouldUseSrcForDefaultScale = scale === 1 ? false : shouldUseSrcForDefaultScale;
            sourceList.push({
              headers: headers,
              scale: scale,
              uri: uri,
              width: width,
              height: height
            });
          }
        }
      });
      if (shouldUseSrcForDefaultScale && src != null) {
        sourceList.push({
          headers: headers,
          scale: 1,
          uri: src,
          width: width,
          height: height
        });
      }
      if (sourceList.length === 0) {
        console.warn('The provided value for srcSet is not valid.');
      }
      sources = sourceList;
    } else if (src != null) {
      sources = [{
        uri: src,
        headers: headers,
        width: width,
        height: height
      }];
    } else {
      sources = source;
    }
    return sources;
  }
},369,[1,38,106]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.convertObjectFitToResizeMode = convertObjectFitToResizeMode;
  var objectFitMap = {
    contain: 'contain',
    cover: 'cover',
    fill: 'stretch',
    'scale-down': 'contain',
    none: 'none'
  };
  function convertObjectFitToResizeMode(objectFit) {
    return objectFit != null ? objectFitMap[objectFit] : undefined;
  }
},370,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.unstable_getImageComponentDecorator = unstable_getImageComponentDecorator;
  exports.unstable_registerImageAttachedCallback = unstable_registerImageAttachedCallback;
  exports.unstable_setImageComponentDecorator = unstable_setImageComponentDecorator;
  exports.unstable_unregisterImageAttachedCallback = unstable_unregisterImageAttachedCallback;
  exports.useWrapRefWithImageAttachedCallbacks = useWrapRefWithImageAttachedCallbacks;
  var _useMergeRefs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));
  var React = _react;
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var injectedImageComponentDecorator;
  function unstable_setImageComponentDecorator(imageComponentDecorator) {
    injectedImageComponentDecorator = imageComponentDecorator;
  }
  function unstable_getImageComponentDecorator() {
    return injectedImageComponentDecorator;
  }
  var imageAttachedCallbacks = new Set();
  function unstable_registerImageAttachedCallback(callback) {
    imageAttachedCallbacks.add(callback);
  }
  function unstable_unregisterImageAttachedCallback(callback) {
    imageAttachedCallbacks.delete(callback);
  }
  function useWrapRefWithImageAttachedCallbacks(forwardedRef) {
    var pendingCleanupCallbacks = (0, _react.useRef)([]);
    var imageAttachedCallbacksRef = (0, _react.useRef)(null);
    if (imageAttachedCallbacksRef.current == null) {
      imageAttachedCallbacksRef.current = function (node) {
        if (node == null) {
          if (pendingCleanupCallbacks.current.length > 0) {
            pendingCleanupCallbacks.current.forEach(function (cb) {
              return cb();
            });
            pendingCleanupCallbacks.current = [];
          }
        } else {
          imageAttachedCallbacks.forEach(function (imageAttachedCallback) {
            var maybeCleanupCallback = imageAttachedCallback(node);
            if (maybeCleanupCallback != null) {
              pendingCleanupCallbacks.current.push(maybeCleanupCallback);
            }
          });
        }
      };
    }
    return (0, _useMergeRefs.default)(forwardedRef, imageAttachedCallbacksRef.current);
  }
},371,[1,334,119]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _RefreshControl = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _ScrollView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _flattenStyle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _splitLayoutProps2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _StyleSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _useMergeRefs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _createAnimatedComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _useAnimatedProps5 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));
  var React = _react;
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[12]);
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var AnimatedScrollView = React.forwardRef(function AnimatedScrollViewWithOrWithoutInvertedRefreshControl(props, forwardedRef) {
    if (_Platform.default.OS === 'android' && props.refreshControl != null && props.style != null) {
      return /*#__PURE__*/(0, _jsxRuntime.jsx)(AnimatedScrollViewWithInvertedRefreshControl, Object.assign({
        scrollEventThrottle: 0.0001
      }, props, {
        ref: forwardedRef,
        refreshControl: props.refreshControl
      }));
    } else {
      return /*#__PURE__*/(0, _jsxRuntime.jsx)(AnimatedScrollViewWithoutInvertedRefreshControl, Object.assign({
        scrollEventThrottle: 0.0001
      }, props, {
        ref: forwardedRef
      }));
    }
  });
  var AnimatedScrollViewWithInvertedRefreshControl = React.forwardRef(function AnimatedScrollViewWithInvertedRefreshControl(props, forwardedRef) {
    var _useMemo = (0, _react.useMemo)(function () {
        var _splitLayoutProps = (0, _splitLayoutProps2.default)((0, _flattenStyle.default)(props.style)),
          outer = _splitLayoutProps.outer,
          inner = _splitLayoutProps.inner;
        return {
          intermediatePropsForRefreshControl: {
            style: outer
          },
          intermediatePropsForScrollView: Object.assign({}, props, {
            style: inner
          })
        };
      }, [props]),
      intermediatePropsForRefreshControl = _useMemo.intermediatePropsForRefreshControl,
      intermediatePropsForScrollView = _useMemo.intermediatePropsForScrollView;
    var _useAnimatedProps = (0, _useAnimatedProps5.default)(intermediatePropsForRefreshControl),
      _useAnimatedProps2 = (0, _slicedToArray2.default)(_useAnimatedProps, 2),
      refreshControlAnimatedProps = _useAnimatedProps2[0],
      refreshControlRef = _useAnimatedProps2[1];
    var refreshControl = React.cloneElement(props.refreshControl, Object.assign({}, refreshControlAnimatedProps, {
      ref: refreshControlRef
    }));
    var _useAnimatedProps3 = (0, _useAnimatedProps5.default)(intermediatePropsForScrollView),
      _useAnimatedProps4 = (0, _slicedToArray2.default)(_useAnimatedProps3, 2),
      scrollViewAnimatedProps = _useAnimatedProps4[0],
      scrollViewRef = _useAnimatedProps4[1];
    var ref = (0, _useMergeRefs.default)(scrollViewRef, forwardedRef);
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_ScrollView.default, Object.assign({}, scrollViewAnimatedProps, {
      ref: ref,
      refreshControl: refreshControl,
      style: _StyleSheet.default.compose(scrollViewAnimatedProps.style, refreshControlAnimatedProps.style)
    }));
  });
  var AnimatedScrollViewWithoutInvertedRefreshControl = (0, _createAnimatedComponent.default)(_ScrollView.default);
  var _default = exports.default = AnimatedScrollView;
},372,[1,38,373,378,128,382,253,33,334,329,398,119,251]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _AndroidSwipeRefreshLayoutNativeComponent = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));
  var _PullToRefreshViewNativeComponent = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));
  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[10]);
  var _excluded = ["enabled", "colors", "progressBackgroundColor", "size"],
    _excluded2 = ["tintColor", "titleColor", "title"];
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var RefreshControl = /*#__PURE__*/function (_React$Component) {
    function RefreshControl() {
      var _this;
      (0, _classCallCheck2.default)(this, RefreshControl);
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _callSuper(this, RefreshControl, [].concat(args));
      _this._lastNativeRefreshing = false;
      _this._onRefresh = function () {
        _this._lastNativeRefreshing = true;
        _this.props.onRefresh && _this.props.onRefresh();
        _this.forceUpdate();
      };
      _this._setNativeRef = function (ref) {
        _this._nativeRef = ref;
      };
      return _this;
    }
    (0, _inherits2.default)(RefreshControl, _React$Component);
    return (0, _createClass2.default)(RefreshControl, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this._lastNativeRefreshing = this.props.refreshing;
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        if (this.props.refreshing !== prevProps.refreshing) {
          this._lastNativeRefreshing = this.props.refreshing;
        } else if (this.props.refreshing !== this._lastNativeRefreshing && this._nativeRef) {
          {
            _AndroidSwipeRefreshLayoutNativeComponent.Commands.setNativeRefreshing(this._nativeRef, this.props.refreshing);
          }
          this._lastNativeRefreshing = this.props.refreshing;
        }
      }
    }, {
      key: "render",
      value: function render() {
        {
          var _this$props2 = this.props,
            tintColor = _this$props2.tintColor,
            titleColor = _this$props2.titleColor,
            title = _this$props2.title,
            _props = (0, _objectWithoutProperties2.default)(_this$props2, _excluded2);
          return /*#__PURE__*/(0, _jsxRuntime.jsx)(_AndroidSwipeRefreshLayoutNativeComponent.default, Object.assign({}, _props, {
            ref: this._setNativeRef,
            onRefresh: this._onRefresh
          }));
        }
      }
    }]);
  }(_react.default.Component);
  var _default = exports.default = RefreshControl;
},373,[1,203,12,13,23,25,28,374,376,119,251]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _AndroidSwipeRefreshLayoutNativeComponent = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_AndroidSwipeRefreshLayoutNativeComponent).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _AndroidSwipeRefreshLayoutNativeComponent[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _AndroidSwipeRefreshLayoutNativeComponent[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _AndroidSwipeRefreshLayoutNativeComponent.default;
},374,[375]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.Commands = undefined;
  var _codegenNativeCommands = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var nativeComponentName = 'AndroidSwipeRefreshLayout';
  export var __INTERNAL_VIEW_CONFIG = {
    uiViewClassName: "AndroidSwipeRefreshLayout",
    directEventTypes: {
      topRefresh: {
        registrationName: "onRefresh"
      }
    },
    validAttributes: Object.assign({
      enabled: true,
      colors: {
        process: function (req) {
          return 'default' in req ? req.default : req;
        }(_$$_REQUIRE(_dependencyMap[4]))
      },
      progressBackgroundColor: {
        process: _$$_REQUIRE(_dependencyMap[5]).default
      },
      size: true,
      progressViewOffset: true,
      refreshing: true
    }, _$$_REQUIRE(_dependencyMap[6]).ConditionallyIgnoredEventHandlers({
      onRefresh: true
    }))
  };
  export default _$$_REQUIRE(_dependencyMap[7]).get(nativeComponentName, function () {
    return __INTERNAL_VIEW_CONFIG;
  });
  export var Commands = {
    setNativeRefreshing: function setNativeRefreshing(ref, value) {
      _$$_REQUIRE(_dependencyMap[8]).dispatchCommand(ref, "setNativeRefreshing", [value]);
    }
  };
},375,[1,125,279,119,105,89,124,86,57]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _PullToRefreshViewNativeComponent = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_PullToRefreshViewNativeComponent).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _PullToRefreshViewNativeComponent[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _PullToRefreshViewNativeComponent[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _PullToRefreshViewNativeComponent.default;
},376,[377]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.Commands = undefined;
  var _codegenNativeCommands = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var nativeComponentName = 'RCTRefreshControl';
  export var __INTERNAL_VIEW_CONFIG = {
    uiViewClassName: "RCTRefreshControl",
    directEventTypes: {
      topRefresh: {
        registrationName: "onRefresh"
      }
    },
    validAttributes: Object.assign({
      tintColor: {
        process: _$$_REQUIRE(_dependencyMap[4]).default
      },
      titleColor: {
        process: _$$_REQUIRE(_dependencyMap[4]).default
      },
      title: true,
      progressViewOffset: true,
      refreshing: true
    }, _$$_REQUIRE(_dependencyMap[5]).ConditionallyIgnoredEventHandlers({
      onRefresh: true
    }))
  };
  export default _$$_REQUIRE(_dependencyMap[6]).get(nativeComponentName, function () {
    return __INTERNAL_VIEW_CONFIG;
  });
  export var Commands = {
    setNativeRefreshing: function setNativeRefreshing(ref, refreshing) {
      _$$_REQUIRE(_dependencyMap[7]).dispatchCommand(ref, "setNativeRefreshing", [refreshing]);
    }
  };
},377,[1,125,279,119,89,124,86,57]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _AnimatedImplementation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _FrameRateLogger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _UIManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _flattenStyle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  var _splitLayoutProps2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));
  var _StyleSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));
  var _Dimensions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));
  var _dismissKeyboard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));
  var _Keyboard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));
  var _TextInputState = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));
  var _processDecelerationRate = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));
  var _ScrollViewCommands = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));
  var _ScrollViewContext = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[20]));
  var _ScrollViewStickyHeader = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));
  var _memoizeOne = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23]));
  var _nullthrows = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[25]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[26]);
  var _excluded = ["experimental_endDraggingSensitivityMultiplier"];
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var IS_ANIMATING_TOUCH_START_THRESHOLD_MS = 16;
  var ScrollView = /*#__PURE__*/function (_React$Component) {
    function ScrollView(props) {
      var _this$props$contentOf, _this$props$contentOf2, _this$props$contentIn, _this$props$contentIn2;
      var _this;
      (0, _classCallCheck2.default)(this, ScrollView);
      _this = _callSuper(this, ScrollView, [props]);
      _this._scrollAnimatedValueAttachment = null;
      _this._stickyHeaderRefs = new Map();
      _this._headerLayoutYs = new Map();
      _this._keyboardMetrics = null;
      _this._additionalScrollOffset = 0;
      _this._isTouching = false;
      _this._lastMomentumScrollBeginTime = 0;
      _this._lastMomentumScrollEndTime = 0;
      _this._observedScrollSinceBecomingResponder = false;
      _this._becameResponderWhileAnimating = false;
      _this._preventNegativeScrollOffset = null;
      _this._animated = null;
      _this._subscriptionKeyboardWillShow = null;
      _this._subscriptionKeyboardWillHide = null;
      _this._subscriptionKeyboardDidShow = null;
      _this._subscriptionKeyboardDidHide = null;
      _this.state = {
        layoutHeight: null
      };
      _this.getScrollResponder = function () {
        return _this;
      };
      _this.getScrollableNode = function () {
        return (0, _$$_REQUIRE(_dependencyMap[27]).findNodeHandle)(_this.getNativeScrollRef());
      };
      _this.getInnerViewNode = function () {
        return (0, _$$_REQUIRE(_dependencyMap[27]).findNodeHandle)(_this._innerView.nativeInstance);
      };
      _this.getInnerViewRef = function () {
        return _this._innerView.nativeInstance;
      };
      _this.getNativeScrollRef = function () {
        return _this._scrollView.nativeInstance;
      };
      _this.scrollTo = function (options, deprecatedX, deprecatedAnimated) {
        var x, y, animated;
        if (typeof options === 'number') {
          console.warn("`scrollTo(y, x, animated)` is deprecated. Use `scrollTo({x: 5, y: 5, animated: true})` instead.");
          y = options;
          x = deprecatedX;
          animated = deprecatedAnimated;
        } else if (options) {
          y = options.y;
          x = options.x;
          animated = options.animated;
        }
        var component = _this.getNativeScrollRef();
        if (component == null) {
          return;
        }
        _ScrollViewCommands.default.scrollTo(component, x || 0, y || 0, animated !== false);
      };
      _this.scrollToEnd = function (options) {
        var animated = (options && options.animated) !== false;
        var component = _this.getNativeScrollRef();
        if (component == null) {
          return;
        }
        _ScrollViewCommands.default.scrollToEnd(component, animated);
      };
      _this.flashScrollIndicators = function () {
        var component = _this.getNativeScrollRef();
        if (component == null) {
          return;
        }
        _ScrollViewCommands.default.flashScrollIndicators(component);
      };
      _this.scrollResponderScrollNativeHandleToKeyboard = function (nodeHandle, additionalOffset, preventNegativeScrollOffset) {
        _this._additionalScrollOffset = additionalOffset || 0;
        _this._preventNegativeScrollOffset = !!preventNegativeScrollOffset;
        if (_this._innerView.nativeInstance == null) {
          return;
        }
        if (typeof nodeHandle === 'number') {
          _UIManager.default.measureLayout(nodeHandle, (0, _nullthrows.default)((0, _$$_REQUIRE(_dependencyMap[27]).findNodeHandle)(_this)), _this._textInputFocusError, _this._inputMeasureAndScrollToKeyboard);
        } else {
          nodeHandle.measureLayout(_this._innerView.nativeInstance, _this._inputMeasureAndScrollToKeyboard, _this._textInputFocusError);
        }
      };
      _this.scrollResponderZoomTo = function (rect, animated) {
        (0, _invariant.default)(_Platform.default.OS === 'ios', 'zoomToRect is not implemented');
        if ('animated' in rect) {
          _this._animated = rect.animated;
          delete rect.animated;
        } else if (typeof animated !== 'undefined') {
          console.warn('`scrollResponderZoomTo` `animated` argument is deprecated. Use `options.animated` instead');
        }
        var component = _this.getNativeScrollRef();
        if (component == null) {
          return;
        }
        _ScrollViewCommands.default.zoomToRect(component, rect, animated !== false);
      };
      _this._inputMeasureAndScrollToKeyboard = function (left, top, width, height) {
        var keyboardScreenY = _Dimensions.default.get('window').height;
        var scrollTextInputIntoVisibleRect = function scrollTextInputIntoVisibleRect() {
          if (_this._keyboardMetrics != null) {
            keyboardScreenY = _this._keyboardMetrics.screenY;
          }
          var scrollOffsetY = top - keyboardScreenY + height + _this._additionalScrollOffset;
          if (_this._preventNegativeScrollOffset === true) {
            scrollOffsetY = Math.max(0, scrollOffsetY);
          }
          _this.scrollTo({
            x: 0,
            y: scrollOffsetY,
            animated: true
          });
          _this._additionalScrollOffset = 0;
          _this._preventNegativeScrollOffset = false;
        };
        if (_this._keyboardMetrics == null) {
          setTimeout(function () {
            scrollTextInputIntoVisibleRect();
          }, 0);
        } else {
          scrollTextInputIntoVisibleRect();
        }
      };
      _this._handleScroll = function (e) {
        _this._observedScrollSinceBecomingResponder = true;
        _this.props.onScroll && _this.props.onScroll(e);
      };
      _this._handleLayout = function (e) {
        if (_this.props.invertStickyHeaders === true) {
          _this.setState({
            layoutHeight: e.nativeEvent.layout.height
          });
        }
        if (_this.props.onLayout) {
          _this.props.onLayout(e);
        }
      };
      _this._handleContentOnLayout = function (e) {
        var _e$nativeEvent$layout = e.nativeEvent.layout,
          width = _e$nativeEvent$layout.width,
          height = _e$nativeEvent$layout.height;
        _this.props.onContentSizeChange && _this.props.onContentSizeChange(width, height);
      };
      _this._innerView = createRefForwarder(function (instance) {
        return instance;
      });
      _this._scrollView = createRefForwarder(function (nativeInstance) {
        var publicInstance = Object.assign(nativeInstance, {
          getScrollResponder: _this.getScrollResponder,
          getScrollableNode: _this.getScrollableNode,
          getInnerViewNode: _this.getInnerViewNode,
          getInnerViewRef: _this.getInnerViewRef,
          getNativeScrollRef: _this.getNativeScrollRef,
          scrollTo: _this.scrollTo,
          scrollToEnd: _this.scrollToEnd,
          flashScrollIndicators: _this.flashScrollIndicators,
          scrollResponderZoomTo: _this.scrollResponderZoomTo,
          scrollResponderScrollNativeHandleToKeyboard: _this.scrollResponderScrollNativeHandleToKeyboard
        });
        return publicInstance;
      });
      _this.scrollResponderKeyboardWillShow = function (e) {
        _this._keyboardMetrics = e.endCoordinates;
        _this.props.onKeyboardWillShow && _this.props.onKeyboardWillShow(e);
      };
      _this.scrollResponderKeyboardWillHide = function (e) {
        _this._keyboardMetrics = null;
        _this.props.onKeyboardWillHide && _this.props.onKeyboardWillHide(e);
      };
      _this.scrollResponderKeyboardDidShow = function (e) {
        _this._keyboardMetrics = e.endCoordinates;
        _this.props.onKeyboardDidShow && _this.props.onKeyboardDidShow(e);
      };
      _this.scrollResponderKeyboardDidHide = function (e) {
        _this._keyboardMetrics = null;
        _this.props.onKeyboardDidHide && _this.props.onKeyboardDidHide(e);
      };
      _this._handleMomentumScrollBegin = function (e) {
        _this._lastMomentumScrollBeginTime = global.performance.now();
        _this.props.onMomentumScrollBegin && _this.props.onMomentumScrollBegin(e);
      };
      _this._handleMomentumScrollEnd = function (e) {
        _FrameRateLogger.default.endScroll();
        _this._lastMomentumScrollEndTime = global.performance.now();
        _this.props.onMomentumScrollEnd && _this.props.onMomentumScrollEnd(e);
      };
      _this._handleScrollBeginDrag = function (e) {
        _FrameRateLogger.default.beginScroll();
        if (_Platform.default.OS === 'android' && _this.props.keyboardDismissMode === 'on-drag') {
          (0, _dismissKeyboard.default)();
        }
        _this.props.onScrollBeginDrag && _this.props.onScrollBeginDrag(e);
      };
      _this._handleScrollEndDrag = function (e) {
        var velocity = e.nativeEvent.velocity;
        if (!_this._isAnimating() && (!velocity || velocity.x === 0 && velocity.y === 0)) {
          _FrameRateLogger.default.endScroll();
        }
        _this.props.onScrollEndDrag && _this.props.onScrollEndDrag(e);
      };
      _this._isAnimating = function () {
        var now = global.performance.now();
        var timeSinceLastMomentumScrollEnd = now - _this._lastMomentumScrollEndTime;
        var isAnimating = timeSinceLastMomentumScrollEnd < IS_ANIMATING_TOUCH_START_THRESHOLD_MS || _this._lastMomentumScrollEndTime < _this._lastMomentumScrollBeginTime;
        return isAnimating;
      };
      _this._handleResponderGrant = function (e) {
        _this._observedScrollSinceBecomingResponder = false;
        _this.props.onResponderGrant && _this.props.onResponderGrant(e);
        _this._becameResponderWhileAnimating = _this._isAnimating();
      };
      _this._handleResponderReject = function () {};
      _this._handleResponderRelease = function (e) {
        _this._isTouching = e.nativeEvent.touches.length !== 0;
        _this.props.onResponderRelease && _this.props.onResponderRelease(e);
        if (typeof e.target === 'number') {
          return;
        }
        var currentlyFocusedTextInput = _TextInputState.default.currentlyFocusedInput();
        if (currentlyFocusedTextInput != null && _this.props.keyboardShouldPersistTaps !== true && _this.props.keyboardShouldPersistTaps !== 'always' && _this._keyboardIsDismissible() && e.target !== currentlyFocusedTextInput && !_this._observedScrollSinceBecomingResponder && !_this._becameResponderWhileAnimating) {
          _TextInputState.default.blurTextInput(currentlyFocusedTextInput);
        }
      };
      _this._handleResponderTerminationRequest = function () {
        return !_this._observedScrollSinceBecomingResponder;
      };
      _this._handleScrollShouldSetResponder = function () {
        if (_this.props.disableScrollViewPanResponder === true) {
          return false;
        }
        return _this._isTouching;
      };
      _this._handleStartShouldSetResponder = function (e) {
        if (_this.props.disableScrollViewPanResponder === true) {
          return false;
        }
        var currentlyFocusedInput = _TextInputState.default.currentlyFocusedInput();
        if (_this.props.keyboardShouldPersistTaps === 'handled' && _this._keyboardIsDismissible() && e.target !== currentlyFocusedInput) {
          return true;
        }
        return false;
      };
      _this._handleStartShouldSetResponderCapture = function (e) {
        if (_this._isAnimating()) {
          return true;
        }
        if (_this.props.disableScrollViewPanResponder === true) {
          return false;
        }
        var keyboardShouldPersistTaps = _this.props.keyboardShouldPersistTaps;
        var keyboardNeverPersistTaps = !keyboardShouldPersistTaps || keyboardShouldPersistTaps === 'never';
        if (typeof e.target === 'number') {
          return false;
        }
        if (_this._softKeyboardIsDetached()) {
          return false;
        }
        if (keyboardNeverPersistTaps && _this._keyboardIsDismissible() && e.target != null && !_TextInputState.default.isTextInput(e.target)) {
          return true;
        }
        return false;
      };
      _this._keyboardIsDismissible = function () {
        var currentlyFocusedInput = _TextInputState.default.currentlyFocusedInput();
        var hasFocusedTextInput = currentlyFocusedInput != null && _TextInputState.default.isTextInput(currentlyFocusedInput);
        var softKeyboardMayBeOpen = _this._keyboardMetrics != null || _this._keyboardEventsAreUnreliable();
        return hasFocusedTextInput && softKeyboardMayBeOpen;
      };
      _this._softKeyboardIsDetached = function () {
        return _this._keyboardMetrics != null && _this._keyboardMetrics.height === 0;
      };
      _this._keyboardEventsAreUnreliable = function () {
        return _Platform.default.OS === 'android' && _Platform.default.Version < 30;
      };
      _this._handleTouchEnd = function (e) {
        var nativeEvent = e.nativeEvent;
        _this._isTouching = nativeEvent.touches.length !== 0;
        var keyboardShouldPersistTaps = _this.props.keyboardShouldPersistTaps;
        var keyboardNeverPersistsTaps = !keyboardShouldPersistTaps || keyboardShouldPersistTaps === 'never';
        var currentlyFocusedTextInput = _TextInputState.default.currentlyFocusedInput();
        if (currentlyFocusedTextInput != null && e.target !== currentlyFocusedTextInput && _this._softKeyboardIsDetached() && _this._keyboardIsDismissible() && keyboardNeverPersistsTaps) {
          _TextInputState.default.blurTextInput(currentlyFocusedTextInput);
        }
        _this.props.onTouchEnd && _this.props.onTouchEnd(e);
      };
      _this._handleTouchCancel = function (e) {
        _this._isTouching = false;
        _this.props.onTouchCancel && _this.props.onTouchCancel(e);
      };
      _this._handleTouchStart = function (e) {
        _this._isTouching = true;
        _this.props.onTouchStart && _this.props.onTouchStart(e);
      };
      _this._handleTouchMove = function (e) {
        _this.props.onTouchMove && _this.props.onTouchMove(e);
      };
      _this._scrollAnimatedValue = new _AnimatedImplementation.default.Value((_this$props$contentOf = (_this$props$contentOf2 = _this.props.contentOffset) == null ? undefined : _this$props$contentOf2.y) != null ? _this$props$contentOf : 0);
      _this._scrollAnimatedValue.setOffset((_this$props$contentIn = (_this$props$contentIn2 = _this.props.contentInset) == null ? undefined : _this$props$contentIn2.top) != null ? _this$props$contentIn : 0);
      return _this;
    }
    (0, _inherits2.default)(ScrollView, _React$Component);
    return (0, _createClass2.default)(ScrollView, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        if (typeof this.props.keyboardShouldPersistTaps === 'boolean') {
          console.warn(`'keyboardShouldPersistTaps={${this.props.keyboardShouldPersistTaps === true ? 'true' : 'false'}}' is deprecated. ` + `Use 'keyboardShouldPersistTaps="${this.props.keyboardShouldPersistTaps ? 'always' : 'never'}"' instead`);
        }
        this._keyboardMetrics = _Keyboard.default.metrics();
        this._additionalScrollOffset = 0;
        this._subscriptionKeyboardWillShow = _Keyboard.default.addListener('keyboardWillShow', this.scrollResponderKeyboardWillShow);
        this._subscriptionKeyboardWillHide = _Keyboard.default.addListener('keyboardWillHide', this.scrollResponderKeyboardWillHide);
        this._subscriptionKeyboardDidShow = _Keyboard.default.addListener('keyboardDidShow', this.scrollResponderKeyboardDidShow);
        this._subscriptionKeyboardDidHide = _Keyboard.default.addListener('keyboardDidHide', this.scrollResponderKeyboardDidHide);
        this._updateAnimatedNodeAttachment();
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        var prevContentInsetTop = prevProps.contentInset ? prevProps.contentInset.top : 0;
        var newContentInsetTop = this.props.contentInset ? this.props.contentInset.top : 0;
        if (prevContentInsetTop !== newContentInsetTop) {
          this._scrollAnimatedValue.setOffset(newContentInsetTop || 0);
        }
        this._updateAnimatedNodeAttachment();
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this._subscriptionKeyboardWillShow != null) {
          this._subscriptionKeyboardWillShow.remove();
        }
        if (this._subscriptionKeyboardWillHide != null) {
          this._subscriptionKeyboardWillHide.remove();
        }
        if (this._subscriptionKeyboardDidShow != null) {
          this._subscriptionKeyboardDidShow.remove();
        }
        if (this._subscriptionKeyboardDidHide != null) {
          this._subscriptionKeyboardDidHide.remove();
        }
        if (this._scrollAnimatedValueAttachment) {
          this._scrollAnimatedValueAttachment.detach();
        }
      }
    }, {
      key: "_textInputFocusError",
      value: function _textInputFocusError() {
        console.warn('Error measuring text field.');
      }
    }, {
      key: "_getKeyForIndex",
      value: function _getKeyForIndex(index, childArray) {
        var child = childArray[index];
        return child && child.key;
      }
    }, {
      key: "_updateAnimatedNodeAttachment",
      value: function _updateAnimatedNodeAttachment() {
        if (this._scrollAnimatedValueAttachment) {
          this._scrollAnimatedValueAttachment.detach();
        }
        if (this.props.stickyHeaderIndices && this.props.stickyHeaderIndices.length > 0) {
          this._scrollAnimatedValueAttachment = _AnimatedImplementation.default.attachNativeEvent(this.getNativeScrollRef(), 'onScroll', [{
            nativeEvent: {
              contentOffset: {
                y: this._scrollAnimatedValue
              }
            }
          }]);
        }
      }
    }, {
      key: "_setStickyHeaderRef",
      value: function _setStickyHeaderRef(key, ref) {
        if (ref) {
          this._stickyHeaderRefs.set(key, ref);
        } else {
          this._stickyHeaderRefs.delete(key);
        }
      }
    }, {
      key: "_onStickyHeaderLayout",
      value: function _onStickyHeaderLayout(index, event, key) {
        var stickyHeaderIndices = this.props.stickyHeaderIndices;
        if (!stickyHeaderIndices) {
          return;
        }
        var childArray = React.Children.toArray(this.props.children);
        if (key !== this._getKeyForIndex(index, childArray)) {
          return;
        }
        var layoutY = event.nativeEvent.layout.y;
        this._headerLayoutYs.set(key, layoutY);
        var indexOfIndex = stickyHeaderIndices.indexOf(index);
        var previousHeaderIndex = stickyHeaderIndices[indexOfIndex - 1];
        if (previousHeaderIndex != null) {
          var previousHeader = this._stickyHeaderRefs.get(this._getKeyForIndex(previousHeaderIndex, childArray));
          previousHeader && previousHeader.setNextHeaderY && previousHeader.setNextHeaderY(layoutY);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;
        var horizontal = this.props.horizontal === true;
        var NativeScrollView = horizontal ? _$$_REQUIRE(_dependencyMap[28]).HScrollViewNativeComponent : _$$_REQUIRE(_dependencyMap[29]).VScrollViewNativeComponent;
        var NativeScrollContentView = horizontal ? _$$_REQUIRE(_dependencyMap[28]).HScrollContentViewNativeComponent : _$$_REQUIRE(_dependencyMap[29]).VScrollContentViewNativeComponent;
        var contentContainerStyle = [horizontal && styles.contentContainerHorizontal, this.props.contentContainerStyle];
        var contentSizeChangeProps = this.props.onContentSizeChange == null ? null : {
          onLayout: this._handleContentOnLayout
        };
        var stickyHeaderIndices = this.props.stickyHeaderIndices;
        var children = this.props.children;
        children = React.Children.toArray(children);
        if (stickyHeaderIndices != null && stickyHeaderIndices.length > 0) {
          children = children.map(function (child, index) {
            var indexOfIndex = child ? stickyHeaderIndices.indexOf(index) : -1;
            if (indexOfIndex > -1) {
              var key = child.key;
              var nextIndex = stickyHeaderIndices[indexOfIndex + 1];
              var StickyHeaderComponent = _this2.props.StickyHeaderComponent || _ScrollViewStickyHeader.default;
              return /*#__PURE__*/(0, _jsxRuntime.jsx)(StickyHeaderComponent, {
                ref: function ref(_ref) {
                  return _this2._setStickyHeaderRef(key, _ref);
                },
                nextHeaderLayoutY: _this2._headerLayoutYs.get(_this2._getKeyForIndex(nextIndex, children)),
                onLayout: function onLayout(event) {
                  return _this2._onStickyHeaderLayout(index, event, key);
                },
                scrollAnimatedValue: _this2._scrollAnimatedValue,
                inverted: _this2.props.invertStickyHeaders,
                hiddenOnScroll: _this2.props.stickyHeaderHiddenOnScroll,
                scrollViewHeight: _this2.state.layoutHeight,
                children: child
              }, key);
            } else {
              return child;
            }
          });
        }
        children = /*#__PURE__*/(0, _jsxRuntime.jsx)(_ScrollViewContext.default.Provider, {
          value: horizontal ? _ScrollViewContext.HORIZONTAL : _ScrollViewContext.VERTICAL,
          children: children
        });
        var hasStickyHeaders = Array.isArray(stickyHeaderIndices) && stickyHeaderIndices.length > 0;
        var preserveChildren = this.props.maintainVisibleContentPosition != null || _Platform.default.OS === 'android' && this.props.snapToAlignment != null;
        var contentContainer = /*#__PURE__*/(0, _jsxRuntime.jsx)(NativeScrollContentView, Object.assign({}, contentSizeChangeProps, {
          ref: this._innerView.getForwardingRef(this.props.innerViewRef),
          style: contentContainerStyle,
          removeClippedSubviews: _Platform.default.OS === 'android' && hasStickyHeaders ? false : this.props.removeClippedSubviews,
          collapsable: false,
          collapsableChildren: !preserveChildren,
          children: children
        }));
        var alwaysBounceHorizontal = this.props.alwaysBounceHorizontal !== undefined ? this.props.alwaysBounceHorizontal : this.props.horizontal;
        var alwaysBounceVertical = this.props.alwaysBounceVertical !== undefined ? this.props.alwaysBounceVertical : !this.props.horizontal;
        var baseStyle = horizontal ? styles.baseHorizontal : styles.baseVertical;
        var _this$props = this.props,
          experimental_endDraggingSensitivityMultiplier = _this$props.experimental_endDraggingSensitivityMultiplier,
          otherProps = (0, _objectWithoutProperties2.default)(_this$props, _excluded);
        var props = Object.assign({}, otherProps, {
          alwaysBounceHorizontal: alwaysBounceHorizontal,
          alwaysBounceVertical: alwaysBounceVertical,
          style: _StyleSheet.default.compose(baseStyle, this.props.style),
          onContentSizeChange: null,
          onLayout: this._handleLayout,
          onMomentumScrollBegin: this._handleMomentumScrollBegin,
          onMomentumScrollEnd: this._handleMomentumScrollEnd,
          onResponderGrant: this._handleResponderGrant,
          onResponderReject: this._handleResponderReject,
          onResponderRelease: this._handleResponderRelease,
          onResponderTerminationRequest: this._handleResponderTerminationRequest,
          onScrollBeginDrag: this._handleScrollBeginDrag,
          onScrollEndDrag: this._handleScrollEndDrag,
          onScrollShouldSetResponder: this._handleScrollShouldSetResponder,
          onStartShouldSetResponder: this._handleStartShouldSetResponder,
          onStartShouldSetResponderCapture: this._handleStartShouldSetResponderCapture,
          onTouchEnd: this._handleTouchEnd,
          onTouchMove: this._handleTouchMove,
          onTouchStart: this._handleTouchStart,
          onTouchCancel: this._handleTouchCancel,
          onScroll: this._handleScroll,
          endDraggingSensitivityMultiplier: experimental_endDraggingSensitivityMultiplier,
          scrollEventThrottle: hasStickyHeaders ? 1 : this.props.scrollEventThrottle,
          sendMomentumEvents: this.props.onMomentumScrollBegin || this.props.onMomentumScrollEnd ? true : false,
          snapToStart: this.props.snapToStart !== false,
          snapToEnd: this.props.snapToEnd !== false,
          pagingEnabled: _Platform.default.select({
            ios: this.props.pagingEnabled === true && this.props.snapToInterval == null && this.props.snapToOffsets == null,
            android: this.props.pagingEnabled === true || this.props.snapToInterval != null || this.props.snapToOffsets != null
          })
        });
        var decelerationRate = this.props.decelerationRate;
        if (decelerationRate != null) {
          props.decelerationRate = (0, _processDecelerationRate.default)(decelerationRate);
        }
        var refreshControl = this.props.refreshControl;
        var scrollViewRef = this._scrollView.getForwardingRef(this.props.scrollViewRef);
        if (refreshControl != null) {
          if (_Platform.default.OS === 'ios') {
            return /*#__PURE__*/(0, _jsxRuntime.jsxs)(NativeScrollView, Object.assign({}, props, {
              ref: scrollViewRef,
              children: [refreshControl, contentContainer]
            }));
          } else if (_Platform.default.OS === 'android') {
            var _splitLayoutProps = (0, _splitLayoutProps2.default)((0, _flattenStyle.default)(props.style)),
              outer = _splitLayoutProps.outer,
              inner = _splitLayoutProps.inner;
            return React.cloneElement(refreshControl, {
              style: _StyleSheet.default.compose(baseStyle, outer)
            }, /*#__PURE__*/(0, _jsxRuntime.jsx)(NativeScrollView, Object.assign({}, props, {
              style: _StyleSheet.default.compose(baseStyle, inner),
              ref: scrollViewRef,
              children: contentContainer
            })));
          }
        }
        return /*#__PURE__*/(0, _jsxRuntime.jsx)(NativeScrollView, Object.assign({}, props, {
          ref: scrollViewRef,
          children: contentContainer
        }));
      }
    }]);
  }(React.Component);
  ScrollView.Context = _ScrollViewContext.default;
  var styles = _StyleSheet.default.create({
    baseVertical: {
      flexGrow: 1,
      flexShrink: 1,
      flexDirection: 'column',
      overflow: 'scroll'
    },
    baseHorizontal: {
      flexGrow: 1,
      flexShrink: 1,
      flexDirection: 'row',
      overflow: 'scroll'
    },
    contentContainerHorizontal: {
      flexDirection: 'row'
    }
  });
  function createRefForwarder(mutator) {
    var state = {
      getForwardingRef: (0, _memoizeOne.default)(function (forwardedRef) {
        return function (nativeInstance) {
          var publicInstance = nativeInstance == null ? null : mutator(nativeInstance);
          state.nativeInstance = nativeInstance;
          state.publicInstance = publicInstance;
          if (forwardedRef != null) {
            if (typeof forwardedRef === 'function') {
              forwardedRef(publicInstance);
            } else {
              forwardedRef.current = publicInstance;
            }
          }
        };
      }),
      nativeInstance: null,
      publicInstance: null
    };
    return state;
  }
  var Wrapper = React.forwardRef(function Wrapper(props, ref) {
    return ref == null ? /*#__PURE__*/(0, _jsxRuntime.jsx)(ScrollView, Object.assign({}, props)) : /*#__PURE__*/(0, _jsxRuntime.jsx)(ScrollView, Object.assign({}, props, {
      scrollViewRef: ref
    }));
  });
  Wrapper.displayName = 'ScrollView';
  Wrapper.Context = _ScrollViewContext.default;
  var _default = exports.default = Wrapper;
},378,[1,203,12,13,23,25,28,301,379,44,128,382,253,113,383,33,384,84,388,389,390,391,20,360,45,119,251,57,392,397]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _NativeFrameRateLogger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var FrameRateLogger = {
    setGlobalOptions: function setGlobalOptions(options) {
      if (options.debug !== undefined) {
        _$$_REQUIRE(_dependencyMap[2])(_NativeFrameRateLogger.default, 'Trying to debug FrameRateLogger without the native module!');
      }
      _NativeFrameRateLogger.default == null ? undefined : _NativeFrameRateLogger.default.setGlobalOptions({
        debug: !!options.debug
      });
    },
    setContext: function setContext(context) {
      _NativeFrameRateLogger.default == null ? undefined : _NativeFrameRateLogger.default.setContext(context);
    },
    beginScroll: function beginScroll() {
      _NativeFrameRateLogger.default == null ? undefined : _NativeFrameRateLogger.default.beginScroll();
    },
    endScroll: function endScroll() {
      _NativeFrameRateLogger.default == null ? undefined : _NativeFrameRateLogger.default.endScroll();
    }
  };
  var _default = exports.default = FrameRateLogger;
},379,[1,380,20]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeFrameRateLogger = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeFrameRateLogger).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeFrameRateLogger[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeFrameRateLogger[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeFrameRateLogger.default;
},380,[381]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.get('FrameRateLogger');
},381,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = splitLayoutProps;
  function splitLayoutProps(props) {
    var outer = null;
    var inner = null;
    if (props != null) {
      outer = {};
      inner = {};
      for (var prop of Object.keys(props)) {
        switch (prop) {
          case 'margin':
          case 'marginHorizontal':
          case 'marginVertical':
          case 'marginBottom':
          case 'marginTop':
          case 'marginLeft':
          case 'marginRight':
          case 'flex':
          case 'flexGrow':
          case 'flexShrink':
          case 'flexBasis':
          case 'alignSelf':
          case 'height':
          case 'minHeight':
          case 'maxHeight':
          case 'width':
          case 'minWidth':
          case 'maxWidth':
          case 'position':
          case 'left':
          case 'right':
          case 'bottom':
          case 'top':
          case 'transform':
          case 'transformOrigin':
          case 'rowGap':
          case 'columnGap':
          case 'gap':
            outer[prop] = props[prop];
            break;
          default:
            inner[prop] = props[prop];
            break;
        }
      }
    }
    return {
      outer: outer,
      inner: inner
    };
  }
},382,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  function dismissKeyboard() {
    _$$_REQUIRE(_dependencyMap[0]).default.blurTextInput(_$$_REQUIRE(_dependencyMap[0]).default.currentlyFocusedInput());
  }
  var _default = exports.default = dismissKeyboard;
},383,[84]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _NativeEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _LayoutAnimation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _dismissKeyboard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _NativeKeyboardObserver = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var Keyboard = /*#__PURE__*/function () {
    function Keyboard() {
      var _this = this;
      (0, _classCallCheck2.default)(this, Keyboard);
      this._emitter = new _NativeEventEmitter.default(_Platform.default.OS !== 'ios' ? null : _NativeKeyboardObserver.default);
      this.addListener('keyboardDidShow', function (ev) {
        _this._currentlyShowing = ev;
      });
      this.addListener('keyboardDidHide', function (_ev) {
        _this._currentlyShowing = null;
      });
    }
    return (0, _createClass2.default)(Keyboard, [{
      key: "addListener",
      value: function addListener(eventType, listener, context) {
        return this._emitter.addListener(eventType, listener);
      }
    }, {
      key: "removeAllListeners",
      value: function removeAllListeners(eventType) {
        this._emitter.removeAllListeners(eventType);
      }
    }, {
      key: "dismiss",
      value: function dismiss() {
        (0, _dismissKeyboard.default)();
      }
    }, {
      key: "isVisible",
      value: function isVisible() {
        return !!this._currentlyShowing;
      }
    }, {
      key: "metrics",
      value: function metrics() {
        var _this$_currentlyShowi;
        return (_this$_currentlyShowi = this._currentlyShowing) == null ? undefined : _this$_currentlyShowi.endCoordinates;
      }
    }, {
      key: "scheduleLayoutAnimation",
      value: function scheduleLayoutAnimation(event) {
        var duration = event.duration,
          easing = event.easing;
        if (duration != null && duration !== 0) {
          _LayoutAnimation.default.configureNext({
            duration: duration,
            update: {
              duration: duration,
              type: easing != null && _LayoutAnimation.default.Types[easing] || 'keyboard'
            }
          });
        }
      }
    }]);
  }();
  var _default = exports.default = new Keyboard();
},384,[1,12,13,191,385,383,33,386]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var ReactNativeFeatureFlags = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var isLayoutAnimationEnabled = ReactNativeFeatureFlags.isLayoutAnimationEnabled();
  function setEnabled(value) {
    isLayoutAnimationEnabled = isLayoutAnimationEnabled;
  }
  function configureNext(config, onAnimationDidEnd, onAnimationDidFail) {
    var _config$duration;
    if (_Platform.default.isDisableAnimations) {
      return;
    }
    if (!isLayoutAnimationEnabled) {
      return;
    }
    var animationCompletionHasRun = false;
    var onAnimationComplete = function onAnimationComplete() {
      if (animationCompletionHasRun) {
        return;
      }
      animationCompletionHasRun = true;
      clearTimeout(raceWithAnimationId);
      onAnimationDidEnd == null ? undefined : onAnimationDidEnd();
    };
    var raceWithAnimationId = setTimeout(onAnimationComplete, ((_config$duration = config.duration) != null ? _config$duration : 0) + 17);
    var FabricUIManager = (0, _$$_REQUIRE(_dependencyMap[3]).getFabricUIManager)();
    if (FabricUIManager != null && FabricUIManager.configureNextLayoutAnimation) {
      var _global, _global$nativeFabricU;
      (_global = global) == null ? undefined : (_global$nativeFabricU = _global.nativeFabricUIManager) == null ? undefined : _global$nativeFabricU.configureNextLayoutAnimation(config, onAnimationComplete, onAnimationDidFail != null ? onAnimationDidFail : function () {});
      return;
    }
    if (_$$_REQUIRE(_dependencyMap[4]).default != null && _$$_REQUIRE(_dependencyMap[4]).default.configureNextLayoutAnimation) {
      _$$_REQUIRE(_dependencyMap[4]).default.configureNextLayoutAnimation(config, onAnimationComplete != null ? onAnimationComplete : function () {}, onAnimationDidFail != null ? onAnimationDidFail : function () {});
    }
  }
  function create(duration, type, property) {
    return {
      duration: duration,
      create: {
        type: type,
        property: property
      },
      update: {
        type: type
      },
      delete: {
        type: type,
        property: property
      }
    };
  }
  var Presets = {
    easeInEaseOut: create(300, 'easeInEaseOut', 'opacity'),
    linear: create(500, 'linear', 'opacity'),
    spring: {
      duration: 700,
      create: {
        type: 'linear',
        property: 'opacity'
      },
      update: {
        type: 'spring',
        springDamping: 0.4
      },
      delete: {
        type: 'linear',
        property: 'opacity'
      }
    }
  };
  var LayoutAnimation = {
    configureNext: configureNext,
    create: create,
    Types: Object.freeze({
      spring: 'spring',
      linear: 'linear',
      easeInEaseOut: 'easeInEaseOut',
      easeIn: 'easeIn',
      easeOut: 'easeOut',
      keyboard: 'keyboard'
    }),
    Properties: Object.freeze({
      opacity: 'opacity',
      scaleX: 'scaleX',
      scaleY: 'scaleY',
      scaleXY: 'scaleXY'
    }),
    checkConfig: function checkConfig() {
      console.error('LayoutAnimation.checkConfig(...) has been disabled.');
    },
    Presets: Presets,
    easeInEaseOut: configureNext.bind(null, Presets.easeInEaseOut),
    linear: configureNext.bind(null, Presets.linear),
    spring: configureNext.bind(null, Presets.spring),
    setEnabled: setEnabled
  };
  var _default = exports.default = LayoutAnimation;
},385,[1,73,33,47,44]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeKeyboardObserver = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeKeyboardObserver).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeKeyboardObserver[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeKeyboardObserver[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeKeyboardObserver.default;
},386,[387]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.get('KeyboardObserver');
},387,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  function processDecelerationRate(decelerationRate) {
    if (decelerationRate === 'normal') {
      return _Platform.default.select({
        ios: 0.998,
        android: 0.985
      });
    } else if (decelerationRate === 'fast') {
      return _Platform.default.select({
        ios: 0.99,
        android: 0.9
      });
    }
    return decelerationRate;
  }
  var _default = exports.default = processDecelerationRate;
},388,[1,33]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _codegenNativeCommands = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = (0, _codegenNativeCommands.default)({
    supportedCommands: ['flashScrollIndicators', 'scrollTo', 'scrollToEnd', 'zoomToRect']
  });
},389,[1,125,119]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.VERTICAL = exports.HORIZONTAL = undefined;
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var ScrollViewContext = React.createContext(null);
  var _default = exports.default = ScrollViewContext;
  var HORIZONTAL = exports.HORIZONTAL = Object.freeze({
    horizontal: true
  });
  var VERTICAL = exports.VERTICAL = Object.freeze({
    horizontal: false
  });
},390,[119]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _Animated = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _StyleSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _useMergeRefs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[6]));
  var React = _react;
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[7]);
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var ScrollViewStickyHeaderWithForwardedRef = React.forwardRef(function ScrollViewStickyHeader(props, forwardedRef) {
    var inverted = props.inverted,
      scrollViewHeight = props.scrollViewHeight,
      hiddenOnScroll = props.hiddenOnScroll,
      scrollAnimatedValue = props.scrollAnimatedValue,
      _nextHeaderLayoutY = props.nextHeaderLayoutY;
    var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      measured = _useState2[0],
      setMeasured = _useState2[1];
    var _useState3 = (0, _react.useState)(0),
      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
      layoutY = _useState4[0],
      setLayoutY = _useState4[1];
    var _useState5 = (0, _react.useState)(0),
      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),
      layoutHeight = _useState6[0],
      setLayoutHeight = _useState6[1];
    var _useState7 = (0, _react.useState)(null),
      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),
      translateY = _useState8[0],
      setTranslateY = _useState8[1];
    var _useState9 = (0, _react.useState)(_nextHeaderLayoutY),
      _useState10 = (0, _slicedToArray2.default)(_useState9, 2),
      nextHeaderLayoutY = _useState10[0],
      setNextHeaderLayoutY = _useState10[1];
    var _useState11 = (0, _react.useState)(false),
      _useState12 = (0, _slicedToArray2.default)(_useState11, 2),
      isFabric = _useState12[0],
      setIsFabric = _useState12[1];
    var callbackRef = (0, _react.useCallback)(function (ref) {
      if (ref == null) {
        return;
      }
      ref.setNextHeaderY = setNextHeaderLayoutY;
      setIsFabric((0, _$$_REQUIRE(_dependencyMap[8]).isPublicInstance)(ref));
    }, []);
    var ref = (0, _useMergeRefs.default)(callbackRef, forwardedRef);
    var offset = (0, _react.useMemo)(function () {
      return hiddenOnScroll === true ? _Animated.default.diffClamp(scrollAnimatedValue.interpolate({
        extrapolateLeft: 'clamp',
        inputRange: [layoutY, layoutY + 1],
        outputRange: [0, 1]
      }).interpolate({
        inputRange: [0, 1],
        outputRange: [0, -1]
      }), -layoutHeight, 0) : null;
    }, [scrollAnimatedValue, layoutHeight, layoutY, hiddenOnScroll]);
    var _useState13 = (0, _react.useState)(function () {
        var inputRange = [-1, 0];
        var outputRange = [0, 0];
        var initialTranslateY = scrollAnimatedValue.interpolate({
          inputRange: inputRange,
          outputRange: outputRange
        });
        if (offset != null) {
          return _Animated.default.add(initialTranslateY, offset);
        }
        return initialTranslateY;
      }),
      _useState14 = (0, _slicedToArray2.default)(_useState13, 2),
      animatedTranslateY = _useState14[0],
      setAnimatedTranslateY = _useState14[1];
    var haveReceivedInitialZeroTranslateY = (0, _react.useRef)(true);
    var translateYDebounceTimer = (0, _react.useRef)(null);
    (0, _react.useEffect)(function () {
      if (translateY !== 0 && translateY != null) {
        haveReceivedInitialZeroTranslateY.current = false;
      }
    }, [translateY]);
    var animatedValueListener = (0, _react.useCallback)(function (_ref) {
      var value = _ref.value;
      var debounceTimeout = _Platform.default.OS === 'android' ? 15 : 64;
      if (value === 0 && !haveReceivedInitialZeroTranslateY.current) {
        haveReceivedInitialZeroTranslateY.current = true;
        return;
      }
      if (translateYDebounceTimer.current != null) {
        clearTimeout(translateYDebounceTimer.current);
      }
      translateYDebounceTimer.current = setTimeout(function () {
        return setTranslateY(value);
      }, debounceTimeout);
    }, []);
    (0, _react.useEffect)(function () {
      var inputRange = [-1, 0];
      var outputRange = [0, 0];
      if (measured) {
        if (inverted === true) {
          if (scrollViewHeight != null) {
            var stickStartPoint = layoutY + layoutHeight - scrollViewHeight;
            if (stickStartPoint > 0) {
              inputRange.push(stickStartPoint);
              outputRange.push(0);
              inputRange.push(stickStartPoint + 1);
              outputRange.push(1);
              var collisionPoint = (nextHeaderLayoutY || 0) - layoutHeight - scrollViewHeight;
              if (collisionPoint > stickStartPoint) {
                inputRange.push(collisionPoint, collisionPoint + 1);
                outputRange.push(collisionPoint - stickStartPoint, collisionPoint - stickStartPoint);
              }
            }
          }
        } else {
          inputRange.push(layoutY);
          outputRange.push(0);
          var _collisionPoint = (nextHeaderLayoutY || 0) - layoutHeight;
          if (_collisionPoint >= layoutY) {
            inputRange.push(_collisionPoint, _collisionPoint + 1);
            outputRange.push(_collisionPoint - layoutY, _collisionPoint - layoutY);
          } else {
            inputRange.push(layoutY + 1);
            outputRange.push(1);
          }
        }
      }
      var newAnimatedTranslateY = scrollAnimatedValue.interpolate({
        inputRange: inputRange,
        outputRange: outputRange
      });
      if (offset != null) {
        newAnimatedTranslateY = _Animated.default.add(newAnimatedTranslateY, offset);
      }
      var animatedListenerId;
      if (isFabric) {
        animatedListenerId = newAnimatedTranslateY.addListener(animatedValueListener);
      }
      setAnimatedTranslateY(newAnimatedTranslateY);
      return function () {
        if (animatedListenerId) {
          newAnimatedTranslateY.removeListener(animatedListenerId);
        }
        if (translateYDebounceTimer.current != null) {
          clearTimeout(translateYDebounceTimer.current);
        }
      };
    }, [nextHeaderLayoutY, measured, layoutHeight, layoutY, scrollViewHeight, scrollAnimatedValue, inverted, offset, animatedValueListener, isFabric]);
    var _onLayout = function _onLayout(event) {
      setLayoutY(event.nativeEvent.layout.y);
      setLayoutHeight(event.nativeEvent.layout.height);
      setMeasured(true);
      props.onLayout(event);
      var child = React.Children.only(props.children);
      if (child.props.onLayout) {
        child.props.onLayout(event);
      }
    };
    var child = React.Children.only(props.children);
    var passthroughAnimatedPropExplicitValues = isFabric && translateY != null ? {
      style: {
        transform: [{
          translateY: translateY
        }]
      }
    } : null;
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_Animated.default.View, {
      collapsable: false,
      nativeID: props.nativeID,
      onLayout: _onLayout,
      ref: ref,
      style: [child.props.style, styles.header, {
        transform: [{
          translateY: animatedTranslateY
        }]
      }],
      passthroughAnimatedPropExplicitValues: passthroughAnimatedPropExplicitValues,
      children: React.cloneElement(child, {
        style: styles.fill,
        onLayout: undefined
      })
    });
  });
  var styles = _StyleSheet.default.create({
    header: {
      zIndex: 10
    },
    fill: {
      flex: 1
    }
  });
  var _default = exports.default = ScrollViewStickyHeaderWithForwardedRef;
},391,[1,38,299,253,33,334,119,251,333]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.HScrollViewNativeComponent = exports.HScrollContentViewNativeComponent = undefined;
  var _AndroidHorizontalScrollViewNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _ScrollContentViewNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _ScrollViewNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _AndroidHorizontalScrollContentViewNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var HScrollViewNativeComponent = exports.HScrollViewNativeComponent = _Platform.default.OS === 'android' ? _AndroidHorizontalScrollViewNativeComponent.default : _ScrollViewNativeComponent.default;
  var HScrollContentViewNativeComponent = exports.HScrollContentViewNativeComponent = _Platform.default.OS === 'android' ? _AndroidHorizontalScrollContentViewNativeComponent.default : _ScrollContentViewNativeComponent.default;
},392,[1,393,394,395,33,396]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.__INTERNAL_VIEW_CONFIG = undefined;
  var NativeComponentRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var __INTERNAL_VIEW_CONFIG = exports.__INTERNAL_VIEW_CONFIG = {
    uiViewClassName: 'AndroidHorizontalScrollView',
    bubblingEventTypes: {},
    directEventTypes: {},
    validAttributes: {
      decelerationRate: true,
      disableIntervalMomentum: true,
      maintainVisibleContentPosition: true,
      endFillColor: {
        process: _$$_REQUIRE(_dependencyMap[1]).default
      },
      fadingEdgeLength: true,
      nestedScrollEnabled: true,
      overScrollMode: true,
      pagingEnabled: true,
      persistentScrollbar: true,
      horizontal: true,
      scrollEnabled: true,
      scrollEventThrottle: true,
      scrollPerfTag: true,
      sendMomentumEvents: true,
      showsHorizontalScrollIndicator: true,
      snapToAlignment: true,
      snapToEnd: true,
      snapToInterval: true,
      snapToStart: true,
      snapToOffsets: true,
      contentOffset: true,
      borderBottomLeftRadius: true,
      borderBottomRightRadius: true,
      borderRadius: true,
      borderStyle: true,
      borderRightColor: {
        process: _$$_REQUIRE(_dependencyMap[1]).default
      },
      borderColor: {
        process: _$$_REQUIRE(_dependencyMap[1]).default
      },
      borderBottomColor: {
        process: _$$_REQUIRE(_dependencyMap[1]).default
      },
      borderTopLeftRadius: true,
      borderTopColor: {
        process: _$$_REQUIRE(_dependencyMap[1]).default
      },
      removeClippedSubviews: true,
      borderTopRightRadius: true,
      borderLeftColor: {
        process: _$$_REQUIRE(_dependencyMap[1]).default
      },
      pointerEvents: true
    }
  };
  var AndroidHorizontalScrollViewNativeComponent = NativeComponentRegistry.get('AndroidHorizontalScrollView', function () {
    return __INTERNAL_VIEW_CONFIG;
  });
  var _default = exports.default = AndroidHorizontalScrollViewNativeComponent;
},393,[86,89]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.__INTERNAL_VIEW_CONFIG = undefined;
  var NativeComponentRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var __INTERNAL_VIEW_CONFIG = exports.__INTERNAL_VIEW_CONFIG = {
    uiViewClassName: 'RCTScrollContentView',
    bubblingEventTypes: {},
    directEventTypes: {},
    validAttributes: {}
  };
  var ScrollContentViewNativeComponent = NativeComponentRegistry.get('RCTScrollContentView', function () {
    return __INTERNAL_VIEW_CONFIG;
  });
  var _default = exports.default = ScrollContentViewNativeComponent;
},394,[86]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.__INTERNAL_VIEW_CONFIG = undefined;
  var NativeComponentRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var __INTERNAL_VIEW_CONFIG = exports.__INTERNAL_VIEW_CONFIG = _Platform.default.OS === 'android' ? {
    uiViewClassName: 'RCTScrollView',
    bubblingEventTypes: {},
    directEventTypes: {
      topMomentumScrollBegin: {
        registrationName: 'onMomentumScrollBegin'
      },
      topMomentumScrollEnd: {
        registrationName: 'onMomentumScrollEnd'
      },
      topScroll: {
        registrationName: 'onScroll'
      },
      topScrollBeginDrag: {
        registrationName: 'onScrollBeginDrag'
      },
      topScrollEndDrag: {
        registrationName: 'onScrollEndDrag'
      }
    },
    validAttributes: {
      contentOffset: {
        diff: _$$_REQUIRE(_dependencyMap[3]).default
      },
      decelerationRate: true,
      disableIntervalMomentum: true,
      maintainVisibleContentPosition: true,
      pagingEnabled: true,
      scrollEnabled: true,
      showsVerticalScrollIndicator: true,
      snapToAlignment: true,
      snapToEnd: true,
      snapToInterval: true,
      snapToOffsets: true,
      snapToStart: true,
      borderBottomLeftRadius: true,
      borderBottomRightRadius: true,
      sendMomentumEvents: true,
      borderRadius: true,
      nestedScrollEnabled: true,
      scrollEventThrottle: true,
      borderStyle: true,
      borderRightColor: {
        process: _$$_REQUIRE(_dependencyMap[4]).default
      },
      borderColor: {
        process: _$$_REQUIRE(_dependencyMap[4]).default
      },
      borderBottomColor: {
        process: _$$_REQUIRE(_dependencyMap[4]).default
      },
      persistentScrollbar: true,
      horizontal: true,
      endFillColor: {
        process: _$$_REQUIRE(_dependencyMap[4]).default
      },
      fadingEdgeLength: true,
      overScrollMode: true,
      borderTopLeftRadius: true,
      scrollPerfTag: true,
      borderTopColor: {
        process: _$$_REQUIRE(_dependencyMap[4]).default
      },
      removeClippedSubviews: true,
      borderTopRightRadius: true,
      borderLeftColor: {
        process: _$$_REQUIRE(_dependencyMap[4]).default
      },
      pointerEvents: true,
      isInvertedVirtualizedList: true
    }
  } : {
    uiViewClassName: 'RCTScrollView',
    bubblingEventTypes: {},
    directEventTypes: {
      topMomentumScrollBegin: {
        registrationName: 'onMomentumScrollBegin'
      },
      topMomentumScrollEnd: {
        registrationName: 'onMomentumScrollEnd'
      },
      topScroll: {
        registrationName: 'onScroll'
      },
      topScrollBeginDrag: {
        registrationName: 'onScrollBeginDrag'
      },
      topScrollEndDrag: {
        registrationName: 'onScrollEndDrag'
      },
      topScrollToTop: {
        registrationName: 'onScrollToTop'
      }
    },
    validAttributes: Object.assign({
      alwaysBounceHorizontal: true,
      alwaysBounceVertical: true,
      automaticallyAdjustContentInsets: true,
      automaticallyAdjustKeyboardInsets: true,
      automaticallyAdjustsScrollIndicatorInsets: true,
      bounces: true,
      bouncesZoom: true,
      canCancelContentTouches: true,
      centerContent: true,
      contentInset: {
        diff: _$$_REQUIRE(_dependencyMap[5]).default
      },
      contentOffset: {
        diff: _$$_REQUIRE(_dependencyMap[3]).default
      },
      contentInsetAdjustmentBehavior: true,
      decelerationRate: true,
      endDraggingSensitivityMultiplier: true,
      directionalLockEnabled: true,
      disableIntervalMomentum: true,
      indicatorStyle: true,
      inverted: true,
      keyboardDismissMode: true,
      maintainVisibleContentPosition: true,
      maximumZoomScale: true,
      minimumZoomScale: true,
      pagingEnabled: true,
      pinchGestureEnabled: true,
      scrollEnabled: true,
      scrollEventThrottle: true,
      scrollIndicatorInsets: {
        diff: _$$_REQUIRE(_dependencyMap[5]).default
      },
      scrollToOverflowEnabled: true,
      scrollsToTop: true,
      showsHorizontalScrollIndicator: true,
      showsVerticalScrollIndicator: true,
      snapToAlignment: true,
      snapToEnd: true,
      snapToInterval: true,
      snapToOffsets: true,
      snapToStart: true,
      verticalScrollIndicatorInsets: {
        diff: _$$_REQUIRE(_dependencyMap[5]).default
      },
      zoomScale: true
    }, (0, _$$_REQUIRE(_dependencyMap[6]).ConditionallyIgnoredEventHandlers)({
      onScrollBeginDrag: true,
      onMomentumScrollEnd: true,
      onScrollEndDrag: true,
      onMomentumScrollBegin: true,
      onScrollToTop: true,
      onScroll: true
    }))
  };
  var ScrollViewNativeComponent = NativeComponentRegistry.get('RCTScrollView', function () {
    return __INTERNAL_VIEW_CONFIG;
  });
  var _default = exports.default = ScrollViewNativeComponent;
},395,[1,86,33,103,89,104,124]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var nativeComponentName = 'AndroidHorizontalScrollContentView';
  export var __INTERNAL_VIEW_CONFIG = {
    uiViewClassName: "AndroidHorizontalScrollContentView",
    validAttributes: {
      removeClippedSubviews: true
    }
  };
  export default _$$_REQUIRE(_dependencyMap[2]).get(nativeComponentName, function () {
    return __INTERNAL_VIEW_CONFIG;
  });
},396,[1,279,86]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.VScrollViewNativeComponent = exports.VScrollContentViewNativeComponent = undefined;
  var _ScrollContentViewNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _ScrollViewNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _View = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var VScrollViewNativeComponent = exports.VScrollViewNativeComponent = _ScrollViewNativeComponent.default;
  var VScrollContentViewNativeComponent = exports.VScrollContentViewNativeComponent = _Platform.default.OS === 'android' ? _View.default : _ScrollContentViewNativeComponent.default;
},397,[1,394,395,248,33]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _createAnimatedPropsHook = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _default = exports.default = (0, _createAnimatedPropsHook.default)(null);
},398,[1,330]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _SectionList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createAnimatedComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = (0, _createAnimatedComponent.default)(_SectionList.default);
},399,[1,400,329,119]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _virtualizedLists = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[10]);
  var _excluded = ["stickySectionHeadersEnabled"];
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var VirtualizedSectionList = _virtualizedLists.default.VirtualizedSectionList;
  var SectionList = exports.default = /*#__PURE__*/function (_React$PureComponent) {
    function SectionList() {
      var _this;
      (0, _classCallCheck2.default)(this, SectionList);
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _callSuper(this, SectionList, [].concat(args));
      _this._captureRef = function (ref) {
        _this._wrapperListRef = ref;
      };
      return _this;
    }
    (0, _inherits2.default)(SectionList, _React$PureComponent);
    return (0, _createClass2.default)(SectionList, [{
      key: "scrollToLocation",
      value: function scrollToLocation(params) {
        if (this._wrapperListRef != null) {
          this._wrapperListRef.scrollToLocation(params);
        }
      }
    }, {
      key: "recordInteraction",
      value: function recordInteraction() {
        var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();
        listRef && listRef.recordInteraction();
      }
    }, {
      key: "flashScrollIndicators",
      value: function flashScrollIndicators() {
        var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();
        listRef && listRef.flashScrollIndicators();
      }
    }, {
      key: "getScrollResponder",
      value: function getScrollResponder() {
        var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();
        if (listRef) {
          return listRef.getScrollResponder();
        }
      }
    }, {
      key: "getScrollableNode",
      value: function getScrollableNode() {
        var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();
        if (listRef) {
          return listRef.getScrollableNode();
        }
      }
    }, {
      key: "setNativeProps",
      value: function setNativeProps(props) {
        var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();
        if (listRef) {
          listRef.setNativeProps(props);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
          _stickySectionHeadersEnabled = _this$props.stickySectionHeadersEnabled,
          restProps = (0, _objectWithoutProperties2.default)(_this$props, _excluded);
        var stickySectionHeadersEnabled = _stickySectionHeadersEnabled != null ? _stickySectionHeadersEnabled : _Platform.default.OS === 'ios';
        return /*#__PURE__*/(0, _jsxRuntime.jsx)(VirtualizedSectionList, Object.assign({}, restProps, {
          stickySectionHeadersEnabled: stickySectionHeadersEnabled,
          ref: this._captureRef,
          getItemCount: function getItemCount(items) {
            return items.length;
          },
          getItem: function getItem(items, index) {
            return items[index];
          }
        }));
      }
    }]);
  }(React.PureComponent);
},400,[1,203,12,13,23,25,28,33,345,119,251]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createAnimatedComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = (0, _createAnimatedComponent.default)(_Text.default);
},401,[1,285,329,119]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _View = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createAnimatedComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = (0, _createAnimatedComponent.default)(_View.default);
},402,[1,248,329,119]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _StyleSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _dismissKeyboard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _StatusBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _View = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  var _AndroidDrawerLayoutNativeComponent = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));
  var _nullthrows = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[13]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[14]);
  var _excluded = ["drawerBackgroundColor", "onDrawerStateChanged", "renderNavigationView", "onDrawerOpen", "onDrawerClose"];
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var DRAWER_STATES = ['Idle', 'Dragging', 'Settling'];
  var DrawerLayoutAndroid = /*#__PURE__*/function (_React$Component) {
    function DrawerLayoutAndroid() {
      var _this;
      (0, _classCallCheck2.default)(this, DrawerLayoutAndroid);
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _callSuper(this, DrawerLayoutAndroid, [].concat(args));
      _this._nativeRef = React.createRef();
      _this.state = {
        drawerOpened: false
      };
      _this._onDrawerSlide = function (event) {
        if (_this.props.onDrawerSlide) {
          _this.props.onDrawerSlide(event);
        }
        if (_this.props.keyboardDismissMode === 'on-drag') {
          (0, _dismissKeyboard.default)();
        }
      };
      _this._onDrawerOpen = function () {
        _this.setState({
          drawerOpened: true
        });
        if (_this.props.onDrawerOpen) {
          _this.props.onDrawerOpen();
        }
      };
      _this._onDrawerClose = function () {
        _this.setState({
          drawerOpened: false
        });
        if (_this.props.onDrawerClose) {
          _this.props.onDrawerClose();
        }
      };
      _this._onDrawerStateChanged = function (event) {
        if (_this.props.onDrawerStateChanged) {
          _this.props.onDrawerStateChanged(DRAWER_STATES[event.nativeEvent.drawerState]);
        }
      };
      return _this;
    }
    (0, _inherits2.default)(DrawerLayoutAndroid, _React$Component);
    return (0, _createClass2.default)(DrawerLayoutAndroid, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
          _this$props$drawerBac = _this$props.drawerBackgroundColor,
          drawerBackgroundColor = _this$props$drawerBac === undefined ? 'white' : _this$props$drawerBac,
          onDrawerStateChanged = _this$props.onDrawerStateChanged,
          renderNavigationView = _this$props.renderNavigationView,
          onDrawerOpen = _this$props.onDrawerOpen,
          onDrawerClose = _this$props.onDrawerClose,
          props = (0, _objectWithoutProperties2.default)(_this$props, _excluded);
        var drawStatusBar = this.props.statusBarBackgroundColor != null;
        var drawerViewWrapper = /*#__PURE__*/(0, _jsxRuntime.jsxs)(_View.default, {
          style: [styles.drawerSubview, {
            width: this.props.drawerWidth,
            backgroundColor: drawerBackgroundColor
          }],
          pointerEvents: this.state.drawerOpened ? 'auto' : 'none',
          collapsable: false,
          children: [renderNavigationView(), drawStatusBar && /*#__PURE__*/(0, _jsxRuntime.jsx)(_View.default, {
            style: styles.drawerStatusBar
          })]
        });
        var childrenWrapper = /*#__PURE__*/(0, _jsxRuntime.jsxs)(_View.default, {
          style: styles.mainSubview,
          collapsable: false,
          children: [drawStatusBar && /*#__PURE__*/(0, _jsxRuntime.jsx)(_StatusBar.default, {
            translucent: true,
            backgroundColor: this.props.statusBarBackgroundColor
          }), drawStatusBar && /*#__PURE__*/(0, _jsxRuntime.jsx)(_View.default, {
            style: [styles.statusBar, {
              backgroundColor: this.props.statusBarBackgroundColor
            }]
          }), this.props.children]
        });
        return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_AndroidDrawerLayoutNativeComponent.default, Object.assign({}, props, {
          ref: this._nativeRef,
          drawerBackgroundColor: drawerBackgroundColor,
          drawerWidth: this.props.drawerWidth,
          drawerPosition: this.props.drawerPosition,
          drawerLockMode: this.props.drawerLockMode,
          style: [styles.base, this.props.style],
          onDrawerSlide: this._onDrawerSlide,
          onDrawerOpen: this._onDrawerOpen,
          onDrawerClose: this._onDrawerClose,
          onDrawerStateChanged: this._onDrawerStateChanged,
          children: [childrenWrapper, drawerViewWrapper]
        }));
      }
    }, {
      key: "openDrawer",
      value: function openDrawer() {
        _AndroidDrawerLayoutNativeComponent.Commands.openDrawer((0, _nullthrows.default)(this._nativeRef.current));
      }
    }, {
      key: "closeDrawer",
      value: function closeDrawer() {
        _AndroidDrawerLayoutNativeComponent.Commands.closeDrawer((0, _nullthrows.default)(this._nativeRef.current));
      }
    }, {
      key: "blur",
      value: function blur() {
        (0, _nullthrows.default)(this._nativeRef.current).blur();
      }
    }, {
      key: "focus",
      value: function focus() {
        (0, _nullthrows.default)(this._nativeRef.current).focus();
      }
    }, {
      key: "measure",
      value: function measure(callback) {
        (0, _nullthrows.default)(this._nativeRef.current).measure(callback);
      }
    }, {
      key: "measureInWindow",
      value: function measureInWindow(callback) {
        (0, _nullthrows.default)(this._nativeRef.current).measureInWindow(callback);
      }
    }, {
      key: "measureLayout",
      value: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
        (0, _nullthrows.default)(this._nativeRef.current).measureLayout(relativeToNativeNode, onSuccess, onFail);
      }
    }, {
      key: "setNativeProps",
      value: function setNativeProps(nativeProps) {
        (0, _nullthrows.default)(this._nativeRef.current).setNativeProps(nativeProps);
      }
    }], [{
      key: "positions",
      get: function get() {
        console.warn('Setting DrawerLayoutAndroid drawerPosition using `DrawerLayoutAndroid.positions` is deprecated. Instead pass the string value "left" or "right"');
        return {
          Left: 'left',
          Right: 'right'
        };
      }
    }]);
  }(React.Component);
  var styles = _StyleSheet.default.create({
    base: {
      flex: 1,
      elevation: 16
    },
    mainSubview: {
      position: 'absolute',
      top: 0,
      left: 0,
      right: 0,
      bottom: 0
    },
    drawerSubview: {
      position: 'absolute',
      top: 0,
      bottom: 0
    },
    statusBar: {
      height: _StatusBar.default.currentHeight
    },
    drawerStatusBar: {
      position: 'absolute',
      top: 0,
      left: 0,
      right: 0,
      height: _StatusBar.default.currentHeight,
      backgroundColor: 'rgba(0, 0, 0, 0.251)'
    }
  });
  var _default = exports.default = DrawerLayoutAndroid;
},403,[1,203,12,13,23,25,28,253,383,404,248,409,45,119,251]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _processColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _NativeStatusBarManagerAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _NativeStatusBarManagerIOS = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));
  var _StatusBar, _NativeStatusBarManag;
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  function mergePropsStack(propsStack, defaultValues) {
    return propsStack.reduce(function (prev, cur) {
      for (var prop in cur) {
        if (cur[prop] != null) {
          prev[prop] = cur[prop];
        }
      }
      return prev;
    }, Object.assign({}, defaultValues));
  }
  function createStackEntry(props) {
    var _props$animated, _props$showHideTransi;
    var animated = (_props$animated = props.animated) != null ? _props$animated : false;
    var showHideTransition = (_props$showHideTransi = props.showHideTransition) != null ? _props$showHideTransi : 'fade';
    return {
      backgroundColor: props.backgroundColor != null ? {
        value: props.backgroundColor,
        animated: animated
      } : null,
      barStyle: props.barStyle != null ? {
        value: props.barStyle,
        animated: animated
      } : null,
      translucent: props.translucent,
      hidden: props.hidden != null ? {
        value: props.hidden,
        animated: animated,
        transition: showHideTransition
      } : null,
      networkActivityIndicatorVisible: props.networkActivityIndicatorVisible
    };
  }
  var StatusBar = /*#__PURE__*/function (_React$Component) {
    function StatusBar() {
      var _this;
      (0, _classCallCheck2.default)(this, StatusBar);
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _callSuper(this, StatusBar, [].concat(args));
      _this._stackEntry = null;
      return _this;
    }
    (0, _inherits2.default)(StatusBar, _React$Component);
    return (0, _createClass2.default)(StatusBar, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this._stackEntry = StatusBar.pushStackEntry(this.props);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this._stackEntry != null) {
          StatusBar.popStackEntry(this._stackEntry);
        }
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate() {
        if (this._stackEntry != null) {
          this._stackEntry = StatusBar.replaceStackEntry(this._stackEntry, this.props);
        }
      }
    }, {
      key: "render",
      value: function render() {
        return null;
      }
    }], [{
      key: "setHidden",
      value: function setHidden(hidden, animation) {
        animation = animation || 'none';
        StatusBar._defaultProps.hidden.value = hidden;
        if (_Platform.default.OS === 'ios') {
          _NativeStatusBarManagerIOS.default.setHidden(hidden, animation);
        } else if (_Platform.default.OS === 'android') {
          _NativeStatusBarManagerAndroid.default.setHidden(hidden);
        }
      }
    }, {
      key: "setBarStyle",
      value: function setBarStyle(style, animated) {
        animated = animated || false;
        StatusBar._defaultProps.barStyle.value = style;
        if (_Platform.default.OS === 'ios') {
          _NativeStatusBarManagerIOS.default.setStyle(style, animated);
        } else if (_Platform.default.OS === 'android') {
          _NativeStatusBarManagerAndroid.default.setStyle(style);
        }
      }
    }, {
      key: "setNetworkActivityIndicatorVisible",
      value: function setNetworkActivityIndicatorVisible(visible) {
        if (_Platform.default.OS !== 'ios') {
          console.warn('`setNetworkActivityIndicatorVisible` is only available on iOS');
          return;
        }
        StatusBar._defaultProps.networkActivityIndicatorVisible = visible;
        _NativeStatusBarManagerIOS.default.setNetworkActivityIndicatorVisible(visible);
      }
    }, {
      key: "setBackgroundColor",
      value: function setBackgroundColor(color, animated) {
        if (_Platform.default.OS !== 'android') {
          console.warn('`setBackgroundColor` is only available on Android');
          return;
        }
        animated = animated || false;
        StatusBar._defaultProps.backgroundColor.value = color;
        var processedColor = (0, _processColor.default)(color);
        if (processedColor == null) {
          console.warn(`\`StatusBar.setBackgroundColor\`: Color ${String(color)} parsed to null or undefined`);
          return;
        }
        (0, _invariant.default)(typeof processedColor === 'number', 'Unexpected color given for StatusBar.setBackgroundColor');
        _NativeStatusBarManagerAndroid.default.setColor(processedColor, animated);
      }
    }, {
      key: "setTranslucent",
      value: function setTranslucent(translucent) {
        if (_Platform.default.OS !== 'android') {
          console.warn('`setTranslucent` is only available on Android');
          return;
        }
        StatusBar._defaultProps.translucent = translucent;
        _NativeStatusBarManagerAndroid.default.setTranslucent(translucent);
      }
    }, {
      key: "pushStackEntry",
      value: function pushStackEntry(props) {
        var entry = createStackEntry(props);
        StatusBar._propsStack.push(entry);
        StatusBar._updatePropsStack();
        return entry;
      }
    }, {
      key: "popStackEntry",
      value: function popStackEntry(entry) {
        var index = StatusBar._propsStack.indexOf(entry);
        if (index !== -1) {
          StatusBar._propsStack.splice(index, 1);
        }
        StatusBar._updatePropsStack();
      }
    }, {
      key: "replaceStackEntry",
      value: function replaceStackEntry(entry, props) {
        var newEntry = createStackEntry(props);
        var index = StatusBar._propsStack.indexOf(entry);
        if (index !== -1) {
          StatusBar._propsStack[index] = newEntry;
        }
        StatusBar._updatePropsStack();
        return newEntry;
      }
    }]);
  }(React.Component);
  _StatusBar = StatusBar;
  StatusBar._propsStack = [];
  StatusBar._defaultProps = createStackEntry({
    backgroundColor: _Platform.default.OS === 'android' ? (_NativeStatusBarManag = _NativeStatusBarManagerAndroid.default.getConstants().DEFAULT_BACKGROUND_COLOR) != null ? _NativeStatusBarManag : 'black' : 'black',
    barStyle: 'default',
    translucent: false,
    hidden: false,
    networkActivityIndicatorVisible: false
  });
  StatusBar._updateImmediate = null;
  StatusBar._currentValues = null;
  StatusBar.currentHeight = _Platform.default.OS === 'android' ? _NativeStatusBarManagerAndroid.default.getConstants().HEIGHT : null;
  StatusBar._updatePropsStack = function () {
    clearImmediate(_StatusBar._updateImmediate);
    _StatusBar._updateImmediate = setImmediate(function () {
      var oldProps = _StatusBar._currentValues;
      var mergedProps = mergePropsStack(_StatusBar._propsStack, _StatusBar._defaultProps);
      if (_Platform.default.OS === 'ios') {
        var _oldProps$barStyle, _oldProps$hidden;
        if (!oldProps || ((_oldProps$barStyle = oldProps.barStyle) == null ? undefined : _oldProps$barStyle.value) !== mergedProps.barStyle.value) {
          _NativeStatusBarManagerIOS.default.setStyle(mergedProps.barStyle.value, mergedProps.barStyle.animated || false);
        }
        if (!oldProps || ((_oldProps$hidden = oldProps.hidden) == null ? undefined : _oldProps$hidden.value) !== mergedProps.hidden.value) {
          _NativeStatusBarManagerIOS.default.setHidden(mergedProps.hidden.value, mergedProps.hidden.animated ? mergedProps.hidden.transition : 'none');
        }
        if (!oldProps || oldProps.networkActivityIndicatorVisible !== mergedProps.networkActivityIndicatorVisible) {
          _NativeStatusBarManagerIOS.default.setNetworkActivityIndicatorVisible(mergedProps.networkActivityIndicatorVisible);
        }
      } else if (_Platform.default.OS === 'android') {
        var _oldProps$hidden2;
        _NativeStatusBarManagerAndroid.default.setStyle(mergedProps.barStyle.value);
        var processedColor = (0, _processColor.default)(mergedProps.backgroundColor.value);
        if (processedColor == null) {
          console.warn(`\`StatusBar._updatePropsStack\`: Color ${mergedProps.backgroundColor.value} parsed to null or undefined`);
        } else {
          (0, _invariant.default)(typeof processedColor === 'number', 'Unexpected color given in StatusBar._updatePropsStack');
          _NativeStatusBarManagerAndroid.default.setColor(processedColor, mergedProps.backgroundColor.animated);
        }
        if (!oldProps || ((_oldProps$hidden2 = oldProps.hidden) == null ? undefined : _oldProps$hidden2.value) !== mergedProps.hidden.value) {
          _NativeStatusBarManagerAndroid.default.setHidden(mergedProps.hidden.value);
        }
        if (!oldProps || oldProps.translucent !== mergedProps.translucent || mergedProps.translucent) {
          _NativeStatusBarManagerAndroid.default.setTranslucent(mergedProps.translucent);
        }
      }
      _StatusBar._currentValues = mergedProps;
    });
  };
  var _default = exports.default = StatusBar;
},404,[1,12,13,23,25,28,89,33,405,407,20,119]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeStatusBarManagerAndroid = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeStatusBarManagerAndroid).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeStatusBarManagerAndroid[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeStatusBarManagerAndroid[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeStatusBarManagerAndroid.default;
},405,[406]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var NativeModule = TurboModuleRegistry.getEnforcing('StatusBarManager');
  var constants = null;
  var NativeStatusBarManager = {
    getConstants: function getConstants() {
      if (constants == null) {
        constants = NativeModule.getConstants();
      }
      return constants;
    },
    setColor: function setColor(color, animated) {
      NativeModule.setColor(color, animated);
    },
    setTranslucent: function setTranslucent(translucent) {
      NativeModule.setTranslucent(translucent);
    },
    setStyle: function setStyle(statusBarStyle) {
      NativeModule.setStyle(statusBarStyle);
    },
    setHidden: function setHidden(hidden) {
      NativeModule.setHidden(hidden);
    }
  };
  var _default = exports.default = NativeStatusBarManager;
},406,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeStatusBarManagerIOS = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeStatusBarManagerIOS).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeStatusBarManagerIOS[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeStatusBarManagerIOS[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeStatusBarManagerIOS.default;
},407,[408]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var NativeModule = TurboModuleRegistry.getEnforcing('StatusBarManager');
  var constants = null;
  var NativeStatusBarManager = {
    getConstants: function getConstants() {
      if (constants == null) {
        constants = NativeModule.getConstants();
      }
      return constants;
    },
    getHeight: function getHeight(callback) {
      NativeModule.getHeight(callback);
    },
    setNetworkActivityIndicatorVisible: function setNetworkActivityIndicatorVisible(visible) {
      NativeModule.setNetworkActivityIndicatorVisible(visible);
    },
    addListener: function addListener(eventType) {
      NativeModule.addListener(eventType);
    },
    removeListeners: function removeListeners(count) {
      NativeModule.removeListeners(count);
    },
    setStyle: function setStyle(statusBarStyle, animated) {
      NativeModule.setStyle(statusBarStyle, animated);
    },
    setHidden: function setHidden(hidden, withAnimation) {
      NativeModule.setHidden(hidden, withAnimation);
    }
  };
  var _default = exports.default = NativeStatusBarManager;
},408,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _AndroidDrawerLayoutNativeComponent = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_AndroidDrawerLayoutNativeComponent).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _AndroidDrawerLayoutNativeComponent[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _AndroidDrawerLayoutNativeComponent[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _AndroidDrawerLayoutNativeComponent.default;
},409,[410]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.Commands = undefined;
  var _codegenNativeCommands = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var nativeComponentName = 'AndroidDrawerLayout';
  export var __INTERNAL_VIEW_CONFIG = {
    uiViewClassName: "AndroidDrawerLayout",
    directEventTypes: {
      topDrawerSlide: {
        registrationName: "onDrawerSlide"
      },
      topDrawerStateChanged: {
        registrationName: "onDrawerStateChanged"
      },
      topDrawerOpen: {
        registrationName: "onDrawerOpen"
      },
      topDrawerClose: {
        registrationName: "onDrawerClose"
      }
    },
    validAttributes: Object.assign({
      keyboardDismissMode: true,
      drawerBackgroundColor: {
        process: _$$_REQUIRE(_dependencyMap[4]).default
      },
      drawerPosition: true,
      drawerWidth: true,
      drawerLockMode: true,
      statusBarBackgroundColor: {
        process: _$$_REQUIRE(_dependencyMap[4]).default
      }
    }, _$$_REQUIRE(_dependencyMap[5]).ConditionallyIgnoredEventHandlers({
      onDrawerSlide: true,
      onDrawerStateChanged: true,
      onDrawerOpen: true,
      onDrawerClose: true
    }))
  };
  export default _$$_REQUIRE(_dependencyMap[6]).get(nativeComponentName, function () {
    return __INTERNAL_VIEW_CONFIG;
  });
  export var Commands = {
    openDrawer: function openDrawer(ref) {
      _$$_REQUIRE(_dependencyMap[7]).dispatchCommand(ref, "openDrawer", []);
    },
    closeDrawer: function closeDrawer(ref) {
      _$$_REQUIRE(_dependencyMap[7]).dispatchCommand(ref, "closeDrawer", []);
    }
  };
},410,[1,125,279,119,89,124,86,57]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _View = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _flattenStyle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _StyleSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _Image = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[12]);
  var _excluded = ["children", "style", "imageStyle", "imageRef", "importantForAccessibility"];
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var ImageBackground = /*#__PURE__*/function (_React$Component) {
    function ImageBackground() {
      var _this;
      (0, _classCallCheck2.default)(this, ImageBackground);
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _callSuper(this, ImageBackground, [].concat(args));
      _this._viewRef = null;
      _this._captureRef = function (ref) {
        _this._viewRef = ref;
      };
      return _this;
    }
    (0, _inherits2.default)(ImageBackground, _React$Component);
    return (0, _createClass2.default)(ImageBackground, [{
      key: "setNativeProps",
      value: function setNativeProps(props) {
        var viewRef = this._viewRef;
        if (viewRef) {
          viewRef.setNativeProps(props);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
          children = _this$props.children,
          style = _this$props.style,
          imageStyle = _this$props.imageStyle,
          imageRef = _this$props.imageRef,
          importantForAccessibility = _this$props.importantForAccessibility,
          props = (0, _objectWithoutProperties2.default)(_this$props, _excluded);
        var flattenedStyle = (0, _flattenStyle.default)(style);
        return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_View.default, {
          accessibilityIgnoresInvertColors: true,
          importantForAccessibility: importantForAccessibility,
          style: style,
          ref: this._captureRef,
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_Image.default, Object.assign({}, props, {
            importantForAccessibility: importantForAccessibility,
            style: [_StyleSheet.default.absoluteFill, {
              width: flattenedStyle == null ? undefined : flattenedStyle.width,
              height: flattenedStyle == null ? undefined : flattenedStyle.height
            }, imageStyle],
            ref: imageRef
          })), children]
        });
      }
    }]);
  }(React.Component);
  var _default = exports.default = ImageBackground;
},411,[1,203,12,13,23,25,28,248,128,253,362,119,251]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _SafeAreaView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _StyleSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _useWindowDimensions2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _RCTInputAccessoryViewNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[6]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[7]);
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var InputAccessoryView = function InputAccessoryView(props) {
    var _useWindowDimensions = (0, _useWindowDimensions2.default)(),
      width = _useWindowDimensions.width;
    if (_Platform.default.OS === 'ios') {
      if (React.Children.count(props.children) === 0) {
        return null;
      }
      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_RCTInputAccessoryViewNativeComponent.default, {
        style: [props.style, styles.container],
        nativeID: props.nativeID,
        backgroundColor: props.backgroundColor,
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_SafeAreaView.default, {
          style: [styles.safeAreaView, {
            width: width
          }],
          children: props.children
        })
      });
    } else {
      console.warn('<InputAccessoryView> is only supported on iOS.');
      return null;
    }
  };
  var styles = _StyleSheet.default.create({
    container: {
      position: 'absolute'
    },
    safeAreaView: {
      flex: 1
    }
  });
  var _default = exports.default = InputAccessoryView;
},412,[1,413,253,33,416,417,119,251]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _View = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var exported = _Platform.default.select({
    ios: _$$_REQUIRE(_dependencyMap[4]).default,
    default: _View.default
  });
  var _default = exports.default = exported;
},413,[1,33,248,119,414]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _RCTSafeAreaViewNativeComponent = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_RCTSafeAreaViewNativeComponent).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _RCTSafeAreaViewNativeComponent[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _RCTSafeAreaViewNativeComponent[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _RCTSafeAreaViewNativeComponent.default;
},414,[415]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var nativeComponentName = 'RCTSafeAreaView';
  export var __INTERNAL_VIEW_CONFIG = {
    uiViewClassName: "RCTSafeAreaView",
    validAttributes: {}
  };
  export default _$$_REQUIRE(_dependencyMap[2]).get(nativeComponentName, function () {
    return __INTERNAL_VIEW_CONFIG;
  });
},415,[1,279,86]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = useWindowDimensions;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _Dimensions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _react = _$$_REQUIRE(_dependencyMap[3]);
  function useWindowDimensions() {
    var _useState = (0, _react.useState)(function () {
        return _Dimensions.default.get('window');
      }),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      dimensions = _useState2[0],
      setDimensions = _useState2[1];
    (0, _react.useEffect)(function () {
      function handleChange(_ref) {
        var window = _ref.window;
        if (dimensions.width !== window.width || dimensions.height !== window.height || dimensions.scale !== window.scale || dimensions.fontScale !== window.fontScale) {
          setDimensions(window);
        }
      }
      var subscription = _Dimensions.default.addEventListener('change', handleChange);
      handleChange({
        window: _Dimensions.default.get('window')
      });
      return function () {
        subscription.remove();
      };
    }, [dimensions]);
    return dimensions;
  }
},416,[1,38,113,119]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _RCTInputAccessoryViewNativeComponent = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_RCTInputAccessoryViewNativeComponent).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _RCTInputAccessoryViewNativeComponent[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _RCTInputAccessoryViewNativeComponent[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _RCTInputAccessoryViewNativeComponent.default;
},417,[418]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var nativeComponentName = 'RCTInputAccessoryView';
  export var __INTERNAL_VIEW_CONFIG = {
    uiViewClassName: "RCTInputAccessoryView",
    validAttributes: {
      backgroundColor: {
        process: _$$_REQUIRE(_dependencyMap[2]).default
      }
    }
  };
  export default _$$_REQUIRE(_dependencyMap[3]).get(nativeComponentName, function () {
    return __INTERNAL_VIEW_CONFIG;
  });
},418,[1,279,89,86]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _StyleSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _LayoutConformanceNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[4]);
  var _global;
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var isFabricUIManagerInstalled = ((_global = global) == null ? undefined : _global.nativeFabricUIManager) != null;
  function LayoutConformance(props) {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_LayoutConformanceNativeComponent.default, Object.assign({}, props, {
      style: styles.container
    }));
  }
  function UnimplementedLayoutConformance(props) {
    return props.children;
  }
  var _default = exports.default = isFabricUIManagerInstalled ? LayoutConformance : UnimplementedLayoutConformance;
  var styles = _StyleSheet.default.create({
    container: {
      display: 'contents'
    }
  });
},419,[1,253,420,119,251]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var NativeComponentRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var LayoutConformanceNativeComponent = NativeComponentRegistry.get('LayoutConformance', function () {
    return {
      uiViewClassName: 'LayoutConformance',
      validAttributes: {
        mode: true
      }
    };
  });
  var _default = exports.default = LayoutConformanceNativeComponent;
},420,[86]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _asyncToGenerator2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _LayoutAnimation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _StyleSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  var _AccessibilityInfo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));
  var _View = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));
  var _Keyboard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[14]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[15]);
  var _excluded = ["behavior", "children", "contentContainerStyle", "enabled", "keyboardVerticalOffset", "style", "onLayout"];
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var KeyboardAvoidingView = /*#__PURE__*/function (_React$Component) {
    function KeyboardAvoidingView(props) {
      var _this;
      (0, _classCallCheck2.default)(this, KeyboardAvoidingView);
      _this = _callSuper(this, KeyboardAvoidingView, [props]);
      _this._frame = null;
      _this._keyboardEvent = null;
      _this._subscriptions = [];
      _this._initialFrameHeight = 0;
      _this._bottom = 0;
      _this._onKeyboardChange = function (event) {
        _this._keyboardEvent = event;
        _this._updateBottomIfNecessary();
      };
      _this._onKeyboardHide = function (event) {
        _this._keyboardEvent = null;
        _this._updateBottomIfNecessary();
      };
      _this._onLayout = /*#__PURE__*/function () {
        var _ref = (0, _asyncToGenerator2.default)(function* (event) {
          event.persist();
          var oldFrame = _this._frame;
          _this._frame = event.nativeEvent.layout;
          if (!_this._initialFrameHeight) {
            _this._initialFrameHeight = _this._frame.height;
          }
          if (!oldFrame || oldFrame.height !== _this._frame.height) {
            yield _this._updateBottomIfNecessary();
          }
          if (_this.props.onLayout) {
            _this.props.onLayout(event);
          }
        });
        return function (_x) {
          return _ref.apply(this, arguments);
        };
      }();
      _this._setBottom = function (value) {
        var _this$props$enabled;
        var enabled = (_this$props$enabled = _this.props.enabled) != null ? _this$props$enabled : true;
        _this._bottom = value;
        if (enabled) {
          _this.setState({
            bottom: value
          });
        }
      };
      _this._updateBottomIfNecessary = /*#__PURE__*/(0, _asyncToGenerator2.default)(function* () {
        var _this$props$enabled2;
        if (_this._keyboardEvent == null) {
          _this._setBottom(0);
          return;
        }
        var _this$_keyboardEvent = _this._keyboardEvent,
          duration = _this$_keyboardEvent.duration,
          easing = _this$_keyboardEvent.easing,
          endCoordinates = _this$_keyboardEvent.endCoordinates;
        var height = yield _this._relativeKeyboardHeight(endCoordinates);
        if (_this._bottom === height) {
          return;
        }
        _this._setBottom(height);
        var enabled = (_this$props$enabled2 = _this.props.enabled) != null ? _this$props$enabled2 : true;
        if (enabled && duration && easing) {
          _LayoutAnimation.default.configureNext({
            duration: duration > 10 ? duration : 10,
            update: {
              duration: duration > 10 ? duration : 10,
              type: _LayoutAnimation.default.Types[easing] || 'keyboard'
            }
          });
        }
      });
      _this.state = {
        bottom: 0
      };
      _this.viewRef = React.createRef();
      return _this;
    }
    (0, _inherits2.default)(KeyboardAvoidingView, _React$Component);
    return (0, _createClass2.default)(KeyboardAvoidingView, [{
      key: "_relativeKeyboardHeight",
      value: function () {
        var _relativeKeyboardHeight2 = (0, _asyncToGenerator2.default)(function* (keyboardFrame) {
          var _this$props$keyboardV;
          var frame = this._frame;
          if (!frame || !keyboardFrame) {
            return 0;
          }
          if (_Platform.default.OS === 'ios' && keyboardFrame.screenY === 0 && (yield _AccessibilityInfo.default.prefersCrossFadeTransitions())) {
            return 0;
          }
          var keyboardY = keyboardFrame.screenY - ((_this$props$keyboardV = this.props.keyboardVerticalOffset) != null ? _this$props$keyboardV : 0);
          if (this.props.behavior === 'height') {
            return Math.max(this.state.bottom + frame.y + frame.height - keyboardY, 0);
          }
          return Math.max(frame.y + frame.height - keyboardY, 0);
        });
        function _relativeKeyboardHeight(_x2) {
          return _relativeKeyboardHeight2.apply(this, arguments);
        }
        return _relativeKeyboardHeight;
      }()
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(_, prevState) {
        var _this$props$enabled3;
        var enabled = (_this$props$enabled3 = this.props.enabled) != null ? _this$props$enabled3 : true;
        if (enabled && this._bottom !== prevState.bottom) {
          this.setState({
            bottom: this._bottom
          });
        }
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        if (!_Keyboard.default.isVisible()) {
          this._keyboardEvent = null;
          this._setBottom(0);
        }
        if (_Platform.default.OS === 'ios') {
          this._subscriptions = [_Keyboard.default.addListener('keyboardWillHide', this._onKeyboardHide), _Keyboard.default.addListener('keyboardWillShow', this._onKeyboardChange)];
        } else {
          this._subscriptions = [_Keyboard.default.addListener('keyboardDidHide', this._onKeyboardChange), _Keyboard.default.addListener('keyboardDidShow', this._onKeyboardChange)];
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this._subscriptions.forEach(function (subscription) {
          subscription.remove();
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
          behavior = _this$props.behavior,
          children = _this$props.children,
          contentContainerStyle = _this$props.contentContainerStyle,
          _this$props$enabled4 = _this$props.enabled,
          enabled = _this$props$enabled4 === undefined ? true : _this$props$enabled4,
          _this$props$keyboardV2 = _this$props.keyboardVerticalOffset,
          keyboardVerticalOffset = _this$props$keyboardV2 === undefined ? 0 : _this$props$keyboardV2,
          style = _this$props.style,
          onLayout = _this$props.onLayout,
          props = (0, _objectWithoutProperties2.default)(_this$props, _excluded);
        var bottomHeight = enabled === true ? this.state.bottom : 0;
        switch (behavior) {
          case 'height':
            var heightStyle;
            if (this._frame != null && this.state.bottom > 0) {
              heightStyle = {
                height: this._initialFrameHeight - bottomHeight,
                flex: 0
              };
            }
            return /*#__PURE__*/(0, _jsxRuntime.jsx)(_View.default, Object.assign({
              ref: this.viewRef,
              style: _StyleSheet.default.compose(style, heightStyle),
              onLayout: this._onLayout
            }, props, {
              children: children
            }));
          case 'position':
            return /*#__PURE__*/(0, _jsxRuntime.jsx)(_View.default, Object.assign({
              ref: this.viewRef,
              style: style,
              onLayout: this._onLayout
            }, props, {
              children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_View.default, {
                style: _StyleSheet.default.compose(contentContainerStyle, {
                  bottom: bottomHeight
                }),
                children: children
              })
            }));
          case 'padding':
            return /*#__PURE__*/(0, _jsxRuntime.jsx)(_View.default, Object.assign({
              ref: this.viewRef,
              style: _StyleSheet.default.compose(style, {
                paddingBottom: bottomHeight
              }),
              onLayout: this._onLayout
            }, props, {
              children: children
            }));
          default:
            return /*#__PURE__*/(0, _jsxRuntime.jsx)(_View.default, Object.assign({
              ref: this.viewRef,
              onLayout: this._onLayout,
              style: style
            }, props, {
              children: children
            }));
        }
      }
    }]);
  }(React.Component);
  var _default = exports.default = KeyboardAvoidingView;
},421,[1,203,363,12,13,23,25,28,385,253,33,21,248,384,119,251]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _NativeEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _ModalInjection = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _NativeModalManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _RCTModalHostViewNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  var _virtualizedLists = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));
  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[13]);
  var _ModalInjection$unsta;
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var VirtualizedListContextResetter = _virtualizedLists.default.VirtualizedListContextResetter;
  var ModalEventEmitter = null;
  var uniqueModalIdentifier = 0;
  var Modal = /*#__PURE__*/function (_React$Component) {
    function Modal(props) {
      var _this;
      (0, _classCallCheck2.default)(this, Modal);
      _this = _callSuper(this, Modal, [props]);
      _this._identifier = uniqueModalIdentifier++;
      _this.state = {
        isRendered: props.visible === true
      };
      return _this;
    }
    (0, _inherits2.default)(Modal, _React$Component);
    return (0, _createClass2.default)(Modal, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this._eventSubscription) {
          this._eventSubscription.remove();
        }
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        if (prevProps.visible === false && this.props.visible === true) {
          this.setState({
            isRendered: true
          });
        }
      }
    }, {
      key: "_shouldShowModal",
      value: function _shouldShowModal() {
        return this.props.visible === true;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props$backdropC,
          _this3 = this;
        if (!this._shouldShowModal()) {
          return null;
        }
        var containerStyles = {
          backgroundColor: this.props.transparent === true ? 'transparent' : (_this$props$backdropC = this.props.backdropColor) != null ? _this$props$backdropC : 'white'
        };
        var animationType = this.props.animationType || 'none';
        var presentationStyle = this.props.presentationStyle;
        if (!presentationStyle) {
          presentationStyle = 'fullScreen';
          if (this.props.transparent === true) {
            presentationStyle = 'overFullScreen';
          }
        }
        var innerChildren = this.props.children;
        var onDismiss = function onDismiss() {};
        return /*#__PURE__*/(0, _jsxRuntime.jsx)(_RCTModalHostViewNativeComponent.default, {
          animationType: animationType,
          presentationStyle: presentationStyle,
          transparent: this.props.transparent,
          hardwareAccelerated: this.props.hardwareAccelerated,
          onRequestClose: this.props.onRequestClose,
          onShow: this.props.onShow,
          onDismiss: onDismiss,
          visible: this.props.visible,
          statusBarTranslucent: this.props.statusBarTranslucent,
          navigationBarTranslucent: this.props.navigationBarTranslucent,
          identifier: this._identifier,
          style: styles.modal,
          onStartShouldSetResponder: this._shouldSetResponder,
          supportedOrientations: this.props.supportedOrientations,
          onOrientationChange: this.props.onOrientationChange,
          testID: this.props.testID,
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(VirtualizedListContextResetter, {
            children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_$$_REQUIRE(_dependencyMap[14]).default.Context.Provider, {
              value: null,
              children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_$$_REQUIRE(_dependencyMap[15]).default, {
                style: [styles.container, containerStyles],
                collapsable: false,
                children: innerChildren
              })
            })
          })
        });
      }
    }, {
      key: "_shouldSetResponder",
      value: function _shouldSetResponder() {
        return true;
      }
    }]);
  }(_react.default.Component);
  Modal.defaultProps = {
    visible: true,
    hardwareAccelerated: false
  };
  Modal.contextType = _$$_REQUIRE(_dependencyMap[16]).RootTagContext;
  var side = _$$_REQUIRE(_dependencyMap[17]).default.getConstants().isRTL ? 'right' : 'left';
  var styles = _$$_REQUIRE(_dependencyMap[18]).default.create({
    modal: {
      position: 'absolute'
    },
    container: (0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)({}, side, 0), "top", 0), "flex", 1)
  });
  var ExportedModal = (_ModalInjection$unsta = _ModalInjection.default.unstable_Modal) != null ? _ModalInjection$unsta : Modal;
  var _default = exports.default = ExportedModal;
},422,[1,99,12,13,23,25,28,191,423,424,426,345,119,251,378,248,255,428,253]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = exports.default = {
    unstable_Modal: null
  };
},423,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeModalManager = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeModalManager).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeModalManager[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeModalManager[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeModalManager.default;
},424,[425]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.get('ModalManager');
},425,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _RCTModalHostViewNativeComponent = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_RCTModalHostViewNativeComponent).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _RCTModalHostViewNativeComponent[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _RCTModalHostViewNativeComponent[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _RCTModalHostViewNativeComponent.default;
},426,[427]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var nativeComponentName = 'RCTModalHostView';
  export var __INTERNAL_VIEW_CONFIG = {
    uiViewClassName: "RCTModalHostView",
    directEventTypes: {
      topRequestClose: {
        registrationName: "onRequestClose"
      },
      topShow: {
        registrationName: "onShow"
      },
      topDismiss: {
        registrationName: "onDismiss"
      },
      topOrientationChange: {
        registrationName: "onOrientationChange"
      }
    },
    validAttributes: Object.assign({
      animationType: true,
      presentationStyle: true,
      transparent: true,
      statusBarTranslucent: true,
      navigationBarTranslucent: true,
      hardwareAccelerated: true,
      visible: true,
      animated: true,
      supportedOrientations: true,
      identifier: true
    }, _$$_REQUIRE(_dependencyMap[2]).ConditionallyIgnoredEventHandlers({
      onRequestClose: true,
      onShow: true,
      onDismiss: true,
      onOrientationChange: true
    }))
  };
  export default _$$_REQUIRE(_dependencyMap[3]).get(nativeComponentName, function () {
    return __INTERNAL_VIEW_CONFIG;
  });
},427,[1,279,124,86]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _NativeI18nManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var i18nConstants = getI18nManagerConstants();
  function getI18nManagerConstants() {
    if (_NativeI18nManager.default) {
      var _NativeI18nManager$ge = _NativeI18nManager.default.getConstants(),
        isRTL = _NativeI18nManager$ge.isRTL,
        doLeftAndRightSwapInRTL = _NativeI18nManager$ge.doLeftAndRightSwapInRTL,
        localeIdentifier = _NativeI18nManager$ge.localeIdentifier;
      return {
        isRTL: isRTL,
        doLeftAndRightSwapInRTL: doLeftAndRightSwapInRTL,
        localeIdentifier: localeIdentifier
      };
    }
    return {
      isRTL: false,
      doLeftAndRightSwapInRTL: true
    };
  }
  var _default = exports.default = {
    getConstants: function getConstants() {
      return i18nConstants;
    },
    allowRTL: function allowRTL(shouldAllow) {
      if (!_NativeI18nManager.default) {
        return;
      }
      _NativeI18nManager.default.allowRTL(shouldAllow);
    },
    forceRTL: function forceRTL(shouldForce) {
      if (!_NativeI18nManager.default) {
        return;
      }
      _NativeI18nManager.default.forceRTL(shouldForce);
    },
    swapLeftAndRightInRTL: function swapLeftAndRightInRTL(flipStyles) {
      if (!_NativeI18nManager.default) {
        return;
      }
      _NativeI18nManager.default.swapLeftAndRightInRTL(flipStyles);
    },
    isRTL: i18nConstants.isRTL,
    doLeftAndRightSwapInRTL: i18nConstants.doLeftAndRightSwapInRTL
  };
},428,[1,429]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeI18nManager = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeI18nManager).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeI18nManager[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeI18nManager[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeI18nManager.default;
},429,[430]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.get('I18nManager');
},430,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _usePressability = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _useMergeRefs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _View = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _useAndroidRippleForView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));
  var React = _react;
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[8]);
  var _excluded = ["accessible", "accessibilityState", "aria-live", "android_disableSound", "android_ripple", "aria-busy", "aria-checked", "aria-disabled", "aria-expanded", "aria-label", "aria-selected", "cancelable", "children", "delayHoverIn", "delayHoverOut", "delayLongPress", "disabled", "focusable", "hitSlop", "onHoverIn", "onHoverOut", "onLongPress", "onPress", "onPressIn", "onPressOut", "pressRetentionOffset", "style", "testOnly_pressed", "unstable_pressDelay"];
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function Pressable(props, forwardedRef) {
    var _props$ariaValuemax, _props$accessibilityV, _props$ariaValuemin, _props$accessibilityV2, _props$ariaValuenow, _props$accessibilityV3, _props$ariaValuetext, _props$accessibilityV4, _restProps$ariaModal;
    var accessible = props.accessible,
      accessibilityState = props.accessibilityState,
      ariaLive = props['aria-live'],
      android_disableSound = props.android_disableSound,
      android_ripple = props.android_ripple,
      ariaBusy = props['aria-busy'],
      ariaChecked = props['aria-checked'],
      ariaDisabled = props['aria-disabled'],
      ariaExpanded = props['aria-expanded'],
      ariaLabel = props['aria-label'],
      ariaSelected = props['aria-selected'],
      cancelable = props.cancelable,
      children = props.children,
      delayHoverIn = props.delayHoverIn,
      delayHoverOut = props.delayHoverOut,
      delayLongPress = props.delayLongPress,
      disabled = props.disabled,
      focusable = props.focusable,
      hitSlop = props.hitSlop,
      onHoverIn = props.onHoverIn,
      onHoverOut = props.onHoverOut,
      onLongPress = props.onLongPress,
      onPress = props.onPress,
      _onPressIn = props.onPressIn,
      _onPressOut = props.onPressOut,
      pressRetentionOffset = props.pressRetentionOffset,
      style = props.style,
      testOnly_pressed = props.testOnly_pressed,
      unstable_pressDelay = props.unstable_pressDelay,
      restProps = (0, _objectWithoutProperties2.default)(props, _excluded);
    var viewRef = (0, _react.useRef)(null);
    var mergedRef = (0, _useMergeRefs.default)(forwardedRef, viewRef);
    var android_rippleConfig = (0, _useAndroidRippleForView.default)(android_ripple, viewRef);
    var _usePressState = usePressState(testOnly_pressed === true),
      _usePressState2 = (0, _slicedToArray2.default)(_usePressState, 2),
      pressed = _usePressState2[0],
      setPressed = _usePressState2[1];
    var shouldUpdatePressed = typeof children === 'function' || typeof style === 'function';
    var _accessibilityState = {
      busy: ariaBusy != null ? ariaBusy : accessibilityState == null ? undefined : accessibilityState.busy,
      checked: ariaChecked != null ? ariaChecked : accessibilityState == null ? undefined : accessibilityState.checked,
      disabled: ariaDisabled != null ? ariaDisabled : accessibilityState == null ? undefined : accessibilityState.disabled,
      expanded: ariaExpanded != null ? ariaExpanded : accessibilityState == null ? undefined : accessibilityState.expanded,
      selected: ariaSelected != null ? ariaSelected : accessibilityState == null ? undefined : accessibilityState.selected
    };
    _accessibilityState = disabled != null ? Object.assign({}, _accessibilityState, {
      disabled: disabled
    }) : _accessibilityState;
    var accessibilityValue = {
      max: (_props$ariaValuemax = props['aria-valuemax']) != null ? _props$ariaValuemax : (_props$accessibilityV = props.accessibilityValue) == null ? undefined : _props$accessibilityV.max,
      min: (_props$ariaValuemin = props['aria-valuemin']) != null ? _props$ariaValuemin : (_props$accessibilityV2 = props.accessibilityValue) == null ? undefined : _props$accessibilityV2.min,
      now: (_props$ariaValuenow = props['aria-valuenow']) != null ? _props$ariaValuenow : (_props$accessibilityV3 = props.accessibilityValue) == null ? undefined : _props$accessibilityV3.now,
      text: (_props$ariaValuetext = props['aria-valuetext']) != null ? _props$ariaValuetext : (_props$accessibilityV4 = props.accessibilityValue) == null ? undefined : _props$accessibilityV4.text
    };
    var accessibilityLiveRegion = ariaLive === 'off' ? 'none' : ariaLive != null ? ariaLive : props.accessibilityLiveRegion;
    var accessibilityLabel = ariaLabel != null ? ariaLabel : props.accessibilityLabel;
    var restPropsWithDefaults = Object.assign({}, restProps, android_rippleConfig == null ? undefined : android_rippleConfig.viewProps, {
      accessible: accessible !== false,
      accessibilityViewIsModal: (_restProps$ariaModal = restProps['aria-modal']) != null ? _restProps$ariaModal : restProps.accessibilityViewIsModal,
      accessibilityLiveRegion: accessibilityLiveRegion,
      accessibilityLabel: accessibilityLabel,
      accessibilityState: _accessibilityState,
      focusable: focusable !== false,
      accessibilityValue: accessibilityValue,
      hitSlop: hitSlop
    });
    var config = (0, _react.useMemo)(function () {
      return {
        cancelable: cancelable,
        disabled: disabled,
        hitSlop: hitSlop,
        pressRectOffset: pressRetentionOffset,
        android_disableSound: android_disableSound,
        delayHoverIn: delayHoverIn,
        delayHoverOut: delayHoverOut,
        delayLongPress: delayLongPress,
        delayPressIn: unstable_pressDelay,
        onHoverIn: onHoverIn,
        onHoverOut: onHoverOut,
        onLongPress: onLongPress,
        onPress: onPress,
        onPressIn: function onPressIn(event) {
          if (android_rippleConfig != null) {
            android_rippleConfig.onPressIn(event);
          }
          shouldUpdatePressed && setPressed(true);
          if (_onPressIn != null) {
            _onPressIn(event);
          }
        },
        onPressMove: android_rippleConfig == null ? undefined : android_rippleConfig.onPressMove,
        onPressOut: function onPressOut(event) {
          if (android_rippleConfig != null) {
            android_rippleConfig.onPressOut(event);
          }
          shouldUpdatePressed && setPressed(false);
          if (_onPressOut != null) {
            _onPressOut(event);
          }
        }
      };
    }, [android_disableSound, android_rippleConfig, cancelable, delayHoverIn, delayHoverOut, delayLongPress, disabled, hitSlop, onHoverIn, onHoverOut, onLongPress, onPress, _onPressIn, _onPressOut, pressRetentionOffset, setPressed, shouldUpdatePressed, unstable_pressDelay]);
    var eventHandlers = (0, _usePressability.default)(config);
    return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_View.default, Object.assign({}, restPropsWithDefaults, eventHandlers, {
      ref: mergedRef,
      style: typeof style === 'function' ? style({
        pressed: pressed
      }) : style,
      collapsable: false,
      children: [typeof children === 'function' ? children({
        pressed: pressed
      }) : children, null]
    }));
  }
  function usePressState(forcePressed) {
    var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      pressed = _useState2[0],
      setPressed = _useState2[1];
    return [pressed || forcePressed, setPressed];
  }
  var MemoedPressable = React.memo(React.forwardRef(Pressable));
  MemoedPressable.displayName = 'Pressable';
  var _default = exports.default = MemoedPressable;
},431,[1,38,203,287,334,248,432,119,251]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = useAndroidRippleForView;
  var _processColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _View = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[5]));
  var React = _react;
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function useAndroidRippleForView(rippleConfig, viewRef) {
    var _ref = rippleConfig != null ? rippleConfig : {},
      color = _ref.color,
      borderless = _ref.borderless,
      radius = _ref.radius,
      foreground = _ref.foreground;
    return (0, _react.useMemo)(function () {
      if (_Platform.default.OS === 'android' && (color != null || borderless != null || radius != null)) {
        var processedColor = (0, _processColor.default)(color);
        (0, _invariant.default)(processedColor == null || typeof processedColor === 'number', 'Unexpected color given for Ripple color');
        var nativeRippleValue = {
          type: 'RippleAndroid',
          color: processedColor,
          borderless: borderless === true,
          rippleRadius: radius
        };
        return {
          viewProps: foreground === true ? {
            nativeForegroundAndroid: nativeRippleValue
          } : {
            nativeBackgroundAndroid: nativeRippleValue
          },
          onPressIn: function onPressIn(event) {
            var view = viewRef.current;
            if (view != null) {
              var _event$nativeEvent$lo, _event$nativeEvent$lo2;
              _$$_REQUIRE(_dependencyMap[6]).Commands.hotspotUpdate(view, (_event$nativeEvent$lo = event.nativeEvent.locationX) != null ? _event$nativeEvent$lo : 0, (_event$nativeEvent$lo2 = event.nativeEvent.locationY) != null ? _event$nativeEvent$lo2 : 0);
              _$$_REQUIRE(_dependencyMap[6]).Commands.setPressed(view, true);
            }
          },
          onPressMove: function onPressMove(event) {
            var view = viewRef.current;
            if (view != null) {
              var _event$nativeEvent$lo3, _event$nativeEvent$lo4;
              _$$_REQUIRE(_dependencyMap[6]).Commands.hotspotUpdate(view, (_event$nativeEvent$lo3 = event.nativeEvent.locationX) != null ? _event$nativeEvent$lo3 : 0, (_event$nativeEvent$lo4 = event.nativeEvent.locationY) != null ? _event$nativeEvent$lo4 : 0);
            }
          },
          onPressOut: function onPressOut(event) {
            var view = viewRef.current;
            if (view != null) {
              _$$_REQUIRE(_dependencyMap[6]).Commands.setPressed(view, false);
            }
          }
        };
      }
      return null;
    }, [borderless, color, foreground, radius, viewRef]);
  }
},432,[1,89,33,248,20,119,250]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _StyleSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _useMergeRefs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _AndroidSwitchNativeComponent = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[6]));
  var _SwitchNativeComponent = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[9]);
  var _excluded = ["disabled", "ios_backgroundColor", "onChange", "onValueChange", "style", "thumbColor", "trackColor", "value"],
    _excluded2 = ["onTintColor", "tintColor"];
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var returnsFalse = function returnsFalse() {
    return false;
  };
  var returnsTrue = function returnsTrue() {
    return true;
  };
  var Switch = React.forwardRef(function Switch(props, forwardedRef) {
    var disabled = props.disabled,
      ios_backgroundColor = props.ios_backgroundColor,
      onChange = props.onChange,
      onValueChange = props.onValueChange,
      style = props.style,
      thumbColor = props.thumbColor,
      trackColor = props.trackColor,
      value = props.value,
      restProps = (0, _objectWithoutProperties2.default)(props, _excluded);
    var trackColorForFalse = trackColor == null ? undefined : trackColor.false;
    var trackColorForTrue = trackColor == null ? undefined : trackColor.true;
    var nativeSwitchRef = React.useRef(null);
    var ref = (0, _useMergeRefs.default)(nativeSwitchRef, forwardedRef);
    var _React$useState = React.useState({
        value: null
      }),
      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),
      native = _React$useState2[0],
      setNative = _React$useState2[1];
    var handleChange = function handleChange(event) {
      onChange == null ? undefined : onChange(event);
      onValueChange == null ? undefined : onValueChange(event.nativeEvent.value);
      setNative({
        value: event.nativeEvent.value
      });
    };
    React.useLayoutEffect(function () {
      var _nativeSwitchRef$curr;
      var jsValue = value === true;
      var shouldUpdateNativeSwitch = native.value != null && native.value !== jsValue;
      if (shouldUpdateNativeSwitch && ((_nativeSwitchRef$curr = nativeSwitchRef.current) == null ? undefined : _nativeSwitchRef$curr.setNativeProps) != null) {
        if (_Platform.default.OS === 'android') {
          _AndroidSwitchNativeComponent.Commands.setNativeValue(nativeSwitchRef.current, jsValue);
        } else {
          _SwitchNativeComponent.Commands.setValue(nativeSwitchRef.current, jsValue);
        }
      }
    }, [value, native]);
    if (_Platform.default.OS === 'android') {
      var _props$accessibilityR;
      var onTintColor = restProps.onTintColor,
        tintColor = restProps.tintColor,
        androidProps = (0, _objectWithoutProperties2.default)(restProps, _excluded2);
      var accessibilityState = androidProps.accessibilityState;
      var _disabled = disabled != null ? disabled : accessibilityState == null ? undefined : accessibilityState.disabled;
      var _accessibilityState = _disabled !== (accessibilityState == null ? undefined : accessibilityState.disabled) ? Object.assign({}, accessibilityState, {
        disabled: _disabled
      }) : accessibilityState;
      var platformProps = {
        accessibilityState: _accessibilityState,
        enabled: _disabled !== true,
        on: value === true,
        style: style,
        thumbTintColor: thumbColor,
        trackColorForFalse: trackColorForFalse,
        trackColorForTrue: trackColorForTrue,
        trackTintColor: value === true ? trackColorForTrue : trackColorForFalse
      };
      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_AndroidSwitchNativeComponent.default, Object.assign({}, androidProps, platformProps, {
        accessibilityRole: (_props$accessibilityR = props.accessibilityRole) != null ? _props$accessibilityR : 'switch',
        onChange: handleChange,
        onResponderTerminationRequest: returnsFalse,
        onStartShouldSetResponder: returnsTrue,
        ref: ref
      }));
    } else {
      var _props$accessibilityR2;
      var _platformProps = {
        disabled: disabled,
        onTintColor: trackColorForTrue,
        style: _StyleSheet.default.compose({
          height: 31,
          width: 51
        }, _StyleSheet.default.compose(style, ios_backgroundColor == null ? null : {
          backgroundColor: ios_backgroundColor,
          borderRadius: 16
        })),
        thumbTintColor: thumbColor,
        tintColor: trackColorForFalse,
        value: value === true
      };
      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_SwitchNativeComponent.default, Object.assign({}, restProps, _platformProps, {
        accessibilityRole: (_props$accessibilityR2 = props.accessibilityRole) != null ? _props$accessibilityR2 : 'switch',
        onChange: handleChange,
        onResponderTerminationRequest: returnsFalse,
        onStartShouldSetResponder: returnsTrue,
        ref: ref
      }));
    }
  });
  var _default = exports.default = Switch;
},433,[1,38,203,253,33,334,434,436,119,251]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _AndroidSwitchNativeComponent = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_AndroidSwitchNativeComponent).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _AndroidSwitchNativeComponent[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _AndroidSwitchNativeComponent[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _AndroidSwitchNativeComponent.default;
},434,[435]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.Commands = undefined;
  var _codegenNativeCommands = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var nativeComponentName = 'AndroidSwitch';
  export var __INTERNAL_VIEW_CONFIG = {
    uiViewClassName: "AndroidSwitch",
    bubblingEventTypes: {
      topChange: {
        phasedRegistrationNames: {
          captured: "onChangeCapture",
          bubbled: "onChange"
        }
      }
    },
    validAttributes: Object.assign({
      disabled: true,
      enabled: true,
      thumbColor: {
        process: _$$_REQUIRE(_dependencyMap[4]).default
      },
      trackColorForFalse: {
        process: _$$_REQUIRE(_dependencyMap[4]).default
      },
      trackColorForTrue: {
        process: _$$_REQUIRE(_dependencyMap[4]).default
      },
      value: true,
      on: true,
      thumbTintColor: {
        process: _$$_REQUIRE(_dependencyMap[4]).default
      },
      trackTintColor: {
        process: _$$_REQUIRE(_dependencyMap[4]).default
      }
    }, _$$_REQUIRE(_dependencyMap[5]).ConditionallyIgnoredEventHandlers({
      onChange: true
    }))
  };
  export default _$$_REQUIRE(_dependencyMap[6]).get(nativeComponentName, function () {
    return __INTERNAL_VIEW_CONFIG;
  });
  export var Commands = {
    setNativeValue: function setNativeValue(ref, value) {
      _$$_REQUIRE(_dependencyMap[7]).dispatchCommand(ref, "setNativeValue", [value]);
    }
  };
},435,[1,125,279,119,89,124,86,57]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _SwitchNativeComponent = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_SwitchNativeComponent).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _SwitchNativeComponent[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _SwitchNativeComponent[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _SwitchNativeComponent.default;
},436,[437]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.Commands = undefined;
  var _codegenNativeCommands = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var nativeComponentName = 'RCTSwitch';
  export var __INTERNAL_VIEW_CONFIG = {
    uiViewClassName: "RCTSwitch",
    bubblingEventTypes: {
      topChange: {
        phasedRegistrationNames: {
          captured: "onChangeCapture",
          bubbled: "onChange"
        }
      }
    },
    validAttributes: Object.assign({
      disabled: true,
      value: true,
      tintColor: {
        process: _$$_REQUIRE(_dependencyMap[4]).default
      },
      onTintColor: {
        process: _$$_REQUIRE(_dependencyMap[4]).default
      },
      thumbTintColor: {
        process: _$$_REQUIRE(_dependencyMap[4]).default
      },
      thumbColor: {
        process: _$$_REQUIRE(_dependencyMap[4]).default
      },
      trackColorForFalse: {
        process: _$$_REQUIRE(_dependencyMap[4]).default
      },
      trackColorForTrue: {
        process: _$$_REQUIRE(_dependencyMap[4]).default
      }
    }, _$$_REQUIRE(_dependencyMap[5]).ConditionallyIgnoredEventHandlers({
      onChange: true
    }))
  };
  export default _$$_REQUIRE(_dependencyMap[6]).get(nativeComponentName, function () {
    return __INTERNAL_VIEW_CONFIG;
  });
  export var Commands = {
    setValue: function setValue(ref, value) {
      _$$_REQUIRE(_dependencyMap[7]).dispatchCommand(ref, "setValue", [value]);
    }
  };
},437,[1,125,279,119,89,124,86,57]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var ReactNativeFeatureFlags = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));
  var _usePressability2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _flattenStyle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _StyleSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _TextAncestor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _useMergeRefs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  var _TextInputState = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));
  var _nullthrows = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));
  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[14]));
  var React = _react;
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[15]);
  var _excluded = ["aria-busy", "aria-checked", "aria-disabled", "aria-expanded", "aria-selected", "accessibilityState", "id", "tabIndex", "selection", "selectionColor", "selectionHandleColor", "cursorColor"],
    _excluded2 = ["onBlur", "onFocus"],
    _excluded3 = ["allowFontScaling", "rejectResponderTermination", "underlineColorAndroid", "autoComplete", "textContentType", "readOnly", "editable", "enterKeyHint", "returnKeyType", "inputMode", "showSoftInputOnFocus", "keyboardType"];
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var AndroidTextInput;
  var AndroidTextInputCommands;
  var RCTSinglelineTextInputView;
  var RCTSinglelineTextInputNativeCommands;
  var RCTMultilineTextInputView;
  var RCTMultilineTextInputNativeCommands;
  if (_Platform.default.OS === 'android') {
    AndroidTextInput = _$$_REQUIRE(_dependencyMap[16]).default;
    AndroidTextInputCommands = _$$_REQUIRE(_dependencyMap[16]).Commands;
  } else if (_Platform.default.OS === 'ios') {
    RCTSinglelineTextInputView = _$$_REQUIRE(_dependencyMap[17]).default;
    RCTSinglelineTextInputNativeCommands = _$$_REQUIRE(_dependencyMap[17]).Commands;
    RCTMultilineTextInputView = _$$_REQUIRE(_dependencyMap[18]).default;
    RCTMultilineTextInputNativeCommands = _$$_REQUIRE(_dependencyMap[18]).Commands;
  }
  var emptyFunctionThatReturnsTrue = function emptyFunctionThatReturnsTrue() {
    return true;
  };
  function useTextInputStateSynchronization_STATE(_ref) {
    var props = _ref.props,
      mostRecentEventCount = _ref.mostRecentEventCount,
      selection = _ref.selection,
      inputRef = _ref.inputRef,
      text = _ref.text,
      viewCommands = _ref.viewCommands;
    var _useState = (0, _react.useState)(props.value),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      lastNativeText = _useState2[0],
      setLastNativeText = _useState2[1];
    var _useState3 = (0, _react.useState)({
        selection: {
          start: -1,
          end: -1
        },
        mostRecentEventCount: mostRecentEventCount
      }),
      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
      lastNativeSelectionState = _useState4[0],
      setLastNativeSelection = _useState4[1];
    var lastNativeSelection = lastNativeSelectionState.selection;
    (0, _react.useLayoutEffect)(function () {
      var nativeUpdate = {};
      if (lastNativeText !== props.value && typeof props.value === 'string') {
        nativeUpdate.text = props.value;
        setLastNativeText(props.value);
      }
      if (selection && lastNativeSelection && (lastNativeSelection.start !== selection.start || lastNativeSelection.end !== selection.end)) {
        nativeUpdate.selection = selection;
        setLastNativeSelection({
          selection: selection,
          mostRecentEventCount: mostRecentEventCount
        });
      }
      if (Object.keys(nativeUpdate).length === 0) {
        return;
      }
      if (inputRef.current != null) {
        var _selection$start, _selection$end;
        viewCommands.setTextAndSelection(inputRef.current, mostRecentEventCount, text, (_selection$start = selection == null ? undefined : selection.start) != null ? _selection$start : -1, (_selection$end = selection == null ? undefined : selection.end) != null ? _selection$end : -1);
      }
    }, [mostRecentEventCount, inputRef, props.value, props.defaultValue, lastNativeText, selection, lastNativeSelection, text, viewCommands]);
    return {
      setLastNativeText: setLastNativeText,
      setLastNativeSelection: setLastNativeSelection
    };
  }
  function useTextInputStateSynchronization_REFS(_ref2) {
    var props = _ref2.props,
      mostRecentEventCount = _ref2.mostRecentEventCount,
      selection = _ref2.selection,
      inputRef = _ref2.inputRef,
      text = _ref2.text,
      viewCommands = _ref2.viewCommands;
    var lastNativeTextRef = (0, _react.useRef)(props.value);
    var lastNativeSelectionRef = (0, _react.useRef)({
      selection: {
        start: -1,
        end: -1
      },
      mostRecentEventCount: mostRecentEventCount
    });
    (0, _react.useLayoutEffect)(function () {
      var nativeUpdate = {};
      var lastNativeSelection = lastNativeSelectionRef.current.selection;
      if (lastNativeTextRef.current !== props.value && typeof props.value === 'string') {
        nativeUpdate.text = props.value;
        lastNativeTextRef.current = props.value;
      }
      if (selection && lastNativeSelection && (lastNativeSelection.start !== selection.start || lastNativeSelection.end !== selection.end)) {
        nativeUpdate.selection = selection;
        lastNativeSelectionRef.current = {
          selection: selection,
          mostRecentEventCount: mostRecentEventCount
        };
      }
      if (Object.keys(nativeUpdate).length === 0) {
        return;
      }
      if (inputRef.current != null) {
        var _selection$start2, _selection$end2;
        viewCommands.setTextAndSelection(inputRef.current, mostRecentEventCount, text, (_selection$start2 = selection == null ? undefined : selection.start) != null ? _selection$start2 : -1, (_selection$end2 = selection == null ? undefined : selection.end) != null ? _selection$end2 : -1);
      }
    }, [mostRecentEventCount, inputRef, props.value, props.defaultValue, selection, text, viewCommands]);
    return {
      setLastNativeText: function setLastNativeText(lastNativeText) {
        lastNativeTextRef.current = lastNativeText;
      },
      setLastNativeSelection: function setLastNativeSelection(lastNativeSelection) {
        lastNativeSelectionRef.current = lastNativeSelection;
      }
    };
  }
  function InternalTextInput(props) {
    var _propsSelection$end, _props$multiline;
    var ariaBusy = props['aria-busy'],
      ariaChecked = props['aria-checked'],
      ariaDisabled = props['aria-disabled'],
      ariaExpanded = props['aria-expanded'],
      ariaSelected = props['aria-selected'],
      accessibilityState = props.accessibilityState,
      id = props.id,
      tabIndex = props.tabIndex,
      propsSelection = props.selection,
      selectionColor = props.selectionColor,
      selectionHandleColor = props.selectionHandleColor,
      cursorColor = props.cursorColor,
      otherProps = (0, _objectWithoutProperties2.default)(props, _excluded);
    var inputRef = (0, _react.useRef)(null);
    var selection = propsSelection == null ? null : {
      start: propsSelection.start,
      end: (_propsSelection$end = propsSelection.end) != null ? _propsSelection$end : propsSelection.start
    };
    var text = typeof props.value === 'string' ? props.value : typeof props.defaultValue === 'string' ? props.defaultValue : undefined;
    var viewCommands = AndroidTextInputCommands || (props.multiline === true ? RCTMultilineTextInputNativeCommands : RCTSinglelineTextInputNativeCommands);
    var _useState5 = (0, _react.useState)(0),
      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),
      mostRecentEventCount = _useState6[0],
      setMostRecentEventCount = _useState6[1];
    var useTextInputStateSynchronization = ReactNativeFeatureFlags.useRefsForTextInputState() ? useTextInputStateSynchronization_REFS : useTextInputStateSynchronization_STATE;
    var _useTextInputStateSyn = useTextInputStateSynchronization({
        props: props,
        inputRef: inputRef,
        mostRecentEventCount: mostRecentEventCount,
        selection: selection,
        text: text,
        viewCommands: viewCommands
      }),
      setLastNativeText = _useTextInputStateSyn.setLastNativeText,
      setLastNativeSelection = _useTextInputStateSyn.setLastNativeSelection;
    (0, _react.useLayoutEffect)(function () {
      var inputRefValue = inputRef.current;
      if (inputRefValue != null) {
        _TextInputState.default.registerInput(inputRefValue);
        return function () {
          _TextInputState.default.unregisterInput(inputRefValue);
          if (_TextInputState.default.currentlyFocusedInput() === inputRefValue) {
            (0, _nullthrows.default)(inputRefValue).blur();
          }
        };
      }
    }, []);
    var setLocalRef = (0, _react.useCallback)(function (instance) {
      inputRef.current = instance;
      if (instance != null) {
        Object.assign(instance, {
          clear: function clear() {
            if (inputRef.current != null) {
              viewCommands.setTextAndSelection(inputRef.current, mostRecentEventCount, '', 0, 0);
            }
          },
          isFocused: function isFocused() {
            return _TextInputState.default.currentlyFocusedInput() === inputRef.current;
          },
          getNativeRef: function getNativeRef() {
            return inputRef.current;
          },
          setSelection: function setSelection(start, end) {
            if (inputRef.current != null) {
              viewCommands.setTextAndSelection(inputRef.current, mostRecentEventCount, null, start, end);
            }
          }
        });
      }
    }, [mostRecentEventCount, viewCommands]);
    var ref = (0, _useMergeRefs.default)(setLocalRef, props.forwardedRef);
    var _onChange = function _onChange(event) {
      var currentText = event.nativeEvent.text;
      props.onChange && props.onChange(event);
      props.onChangeText && props.onChangeText(currentText);
      if (inputRef.current == null) {
        return;
      }
      setLastNativeText(currentText);
      setMostRecentEventCount(event.nativeEvent.eventCount);
    };
    var _onSelectionChange = function _onSelectionChange(event) {
      props.onSelectionChange && props.onSelectionChange(event);
      if (inputRef.current == null) {
        return;
      }
      setLastNativeSelection({
        selection: event.nativeEvent.selection,
        mostRecentEventCount: mostRecentEventCount
      });
    };
    var _onFocus = function _onFocus(event) {
      _TextInputState.default.focusInput(inputRef.current);
      if (props.onFocus) {
        props.onFocus(event);
      }
    };
    var _onBlur = function _onBlur(event) {
      _TextInputState.default.blurInput(inputRef.current);
      if (props.onBlur) {
        props.onBlur(event);
      }
    };
    var _onScroll = function _onScroll(event) {
      props.onScroll && props.onScroll(event);
    };
    var textInput = null;
    var multiline = (_props$multiline = props.multiline) != null ? _props$multiline : false;
    var submitBehavior;
    if (props.submitBehavior != null) {
      if (!multiline && props.submitBehavior === 'newline') {
        submitBehavior = 'blurAndSubmit';
      } else {
        submitBehavior = props.submitBehavior;
      }
    } else if (multiline) {
      if (props.blurOnSubmit === true) {
        submitBehavior = 'blurAndSubmit';
      } else {
        submitBehavior = 'newline';
      }
    } else {
      if (props.blurOnSubmit !== false) {
        submitBehavior = 'blurAndSubmit';
      } else {
        submitBehavior = 'submit';
      }
    }
    var accessible = props.accessible !== false;
    var focusable = props.focusable !== false;
    var editable = props.editable,
      hitSlop = props.hitSlop,
      _onPress = props.onPress,
      onPressIn = props.onPressIn,
      onPressOut = props.onPressOut,
      rejectResponderTermination = props.rejectResponderTermination;
    var config = React.useMemo(function () {
      return {
        hitSlop: hitSlop,
        onPress: function onPress(event) {
          _onPress == null ? undefined : _onPress(event);
          if (editable !== false) {
            if (inputRef.current != null) {
              inputRef.current.focus();
            }
          }
        },
        onPressIn: onPressIn,
        onPressOut: onPressOut,
        cancelable: _Platform.default.OS === 'ios' ? !rejectResponderTermination : null
      };
    }, [editable, hitSlop, _onPress, onPressIn, onPressOut, rejectResponderTermination]);
    var caretHidden = props.caretHidden;
    if (_Platform.default.isTesting) {
      caretHidden = true;
    }
    var _usePressability = (0, _usePressability2.default)(config),
      onBlur = _usePressability.onBlur,
      onFocus = _usePressability.onFocus,
      eventHandlers = (0, _objectWithoutProperties2.default)(_usePressability, _excluded2);
    var _accessibilityState;
    if (accessibilityState != null || ariaBusy != null || ariaChecked != null || ariaDisabled != null || ariaExpanded != null || ariaSelected != null) {
      _accessibilityState = {
        busy: ariaBusy != null ? ariaBusy : accessibilityState == null ? undefined : accessibilityState.busy,
        checked: ariaChecked != null ? ariaChecked : accessibilityState == null ? undefined : accessibilityState.checked,
        disabled: ariaDisabled != null ? ariaDisabled : accessibilityState == null ? undefined : accessibilityState.disabled,
        expanded: ariaExpanded != null ? ariaExpanded : accessibilityState == null ? undefined : accessibilityState.expanded,
        selected: ariaSelected != null ? ariaSelected : accessibilityState == null ? undefined : accessibilityState.selected
      };
    }
    var _style = props.style;
    var flattenedStyle = (0, _flattenStyle.default)(props.style);
    if (flattenedStyle != null) {
      var overrides = null;
      if (typeof (flattenedStyle == null ? undefined : flattenedStyle.fontWeight) === 'number') {
        overrides = overrides || {};
        overrides.fontWeight = flattenedStyle.fontWeight.toString();
      }
      if (flattenedStyle.verticalAlign != null) {
        overrides = overrides || {};
        overrides.textAlignVertical = verticalAlignToTextAlignVerticalMap[flattenedStyle.verticalAlign];
        overrides.verticalAlign = undefined;
      }
      if (overrides != null) {
        _style = [_style, overrides];
      }
    }
    if (_Platform.default.OS === 'ios') {
      var _props$rows;
      var RCTTextInputView = props.multiline === true ? RCTMultilineTextInputView : RCTSinglelineTextInputView;
      var useMultilineDefaultStyle = props.multiline === true && (flattenedStyle == null || flattenedStyle.padding == null && flattenedStyle.paddingVertical == null && flattenedStyle.paddingTop == null);
      textInput = /*#__PURE__*/(0, _jsxRuntime.jsx)(RCTTextInputView, Object.assign({
        ref: ref
      }, otherProps, eventHandlers, {
        accessibilityState: _accessibilityState,
        accessible: accessible,
        submitBehavior: submitBehavior,
        caretHidden: caretHidden,
        dataDetectorTypes: props.dataDetectorTypes,
        focusable: tabIndex !== undefined ? !tabIndex : focusable,
        mostRecentEventCount: mostRecentEventCount,
        nativeID: id != null ? id : props.nativeID,
        numberOfLines: (_props$rows = props.rows) != null ? _props$rows : props.numberOfLines,
        onBlur: _onBlur,
        onChange: _onChange,
        onContentSizeChange: props.onContentSizeChange,
        onFocus: _onFocus,
        onScroll: _onScroll,
        onSelectionChange: _onSelectionChange,
        onSelectionChangeShouldSetResponder: emptyFunctionThatReturnsTrue,
        selection: selection,
        selectionColor: selectionColor,
        style: _StyleSheet.default.compose(useMultilineDefaultStyle ? styles.multilineDefault : null, _style),
        text: text
      }));
    } else if (_Platform.default.OS === 'android') {
      var _props$ariaLabelledb, _props$placeholder, _props$rows2;
      var autoCapitalize = props.autoCapitalize || 'sentences';
      var _accessibilityLabelledBy = (_props$ariaLabelledb = props == null ? undefined : props['aria-labelledby']) != null ? _props$ariaLabelledb : props == null ? undefined : props.accessibilityLabelledBy;
      var placeholder = (_props$placeholder = props.placeholder) != null ? _props$placeholder : '';
      var children = props.children;
      var childCount = React.Children.count(children);
      (0, _invariant.default)(!(props.value != null && childCount), 'Cannot specify both value and children.');
      if (childCount > 1) {
        children = /*#__PURE__*/(0, _jsxRuntime.jsx)(_Text.default, {
          children: children
        });
      }
      var colorProps = {
        selectionColor: selectionColor,
        selectionHandleColor: selectionHandleColor === undefined ? selectionColor : selectionHandleColor,
        cursorColor: cursorColor === undefined ? selectionColor : cursorColor
      };
      textInput = /*#__PURE__*/(0, _jsxRuntime.jsx)(AndroidTextInput, Object.assign({
        ref: ref
      }, otherProps, colorProps, eventHandlers, {
        accessibilityState: _accessibilityState,
        accessibilityLabelledBy: _accessibilityLabelledBy,
        accessible: accessible,
        autoCapitalize: autoCapitalize,
        submitBehavior: submitBehavior,
        caretHidden: caretHidden,
        children: children,
        disableFullscreenUI: props.disableFullscreenUI,
        focusable: tabIndex !== undefined ? !tabIndex : focusable,
        mostRecentEventCount: mostRecentEventCount,
        nativeID: id != null ? id : props.nativeID,
        numberOfLines: (_props$rows2 = props.rows) != null ? _props$rows2 : props.numberOfLines,
        onBlur: _onBlur,
        onChange: _onChange,
        onFocus: _onFocus,
        onScroll: _onScroll,
        onSelectionChange: _onSelectionChange,
        placeholder: placeholder,
        style: _style,
        text: text,
        textBreakStrategy: props.textBreakStrategy
      }));
    }
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_TextAncestor.default.Provider, {
      value: true,
      children: textInput
    });
  }
  var enterKeyHintToReturnTypeMap = {
    enter: 'default',
    done: 'done',
    go: 'go',
    next: 'next',
    previous: 'previous',
    search: 'search',
    send: 'send'
  };
  var inputModeToKeyboardTypeMap = {
    none: 'default',
    text: 'default',
    decimal: 'decimal-pad',
    numeric: 'number-pad',
    tel: 'phone-pad',
    search: _Platform.default.OS === 'ios' ? 'web-search' : 'default',
    email: 'email-address',
    url: 'url'
  };
  var autoCompleteWebToAutoCompleteAndroidMap = {
    'address-line1': 'postal-address-region',
    'address-line2': 'postal-address-locality',
    bday: 'birthdate-full',
    'bday-day': 'birthdate-day',
    'bday-month': 'birthdate-month',
    'bday-year': 'birthdate-year',
    'cc-csc': 'cc-csc',
    'cc-exp': 'cc-exp',
    'cc-exp-month': 'cc-exp-month',
    'cc-exp-year': 'cc-exp-year',
    'cc-number': 'cc-number',
    country: 'postal-address-country',
    'current-password': 'password',
    email: 'email',
    'honorific-prefix': 'name-prefix',
    'honorific-suffix': 'name-suffix',
    name: 'name',
    'additional-name': 'name-middle',
    'family-name': 'name-family',
    'given-name': 'name-given',
    'new-password': 'password-new',
    off: 'off',
    'one-time-code': 'sms-otp',
    'postal-code': 'postal-code',
    sex: 'gender',
    'street-address': 'street-address',
    tel: 'tel',
    'tel-country-code': 'tel-country-code',
    'tel-national': 'tel-national',
    username: 'username'
  };
  var autoCompleteWebToTextContentTypeMap = {
    'address-line1': 'streetAddressLine1',
    'address-line2': 'streetAddressLine2',
    bday: 'birthdate',
    'bday-day': 'birthdateDay',
    'bday-month': 'birthdateMonth',
    'bday-year': 'birthdateYear',
    'cc-csc': 'creditCardSecurityCode',
    'cc-exp-month': 'creditCardExpirationMonth',
    'cc-exp-year': 'creditCardExpirationYear',
    'cc-exp': 'creditCardExpiration',
    'cc-given-name': 'creditCardGivenName',
    'cc-additional-name': 'creditCardMiddleName',
    'cc-family-name': 'creditCardFamilyName',
    'cc-name': 'creditCardName',
    'cc-number': 'creditCardNumber',
    'cc-type': 'creditCardType',
    'current-password': 'password',
    country: 'countryName',
    email: 'emailAddress',
    name: 'name',
    'additional-name': 'middleName',
    'family-name': 'familyName',
    'given-name': 'givenName',
    nickname: 'nickname',
    'honorific-prefix': 'namePrefix',
    'honorific-suffix': 'nameSuffix',
    'new-password': 'newPassword',
    off: 'none',
    'one-time-code': 'oneTimeCode',
    organization: 'organizationName',
    'organization-title': 'jobTitle',
    'postal-code': 'postalCode',
    'street-address': 'fullStreetAddress',
    tel: 'telephoneNumber',
    url: 'URL',
    username: 'username'
  };
  var ExportedForwardRef = React.forwardRef(function TextInput(_ref3, forwardedRef) {
    var _autoCompleteWebToAut;
    var _ref3$allowFontScalin = _ref3.allowFontScaling,
      allowFontScaling = _ref3$allowFontScalin === undefined ? true : _ref3$allowFontScalin,
      _ref3$rejectResponder = _ref3.rejectResponderTermination,
      rejectResponderTermination = _ref3$rejectResponder === undefined ? true : _ref3$rejectResponder,
      _ref3$underlineColorA = _ref3.underlineColorAndroid,
      underlineColorAndroid = _ref3$underlineColorA === undefined ? 'transparent' : _ref3$underlineColorA,
      autoComplete = _ref3.autoComplete,
      textContentType = _ref3.textContentType,
      readOnly = _ref3.readOnly,
      editable = _ref3.editable,
      enterKeyHint = _ref3.enterKeyHint,
      returnKeyType = _ref3.returnKeyType,
      inputMode = _ref3.inputMode,
      showSoftInputOnFocus = _ref3.showSoftInputOnFocus,
      keyboardType = _ref3.keyboardType,
      restProps = (0, _objectWithoutProperties2.default)(_ref3, _excluded3);
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(InternalTextInput, Object.assign({
      allowFontScaling: allowFontScaling,
      rejectResponderTermination: rejectResponderTermination,
      underlineColorAndroid: underlineColorAndroid,
      editable: readOnly !== undefined ? !readOnly : editable,
      returnKeyType: enterKeyHint ? enterKeyHintToReturnTypeMap[enterKeyHint] : returnKeyType,
      keyboardType: inputMode ? inputModeToKeyboardTypeMap[inputMode] : keyboardType,
      showSoftInputOnFocus: inputMode == null ? showSoftInputOnFocus : inputMode !== 'none',
      autoComplete: _Platform.default.OS === 'android' ? (_autoCompleteWebToAut = autoCompleteWebToAutoCompleteAndroidMap[autoComplete]) != null ? _autoCompleteWebToAut : autoComplete : undefined,
      textContentType: textContentType != null ? textContentType : _Platform.default.OS === 'ios' && autoComplete && autoComplete in autoCompleteWebToTextContentTypeMap ? autoCompleteWebToTextContentTypeMap[autoComplete] : textContentType
    }, restProps, {
      forwardedRef: forwardedRef
    }));
  });
  ExportedForwardRef.displayName = 'TextInput';
  ExportedForwardRef.State = {
    currentlyFocusedInput: _TextInputState.default.currentlyFocusedInput,
    currentlyFocusedField: _TextInputState.default.currentlyFocusedField,
    focusTextInput: _TextInputState.default.focusTextInput,
    blurTextInput: _TextInputState.default.blurTextInput
  };
  var styles = _StyleSheet.default.create({
    multilineDefault: {
      paddingTop: 5
    }
  });
  var verticalAlignToTextAlignVerticalMap = {
    auto: 'auto',
    top: 'top',
    bottom: 'bottom',
    middle: 'center'
  };
  var _default = exports.default = ExportedForwardRef;
},438,[1,203,38,73,287,128,253,285,249,33,334,84,20,45,119,251,85,439,441]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.__INTERNAL_VIEW_CONFIG = exports.Commands = undefined;
  var NativeComponentRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));
  var _codegenNativeCommands = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _RCTTextInputViewConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var Commands = exports.Commands = (0, _codegenNativeCommands.default)({
    supportedCommands: ['focus', 'blur', 'setTextAndSelection']
  });
  var __INTERNAL_VIEW_CONFIG = exports.__INTERNAL_VIEW_CONFIG = Object.assign({
    uiViewClassName: 'RCTSinglelineTextInputView'
  }, _RCTTextInputViewConfig.default);
  var SinglelineTextInputNativeComponent = NativeComponentRegistry.get('RCTSinglelineTextInputView', function () {
    return __INTERNAL_VIEW_CONFIG;
  });
  var _default = exports.default = SinglelineTextInputNativeComponent;
},439,[1,86,125,440]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var RCTTextInputViewConfig = {
    bubblingEventTypes: {
      topBlur: {
        phasedRegistrationNames: {
          bubbled: 'onBlur',
          captured: 'onBlurCapture'
        }
      },
      topChange: {
        phasedRegistrationNames: {
          bubbled: 'onChange',
          captured: 'onChangeCapture'
        }
      },
      topEndEditing: {
        phasedRegistrationNames: {
          bubbled: 'onEndEditing',
          captured: 'onEndEditingCapture'
        }
      },
      topFocus: {
        phasedRegistrationNames: {
          bubbled: 'onFocus',
          captured: 'onFocusCapture'
        }
      },
      topKeyPress: {
        phasedRegistrationNames: {
          bubbled: 'onKeyPress',
          captured: 'onKeyPressCapture'
        }
      },
      topSubmitEditing: {
        phasedRegistrationNames: {
          bubbled: 'onSubmitEditing',
          captured: 'onSubmitEditingCapture'
        }
      },
      topTouchCancel: {
        phasedRegistrationNames: {
          bubbled: 'onTouchCancel',
          captured: 'onTouchCancelCapture'
        }
      },
      topTouchEnd: {
        phasedRegistrationNames: {
          bubbled: 'onTouchEnd',
          captured: 'onTouchEndCapture'
        }
      },
      topTouchMove: {
        phasedRegistrationNames: {
          bubbled: 'onTouchMove',
          captured: 'onTouchMoveCapture'
        }
      }
    },
    directEventTypes: {
      topScroll: {
        registrationName: 'onScroll'
      },
      topSelectionChange: {
        registrationName: 'onSelectionChange'
      },
      topContentSizeChange: {
        registrationName: 'onContentSizeChange'
      },
      topChangeSync: {
        registrationName: 'onChangeSync'
      },
      topKeyPressSync: {
        registrationName: 'onKeyPressSync'
      }
    },
    validAttributes: Object.assign({
      dynamicTypeRamp: true,
      fontSize: true,
      fontWeight: true,
      fontVariant: true,
      textShadowOffset: {
        diff: _$$_REQUIRE(_dependencyMap[0]).default
      },
      allowFontScaling: true,
      fontStyle: true,
      textTransform: true,
      textAlign: true,
      fontFamily: true,
      lineHeight: true,
      isHighlighted: true,
      writingDirection: true,
      textDecorationLine: true,
      textShadowRadius: true,
      letterSpacing: true,
      textDecorationStyle: true,
      textDecorationColor: {
        process: _$$_REQUIRE(_dependencyMap[1]).default
      },
      color: {
        process: _$$_REQUIRE(_dependencyMap[1]).default
      },
      maxFontSizeMultiplier: true,
      textShadowColor: {
        process: _$$_REQUIRE(_dependencyMap[1]).default
      },
      editable: true,
      inputAccessoryViewID: true,
      inputAccessoryViewButtonLabel: true,
      caretHidden: true,
      enablesReturnKeyAutomatically: true,
      placeholderTextColor: {
        process: _$$_REQUIRE(_dependencyMap[1]).default
      },
      clearButtonMode: true,
      keyboardType: true,
      selection: true,
      returnKeyType: true,
      submitBehavior: true,
      mostRecentEventCount: true,
      scrollEnabled: true,
      selectionColor: {
        process: _$$_REQUIRE(_dependencyMap[1]).default
      },
      contextMenuHidden: true,
      secureTextEntry: true,
      placeholder: true,
      autoCorrect: true,
      multiline: true,
      numberOfLines: true,
      textContentType: true,
      maxLength: true,
      autoCapitalize: true,
      keyboardAppearance: true,
      passwordRules: true,
      spellCheck: true,
      selectTextOnFocus: true,
      text: true,
      clearTextOnFocus: true,
      showSoftInputOnFocus: true,
      autoFocus: true,
      lineBreakStrategyIOS: true,
      lineBreakModeIOS: true,
      smartInsertDelete: true
    }, (0, _$$_REQUIRE(_dependencyMap[2]).ConditionallyIgnoredEventHandlers)({
      onChange: true,
      onSelectionChange: true,
      onContentSizeChange: true,
      onScroll: true,
      onChangeSync: true,
      onKeyPressSync: true
    }), {
      disableKeyboardShortcuts: true
    })
  };
  var _default = exports.default = RCTTextInputViewConfig;
},440,[101,89,124]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.__INTERNAL_VIEW_CONFIG = exports.Commands = undefined;
  var NativeComponentRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));
  var _codegenNativeCommands = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _RCTTextInputViewConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var Commands = exports.Commands = (0, _codegenNativeCommands.default)({
    supportedCommands: ['focus', 'blur', 'setTextAndSelection']
  });
  var __INTERNAL_VIEW_CONFIG = exports.__INTERNAL_VIEW_CONFIG = Object.assign({
    uiViewClassName: 'RCTMultilineTextInputView'
  }, _RCTTextInputViewConfig.default, {
    validAttributes: Object.assign({}, _RCTTextInputViewConfig.default.validAttributes, {
      dataDetectorTypes: true
    })
  });
  var MultilineTextInputNativeComponent = NativeComponentRegistry.get('RCTMultilineTextInputView', function () {
    return __INTERNAL_VIEW_CONFIG;
  });
  var _default = exports.default = MultilineTextInputNativeComponent;
},441,[1,86,125,440]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _UIManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _SoundManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _BoundingDimensions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _Position = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[8]);
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var extractSingleTouch = function extractSingleTouch(nativeEvent) {
    var touches = nativeEvent.touches;
    var changedTouches = nativeEvent.changedTouches;
    var hasTouches = touches && touches.length > 0;
    var hasChangedTouches = changedTouches && changedTouches.length > 0;
    return !hasTouches && hasChangedTouches ? changedTouches[0] : hasTouches ? touches[0] : nativeEvent;
  };
  var States = {
    NOT_RESPONDER: 'NOT_RESPONDER',
    RESPONDER_INACTIVE_PRESS_IN: 'RESPONDER_INACTIVE_PRESS_IN',
    RESPONDER_INACTIVE_PRESS_OUT: 'RESPONDER_INACTIVE_PRESS_OUT',
    RESPONDER_ACTIVE_PRESS_IN: 'RESPONDER_ACTIVE_PRESS_IN',
    RESPONDER_ACTIVE_PRESS_OUT: 'RESPONDER_ACTIVE_PRESS_OUT',
    RESPONDER_ACTIVE_LONG_PRESS_IN: 'RESPONDER_ACTIVE_LONG_PRESS_IN',
    RESPONDER_ACTIVE_LONG_PRESS_OUT: 'RESPONDER_ACTIVE_LONG_PRESS_OUT',
    ERROR: 'ERROR'
  };
  var baseStatesConditions = {
    NOT_RESPONDER: false,
    RESPONDER_INACTIVE_PRESS_IN: false,
    RESPONDER_INACTIVE_PRESS_OUT: false,
    RESPONDER_ACTIVE_PRESS_IN: false,
    RESPONDER_ACTIVE_PRESS_OUT: false,
    RESPONDER_ACTIVE_LONG_PRESS_IN: false,
    RESPONDER_ACTIVE_LONG_PRESS_OUT: false,
    ERROR: false
  };
  var IsActive = Object.assign({}, baseStatesConditions, {
    RESPONDER_ACTIVE_PRESS_OUT: true,
    RESPONDER_ACTIVE_PRESS_IN: true
  });
  var IsPressingIn = Object.assign({}, baseStatesConditions, {
    RESPONDER_INACTIVE_PRESS_IN: true,
    RESPONDER_ACTIVE_PRESS_IN: true,
    RESPONDER_ACTIVE_LONG_PRESS_IN: true
  });
  var IsLongPressingIn = Object.assign({}, baseStatesConditions, {
    RESPONDER_ACTIVE_LONG_PRESS_IN: true
  });
  var Signals = {
    DELAY: 'DELAY',
    RESPONDER_GRANT: 'RESPONDER_GRANT',
    RESPONDER_RELEASE: 'RESPONDER_RELEASE',
    RESPONDER_TERMINATED: 'RESPONDER_TERMINATED',
    ENTER_PRESS_RECT: 'ENTER_PRESS_RECT',
    LEAVE_PRESS_RECT: 'LEAVE_PRESS_RECT',
    LONG_PRESS_DETECTED: 'LONG_PRESS_DETECTED'
  };
  var Transitions = {
    NOT_RESPONDER: {
      DELAY: States.ERROR,
      RESPONDER_GRANT: States.RESPONDER_INACTIVE_PRESS_IN,
      RESPONDER_RELEASE: States.ERROR,
      RESPONDER_TERMINATED: States.ERROR,
      ENTER_PRESS_RECT: States.ERROR,
      LEAVE_PRESS_RECT: States.ERROR,
      LONG_PRESS_DETECTED: States.ERROR
    },
    RESPONDER_INACTIVE_PRESS_IN: {
      DELAY: States.RESPONDER_ACTIVE_PRESS_IN,
      RESPONDER_GRANT: States.ERROR,
      RESPONDER_RELEASE: States.NOT_RESPONDER,
      RESPONDER_TERMINATED: States.NOT_RESPONDER,
      ENTER_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_IN,
      LEAVE_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_OUT,
      LONG_PRESS_DETECTED: States.ERROR
    },
    RESPONDER_INACTIVE_PRESS_OUT: {
      DELAY: States.RESPONDER_ACTIVE_PRESS_OUT,
      RESPONDER_GRANT: States.ERROR,
      RESPONDER_RELEASE: States.NOT_RESPONDER,
      RESPONDER_TERMINATED: States.NOT_RESPONDER,
      ENTER_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_IN,
      LEAVE_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_OUT,
      LONG_PRESS_DETECTED: States.ERROR
    },
    RESPONDER_ACTIVE_PRESS_IN: {
      DELAY: States.ERROR,
      RESPONDER_GRANT: States.ERROR,
      RESPONDER_RELEASE: States.NOT_RESPONDER,
      RESPONDER_TERMINATED: States.NOT_RESPONDER,
      ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_IN,
      LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_OUT,
      LONG_PRESS_DETECTED: States.RESPONDER_ACTIVE_LONG_PRESS_IN
    },
    RESPONDER_ACTIVE_PRESS_OUT: {
      DELAY: States.ERROR,
      RESPONDER_GRANT: States.ERROR,
      RESPONDER_RELEASE: States.NOT_RESPONDER,
      RESPONDER_TERMINATED: States.NOT_RESPONDER,
      ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_IN,
      LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_OUT,
      LONG_PRESS_DETECTED: States.ERROR
    },
    RESPONDER_ACTIVE_LONG_PRESS_IN: {
      DELAY: States.ERROR,
      RESPONDER_GRANT: States.ERROR,
      RESPONDER_RELEASE: States.NOT_RESPONDER,
      RESPONDER_TERMINATED: States.NOT_RESPONDER,
      ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_IN,
      LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
      LONG_PRESS_DETECTED: States.RESPONDER_ACTIVE_LONG_PRESS_IN
    },
    RESPONDER_ACTIVE_LONG_PRESS_OUT: {
      DELAY: States.ERROR,
      RESPONDER_GRANT: States.ERROR,
      RESPONDER_RELEASE: States.NOT_RESPONDER,
      RESPONDER_TERMINATED: States.NOT_RESPONDER,
      ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_IN,
      LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
      LONG_PRESS_DETECTED: States.ERROR
    },
    error: {
      DELAY: States.NOT_RESPONDER,
      RESPONDER_GRANT: States.RESPONDER_INACTIVE_PRESS_IN,
      RESPONDER_RELEASE: States.NOT_RESPONDER,
      RESPONDER_TERMINATED: States.NOT_RESPONDER,
      ENTER_PRESS_RECT: States.NOT_RESPONDER,
      LEAVE_PRESS_RECT: States.NOT_RESPONDER,
      LONG_PRESS_DETECTED: States.NOT_RESPONDER
    }
  };
  var HIGHLIGHT_DELAY_MS = 130;
  var PRESS_EXPAND_PX = 20;
  var LONG_PRESS_THRESHOLD = 500;
  var LONG_PRESS_DELAY_MS = 370;
  var LONG_PRESS_ALLOWED_MOVEMENT = 10;
  var TouchableMixinImpl = {
    componentDidMount: function componentDidMount() {
      if (!_Platform.default.isTV) {
        return;
      }
    },
    componentWillUnmount: function componentWillUnmount() {
      this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);
      this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);
      this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);
    },
    touchableGetInitialState: function touchableGetInitialState() {
      return {
        touchable: {
          touchState: undefined,
          responderID: null
        }
      };
    },
    touchableHandleResponderTerminationRequest: function touchableHandleResponderTerminationRequest() {
      return !this.props.rejectResponderTermination;
    },
    touchableHandleStartShouldSetResponder: function touchableHandleStartShouldSetResponder() {
      return !this.props.disabled;
    },
    touchableLongPressCancelsPress: function touchableLongPressCancelsPress() {
      return true;
    },
    touchableHandleResponderGrant: function touchableHandleResponderGrant(e) {
      var dispatchID = e.currentTarget;
      e.persist();
      this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);
      this.pressOutDelayTimeout = null;
      this.state.touchable.touchState = States.NOT_RESPONDER;
      this.state.touchable.responderID = dispatchID;
      this._receiveSignal(Signals.RESPONDER_GRANT, e);
      var delayMS = this.touchableGetHighlightDelayMS !== undefined ? Math.max(this.touchableGetHighlightDelayMS(), 0) : HIGHLIGHT_DELAY_MS;
      delayMS = isNaN(delayMS) ? HIGHLIGHT_DELAY_MS : delayMS;
      if (delayMS !== 0) {
        this.touchableDelayTimeout = setTimeout(this._handleDelay.bind(this, e), delayMS);
      } else {
        this._handleDelay(e);
      }
      var longDelayMS = this.touchableGetLongPressDelayMS !== undefined ? Math.max(this.touchableGetLongPressDelayMS(), 10) : LONG_PRESS_DELAY_MS;
      longDelayMS = isNaN(longDelayMS) ? LONG_PRESS_DELAY_MS : longDelayMS;
      this.longPressDelayTimeout = setTimeout(this._handleLongDelay.bind(this, e), longDelayMS + delayMS);
    },
    touchableHandleResponderRelease: function touchableHandleResponderRelease(e) {
      this.pressInLocation = null;
      this._receiveSignal(Signals.RESPONDER_RELEASE, e);
    },
    touchableHandleResponderTerminate: function touchableHandleResponderTerminate(e) {
      this.pressInLocation = null;
      this._receiveSignal(Signals.RESPONDER_TERMINATED, e);
    },
    touchableHandleResponderMove: function touchableHandleResponderMove(e) {
      if (!this.state.touchable.positionOnActivate) {
        return;
      }
      var positionOnActivate = this.state.touchable.positionOnActivate;
      var dimensionsOnActivate = this.state.touchable.dimensionsOnActivate;
      var pressRectOffset = this.touchableGetPressRectOffset ? this.touchableGetPressRectOffset() : {
        left: PRESS_EXPAND_PX,
        right: PRESS_EXPAND_PX,
        top: PRESS_EXPAND_PX,
        bottom: PRESS_EXPAND_PX
      };
      var pressExpandLeft = pressRectOffset.left;
      var pressExpandTop = pressRectOffset.top;
      var pressExpandRight = pressRectOffset.right;
      var pressExpandBottom = pressRectOffset.bottom;
      var hitSlop = this.touchableGetHitSlop ? this.touchableGetHitSlop() : null;
      if (hitSlop) {
        pressExpandLeft += hitSlop.left || 0;
        pressExpandTop += hitSlop.top || 0;
        pressExpandRight += hitSlop.right || 0;
        pressExpandBottom += hitSlop.bottom || 0;
      }
      var touch = extractSingleTouch(e.nativeEvent);
      var pageX = touch && touch.pageX;
      var pageY = touch && touch.pageY;
      if (this.pressInLocation) {
        var movedDistance = this._getDistanceBetweenPoints(pageX, pageY, this.pressInLocation.pageX, this.pressInLocation.pageY);
        if (movedDistance > LONG_PRESS_ALLOWED_MOVEMENT) {
          this._cancelLongPressDelayTimeout();
        }
      }
      var isTouchWithinActive = pageX > positionOnActivate.left - pressExpandLeft && pageY > positionOnActivate.top - pressExpandTop && pageX < positionOnActivate.left + dimensionsOnActivate.width + pressExpandRight && pageY < positionOnActivate.top + dimensionsOnActivate.height + pressExpandBottom;
      if (isTouchWithinActive) {
        var prevState = this.state.touchable.touchState;
        this._receiveSignal(Signals.ENTER_PRESS_RECT, e);
        var curState = this.state.touchable.touchState;
        if (curState === States.RESPONDER_INACTIVE_PRESS_IN && prevState !== States.RESPONDER_INACTIVE_PRESS_IN) {
          this._cancelLongPressDelayTimeout();
        }
      } else {
        this._cancelLongPressDelayTimeout();
        this._receiveSignal(Signals.LEAVE_PRESS_RECT, e);
      }
    },
    touchableHandleFocus: function touchableHandleFocus(e) {
      this.props.onFocus && this.props.onFocus(e);
    },
    touchableHandleBlur: function touchableHandleBlur(e) {
      this.props.onBlur && this.props.onBlur(e);
    },
    _remeasureMetricsOnActivation: function _remeasureMetricsOnActivation() {
      var responderID = this.state.touchable.responderID;
      if (responderID == null) {
        return;
      }
      if (typeof responderID === 'number') {
        _UIManager.default.measure(responderID, this._handleQueryLayout);
      } else {
        responderID.measure(this._handleQueryLayout);
      }
    },
    _handleQueryLayout: function _handleQueryLayout(l, t, w, h, globalX, globalY) {
      if (!l && !t && !w && !h && !globalX && !globalY) {
        return;
      }
      this.state.touchable.positionOnActivate && _Position.default.release(this.state.touchable.positionOnActivate);
      this.state.touchable.dimensionsOnActivate && _BoundingDimensions.default.release(this.state.touchable.dimensionsOnActivate);
      this.state.touchable.positionOnActivate = _Position.default.getPooled(globalX, globalY);
      this.state.touchable.dimensionsOnActivate = _BoundingDimensions.default.getPooled(w, h);
    },
    _handleDelay: function _handleDelay(e) {
      this.touchableDelayTimeout = null;
      this._receiveSignal(Signals.DELAY, e);
    },
    _handleLongDelay: function _handleLongDelay(e) {
      this.longPressDelayTimeout = null;
      var curState = this.state.touchable.touchState;
      if (curState === States.RESPONDER_ACTIVE_PRESS_IN || curState === States.RESPONDER_ACTIVE_LONG_PRESS_IN) {
        this._receiveSignal(Signals.LONG_PRESS_DETECTED, e);
      }
    },
    _receiveSignal: function _receiveSignal(signal, e) {
      var responderID = this.state.touchable.responderID;
      var curState = this.state.touchable.touchState;
      var nextState = Transitions[curState] && Transitions[curState][signal];
      if (!responderID && signal === Signals.RESPONDER_RELEASE) {
        return;
      }
      if (!nextState) {
        throw new Error('Unrecognized signal `' + signal + '` or state `' + curState + '` for Touchable responder `' + typeof this.state.touchable.responderID === 'number' ? this.state.touchable.responderID : "host component`");
      }
      if (nextState === States.ERROR) {
        throw new Error('Touchable cannot transition from `' + curState + '` to `' + signal + '` for responder `' + typeof this.state.touchable.responderID === 'number' ? this.state.touchable.responderID : "<<host component>>`");
      }
      if (curState !== nextState) {
        this._performSideEffectsForTransition(curState, nextState, signal, e);
        this.state.touchable.touchState = nextState;
      }
    },
    _cancelLongPressDelayTimeout: function _cancelLongPressDelayTimeout() {
      this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);
      this.longPressDelayTimeout = null;
    },
    _isHighlight: function _isHighlight(state) {
      return state === States.RESPONDER_ACTIVE_PRESS_IN || state === States.RESPONDER_ACTIVE_LONG_PRESS_IN;
    },
    _savePressInLocation: function _savePressInLocation(e) {
      var touch = extractSingleTouch(e.nativeEvent);
      var pageX = touch && touch.pageX;
      var pageY = touch && touch.pageY;
      var locationX = touch && touch.locationX;
      var locationY = touch && touch.locationY;
      this.pressInLocation = {
        pageX: pageX,
        pageY: pageY,
        locationX: locationX,
        locationY: locationY
      };
    },
    _getDistanceBetweenPoints: function _getDistanceBetweenPoints(aX, aY, bX, bY) {
      var deltaX = aX - bX;
      var deltaY = aY - bY;
      return Math.sqrt(deltaX * deltaX + deltaY * deltaY);
    },
    _performSideEffectsForTransition: function _performSideEffectsForTransition(curState, nextState, signal, e) {
      var curIsHighlight = this._isHighlight(curState);
      var newIsHighlight = this._isHighlight(nextState);
      var isFinalSignal = signal === Signals.RESPONDER_TERMINATED || signal === Signals.RESPONDER_RELEASE;
      if (isFinalSignal) {
        this._cancelLongPressDelayTimeout();
      }
      var isInitialTransition = curState === States.NOT_RESPONDER && nextState === States.RESPONDER_INACTIVE_PRESS_IN;
      var isActiveTransition = !IsActive[curState] && IsActive[nextState];
      if (isInitialTransition || isActiveTransition) {
        this._remeasureMetricsOnActivation();
      }
      if (IsPressingIn[curState] && signal === Signals.LONG_PRESS_DETECTED) {
        this.touchableHandleLongPress && this.touchableHandleLongPress(e);
      }
      if (newIsHighlight && !curIsHighlight) {
        this._startHighlight(e);
      } else if (!newIsHighlight && curIsHighlight) {
        this._endHighlight(e);
      }
      if (IsPressingIn[curState] && signal === Signals.RESPONDER_RELEASE) {
        var hasLongPressHandler = !!this.props.onLongPress;
        var pressIsLongButStillCallOnPress = IsLongPressingIn[curState] && (!hasLongPressHandler || !this.touchableLongPressCancelsPress());
        var shouldInvokePress = !IsLongPressingIn[curState] || pressIsLongButStillCallOnPress;
        if (shouldInvokePress && this.touchableHandlePress) {
          if (!newIsHighlight && !curIsHighlight) {
            this._startHighlight(e);
            this._endHighlight(e);
          }
          if (_Platform.default.OS === 'android' && !this.props.touchSoundDisabled) {
            _SoundManager.default.playTouchSound();
          }
          this.touchableHandlePress(e);
        }
      }
      this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);
      this.touchableDelayTimeout = null;
    },
    _startHighlight: function _startHighlight(e) {
      this._savePressInLocation(e);
      this.touchableHandleActivePressIn && this.touchableHandleActivePressIn(e);
    },
    _endHighlight: function _endHighlight(e) {
      var _this = this;
      if (this.touchableHandleActivePressOut) {
        if (this.touchableGetPressOutDelayMS && this.touchableGetPressOutDelayMS()) {
          this.pressOutDelayTimeout = setTimeout(function () {
            _this.touchableHandleActivePressOut(e);
          }, this.touchableGetPressOutDelayMS());
        } else {
          this.touchableHandleActivePressOut(e);
        }
      }
    },
    withoutDefaultFocusAndBlur: {}
  };
  var touchableHandleFocus = TouchableMixinImpl.touchableHandleFocus,
    touchableHandleBlur = TouchableMixinImpl.touchableHandleBlur,
    TouchableMixinWithoutDefaultFocusAndBlur = (0, _objectWithoutProperties2.default)(TouchableMixinImpl, ["touchableHandleFocus", "touchableHandleBlur"]);
  TouchableMixinImpl.withoutDefaultFocusAndBlur = TouchableMixinWithoutDefaultFocusAndBlur;
  var TouchableImpl = {
    Mixin: TouchableMixinImpl,
    renderDebugView: function renderDebugView(_ref) {
      var color = _ref.color,
        hitSlop = _ref.hitSlop;
      return null;
    }
  };
  var _default = exports.default = TouchableImpl;
},442,[1,203,44,33,289,443,445,119,251]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _PooledClass = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var twoArgumentPooler = _PooledClass.default.twoArgumentPooler;
  function BoundingDimensions(width, height) {
    this.width = width;
    this.height = height;
  }
  BoundingDimensions.prototype.destructor = function () {
    this.width = null;
    this.height = null;
  };
  BoundingDimensions.getPooledFromElement = function (element) {
    return BoundingDimensions.getPooled(element.offsetWidth, element.offsetHeight);
  };
  _PooledClass.default.addPoolingTo(BoundingDimensions, twoArgumentPooler);
  var _default = exports.default = BoundingDimensions;
},443,[1,444]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var oneArgumentPooler = function oneArgumentPooler(copyFieldsFrom) {
    var Klass = this;
    if (Klass.instancePool.length) {
      var _instance = Klass.instancePool.pop();
      Klass.call(_instance, copyFieldsFrom);
      return _instance;
    } else {
      return new Klass(copyFieldsFrom);
    }
  };
  var twoArgumentPooler = function twoArgumentPooler(a1, a2) {
    var Klass = this;
    if (Klass.instancePool.length) {
      var _instance2 = Klass.instancePool.pop();
      Klass.call(_instance2, a1, a2);
      return _instance2;
    } else {
      return new Klass(a1, a2);
    }
  };
  var threeArgumentPooler = function threeArgumentPooler(a1, a2, a3) {
    var Klass = this;
    if (Klass.instancePool.length) {
      var _instance3 = Klass.instancePool.pop();
      Klass.call(_instance3, a1, a2, a3);
      return _instance3;
    } else {
      return new Klass(a1, a2, a3);
    }
  };
  var fourArgumentPooler = function fourArgumentPooler(a1, a2, a3, a4) {
    var Klass = this;
    if (Klass.instancePool.length) {
      var _instance4 = Klass.instancePool.pop();
      Klass.call(_instance4, a1, a2, a3, a4);
      return _instance4;
    } else {
      return new Klass(a1, a2, a3, a4);
    }
  };
  var standardReleaser = function standardReleaser(instance) {
    var Klass = this;
    (0, _invariant.default)(instance instanceof Klass, 'Trying to release an instance into a pool of a different type.');
    instance.destructor();
    if (Klass.instancePool.length < Klass.poolSize) {
      Klass.instancePool.push(instance);
    }
  };
  var DEFAULT_POOL_SIZE = 10;
  var DEFAULT_POOLER = oneArgumentPooler;
  var addPoolingTo = function addPoolingTo(CopyConstructor, pooler) {
    var NewKlass = CopyConstructor;
    NewKlass.instancePool = [];
    NewKlass.getPooled = pooler || DEFAULT_POOLER;
    if (!NewKlass.poolSize) {
      NewKlass.poolSize = DEFAULT_POOL_SIZE;
    }
    NewKlass.release = standardReleaser;
    return NewKlass;
  };
  var PooledClass = {
    addPoolingTo: addPoolingTo,
    oneArgumentPooler: oneArgumentPooler,
    twoArgumentPooler: twoArgumentPooler,
    threeArgumentPooler: threeArgumentPooler,
    fourArgumentPooler: fourArgumentPooler
  };
  var _default = exports.default = PooledClass;
},444,[1,20]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _PooledClass = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var twoArgumentPooler = _PooledClass.default.twoArgumentPooler;
  function Position(left, top) {
    this.left = left;
    this.top = top;
  }
  Position.prototype.destructor = function () {
    this.left = null;
    this.top = null;
  };
  _PooledClass.default.addPoolingTo(Position, twoArgumentPooler);
  var _default = exports.default = Position;
},445,[1,444]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _View = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _Pressability = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _StyleSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[12]);
  var _excluded = ["onBlur", "onFocus"];
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var TouchableHighlightImpl = /*#__PURE__*/function (_React$Component) {
    function TouchableHighlightImpl() {
      var _this;
      (0, _classCallCheck2.default)(this, TouchableHighlightImpl);
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _callSuper(this, TouchableHighlightImpl, [].concat(args));
      _this._isMounted = false;
      _this.state = {
        pressability: new _Pressability.default(_this._createPressabilityConfig()),
        extraStyles: _this.props.testOnly_pressed === true ? _this._createExtraStyles() : null
      };
      return _this;
    }
    (0, _inherits2.default)(TouchableHighlightImpl, _React$Component);
    return (0, _createClass2.default)(TouchableHighlightImpl, [{
      key: "_createPressabilityConfig",
      value: function _createPressabilityConfig() {
        var _this$props$accessibi,
          _this2 = this;
        return {
          cancelable: !this.props.rejectResponderTermination,
          disabled: this.props.disabled != null ? this.props.disabled : (_this$props$accessibi = this.props.accessibilityState) == null ? undefined : _this$props$accessibi.disabled,
          hitSlop: this.props.hitSlop,
          delayLongPress: this.props.delayLongPress,
          delayPressIn: this.props.delayPressIn,
          delayPressOut: this.props.delayPressOut,
          minPressDuration: 0,
          pressRectOffset: this.props.pressRetentionOffset,
          android_disableSound: this.props.touchSoundDisabled,
          onBlur: function onBlur(event) {
            if (_Platform.default.isTV) {
              _this2._hideUnderlay();
            }
            if (_this2.props.onBlur != null) {
              _this2.props.onBlur(event);
            }
          },
          onFocus: function onFocus(event) {
            if (_Platform.default.isTV) {
              _this2._showUnderlay();
            }
            if (_this2.props.onFocus != null) {
              _this2.props.onFocus(event);
            }
          },
          onLongPress: this.props.onLongPress,
          onPress: function onPress(event) {
            if (_this2._hideTimeout != null) {
              clearTimeout(_this2._hideTimeout);
            }
            if (!_Platform.default.isTV) {
              var _this2$props$delayPre;
              _this2._showUnderlay();
              _this2._hideTimeout = setTimeout(function () {
                _this2._hideUnderlay();
              }, (_this2$props$delayPre = _this2.props.delayPressOut) != null ? _this2$props$delayPre : 0);
            }
            if (_this2.props.onPress != null) {
              _this2.props.onPress(event);
            }
          },
          onPressIn: function onPressIn(event) {
            if (_this2._hideTimeout != null) {
              clearTimeout(_this2._hideTimeout);
              _this2._hideTimeout = null;
            }
            _this2._showUnderlay();
            if (_this2.props.onPressIn != null) {
              _this2.props.onPressIn(event);
            }
          },
          onPressOut: function onPressOut(event) {
            if (_this2._hideTimeout == null) {
              _this2._hideUnderlay();
            }
            if (_this2.props.onPressOut != null) {
              _this2.props.onPressOut(event);
            }
          }
        };
      }
    }, {
      key: "_createExtraStyles",
      value: function _createExtraStyles() {
        var _this$props$activeOpa;
        return {
          child: {
            opacity: (_this$props$activeOpa = this.props.activeOpacity) != null ? _this$props$activeOpa : 0.85
          },
          underlay: {
            backgroundColor: this.props.underlayColor === undefined ? 'black' : this.props.underlayColor
          }
        };
      }
    }, {
      key: "_showUnderlay",
      value: function _showUnderlay() {
        if (!this._isMounted || !this._hasPressHandler()) {
          return;
        }
        this.setState({
          extraStyles: this._createExtraStyles()
        });
        if (this.props.onShowUnderlay != null) {
          this.props.onShowUnderlay();
        }
      }
    }, {
      key: "_hideUnderlay",
      value: function _hideUnderlay() {
        if (this._hideTimeout != null) {
          clearTimeout(this._hideTimeout);
          this._hideTimeout = null;
        }
        if (this.props.testOnly_pressed === true) {
          return;
        }
        if (this._hasPressHandler()) {
          this.setState({
            extraStyles: null
          });
          if (this.props.onHideUnderlay != null) {
            this.props.onHideUnderlay();
          }
        }
      }
    }, {
      key: "_hasPressHandler",
      value: function _hasPressHandler() {
        return this.props.onPress != null || this.props.onPressIn != null || this.props.onPressOut != null || this.props.onLongPress != null;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props$ariaValu, _this$props$accessibi2, _this$props$ariaValu2, _this$props$accessibi3, _this$props$ariaValu3, _this$props$accessibi4, _this$props$ariaValu4, _this$props$accessibi5, _this$props$ariaLive, _this$props$ariaLabe, _this$props$ariaModa, _this$props$ariaHidd, _this$state$extraStyl, _this$props$id, _this$state$extraStyl2;
        var child = React.Children.only(this.props.children);
        var _this$state$pressabil = this.state.pressability.getEventHandlers(),
          onBlur = _this$state$pressabil.onBlur,
          onFocus = _this$state$pressabil.onFocus,
          eventHandlersWithoutBlurAndFocus = (0, _objectWithoutProperties2.default)(_this$state$pressabil, _excluded);
        var accessibilityState = this.props.disabled != null ? Object.assign({}, this.props.accessibilityState, {
          disabled: this.props.disabled
        }) : this.props.accessibilityState;
        var accessibilityValue = {
          max: (_this$props$ariaValu = this.props['aria-valuemax']) != null ? _this$props$ariaValu : (_this$props$accessibi2 = this.props.accessibilityValue) == null ? undefined : _this$props$accessibi2.max,
          min: (_this$props$ariaValu2 = this.props['aria-valuemin']) != null ? _this$props$ariaValu2 : (_this$props$accessibi3 = this.props.accessibilityValue) == null ? undefined : _this$props$accessibi3.min,
          now: (_this$props$ariaValu3 = this.props['aria-valuenow']) != null ? _this$props$ariaValu3 : (_this$props$accessibi4 = this.props.accessibilityValue) == null ? undefined : _this$props$accessibi4.now,
          text: (_this$props$ariaValu4 = this.props['aria-valuetext']) != null ? _this$props$ariaValu4 : (_this$props$accessibi5 = this.props.accessibilityValue) == null ? undefined : _this$props$accessibi5.text
        };
        var accessibilityLiveRegion = this.props['aria-live'] === 'off' ? 'none' : (_this$props$ariaLive = this.props['aria-live']) != null ? _this$props$ariaLive : this.props.accessibilityLiveRegion;
        var accessibilityLabel = (_this$props$ariaLabe = this.props['aria-label']) != null ? _this$props$ariaLabe : this.props.accessibilityLabel;
        return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_View.default, Object.assign({
          accessible: this.props.accessible !== false,
          accessibilityLabel: accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityLanguage: this.props.accessibilityLanguage,
          accessibilityRole: this.props.accessibilityRole,
          accessibilityState: accessibilityState,
          accessibilityValue: accessibilityValue,
          accessibilityActions: this.props.accessibilityActions,
          onAccessibilityAction: this.props.onAccessibilityAction,
          importantForAccessibility: this.props['aria-hidden'] === true ? 'no-hide-descendants' : this.props.importantForAccessibility,
          accessibilityViewIsModal: (_this$props$ariaModa = this.props['aria-modal']) != null ? _this$props$ariaModa : this.props.accessibilityViewIsModal,
          accessibilityLiveRegion: accessibilityLiveRegion,
          accessibilityElementsHidden: (_this$props$ariaHidd = this.props['aria-hidden']) != null ? _this$props$ariaHidd : this.props.accessibilityElementsHidden,
          style: _StyleSheet.default.compose(this.props.style, (_this$state$extraStyl = this.state.extraStyles) == null ? undefined : _this$state$extraStyl.underlay),
          onLayout: this.props.onLayout,
          hitSlop: this.props.hitSlop,
          hasTVPreferredFocus: this.props.hasTVPreferredFocus,
          nextFocusDown: this.props.nextFocusDown,
          nextFocusForward: this.props.nextFocusForward,
          nextFocusLeft: this.props.nextFocusLeft,
          nextFocusRight: this.props.nextFocusRight,
          nextFocusUp: this.props.nextFocusUp,
          focusable: this.props.focusable !== false && this.props.onPress !== undefined && !this.props.disabled,
          nativeID: (_this$props$id = this.props.id) != null ? _this$props$id : this.props.nativeID,
          testID: this.props.testID,
          ref: this.props.hostRef
        }, eventHandlersWithoutBlurAndFocus, {
          children: [React.cloneElement(child, {
            style: _StyleSheet.default.compose(child.props.style, (_this$state$extraStyl2 = this.state.extraStyles) == null ? undefined : _this$state$extraStyl2.child)
          }), null]
        }));
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this._isMounted = true;
        this.state.pressability.configure(this._createPressabilityConfig());
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps, prevState) {
        this.state.pressability.configure(this._createPressabilityConfig());
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this._isMounted = false;
        if (this._hideTimeout != null) {
          clearTimeout(this._hideTimeout);
        }
        this.state.pressability.reset();
      }
    }]);
  }(React.Component);
  var TouchableHighlight = React.forwardRef(function (props, hostRef) {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(TouchableHighlightImpl, Object.assign({}, props, {
      hostRef: hostRef
    }));
  });
  TouchableHighlight.displayName = 'TouchableHighlight';
  var _default = exports.default = TouchableHighlight;
},446,[1,203,12,13,23,25,28,248,288,253,33,119,251]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = TouchableWithoutFeedback;
  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _View = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _usePressability = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));
  var React = _react;
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[5]);
  var _excluded = ["onBlur", "onFocus"];
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var PASSTHROUGH_PROPS = ['accessibilityActions', 'accessibilityElementsHidden', 'accessibilityHint', 'accessibilityLanguage', 'accessibilityIgnoresInvertColors', 'accessibilityLabel', 'accessibilityLiveRegion', 'accessibilityRole', 'accessibilityValue', 'aria-valuemax', 'aria-valuemin', 'aria-valuenow', 'aria-valuetext', 'accessibilityViewIsModal', 'aria-modal', 'hitSlop', 'importantForAccessibility', 'nativeID', 'onAccessibilityAction', 'onBlur', 'onFocus', 'onLayout', 'testID'];
  function TouchableWithoutFeedback(props) {
    var _props$ariaBusy, _props$accessibilityS, _props$ariaChecked, _props$accessibilityS2, _props$ariaDisabled, _props$accessibilityS3, _props$ariaExpanded, _props$accessibilityS4, _props$ariaSelected, _props$accessibilityS5, _props$ariaHidden, _props$id;
    var disabled = props.disabled,
      rejectResponderTermination = props.rejectResponderTermination,
      ariaDisabled = props['aria-disabled'],
      accessibilityState = props.accessibilityState,
      hitSlop = props.hitSlop,
      delayLongPress = props.delayLongPress,
      delayPressIn = props.delayPressIn,
      delayPressOut = props.delayPressOut,
      pressRetentionOffset = props.pressRetentionOffset,
      touchSoundDisabled = props.touchSoundDisabled,
      _onBlur = props.onBlur,
      _onFocus = props.onFocus,
      onLongPress = props.onLongPress,
      onPress = props.onPress,
      onPressIn = props.onPressIn,
      onPressOut = props.onPressOut;
    var pressabilityConfig = (0, _react.useMemo)(function () {
      return {
        cancelable: !rejectResponderTermination,
        disabled: disabled !== null ? disabled : ariaDisabled != null ? ariaDisabled : accessibilityState == null ? undefined : accessibilityState.disabled,
        hitSlop: hitSlop,
        delayLongPress: delayLongPress,
        delayPressIn: delayPressIn,
        delayPressOut: delayPressOut,
        minPressDuration: 0,
        pressRectOffset: pressRetentionOffset,
        android_disableSound: touchSoundDisabled,
        onBlur: _onBlur,
        onFocus: _onFocus,
        onLongPress: onLongPress,
        onPress: onPress,
        onPressIn: onPressIn,
        onPressOut: onPressOut
      };
    }, [rejectResponderTermination, disabled, ariaDisabled, accessibilityState == null ? undefined : accessibilityState.disabled, hitSlop, delayLongPress, delayPressIn, delayPressOut, pressRetentionOffset, touchSoundDisabled, _onBlur, _onFocus, onLongPress, onPress, onPressIn, onPressOut]);
    var eventHandlers = (0, _usePressability.default)(pressabilityConfig);
    var element = React.Children.only(props.children);
    var children = [element.props.children];
    var ariaLive = props['aria-live'];
    var _accessibilityState = {
      busy: (_props$ariaBusy = props['aria-busy']) != null ? _props$ariaBusy : (_props$accessibilityS = props.accessibilityState) == null ? undefined : _props$accessibilityS.busy,
      checked: (_props$ariaChecked = props['aria-checked']) != null ? _props$ariaChecked : (_props$accessibilityS2 = props.accessibilityState) == null ? undefined : _props$accessibilityS2.checked,
      disabled: (_props$ariaDisabled = props['aria-disabled']) != null ? _props$ariaDisabled : (_props$accessibilityS3 = props.accessibilityState) == null ? undefined : _props$accessibilityS3.disabled,
      expanded: (_props$ariaExpanded = props['aria-expanded']) != null ? _props$ariaExpanded : (_props$accessibilityS4 = props.accessibilityState) == null ? undefined : _props$accessibilityS4.expanded,
      selected: (_props$ariaSelected = props['aria-selected']) != null ? _props$ariaSelected : (_props$accessibilityS5 = props.accessibilityState) == null ? undefined : _props$accessibilityS5.selected
    };
    var onBlur = eventHandlers.onBlur,
      onFocus = eventHandlers.onFocus,
      eventHandlersWithoutBlurAndFocus = (0, _objectWithoutProperties2.default)(eventHandlers, _excluded);
    var elementProps = Object.assign({}, eventHandlersWithoutBlurAndFocus, {
      accessible: props.accessible !== false,
      accessibilityState: props.disabled != null ? Object.assign({}, _accessibilityState, {
        disabled: props.disabled
      }) : _accessibilityState,
      focusable: props.focusable !== false && props.onPress !== undefined && !props.disabled,
      accessibilityElementsHidden: (_props$ariaHidden = props['aria-hidden']) != null ? _props$ariaHidden : props.accessibilityElementsHidden,
      importantForAccessibility: props['aria-hidden'] === true ? 'no-hide-descendants' : props.importantForAccessibility,
      accessibilityLiveRegion: ariaLive === 'off' ? 'none' : ariaLive != null ? ariaLive : props.accessibilityLiveRegion,
      nativeID: (_props$id = props.id) != null ? _props$id : props.nativeID
    });
    for (var prop of PASSTHROUGH_PROPS) {
      if (props[prop] !== undefined) {
        elementProps[prop] = props[prop];
      }
    }
    return React.cloneElement.apply(React, [element, elementProps].concat(children));
  }
},447,[1,203,248,287,119,251]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _virtualizedLists = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var VirtualizedList = _virtualizedLists.default.VirtualizedList;
  var _default = exports.default = VirtualizedList;
},448,[1,345]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _virtualizedLists = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var VirtualizedSectionList = _virtualizedLists.default.VirtualizedSectionList;
  var _default = exports.default = VirtualizedSectionList;
},449,[1,345]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _NativeActionSheetManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _excluded = ["tintColor", "cancelButtonTintColor", "disabledButtonTintColor", "destructiveButtonIndex"];
  var ActionSheetIOS = {
    showActionSheetWithOptions: function showActionSheetWithOptions(options, callback) {
      _$$_REQUIRE(_dependencyMap[3])(typeof options === 'object' && options !== null, 'Options must be a valid object');
      _$$_REQUIRE(_dependencyMap[3])(typeof callback === 'function', 'Must provide a valid callback');
      _$$_REQUIRE(_dependencyMap[3])(_NativeActionSheetManager.default, "ActionSheetManager doesn't exist");
      var tintColor = options.tintColor,
        cancelButtonTintColor = options.cancelButtonTintColor,
        disabledButtonTintColor = options.disabledButtonTintColor,
        destructiveButtonIndex = options.destructiveButtonIndex,
        remainingOptions = (0, _objectWithoutProperties2.default)(options, _excluded);
      var destructiveButtonIndices = null;
      if (Array.isArray(destructiveButtonIndex)) {
        destructiveButtonIndices = destructiveButtonIndex;
      } else if (typeof destructiveButtonIndex === 'number') {
        destructiveButtonIndices = [destructiveButtonIndex];
      }
      var processedTintColor = _$$_REQUIRE(_dependencyMap[4]).default(tintColor);
      var processedCancelButtonTintColor = _$$_REQUIRE(_dependencyMap[4]).default(cancelButtonTintColor);
      var processedDisabledButtonTintColor = _$$_REQUIRE(_dependencyMap[4]).default(disabledButtonTintColor);
      _$$_REQUIRE(_dependencyMap[3])(processedTintColor == null || typeof processedTintColor === 'number', 'Unexpected color given for ActionSheetIOS.showActionSheetWithOptions tintColor');
      _$$_REQUIRE(_dependencyMap[3])(processedCancelButtonTintColor == null || typeof processedCancelButtonTintColor === 'number', 'Unexpected color given for ActionSheetIOS.showActionSheetWithOptions cancelButtonTintColor');
      _$$_REQUIRE(_dependencyMap[3])(processedDisabledButtonTintColor == null || typeof processedDisabledButtonTintColor === 'number', 'Unexpected color given for ActionSheetIOS.showActionSheetWithOptions disabledButtonTintColor');
      _NativeActionSheetManager.default.showActionSheetWithOptions(Object.assign({}, remainingOptions, {
        tintColor: processedTintColor,
        cancelButtonTintColor: processedCancelButtonTintColor,
        disabledButtonTintColor: processedDisabledButtonTintColor,
        destructiveButtonIndices: destructiveButtonIndices
      }), callback);
    },
    showShareActionSheetWithOptions: function showShareActionSheetWithOptions(options, failureCallback, successCallback) {
      _$$_REQUIRE(_dependencyMap[3])(typeof options === 'object' && options !== null, 'Options must be a valid object');
      _$$_REQUIRE(_dependencyMap[3])(typeof failureCallback === 'function', 'Must provide a valid failureCallback');
      _$$_REQUIRE(_dependencyMap[3])(typeof successCallback === 'function', 'Must provide a valid successCallback');
      _$$_REQUIRE(_dependencyMap[3])(_NativeActionSheetManager.default, "ActionSheetManager doesn't exist");
      _NativeActionSheetManager.default.showShareActionSheetWithOptions(Object.assign({}, options, {
        tintColor: _$$_REQUIRE(_dependencyMap[4]).default(options.tintColor)
      }), failureCallback, successCallback);
    },
    dismissActionSheet: function dismissActionSheet() {
      _$$_REQUIRE(_dependencyMap[3])(_NativeActionSheetManager.default, "ActionSheetManager doesn't exist");
      if (typeof _NativeActionSheetManager.default.dismissActionSheet === 'function') {
        _NativeActionSheetManager.default.dismissActionSheet();
      }
    }
  };
  var _default = exports.default = ActionSheetIOS;
},450,[1,203,451,20,89]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeActionSheetManager = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeActionSheetManager).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeActionSheetManager[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeActionSheetManager[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeActionSheetManager.default;
},451,[452]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.get('ActionSheetManager');
},452,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.addChangeListener = addChangeListener;
  exports.getColorScheme = getColorScheme;
  exports.setColorScheme = setColorScheme;
  var _NativeEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _EventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var lazyState;
  function getState() {
    if (lazyState != null) {
      return lazyState;
    }
    var eventEmitter = new _EventEmitter.default();
    var NativeAppearance = _$$_REQUIRE(_dependencyMap[4]).default;
    if (NativeAppearance == null) {
      lazyState = {
        NativeAppearance: null,
        appearance: null,
        eventEmitter: eventEmitter
      };
    } else {
      var state = {
        NativeAppearance: NativeAppearance,
        appearance: null,
        eventEmitter: eventEmitter
      };
      new _NativeEventEmitter.default(NativeAppearance).addListener('appearanceChanged', function (newAppearance) {
        state.appearance = {
          colorScheme: toColorScheme(newAppearance.colorScheme)
        };
        eventEmitter.emit('change', state.appearance);
      });
      lazyState = state;
    }
    return lazyState;
  }
  function getColorScheme() {
    var colorScheme = null;
    var state = getState();
    var NativeAppearance = state.NativeAppearance;
    if (NativeAppearance != null) {
      if (state.appearance == null) {
        state.appearance = {
          colorScheme: toColorScheme(NativeAppearance.getColorScheme())
        };
      }
      colorScheme = state.appearance.colorScheme;
    }
    return colorScheme;
  }
  function setColorScheme(colorScheme) {
    var state = getState();
    var NativeAppearance = state.NativeAppearance;
    if (NativeAppearance != null) {
      NativeAppearance.setColorScheme(colorScheme != null ? colorScheme : 'unspecified');
      state.appearance = {
        colorScheme: toColorScheme(NativeAppearance.getColorScheme())
      };
    }
  }
  function addChangeListener(listener) {
    var _getState = getState(),
      eventEmitter = _getState.eventEmitter;
    return eventEmitter.addListener('change', listener);
  }
  function toColorScheme(colorScheme) {
    (0, _invariant.default)(colorScheme === 'dark' || colorScheme === 'light' || colorScheme == null, "Unrecognized color scheme. Did you mean 'dark', 'light' or null?");
    return colorScheme;
  }
},453,[1,191,30,20,454]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _NativeAppearance = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _default = exports.default = _NativeAppearance.default;
},454,[1,455]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.get('Appearance');
},455,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _NativeEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _logError = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _NativeAppState = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var AppStateImpl = /*#__PURE__*/function () {
    function AppStateImpl() {
      var _this = this;
      (0, _classCallCheck2.default)(this, AppStateImpl);
      this.currentState = null;
      if (_NativeAppState.default == null) {
        this.isAvailable = false;
      } else {
        this.isAvailable = true;
        var emitter = new _NativeEventEmitter.default(_Platform.default.OS !== 'ios' ? null : _NativeAppState.default);
        this._emitter = emitter;
        this.currentState = _NativeAppState.default.getConstants().initialAppState;
        var eventUpdated = false;
        emitter.addListener('appStateDidChange', function (appStateData) {
          eventUpdated = true;
          _this.currentState = appStateData.app_state;
        });
        _NativeAppState.default.getCurrentAppState(function (appStateData) {
          if (!eventUpdated && _this.currentState !== appStateData.app_state) {
            _this.currentState = appStateData.app_state;
            emitter.emit('appStateDidChange', appStateData);
          }
        }, _logError.default);
      }
    }
    return (0, _createClass2.default)(AppStateImpl, [{
      key: "addEventListener",
      value: function addEventListener(type, handler) {
        var emitter = this._emitter;
        if (emitter == null) {
          throw new Error('Cannot use AppState when `isAvailable` is false.');
        }
        switch (type) {
          case 'change':
            var changeHandler = handler;
            return emitter.addListener('appStateDidChange', function (appStateData) {
              changeHandler(appStateData.app_state);
            });
          case 'memoryWarning':
            var memoryWarningHandler = handler;
            return emitter.addListener('memoryWarning', memoryWarningHandler);
          case 'blur':
          case 'focus':
            var focusOrBlurHandler = handler;
            return emitter.addListener('appStateFocusChange', function (hasFocus) {
              if (type === 'blur' && !hasFocus) {
                focusOrBlurHandler();
              }
              if (type === 'focus' && hasFocus) {
                focusOrBlurHandler();
              }
            });
        }
        throw new Error('Trying to subscribe to unknown event: ' + type);
      }
    }]);
  }();
  var AppState = new AppStateImpl();
  var _default = exports.default = AppState;
},456,[1,12,13,191,457,33,458]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var logError = function logError() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    if (args.length === 1 && args[0] instanceof Error) {
      var err = args[0];
      console.error('Error: "' + err.message + '".  Stack:\n' + err.stack);
    } else {
      console.error.apply(console, args);
    }
  };
  var _default = exports.default = logError;
},457,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeAppState = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeAppState).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeAppState[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeAppState[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeAppState.default;
},458,[459]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.getEnforcing('AppState');
},459,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _NativeClipboard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _default = exports.default = {
    getString: function getString() {
      return _NativeClipboard.default.getString();
    },
    setString: function setString(content) {
      _NativeClipboard.default.setString(content);
    }
  };
},460,[1,461]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeClipboard = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeClipboard).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeClipboard[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeClipboard[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeClipboard.default;
},461,[462]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.getEnforcing('Clipboard');
},462,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _NativeDeviceInfo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _default = exports.default = _NativeDeviceInfo.default;
},463,[1,114]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _NativeDevMenu = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var DevMenu = {
    show: function show() {}
  };
  var _default = exports.default = DevMenu;
},464,[1,465]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.getEnforcing('DevMenu');
},465,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _NativeEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _NativeDevSettings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var DevSettings = {
    addMenuItem: function addMenuItem(title, handler) {},
    reload: function reload(reason) {},
    onFastRefresh: function onFastRefresh() {}
  };
  var _default = exports.default = DevSettings;
},466,[1,191,467,33]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeDevSettings = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeDevSettings).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeDevSettings[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeDevSettings[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeDevSettings.default;
},467,[468]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.getEnforcing('DevSettings');
},468,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _NativeEventEmitter2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _NativeIntentAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _NativeLinkingManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  var _nullthrows = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var LinkingImpl = /*#__PURE__*/function (_NativeEventEmitter) {
    function LinkingImpl() {
      (0, _classCallCheck2.default)(this, LinkingImpl);
      return _callSuper(this, LinkingImpl, [_Platform.default.OS === 'ios' ? (0, _nullthrows.default)(_NativeLinkingManager.default) : undefined]);
    }
    (0, _inherits2.default)(LinkingImpl, _NativeEventEmitter);
    return (0, _createClass2.default)(LinkingImpl, [{
      key: "addEventListener",
      value: function addEventListener(eventType, listener) {
        return this.addListener(eventType, listener);
      }
    }, {
      key: "openURL",
      value: function openURL(url) {
        this._validateURL(url);
        if (_Platform.default.OS === 'android') {
          return (0, _nullthrows.default)(_NativeIntentAndroid.default).openURL(url);
        } else {
          return (0, _nullthrows.default)(_NativeLinkingManager.default).openURL(url);
        }
      }
    }, {
      key: "canOpenURL",
      value: function canOpenURL(url) {
        this._validateURL(url);
        if (_Platform.default.OS === 'android') {
          return (0, _nullthrows.default)(_NativeIntentAndroid.default).canOpenURL(url);
        } else {
          return (0, _nullthrows.default)(_NativeLinkingManager.default).canOpenURL(url);
        }
      }
    }, {
      key: "openSettings",
      value: function openSettings() {
        if (_Platform.default.OS === 'android') {
          return (0, _nullthrows.default)(_NativeIntentAndroid.default).openSettings();
        } else {
          return (0, _nullthrows.default)(_NativeLinkingManager.default).openSettings();
        }
      }
    }, {
      key: "getInitialURL",
      value: function getInitialURL() {
        return _Platform.default.OS === 'android' ? (0, _nullthrows.default)(_NativeIntentAndroid.default).getInitialURL() : (0, _nullthrows.default)(_NativeLinkingManager.default).getInitialURL();
      }
    }, {
      key: "sendIntent",
      value: function sendIntent(action, extras) {
        if (_Platform.default.OS === 'android') {
          return (0, _nullthrows.default)(_NativeIntentAndroid.default).sendIntent(action, extras);
        } else {
          return new Promise(function (resolve, reject) {
            return reject(new Error('Unsupported'));
          });
        }
      }
    }, {
      key: "_validateURL",
      value: function _validateURL(url) {
        (0, _invariant.default)(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);
        (0, _invariant.default)(url, 'Invalid URL: cannot be empty');
      }
    }]);
  }(_NativeEventEmitter2.default);
  var Linking = new LinkingImpl();
  var _default = exports.default = Linking;
},469,[1,12,13,23,25,28,191,33,470,472,20,45]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeIntentAndroid = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeIntentAndroid).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeIntentAndroid[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeIntentAndroid[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeIntentAndroid.default;
},470,[471]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.get('IntentAndroid');
},471,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeLinkingManager = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeLinkingManager).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeLinkingManager[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeLinkingManager[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeLinkingManager.default;
},472,[473]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.get('LinkingManager');
},473,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _RCTLog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var LogBox;
  {
    LogBox = {
      install: function install() {},
      uninstall: function uninstall() {},
      isInstalled: function isInstalled() {
        return false;
      },
      ignoreLogs: function ignoreLogs(patterns) {},
      ignoreAllLogs: function ignoreAllLogs(value) {},
      clearAllLogs: function clearAllLogs() {},
      addLog: function addLog(log) {},
      addException: function addException(error) {}
    };
  }
  var _default = exports.default = LogBox;
},474,[1,33,227,119]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var currentCentroidXOfTouchesChangedAfter = _$$_REQUIRE(_dependencyMap[0]).default.currentCentroidXOfTouchesChangedAfter;
  var currentCentroidYOfTouchesChangedAfter = _$$_REQUIRE(_dependencyMap[0]).default.currentCentroidYOfTouchesChangedAfter;
  var previousCentroidXOfTouchesChangedAfter = _$$_REQUIRE(_dependencyMap[0]).default.previousCentroidXOfTouchesChangedAfter;
  var previousCentroidYOfTouchesChangedAfter = _$$_REQUIRE(_dependencyMap[0]).default.previousCentroidYOfTouchesChangedAfter;
  var currentCentroidX = _$$_REQUIRE(_dependencyMap[0]).default.currentCentroidX;
  var currentCentroidY = _$$_REQUIRE(_dependencyMap[0]).default.currentCentroidY;
  var PanResponder = {
    _initializeGestureState: function _initializeGestureState(gestureState) {
      gestureState.moveX = 0;
      gestureState.moveY = 0;
      gestureState.x0 = 0;
      gestureState.y0 = 0;
      gestureState.dx = 0;
      gestureState.dy = 0;
      gestureState.vx = 0;
      gestureState.vy = 0;
      gestureState.numberActiveTouches = 0;
      gestureState._accountsForMovesUpTo = 0;
    },
    _updateGestureStateOnMove: function _updateGestureStateOnMove(gestureState, touchHistory) {
      gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
      gestureState.moveX = currentCentroidXOfTouchesChangedAfter(touchHistory, gestureState._accountsForMovesUpTo);
      gestureState.moveY = currentCentroidYOfTouchesChangedAfter(touchHistory, gestureState._accountsForMovesUpTo);
      var movedAfter = gestureState._accountsForMovesUpTo;
      var prevX = previousCentroidXOfTouchesChangedAfter(touchHistory, movedAfter);
      var x = currentCentroidXOfTouchesChangedAfter(touchHistory, movedAfter);
      var prevY = previousCentroidYOfTouchesChangedAfter(touchHistory, movedAfter);
      var y = currentCentroidYOfTouchesChangedAfter(touchHistory, movedAfter);
      var nextDX = gestureState.dx + (x - prevX);
      var nextDY = gestureState.dy + (y - prevY);
      var dt = touchHistory.mostRecentTimeStamp - gestureState._accountsForMovesUpTo;
      gestureState.vx = (nextDX - gestureState.dx) / dt;
      gestureState.vy = (nextDY - gestureState.dy) / dt;
      gestureState.dx = nextDX;
      gestureState.dy = nextDY;
      gestureState._accountsForMovesUpTo = touchHistory.mostRecentTimeStamp;
    },
    create: function create(config) {
      var interactionState = {
        handle: null
      };
      var gestureState = {
        stateID: Math.random(),
        moveX: 0,
        moveY: 0,
        x0: 0,
        y0: 0,
        dx: 0,
        dy: 0,
        vx: 0,
        vy: 0,
        numberActiveTouches: 0,
        _accountsForMovesUpTo: 0
      };
      var panHandlers = {
        onStartShouldSetResponder: function onStartShouldSetResponder(event) {
          return config.onStartShouldSetPanResponder == null ? false : config.onStartShouldSetPanResponder(event, gestureState);
        },
        onMoveShouldSetResponder: function onMoveShouldSetResponder(event) {
          return config.onMoveShouldSetPanResponder == null ? false : config.onMoveShouldSetPanResponder(event, gestureState);
        },
        onStartShouldSetResponderCapture: function onStartShouldSetResponderCapture(event) {
          if (event.nativeEvent.touches.length === 1) {
            PanResponder._initializeGestureState(gestureState);
          }
          gestureState.numberActiveTouches = event.touchHistory.numberActiveTouches;
          return config.onStartShouldSetPanResponderCapture != null ? config.onStartShouldSetPanResponderCapture(event, gestureState) : false;
        },
        onMoveShouldSetResponderCapture: function onMoveShouldSetResponderCapture(event) {
          var touchHistory = event.touchHistory;
          if (gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp) {
            return false;
          }
          PanResponder._updateGestureStateOnMove(gestureState, touchHistory);
          return config.onMoveShouldSetPanResponderCapture ? config.onMoveShouldSetPanResponderCapture(event, gestureState) : false;
        },
        onResponderGrant: function onResponderGrant(event) {
          if (!interactionState.handle) {
            interactionState.handle = _$$_REQUIRE(_dependencyMap[1]).default.createInteractionHandle();
          }
          gestureState.x0 = currentCentroidX(event.touchHistory);
          gestureState.y0 = currentCentroidY(event.touchHistory);
          gestureState.dx = 0;
          gestureState.dy = 0;
          if (config.onPanResponderGrant) {
            config.onPanResponderGrant(event, gestureState);
          }
          return config.onShouldBlockNativeResponder == null ? true : config.onShouldBlockNativeResponder(event, gestureState);
        },
        onResponderReject: function onResponderReject(event) {
          clearInteractionHandle(interactionState, config.onPanResponderReject, event, gestureState);
        },
        onResponderRelease: function onResponderRelease(event) {
          clearInteractionHandle(interactionState, config.onPanResponderRelease, event, gestureState);
          PanResponder._initializeGestureState(gestureState);
        },
        onResponderStart: function onResponderStart(event) {
          var touchHistory = event.touchHistory;
          gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
          if (config.onPanResponderStart) {
            config.onPanResponderStart(event, gestureState);
          }
        },
        onResponderMove: function onResponderMove(event) {
          var touchHistory = event.touchHistory;
          if (gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp) {
            return;
          }
          PanResponder._updateGestureStateOnMove(gestureState, touchHistory);
          if (config.onPanResponderMove) {
            config.onPanResponderMove(event, gestureState);
          }
        },
        onResponderEnd: function onResponderEnd(event) {
          var touchHistory = event.touchHistory;
          gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
          clearInteractionHandle(interactionState, config.onPanResponderEnd, event, gestureState);
        },
        onResponderTerminate: function onResponderTerminate(event) {
          clearInteractionHandle(interactionState, config.onPanResponderTerminate, event, gestureState);
          PanResponder._initializeGestureState(gestureState);
        },
        onResponderTerminationRequest: function onResponderTerminationRequest(event) {
          return config.onPanResponderTerminationRequest == null ? true : config.onPanResponderTerminationRequest(event, gestureState);
        }
      };
      return {
        panHandlers: panHandlers,
        getInteractionHandle: function getInteractionHandle() {
          return interactionState.handle;
        }
      };
    }
  };
  function clearInteractionHandle(interactionState, callback, event, gestureState) {
    if (interactionState.handle) {
      _$$_REQUIRE(_dependencyMap[1]).default.clearInteractionHandle(interactionState.handle);
      interactionState.handle = null;
    }
    if (callback) {
      callback(event, gestureState);
    }
  }
  var _default = exports.default = PanResponder;
},475,[476,318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TouchHistoryMath = {
    centroidDimension: function centroidDimension(touchHistory, touchesChangedAfter, isXAxis, ofCurrent) {
      var touchBank = touchHistory.touchBank;
      var total = 0;
      var count = 0;
      var oneTouchData = touchHistory.numberActiveTouches === 1 ? touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch] : null;
      if (oneTouchData !== null) {
        if (oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter) {
          total += ofCurrent && isXAxis ? oneTouchData.currentPageX : ofCurrent && !isXAxis ? oneTouchData.currentPageY : !ofCurrent && isXAxis ? oneTouchData.previousPageX : oneTouchData.previousPageY;
          count = 1;
        }
      } else {
        for (var i = 0; i < touchBank.length; i++) {
          var touchTrack = touchBank[i];
          if (touchTrack !== null && touchTrack !== undefined && touchTrack.touchActive && touchTrack.currentTimeStamp >= touchesChangedAfter) {
            var toAdd = undefined;
            if (ofCurrent && isXAxis) {
              toAdd = touchTrack.currentPageX;
            } else if (ofCurrent && !isXAxis) {
              toAdd = touchTrack.currentPageY;
            } else if (!ofCurrent && isXAxis) {
              toAdd = touchTrack.previousPageX;
            } else {
              toAdd = touchTrack.previousPageY;
            }
            total += toAdd;
            count++;
          }
        }
      }
      return count > 0 ? total / count : TouchHistoryMath.noCentroid;
    },
    currentCentroidXOfTouchesChangedAfter: function currentCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, true, true);
    },
    currentCentroidYOfTouchesChangedAfter: function currentCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, false, true);
    },
    previousCentroidXOfTouchesChangedAfter: function previousCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, true, false);
    },
    previousCentroidYOfTouchesChangedAfter: function previousCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, false, false);
    },
    currentCentroidX: function currentCentroidX(touchHistory) {
      return TouchHistoryMath.centroidDimension(touchHistory, 0, true, true);
    },
    currentCentroidY: function currentCentroidY(touchHistory) {
      return TouchHistoryMath.centroidDimension(touchHistory, 0, false, true);
    },
    noCentroid: -1
  };
  var _default = exports.default = TouchHistoryMath;
},476,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _asyncToGenerator2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _NativeDialogManagerAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _NativePermissionsAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var PERMISSION_REQUEST_RESULT = Object.freeze({
    GRANTED: 'granted',
    DENIED: 'denied',
    NEVER_ASK_AGAIN: 'never_ask_again'
  });
  var PERMISSIONS = Object.freeze({
    READ_CALENDAR: 'android.permission.READ_CALENDAR',
    WRITE_CALENDAR: 'android.permission.WRITE_CALENDAR',
    CAMERA: 'android.permission.CAMERA',
    READ_CONTACTS: 'android.permission.READ_CONTACTS',
    WRITE_CONTACTS: 'android.permission.WRITE_CONTACTS',
    GET_ACCOUNTS: 'android.permission.GET_ACCOUNTS',
    ACCESS_FINE_LOCATION: 'android.permission.ACCESS_FINE_LOCATION',
    ACCESS_COARSE_LOCATION: 'android.permission.ACCESS_COARSE_LOCATION',
    ACCESS_BACKGROUND_LOCATION: 'android.permission.ACCESS_BACKGROUND_LOCATION',
    RECORD_AUDIO: 'android.permission.RECORD_AUDIO',
    READ_PHONE_STATE: 'android.permission.READ_PHONE_STATE',
    CALL_PHONE: 'android.permission.CALL_PHONE',
    READ_CALL_LOG: 'android.permission.READ_CALL_LOG',
    WRITE_CALL_LOG: 'android.permission.WRITE_CALL_LOG',
    ADD_VOICEMAIL: 'com.android.voicemail.permission.ADD_VOICEMAIL',
    READ_VOICEMAIL: 'com.android.voicemail.permission.READ_VOICEMAIL',
    WRITE_VOICEMAIL: 'com.android.voicemail.permission.WRITE_VOICEMAIL',
    USE_SIP: 'android.permission.USE_SIP',
    PROCESS_OUTGOING_CALLS: 'android.permission.PROCESS_OUTGOING_CALLS',
    BODY_SENSORS: 'android.permission.BODY_SENSORS',
    BODY_SENSORS_BACKGROUND: 'android.permission.BODY_SENSORS_BACKGROUND',
    SEND_SMS: 'android.permission.SEND_SMS',
    RECEIVE_SMS: 'android.permission.RECEIVE_SMS',
    READ_SMS: 'android.permission.READ_SMS',
    RECEIVE_WAP_PUSH: 'android.permission.RECEIVE_WAP_PUSH',
    RECEIVE_MMS: 'android.permission.RECEIVE_MMS',
    READ_EXTERNAL_STORAGE: 'android.permission.READ_EXTERNAL_STORAGE',
    READ_MEDIA_IMAGES: 'android.permission.READ_MEDIA_IMAGES',
    READ_MEDIA_VIDEO: 'android.permission.READ_MEDIA_VIDEO',
    READ_MEDIA_AUDIO: 'android.permission.READ_MEDIA_AUDIO',
    READ_MEDIA_VISUAL_USER_SELECTED: 'android.permission.READ_MEDIA_VISUAL_USER_SELECTED',
    WRITE_EXTERNAL_STORAGE: 'android.permission.WRITE_EXTERNAL_STORAGE',
    BLUETOOTH_CONNECT: 'android.permission.BLUETOOTH_CONNECT',
    BLUETOOTH_SCAN: 'android.permission.BLUETOOTH_SCAN',
    BLUETOOTH_ADVERTISE: 'android.permission.BLUETOOTH_ADVERTISE',
    ACCESS_MEDIA_LOCATION: 'android.permission.ACCESS_MEDIA_LOCATION',
    ACCEPT_HANDOVER: 'android.permission.ACCEPT_HANDOVER',
    ACTIVITY_RECOGNITION: 'android.permission.ACTIVITY_RECOGNITION',
    ANSWER_PHONE_CALLS: 'android.permission.ANSWER_PHONE_CALLS',
    READ_PHONE_NUMBERS: 'android.permission.READ_PHONE_NUMBERS',
    UWB_RANGING: 'android.permission.UWB_RANGING',
    POST_NOTIFICATIONS: 'android.permission.POST_NOTIFICATIONS',
    NEARBY_WIFI_DEVICES: 'android.permission.NEARBY_WIFI_DEVICES'
  });
  var PermissionsAndroid = /*#__PURE__*/function () {
    function PermissionsAndroid() {
      (0, _classCallCheck2.default)(this, PermissionsAndroid);
      this.PERMISSIONS = PERMISSIONS;
      this.RESULTS = PERMISSION_REQUEST_RESULT;
    }
    return (0, _createClass2.default)(PermissionsAndroid, [{
      key: "checkPermission",
      value: function checkPermission(permission) {
        console.warn('"PermissionsAndroid.checkPermission" is deprecated. Use "PermissionsAndroid.check" instead');
        (0, _invariant.default)(_NativePermissionsAndroid.default, 'PermissionsAndroid is not installed correctly.');
        return _NativePermissionsAndroid.default.checkPermission(permission);
      }
    }, {
      key: "check",
      value: function check(permission) {
        (0, _invariant.default)(_NativePermissionsAndroid.default, 'PermissionsAndroid is not installed correctly.');
        return _NativePermissionsAndroid.default.checkPermission(permission);
      }
    }, {
      key: "requestPermission",
      value: function () {
        var _requestPermission = (0, _asyncToGenerator2.default)(function* (permission, rationale) {
          console.warn('"PermissionsAndroid.requestPermission" is deprecated. Use "PermissionsAndroid.request" instead');
          var response = yield this.request(permission, rationale);
          return response === this.RESULTS.GRANTED;
        });
        function requestPermission(_x, _x2) {
          return _requestPermission.apply(this, arguments);
        }
        return requestPermission;
      }()
    }, {
      key: "request",
      value: function () {
        var _request = (0, _asyncToGenerator2.default)(function* (permission, rationale) {
          (0, _invariant.default)(_NativePermissionsAndroid.default, 'PermissionsAndroid is not installed correctly.');
          if (rationale) {
            var shouldShowRationale = yield _NativePermissionsAndroid.default.shouldShowRequestPermissionRationale(permission);
            if (shouldShowRationale && !!_NativeDialogManagerAndroid.default) {
              return new Promise(function (resolve, reject) {
                var options = Object.assign({}, rationale);
                _NativeDialogManagerAndroid.default.showAlert(options, function () {
                  return reject(new Error('Error showing rationale'));
                }, function () {
                  return resolve(_NativePermissionsAndroid.default.requestPermission(permission));
                });
              });
            }
          }
          return _NativePermissionsAndroid.default.requestPermission(permission);
        });
        function request(_x3, _x4) {
          return _request.apply(this, arguments);
        }
        return request;
      }()
    }, {
      key: "requestMultiple",
      value: function requestMultiple(permissions) {
        (0, _invariant.default)(_NativePermissionsAndroid.default, 'PermissionsAndroid is not installed correctly.');
        return _NativePermissionsAndroid.default.requestMultiplePermissions(permissions);
      }
    }]);
  }();
  var PermissionsAndroidInstance = new PermissionsAndroid();
  var _default = exports.default = PermissionsAndroidInstance;
},477,[1,363,12,13,223,478,20]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativePermissionsAndroid = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativePermissionsAndroid).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativePermissionsAndroid[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativePermissionsAndroid[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativePermissionsAndroid.default;
},478,[479]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.get('PermissionsAndroid');
},479,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _NativeEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _NativePushNotificationManagerIOS = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var PushNotificationEmitter = new _NativeEventEmitter.default(_Platform.default.OS !== 'ios' ? null : _NativePushNotificationManagerIOS.default);
  var _notifHandlers = new Map();
  var DEVICE_NOTIF_EVENT = 'remoteNotificationReceived';
  var NOTIF_REGISTER_EVENT = 'remoteNotificationsRegistered';
  var NOTIF_REGISTRATION_ERROR_EVENT = 'remoteNotificationRegistrationError';
  var DEVICE_LOCAL_NOTIF_EVENT = 'localNotificationReceived';
  var PushNotificationIOS = /*#__PURE__*/function () {
    function PushNotificationIOS(nativeNotif) {
      var _this = this;
      (0, _classCallCheck2.default)(this, PushNotificationIOS);
      this._data = {};
      this._remoteNotificationCompleteCallbackCalled = false;
      this._isRemote = nativeNotif.remote;
      if (this._isRemote) {
        this._notificationId = nativeNotif.notificationId;
      }
      if (nativeNotif.remote) {
        Object.keys(nativeNotif).forEach(function (notifKey) {
          var notifVal = nativeNotif[notifKey];
          if (notifKey === 'aps') {
            _this._alert = notifVal.alert;
            _this._sound = notifVal.sound;
            _this._badgeCount = notifVal.badge;
            _this._category = notifVal.category;
            _this._contentAvailable = notifVal['content-available'];
            _this._threadID = notifVal['thread-id'];
          } else {
            _this._data[notifKey] = notifVal;
          }
        });
      } else {
        this._badgeCount = nativeNotif.applicationIconBadgeNumber;
        this._sound = nativeNotif.soundName;
        this._alert = nativeNotif.alertBody;
        this._data = nativeNotif.userInfo;
        this._category = nativeNotif.category;
      }
    }
    return (0, _createClass2.default)(PushNotificationIOS, [{
      key: "finish",
      value: function finish(fetchResult) {
        if (!this._isRemote || !this._notificationId || this._remoteNotificationCompleteCallbackCalled) {
          return;
        }
        this._remoteNotificationCompleteCallbackCalled = true;
        (0, _invariant.default)(_NativePushNotificationManagerIOS.default, 'PushNotificationManager is not available.');
        _NativePushNotificationManagerIOS.default.onFinishRemoteNotification(this._notificationId, fetchResult);
      }
    }, {
      key: "getMessage",
      value: function getMessage() {
        return this._alert;
      }
    }, {
      key: "getSound",
      value: function getSound() {
        return this._sound;
      }
    }, {
      key: "getCategory",
      value: function getCategory() {
        return this._category;
      }
    }, {
      key: "getAlert",
      value: function getAlert() {
        return this._alert;
      }
    }, {
      key: "getContentAvailable",
      value: function getContentAvailable() {
        return this._contentAvailable;
      }
    }, {
      key: "getBadgeCount",
      value: function getBadgeCount() {
        return this._badgeCount;
      }
    }, {
      key: "getData",
      value: function getData() {
        return this._data;
      }
    }, {
      key: "getThreadID",
      value: function getThreadID() {
        return this._threadID;
      }
    }], [{
      key: "presentLocalNotification",
      value: function presentLocalNotification(details) {
        (0, _invariant.default)(_NativePushNotificationManagerIOS.default, 'PushNotificationManager is not available.');
        _NativePushNotificationManagerIOS.default.presentLocalNotification(details);
      }
    }, {
      key: "scheduleLocalNotification",
      value: function scheduleLocalNotification(details) {
        (0, _invariant.default)(_NativePushNotificationManagerIOS.default, 'PushNotificationManager is not available.');
        _NativePushNotificationManagerIOS.default.scheduleLocalNotification(details);
      }
    }, {
      key: "cancelAllLocalNotifications",
      value: function cancelAllLocalNotifications() {
        (0, _invariant.default)(_NativePushNotificationManagerIOS.default, 'PushNotificationManager is not available.');
        _NativePushNotificationManagerIOS.default.cancelAllLocalNotifications();
      }
    }, {
      key: "removeAllDeliveredNotifications",
      value: function removeAllDeliveredNotifications() {
        (0, _invariant.default)(_NativePushNotificationManagerIOS.default, 'PushNotificationManager is not available.');
        _NativePushNotificationManagerIOS.default.removeAllDeliveredNotifications();
      }
    }, {
      key: "getDeliveredNotifications",
      value: function getDeliveredNotifications(callback) {
        (0, _invariant.default)(_NativePushNotificationManagerIOS.default, 'PushNotificationManager is not available.');
        _NativePushNotificationManagerIOS.default.getDeliveredNotifications(callback);
      }
    }, {
      key: "removeDeliveredNotifications",
      value: function removeDeliveredNotifications(identifiers) {
        (0, _invariant.default)(_NativePushNotificationManagerIOS.default, 'PushNotificationManager is not available.');
        _NativePushNotificationManagerIOS.default.removeDeliveredNotifications(identifiers);
      }
    }, {
      key: "setApplicationIconBadgeNumber",
      value: function setApplicationIconBadgeNumber(number) {
        (0, _invariant.default)(_NativePushNotificationManagerIOS.default, 'PushNotificationManager is not available.');
        _NativePushNotificationManagerIOS.default.setApplicationIconBadgeNumber(number);
      }
    }, {
      key: "getApplicationIconBadgeNumber",
      value: function getApplicationIconBadgeNumber(callback) {
        (0, _invariant.default)(_NativePushNotificationManagerIOS.default, 'PushNotificationManager is not available.');
        _NativePushNotificationManagerIOS.default.getApplicationIconBadgeNumber(callback);
      }
    }, {
      key: "cancelLocalNotifications",
      value: function cancelLocalNotifications(userInfo) {
        (0, _invariant.default)(_NativePushNotificationManagerIOS.default, 'PushNotificationManager is not available.');
        _NativePushNotificationManagerIOS.default.cancelLocalNotifications(userInfo);
      }
    }, {
      key: "getScheduledLocalNotifications",
      value: function getScheduledLocalNotifications(callback) {
        (0, _invariant.default)(_NativePushNotificationManagerIOS.default, 'PushNotificationManager is not available.');
        _NativePushNotificationManagerIOS.default.getScheduledLocalNotifications(callback);
      }
    }, {
      key: "addEventListener",
      value: function addEventListener(type, handler) {
        (0, _invariant.default)(type === 'notification' || type === 'register' || type === 'registrationError' || type === 'localNotification', 'PushNotificationIOS only supports `notification`, `register`, `registrationError`, and `localNotification` events');
        var listener;
        if (type === 'notification') {
          listener = PushNotificationEmitter.addListener(DEVICE_NOTIF_EVENT, function (notifData) {
            handler(new PushNotificationIOS(notifData));
          });
        } else if (type === 'localNotification') {
          listener = PushNotificationEmitter.addListener(DEVICE_LOCAL_NOTIF_EVENT, function (notifData) {
            handler(new PushNotificationIOS(notifData));
          });
        } else if (type === 'register') {
          listener = PushNotificationEmitter.addListener(NOTIF_REGISTER_EVENT, function (registrationInfo) {
            handler(registrationInfo.deviceToken);
          });
        } else if (type === 'registrationError') {
          listener = PushNotificationEmitter.addListener(NOTIF_REGISTRATION_ERROR_EVENT, function (errorInfo) {
            handler(errorInfo);
          });
        }
        _notifHandlers.set(type, listener);
      }
    }, {
      key: "removeEventListener",
      value: function removeEventListener(type) {
        (0, _invariant.default)(type === 'notification' || type === 'register' || type === 'registrationError' || type === 'localNotification', 'PushNotificationIOS only supports `notification`, `register`, `registrationError`, and `localNotification` events');
        var listener = _notifHandlers.get(type);
        if (!listener) {
          return;
        }
        listener.remove();
        _notifHandlers.delete(type);
      }
    }, {
      key: "requestPermissions",
      value: function requestPermissions(permissions) {
        var requestedPermissions = {
          alert: true,
          badge: true,
          sound: true
        };
        if (permissions) {
          requestedPermissions = {
            alert: !!permissions.alert,
            badge: !!permissions.badge,
            sound: !!permissions.sound
          };
        }
        (0, _invariant.default)(_NativePushNotificationManagerIOS.default, 'PushNotificationManager is not available.');
        return _NativePushNotificationManagerIOS.default.requestPermissions(requestedPermissions);
      }
    }, {
      key: "abandonPermissions",
      value: function abandonPermissions() {
        (0, _invariant.default)(_NativePushNotificationManagerIOS.default, 'PushNotificationManager is not available.');
        _NativePushNotificationManagerIOS.default.abandonPermissions();
      }
    }, {
      key: "checkPermissions",
      value: function checkPermissions(callback) {
        (0, _invariant.default)(typeof callback === 'function', 'Must provide a valid callback');
        (0, _invariant.default)(_NativePushNotificationManagerIOS.default, 'PushNotificationManager is not available.');
        _NativePushNotificationManagerIOS.default.checkPermissions(callback);
      }
    }, {
      key: "getInitialNotification",
      value: function getInitialNotification() {
        (0, _invariant.default)(_NativePushNotificationManagerIOS.default, 'PushNotificationManager is not available.');
        return _NativePushNotificationManagerIOS.default.getInitialNotification().then(function (notification) {
          return notification && new PushNotificationIOS(notification);
        });
      }
    }, {
      key: "getAuthorizationStatus",
      value: function getAuthorizationStatus(callback) {
        (0, _invariant.default)(_NativePushNotificationManagerIOS.default, 'PushNotificationManager is not available.');
        _NativePushNotificationManagerIOS.default.getAuthorizationStatus(callback);
      }
    }]);
  }();
  PushNotificationIOS.FetchResult = {
    NewData: 'UIBackgroundFetchResultNewData',
    NoData: 'UIBackgroundFetchResultNoData',
    ResultFailed: 'UIBackgroundFetchResultFailed'
  };
  var _default = exports.default = PushNotificationIOS;
},480,[1,12,13,191,33,481,20]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativePushNotificationManagerIOS = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativePushNotificationManagerIOS).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativePushNotificationManagerIOS[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativePushNotificationManagerIOS[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativePushNotificationManagerIOS.default;
},481,[482]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.get('PushNotificationManager');
},482,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var Settings = {
    get: function get(key) {
      console.warn('Settings is not yet supported on this platform.');
      return null;
    },
    set: function set(settings) {
      console.warn('Settings is not yet supported on this platform.');
    },
    watchKeys: function watchKeys(keys, callback) {
      console.warn('Settings is not yet supported on this platform.');
      return -1;
    },
    clearWatch: function clearWatch(watchId) {
      console.warn('Settings is not yet supported on this platform.');
    }
  };
  var _default = exports.default = Settings;
},483,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _NativeActionSheetManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _NativeShareModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var Share = /*#__PURE__*/function () {
    function Share() {
      (0, _classCallCheck2.default)(this, Share);
    }
    return (0, _createClass2.default)(Share, null, [{
      key: "share",
      value: function share(content) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        _$$_REQUIRE(_dependencyMap[5])(typeof content === 'object' && content !== null, 'Content to share must be a valid object');
        _$$_REQUIRE(_dependencyMap[5])(typeof content.url === 'string' || typeof content.message === 'string', 'At least one of URL or message is required');
        _$$_REQUIRE(_dependencyMap[5])(typeof options === 'object' && options !== null, 'Options must be a valid object');
        {
          _$$_REQUIRE(_dependencyMap[5])(_NativeShareModule.default, 'ShareModule should be registered on Android.');
          _$$_REQUIRE(_dependencyMap[5])(content.title == null || typeof content.title === 'string', 'Invalid title: title should be a string.');
          var newContent = {
            title: content.title,
            message: typeof content.message === 'string' ? content.message : undefined
          };
          return _NativeShareModule.default.share(newContent, options.dialogTitle).then(function (result) {
            return Object.assign({
              activityType: null
            }, result);
          });
        }
      }
    }]);
  }();
  Share.sharedAction = 'sharedAction';
  Share.dismissedAction = 'dismissedAction';
  var _default = exports.default = Share;
},484,[1,12,13,451,485,20]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeShareModule = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeShareModule).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeShareModule[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeShareModule[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeShareModule.default;
},485,[486]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.get('ShareModule');
},486,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _NativeToastAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var ToastAndroidConstants = _NativeToastAndroid.default.getConstants();
  var ToastAndroid = {
    SHORT: ToastAndroidConstants.SHORT,
    LONG: ToastAndroidConstants.LONG,
    TOP: ToastAndroidConstants.TOP,
    BOTTOM: ToastAndroidConstants.BOTTOM,
    CENTER: ToastAndroidConstants.CENTER,
    show: function show(message, duration) {
      _NativeToastAndroid.default.show(message, duration);
    },
    showWithGravity: function showWithGravity(message, duration, gravity) {
      _NativeToastAndroid.default.showWithGravity(message, duration, gravity);
    },
    showWithGravityAndOffset: function showWithGravityAndOffset(message, duration, gravity, xOffset, yOffset) {
      _NativeToastAndroid.default.showWithGravityAndOffset(message, duration, gravity, xOffset, yOffset);
    }
  };
  var _default = exports.default = ToastAndroid;
},487,[1,488]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeToastAndroid = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeToastAndroid).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeToastAndroid[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeToastAndroid[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeToastAndroid.default;
},488,[489]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.getEnforcing('ToastAndroid');
},489,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = useAnimatedValue;
  var _Animated = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _react = _$$_REQUIRE(_dependencyMap[2]);
  function useAnimatedValue(initialValue, config) {
    var ref = (0, _react.useRef)(null);
    if (ref.current == null) {
      ref.current = new _Animated.default.Value(initialValue, config);
    }
    return ref.current;
  }
},490,[1,299,119]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = useColorScheme;
  var _react = _$$_REQUIRE(_dependencyMap[0]);
  var subscribe = function subscribe(onStoreChange) {
    var appearanceSubscription = (0, _$$_REQUIRE(_dependencyMap[1]).addChangeListener)(onStoreChange);
    return function () {
      return appearanceSubscription.remove();
    };
  };
  function useColorScheme() {
    return (0, _react.useSyncExternalStore)(subscribe, _$$_REQUIRE(_dependencyMap[1]).getColorScheme);
  }
},491,[119,453]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var UTFSequence = _$$_REQUIRE(_dependencyMap[0]).default({
    BOM: "\uFEFF",
    BULLET: "\u2022",
    BULLET_SP: "\xA0\u2022\xA0",
    MIDDOT: "\xB7",
    MIDDOT_SP: "\xA0\xB7\xA0",
    MIDDOT_KATAKANA: "\u30FB",
    MDASH: "\u2014",
    MDASH_SP: "\xA0\u2014\xA0",
    NDASH: "\u2013",
    NDASH_SP: "\xA0\u2013\xA0",
    NEWLINE: "\n",
    NBSP: "\xA0",
    PIZZA: "\uD83C\uDF55",
    TRIANGLE_LEFT: "\u25C0",
    TRIANGLE_RIGHT: "\u25B6"
  });
  var _default = exports.default = UTFSequence;
},492,[263]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _NativeVibration = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _vibrating = false;
  var _id = 0;
  var _default_vibration_length = 400;
  function vibrateScheduler(id, pattern, repeat, nextIndex) {
    if (!_vibrating || id !== _id) {
      return;
    }
    _NativeVibration.default.vibrate(_default_vibration_length);
    if (nextIndex >= pattern.length) {
      if (repeat) {
        nextIndex = 0;
      } else {
        _vibrating = false;
        return;
      }
    }
    setTimeout(function () {
      return vibrateScheduler(id, pattern, repeat, nextIndex + 1);
    }, pattern[nextIndex]);
  }
  var Vibration = {
    vibrate: function vibrate() {
      var pattern = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _default_vibration_length;
      var repeat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      {
        if (typeof pattern === 'number') {
          _NativeVibration.default.vibrate(pattern);
        } else if (Array.isArray(pattern)) {
          _NativeVibration.default.vibrateByPattern(pattern, repeat ? 0 : -1);
        } else {
          throw new Error('Vibration pattern should be a number or array');
        }
      }
    },
    cancel: function cancel() {
      {
        _NativeVibration.default.cancel();
      }
    }
  };
  var _default = exports.default = Vibration;
},493,[1,494]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  exports.default = undefined;
  var _NativeVibration = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  Object.keys(_NativeVibration).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _NativeVibration[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _NativeVibration[key];
      }
    });
  });
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = _NativeVibration.default;
},494,[495]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = TurboModuleRegistry.getEnforcing('Vibration');
},495,[36]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.DynamicColorIOS = undefined;
  var DynamicColorIOS = exports.DynamicColorIOS = function DynamicColorIOS(tuple) {
    throw new Error('DynamicColorIOS is not available on this platform.');
  };
},496,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _reactNative = _$$_REQUIRE(_dependencyMap[2]);
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[3]);
  /**
   * Sample React Native App
   * https://github.com/facebook/react-native
   *
   * @format
   */

  function App() {
    var isDarkMode = (0, _reactNative.useColorScheme)() === 'dark';
    var backgroundStyle = {
      backgroundColor: isDarkMode ? _$$_REQUIRE(_dependencyMap[4]).Colors.darker : _$$_REQUIRE(_dependencyMap[4]).Colors.lighter
    };

    /*
     * To keep the template simple and small we're adding padding to prevent view
     * from rendering under the System UI.
     * For bigger apps the recommendation is to use `react-native-safe-area-context`:
     * https://github.com/AppAndFlow/react-native-safe-area-context
     *
     * You can read more about it here:
     * https://github.com/react-native-community/discussions-and-proposals/discussions/827
     */
    var safePadding = '5%';
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_$$_REQUIRE(_dependencyMap[5]).Provider, {
      store: _$$_REQUIRE(_dependencyMap[6]).weatherStore,
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_$$_REQUIRE(_dependencyMap[7]).ThemeProvider, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.View, {
          style: styles.appContainer,
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_$$_REQUIRE(_dependencyMap[8]).HomePage, {})
        })
      })
    });
  }
  var styles = _reactNative.StyleSheet.create({
    appContainer: {
      flex: 1,
      backgroundColor: "green"
    },
    sectionContainer: {
      marginTop: 32,
      paddingHorizontal: 24
    },
    sectionTitle: {
      fontSize: 24,
      fontWeight: '600'
    },
    sectionDescription: {
      marginTop: 8,
      fontSize: 18,
      fontWeight: '400'
    },
    highlight: {
      fontWeight: '700'
    }
  });
  var _default = exports.default = App;
},497,[1,119,2,251,498,509,512,578,579]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Colors", {
    enumerable: true,
    get: function get() {
      return _Colors.default;
    }
  });
  Object.defineProperty(exports, "DebugInstructions", {
    enumerable: true,
    get: function get() {
      return _DebugInstructions.default;
    }
  });
  Object.defineProperty(exports, "Header", {
    enumerable: true,
    get: function get() {
      return _Header.default;
    }
  });
  Object.defineProperty(exports, "HermesBadge", {
    enumerable: true,
    get: function get() {
      return _HermesBadge.default;
    }
  });
  Object.defineProperty(exports, "LearnMoreLinks", {
    enumerable: true,
    get: function get() {
      return _LearnMoreLinks.default;
    }
  });
  Object.defineProperty(exports, "ReloadInstructions", {
    enumerable: true,
    get: function get() {
      return _ReloadInstructions.default;
    }
  });
  var _Colors = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _DebugInstructions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _Header = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _HermesBadge = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _LearnMoreLinks = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _ReloadInstructions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
},498,[1,499,500,501,502,505,508]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = exports.default = {
    primary: '#1292B4',
    white: '#FFF',
    lighter: '#F3F3F3',
    light: '#DAE1E7',
    dark: '#444',
    darker: '#222',
    black: '#000'
  };
},499,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _StyleSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[5]);
  var styles = _StyleSheet.default.create({
    highlight: {
      fontWeight: '700'
    }
  });
  var DebugInstructions = _Platform.default.select({
    ios: function ios() {
      return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_Text.default, {
        children: ["Press ", /*#__PURE__*/(0, _jsxRuntime.jsx)(_Text.default, {
          style: styles.highlight,
          children: "Cmd + D"
        }), " in the simulator or", ' ', /*#__PURE__*/(0, _jsxRuntime.jsx)(_Text.default, {
          style: styles.highlight,
          children: "Shake"
        }), " your device to open the Dev Menu."]
      });
    },
    default: function _default() {
      return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_Text.default, {
        children: ["Press ", /*#__PURE__*/(0, _jsxRuntime.jsx)(_Text.default, {
          style: styles.highlight,
          children: "Cmd or Ctrl + M"
        }), " or", ' ', /*#__PURE__*/(0, _jsxRuntime.jsx)(_Text.default, {
          style: styles.highlight,
          children: "Shake"
        }), " your device to open the Dev Menu."]
      });
    }
  });
  var _default2 = exports.default = DebugInstructions;
},500,[1,253,285,33,119,251]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _ImageBackground = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _StyleSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _useColorScheme = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _Colors = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _HermesBadge = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[8]);
  var Header = function Header() {
    var isDarkMode = (0, _useColorScheme.default)() === 'dark';
    return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_ImageBackground.default, {
      accessibilityRole: "image",
      testID: "new-app-screen-header",
      source: _$$_REQUIRE(_dependencyMap[9]),
      style: [styles.background, {
        backgroundColor: isDarkMode ? _Colors.default.darker : _Colors.default.lighter
      }],
      imageStyle: styles.logo,
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_HermesBadge.default, {}), /*#__PURE__*/(0, _jsxRuntime.jsxs)(_Text.default, {
        style: [styles.text, {
          color: isDarkMode ? _Colors.default.white : _Colors.default.black
        }],
        children: ["Welcome to", '\n', "React Native"]
      })]
    });
  };
  var styles = _StyleSheet.default.create({
    background: {
      paddingBottom: 40,
      paddingTop: 96,
      paddingHorizontal: 32
    },
    logo: {
      opacity: 0.2,
      overflow: 'visible',
      resizeMode: 'cover',
      marginLeft: -128,
      marginBottom: -192
    },
    text: {
      fontSize: 40,
      fontWeight: '700',
      textAlign: 'center'
    }
  });
  var _default = exports.default = Header;
},501,[1,411,253,285,491,499,502,119,251,503]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _View = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _StyleSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _useColorScheme = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _Colors = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[7]);
  var HermesBadge = function HermesBadge() {
    var _global$HermesInterna, _global$HermesInterna2;
    var isDarkMode = (0, _useColorScheme.default)() === 'dark';
    var version = (_global$HermesInterna = (_global$HermesInterna2 = global.HermesInternal) == null ? undefined : _global$HermesInterna2.getRuntimeProperties == null ? undefined : _global$HermesInterna2.getRuntimeProperties()['OSS Release Version']) != null ? _global$HermesInterna : '';
    return global.HermesInternal ? /*#__PURE__*/(0, _jsxRuntime.jsx)(_View.default, {
      style: styles.badge,
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Text.default, {
        style: [styles.badgeText, {
          color: isDarkMode ? _Colors.default.light : _Colors.default.dark
        }],
        children: `Engine: Hermes ${version}`
      })
    }) : null;
  };
  var styles = _StyleSheet.default.create({
    badge: {
      position: 'absolute',
      right: 12,
      bottom: 8
    },
    badgeText: {
      fontSize: 14,
      fontWeight: '600',
      textAlign: 'right'
    }
  });
  var _default = exports.default = HermesBadge;
},502,[1,248,253,285,491,499,119,251]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/react-native/Libraries/NewAppScreen/components",
    "width": 512,
    "height": 512,
    "scales": [1],
    "hash": "3cf817075ffdc798cf13c457bf4c3bc5",
    "name": "logo",
    "type": "png"
  });
},503,[504]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  module.exports = _$$_REQUIRE(_dependencyMap[0]);
},504,[109]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _TouchableOpacity = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _View = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _openURLInBrowser = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _StyleSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _useColorScheme = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _Colors = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[9]);
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var links = [{
    id: 1,
    title: 'The Basics',
    link: 'https://reactnative.dev/docs/tutorial',
    description: 'Explains a Hello World for React Native.'
  }, {
    id: 2,
    title: 'Style',
    link: 'https://reactnative.dev/docs/style',
    description: 'Covers how to use the prop named style which controls the visuals.'
  }, {
    id: 3,
    title: 'Layout',
    link: 'https://reactnative.dev/docs/flexbox',
    description: 'React Native uses flexbox for layout, learn how it works.'
  }, {
    id: 4,
    title: 'Components',
    link: 'https://reactnative.dev/docs/components-and-apis',
    description: 'The full list of components and APIs inside React Native.'
  }, {
    id: 5,
    title: 'Navigation',
    link: 'https://reactnative.dev/docs/navigation',
    description: 'How to handle moving between screens inside your application.'
  }, {
    id: 6,
    title: 'Networking',
    link: 'https://reactnative.dev/docs/network',
    description: 'How to use the Fetch API in React Native.'
  }, {
    id: 7,
    title: 'Debugging',
    link: 'https://facebook.github.io/react-native/docs/debugging',
    description: 'Learn about the tools available to debug and inspect your app.'
  }, {
    id: 8,
    title: 'Help',
    link: 'https://facebook.github.io/react-native/help',
    description: 'Need more help? There are many other React Native developers who may have the answer.'
  }, {
    id: 9,
    title: 'Follow us',
    link: 'https://x.com/reactnative',
    description: 'Stay in touch with the community, join in on Q&As and more by following React Native on X.'
  }];
  var LinkList = function LinkList() {
    var isDarkMode = (0, _useColorScheme.default)() === 'dark';
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_View.default, {
      style: styles.container,
      children: links.map(function (_ref) {
        var id = _ref.id,
          title = _ref.title,
          link = _ref.link,
          description = _ref.description;
        return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_react.Fragment, {
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_View.default, {
            style: [styles.separator, {
              backgroundColor: isDarkMode ? _Colors.default.dark : _Colors.default.light
            }]
          }), /*#__PURE__*/(0, _jsxRuntime.jsxs)(_TouchableOpacity.default, {
            accessibilityRole: "button",
            onPress: function onPress() {
              return (0, _openURLInBrowser.default)(link);
            },
            style: styles.linkContainer,
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_Text.default, {
              style: styles.link,
              children: title
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_Text.default, {
              style: [styles.description, {
                color: isDarkMode ? _Colors.default.lighter : _Colors.default.dark
              }],
              children: description
            })]
          })]
        }, id);
      })
    });
  };
  var styles = _StyleSheet.default.create({
    container: {
      marginTop: 32,
      paddingHorizontal: 24
    },
    linkContainer: {
      flexWrap: 'wrap',
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'center',
      paddingVertical: 8
    },
    link: {
      flex: 2,
      fontSize: 18,
      fontWeight: '400',
      color: _Colors.default.primary
    },
    description: {
      flex: 3,
      paddingVertical: 16,
      fontWeight: '400',
      fontSize: 18
    },
    separator: {
      height: _StyleSheet.default.hairlineWidth
    }
  });
  var _default = exports.default = LinkList;
},505,[1,298,248,506,253,285,491,499,119,251]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = openURLInBrowser;
  function openURLInBrowser(url) {
    fetch(_$$_REQUIRE(_dependencyMap[0]).default().url + 'open-url', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        url: url
      })
    });
  }
},506,[507]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = getDevServer;
  var _NativeSourceCode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _cachedDevServerURL;
  var _cachedFullBundleURL;
  var FALLBACK = 'http://localhost:8081/';
  function getDevServer() {
    var _cachedDevServerURL2;
    if (_cachedDevServerURL === undefined) {
      var scriptUrl = _NativeSourceCode.default.getConstants().scriptURL;
      var match = scriptUrl.match(/^https?:\/\/.*?\//);
      _cachedDevServerURL = match ? match[0] : null;
      _cachedFullBundleURL = match ? scriptUrl : null;
    }
    return {
      url: (_cachedDevServerURL2 = _cachedDevServerURL) != null ? _cachedDevServerURL2 : FALLBACK,
      fullBundleUrl: _cachedFullBundleURL,
      bundleLoadedFromServer: _cachedDevServerURL !== null
    };
  }
},507,[1,107]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _StyleSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[5]);
  var styles = _StyleSheet.default.create({
    highlight: {
      fontWeight: '700'
    }
  });
  var ReloadInstructions = _Platform.default.select({
    ios: function ios() {
      return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_Text.default, {
        children: ["Press ", /*#__PURE__*/(0, _jsxRuntime.jsx)(_Text.default, {
          style: styles.highlight,
          children: "Cmd + R"
        }), " in the simulator to reload your app's code."]
      });
    },
    default: function _default() {
      return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_Text.default, {
        children: ["Double tap ", /*#__PURE__*/(0, _jsxRuntime.jsx)(_Text.default, {
          style: styles.highlight,
          children: "R"
        }), " on your keyboard to reload your app's code."]
      });
    }
  });
  var _default2 = exports.default = ReloadInstructions;
},508,[1,253,285,33,119,251]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.connect = exports.batch = exports.ReactReduxContext = exports.Provider = undefined;
  exports.createDispatchHook = createDispatchHook;
  exports.createSelectorHook = createSelectorHook;
  exports.createStoreHook = createStoreHook;
  exports.shallowEqual = shallowEqual;
  exports.useStore = exports.useSelector = exports.useDispatch = undefined;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var __defProp = Object.defineProperty;
  var __defProps = Object.defineProperties;
  var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
  var __getOwnPropSymbols = Object.getOwnPropertySymbols;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __propIsEnum = Object.prototype.propertyIsEnumerable;
  var __defNormalProp = function __defNormalProp(obj, key, value) {
    return key in obj ? __defProp(obj, key, {
      enumerable: true,
      configurable: true,
      writable: true,
      value: value
    }) : obj[key] = value;
  };
  var __spreadValues = function __spreadValues(a, b) {
    for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);
    if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);
    }
    return a;
  };
  var __spreadProps = function __spreadProps(a, b) {
    return __defProps(a, __getOwnPropDescs(b));
  };
  var __objRest = function __objRest(source, exclude) {
    var target = {};
    for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
    if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];
    }
    return target;
  };

  // src/utils/react.ts

  // src/utils/react-is.ts
  var IS_REACT_19 = /* @__PURE__ */React.version.startsWith("19");
  var REACT_ELEMENT_TYPE = /* @__PURE__ */Symbol.for(IS_REACT_19 ? "react.transitional.element" : "react.element");
  var REACT_PORTAL_TYPE = /* @__PURE__ */Symbol.for("react.portal");
  var REACT_FRAGMENT_TYPE = /* @__PURE__ */Symbol.for("react.fragment");
  var REACT_STRICT_MODE_TYPE = /* @__PURE__ */Symbol.for("react.strict_mode");
  var REACT_PROFILER_TYPE = /* @__PURE__ */Symbol.for("react.profiler");
  var REACT_CONSUMER_TYPE = /* @__PURE__ */Symbol.for("react.consumer");
  var REACT_CONTEXT_TYPE = /* @__PURE__ */Symbol.for("react.context");
  var REACT_FORWARD_REF_TYPE = /* @__PURE__ */Symbol.for("react.forward_ref");
  var REACT_SUSPENSE_TYPE = /* @__PURE__ */Symbol.for("react.suspense");
  var REACT_SUSPENSE_LIST_TYPE = /* @__PURE__ */Symbol.for("react.suspense_list");
  var REACT_MEMO_TYPE = /* @__PURE__ */Symbol.for("react.memo");
  var REACT_LAZY_TYPE = /* @__PURE__ */Symbol.for("react.lazy");
  var REACT_OFFSCREEN_TYPE = /* @__PURE__ */Symbol.for("react.offscreen");
  var REACT_CLIENT_REFERENCE = /* @__PURE__ */Symbol.for("react.client.reference");
  var ForwardRef = REACT_FORWARD_REF_TYPE;
  var Memo = REACT_MEMO_TYPE;
  function typeOf(object) {
    if (typeof object === "object" && object !== null) {
      var _object = object,
        $$typeof = _object.$$typeof;
      switch ($$typeof) {
        case REACT_ELEMENT_TYPE:
          switch (object = object.type, object) {
            case REACT_FRAGMENT_TYPE:
            case REACT_PROFILER_TYPE:
            case REACT_STRICT_MODE_TYPE:
            case REACT_SUSPENSE_TYPE:
            case REACT_SUSPENSE_LIST_TYPE:
              return object;
            default:
              switch (object = object && object.$$typeof, object) {
                case REACT_CONTEXT_TYPE:
                case REACT_FORWARD_REF_TYPE:
                case REACT_LAZY_TYPE:
                case REACT_MEMO_TYPE:
                  return object;
                case REACT_CONSUMER_TYPE:
                  return object;
                default:
                  return $$typeof;
              }
          }
        case REACT_PORTAL_TYPE:
          return $$typeof;
      }
    }
  }
  function isMemo(object) {
    return typeOf(object) === REACT_MEMO_TYPE;
  }

  // src/utils/warning.ts

  // src/connect/verifySubselectors.ts

  // src/connect/selectorFactory.ts
  function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {
    var areStatesEqual = _ref.areStatesEqual,
      areOwnPropsEqual = _ref.areOwnPropsEqual,
      areStatePropsEqual = _ref.areStatePropsEqual;
    var hasRunAtLeastOnce = false;
    var state;
    var ownProps;
    var stateProps;
    var dispatchProps;
    var mergedProps;
    function handleFirstCall(firstState, firstOwnProps) {
      state = firstState;
      ownProps = firstOwnProps;
      stateProps = mapStateToProps(state, ownProps);
      dispatchProps = mapDispatchToProps(dispatch, ownProps);
      mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
      hasRunAtLeastOnce = true;
      return mergedProps;
    }
    function handleNewPropsAndNewState() {
      stateProps = mapStateToProps(state, ownProps);
      if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
      mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
      return mergedProps;
    }
    function handleNewProps() {
      if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);
      if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
      mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
      return mergedProps;
    }
    function handleNewState() {
      var nextStateProps = mapStateToProps(state, ownProps);
      var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);
      stateProps = nextStateProps;
      if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
      return mergedProps;
    }
    function handleSubsequentCalls(nextState, nextOwnProps) {
      var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
      var stateChanged = !areStatesEqual(nextState, state, nextOwnProps, ownProps);
      state = nextState;
      ownProps = nextOwnProps;
      if (propsChanged && stateChanged) return handleNewPropsAndNewState();
      if (propsChanged) return handleNewProps();
      if (stateChanged) return handleNewState();
      return mergedProps;
    }
    return function pureFinalPropsSelector(nextState, nextOwnProps) {
      return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);
    };
  }
  function finalPropsSelectorFactory(dispatch, _a) {
    var _b = _a,
      initMapStateToProps = _b.initMapStateToProps,
      initMapDispatchToProps = _b.initMapDispatchToProps,
      initMergeProps = _b.initMergeProps,
      options = __objRest(_b, ["initMapStateToProps", "initMapDispatchToProps", "initMergeProps"]);
    var mapStateToProps = initMapStateToProps(dispatch, options);
    var mapDispatchToProps = initMapDispatchToProps(dispatch, options);
    var mergeProps = initMergeProps(dispatch, options);
    return pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);
  }

  // src/utils/bindActionCreators.ts
  function bindActionCreators(actionCreators, dispatch) {
    var boundActionCreators = {};
    var _loop = function _loop() {
      var actionCreator = actionCreators[key];
      if (typeof actionCreator === "function") {
        boundActionCreators[key] = function () {
          return dispatch(actionCreator.apply(undefined, arguments));
        };
      }
    };
    for (var key in actionCreators) {
      _loop();
    }
    return boundActionCreators;
  }

  // src/utils/isPlainObject.ts

  // src/utils/verifyPlainObject.ts

  // src/connect/wrapMapToProps.ts
  function wrapMapToPropsConstant(getConstant) {
    return function initConstantSelector(dispatch) {
      var constant = getConstant(dispatch);
      function constantSelector() {
        return constant;
      }
      constantSelector.dependsOnOwnProps = false;
      return constantSelector;
    };
  }
  function getDependsOnOwnProps(mapToProps) {
    return mapToProps.dependsOnOwnProps ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;
  }
  function wrapMapToPropsFunc(mapToProps, methodName) {
    return function initProxySelector(dispatch, _ref2) {
      var displayName = _ref2.displayName;
      var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
        return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch, undefined);
      };
      proxy.dependsOnOwnProps = true;
      proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {
        proxy.mapToProps = mapToProps;
        proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);
        var props = proxy(stateOrDispatch, ownProps);
        if (typeof props === "function") {
          proxy.mapToProps = props;
          proxy.dependsOnOwnProps = getDependsOnOwnProps(props);
          props = proxy(stateOrDispatch, ownProps);
        }
        return props;
      };
      return proxy;
    };
  }

  // src/connect/invalidArgFactory.ts
  function createInvalidArgFactory(arg, name) {
    return function (dispatch, options) {
      throw new Error(`Invalid value of type ${typeof arg} for ${name} argument when connecting component ${options.wrappedComponentName}.`);
    };
  }

  // src/connect/mapDispatchToProps.ts
  function mapDispatchToPropsFactory(mapDispatchToProps) {
    return mapDispatchToProps && typeof mapDispatchToProps === "object" ? wrapMapToPropsConstant(function (dispatch) {
      return (
        // @ts-ignore
        bindActionCreators(mapDispatchToProps, dispatch)
      );
    }) : !mapDispatchToProps ? wrapMapToPropsConstant(function (dispatch) {
      return {
        dispatch: dispatch
      };
    }) : typeof mapDispatchToProps === "function" ?
    // @ts-ignore
    wrapMapToPropsFunc(mapDispatchToProps, "mapDispatchToProps") : createInvalidArgFactory(mapDispatchToProps, "mapDispatchToProps");
  }

  // src/connect/mapStateToProps.ts
  function mapStateToPropsFactory(mapStateToProps) {
    return !mapStateToProps ? wrapMapToPropsConstant(function () {
      return {};
    }) : typeof mapStateToProps === "function" ?
    // @ts-ignore
    wrapMapToPropsFunc(mapStateToProps, "mapStateToProps") : createInvalidArgFactory(mapStateToProps, "mapStateToProps");
  }

  // src/connect/mergeProps.ts
  function defaultMergeProps(stateProps, dispatchProps, ownProps) {
    return __spreadValues(__spreadValues(__spreadValues({}, ownProps), stateProps), dispatchProps);
  }
  function wrapMergePropsFunc(mergeProps) {
    return function initMergePropsProxy(dispatch, _ref3) {
      var displayName = _ref3.displayName,
        areMergedPropsEqual = _ref3.areMergedPropsEqual;
      var hasRunOnce = false;
      var mergedProps;
      return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
        var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);
        if (hasRunOnce) {
          if (!areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;
        } else {
          hasRunOnce = true;
          mergedProps = nextMergedProps;
        }
        return mergedProps;
      };
    };
  }
  function mergePropsFactory(mergeProps) {
    return !mergeProps ? function () {
      return defaultMergeProps;
    } : typeof mergeProps === "function" ? wrapMergePropsFunc(mergeProps) : createInvalidArgFactory(mergeProps, "mergeProps");
  }

  // src/utils/batch.ts
  function defaultNoopBatch(callback) {
    callback();
  }

  // src/utils/Subscription.ts
  function createListenerCollection() {
    var first = null;
    var last = null;
    return {
      clear: function clear() {
        first = null;
        last = null;
      },
      notify: function notify() {
        defaultNoopBatch(function () {
          var listener = first;
          while (listener) {
            listener.callback();
            listener = listener.next;
          }
        });
      },
      get: function get() {
        var listeners = [];
        var listener = first;
        while (listener) {
          listeners.push(listener);
          listener = listener.next;
        }
        return listeners;
      },
      subscribe: function subscribe(callback) {
        var isSubscribed = true;
        var listener = last = {
          callback: callback,
          next: null,
          prev: last
        };
        if (listener.prev) {
          listener.prev.next = listener;
        } else {
          first = listener;
        }
        return function unsubscribe() {
          if (!isSubscribed || first === null) return;
          isSubscribed = false;
          if (listener.next) {
            listener.next.prev = listener.prev;
          } else {
            last = listener.prev;
          }
          if (listener.prev) {
            listener.prev.next = listener.next;
          } else {
            first = listener.next;
          }
        };
      }
    };
  }
  var nullListeners = {
    notify: function notify() {},
    get: function get() {
      return [];
    }
  };
  function createSubscription(store, parentSub) {
    var unsubscribe;
    var listeners = nullListeners;
    var subscriptionsAmount = 0;
    var selfSubscribed = false;
    function addNestedSub(listener) {
      trySubscribe();
      var cleanupListener = listeners.subscribe(listener);
      var removed = false;
      return function () {
        if (!removed) {
          removed = true;
          cleanupListener();
          tryUnsubscribe();
        }
      };
    }
    function notifyNestedSubs() {
      listeners.notify();
    }
    function handleChangeWrapper() {
      if (subscription.onStateChange) {
        subscription.onStateChange();
      }
    }
    function isSubscribed() {
      return selfSubscribed;
    }
    function trySubscribe() {
      subscriptionsAmount++;
      if (!unsubscribe) {
        unsubscribe = parentSub ? parentSub.addNestedSub(handleChangeWrapper) : store.subscribe(handleChangeWrapper);
        listeners = createListenerCollection();
      }
    }
    function tryUnsubscribe() {
      subscriptionsAmount--;
      if (unsubscribe && subscriptionsAmount === 0) {
        unsubscribe();
        unsubscribe = undefined;
        listeners.clear();
        listeners = nullListeners;
      }
    }
    function trySubscribeSelf() {
      if (!selfSubscribed) {
        selfSubscribed = true;
        trySubscribe();
      }
    }
    function tryUnsubscribeSelf() {
      if (selfSubscribed) {
        selfSubscribed = false;
        tryUnsubscribe();
      }
    }
    var subscription = {
      addNestedSub: addNestedSub,
      notifyNestedSubs: notifyNestedSubs,
      handleChangeWrapper: handleChangeWrapper,
      isSubscribed: isSubscribed,
      trySubscribe: trySubscribeSelf,
      tryUnsubscribe: tryUnsubscribeSelf,
      getListeners: function getListeners() {
        return listeners;
      }
    };
    return subscription;
  }

  // src/utils/useIsomorphicLayoutEffect.ts
  var canUseDOM = function canUseDOM() {
    return !!(typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined");
  };
  var isDOM = /* @__PURE__ */canUseDOM();
  var isRunningInReactNative = function isRunningInReactNative() {
    return typeof navigator !== "undefined" && navigator.product === "ReactNative";
  };
  var isReactNative = /* @__PURE__ */isRunningInReactNative();
  var getUseIsomorphicLayoutEffect = function getUseIsomorphicLayoutEffect() {
    return isDOM || isReactNative ? React.useLayoutEffect : React.useEffect;
  };
  var useIsomorphicLayoutEffect = /* @__PURE__ */getUseIsomorphicLayoutEffect();

  // src/utils/shallowEqual.ts
  function is(x, y) {
    if (x === y) {
      return x !== 0 || y !== 0 || 1 / x === 1 / y;
    } else {
      return x !== x && y !== y;
    }
  }
  function shallowEqual(objA, objB) {
    if (is(objA, objB)) return true;
    if (typeof objA !== "object" || objA === null || typeof objB !== "object" || objB === null) {
      return false;
    }
    var keysA = Object.keys(objA);
    var keysB = Object.keys(objB);
    if (keysA.length !== keysB.length) return false;
    for (var i = 0; i < keysA.length; i++) {
      if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
        return false;
      }
    }
    return true;
  }

  // src/utils/hoistStatics.ts
  var REACT_STATICS = {
    childContextTypes: true,
    contextType: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    getDerivedStateFromError: true,
    getDerivedStateFromProps: true,
    mixins: true,
    propTypes: true,
    type: true
  };
  var KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    callee: true,
    arguments: true,
    arity: true
  };
  var FORWARD_REF_STATICS = {
    $$typeof: true,
    render: true,
    defaultProps: true,
    displayName: true,
    propTypes: true
  };
  var MEMO_STATICS = {
    $$typeof: true,
    compare: true,
    defaultProps: true,
    displayName: true,
    propTypes: true,
    type: true
  };
  var TYPE_STATICS = (0, _defineProperty2.default)((0, _defineProperty2.default)({}, ForwardRef, FORWARD_REF_STATICS), Memo, MEMO_STATICS);
  function getStatics(component) {
    if (isMemo(component)) {
      return MEMO_STATICS;
    }
    return TYPE_STATICS[component["$$typeof"]] || REACT_STATICS;
  }
  var defineProperty = Object.defineProperty;
  var getOwnPropertyNames = Object.getOwnPropertyNames;
  var getOwnPropertySymbols = Object.getOwnPropertySymbols;
  var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
  var getPrototypeOf = Object.getPrototypeOf;
  var objectPrototype = Object.prototype;
  function hoistNonReactStatics(targetComponent, sourceComponent) {
    if (typeof sourceComponent !== "string") {
      if (objectPrototype) {
        var inheritedComponent = getPrototypeOf(sourceComponent);
        if (inheritedComponent && inheritedComponent !== objectPrototype) {
          hoistNonReactStatics(targetComponent, inheritedComponent);
        }
      }
      var keys = getOwnPropertyNames(sourceComponent);
      if (getOwnPropertySymbols) {
        keys = keys.concat(getOwnPropertySymbols(sourceComponent));
      }
      var targetStatics = getStatics(targetComponent);
      var sourceStatics = getStatics(sourceComponent);
      for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];
        if (!KNOWN_STATICS[key] && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
          var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
          try {
            defineProperty(targetComponent, key, descriptor);
          } catch (e) {}
        }
      }
    }
    return targetComponent;
  }

  // src/components/Context.ts
  var ContextKey = /* @__PURE__ */Symbol.for(`react-redux-context`);
  var gT = typeof globalThis !== "undefined" ? globalThis : (/* fall back to a per-module scope (pre-8.1 behaviour) if `globalThis` is not available */
  {});
  function getContext() {
    var _a;
    if (!React.createContext) return {};
    var contextMap = (_a = gT[ContextKey]) != null ? _a : gT[ContextKey] = /* @__PURE__ */new Map();
    var realContext = contextMap.get(React.createContext);
    if (!realContext) {
      realContext = React.createContext(null);
      contextMap.set(React.createContext, realContext);
    }
    return realContext;
  }
  var ReactReduxContext = exports.ReactReduxContext = /* @__PURE__ */getContext();

  // src/components/connect.tsx
  var NO_SUBSCRIPTION_ARRAY = [null, null];
  function useIsomorphicLayoutEffectWithArgs(effectFunc, effectArgs, dependencies) {
    useIsomorphicLayoutEffect(function () {
      return effectFunc.apply(undefined, (0, _toConsumableArray2.default)(effectArgs));
    }, dependencies);
  }
  function captureWrapperProps(lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, childPropsFromStoreUpdate, notifyNestedSubs) {
    lastWrapperProps.current = wrapperProps;
    renderIsScheduled.current = false;
    if (childPropsFromStoreUpdate.current) {
      childPropsFromStoreUpdate.current = null;
      notifyNestedSubs();
    }
  }
  function subscribeUpdates(shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, isMounted, childPropsFromStoreUpdate, notifyNestedSubs, additionalSubscribeListener) {
    if (!shouldHandleStateChanges) return function () {};
    var didUnsubscribe = false;
    var lastThrownError = null;
    var checkForUpdates = function checkForUpdates() {
      if (didUnsubscribe || !isMounted.current) {
        return;
      }
      var latestStoreState = store.getState();
      var newChildProps, error;
      try {
        newChildProps = childPropsSelector(latestStoreState, lastWrapperProps.current);
      } catch (e) {
        error = e;
        lastThrownError = e;
      }
      if (!error) {
        lastThrownError = null;
      }
      if (newChildProps === lastChildProps.current) {
        if (!renderIsScheduled.current) {
          notifyNestedSubs();
        }
      } else {
        lastChildProps.current = newChildProps;
        childPropsFromStoreUpdate.current = newChildProps;
        renderIsScheduled.current = true;
        additionalSubscribeListener();
      }
    };
    subscription.onStateChange = checkForUpdates;
    subscription.trySubscribe();
    checkForUpdates();
    var unsubscribeWrapper = function unsubscribeWrapper() {
      didUnsubscribe = true;
      subscription.tryUnsubscribe();
      subscription.onStateChange = null;
      if (lastThrownError) {
        throw lastThrownError;
      }
    };
    return unsubscribeWrapper;
  }
  function strictEqual(a, b) {
    return a === b;
  }
  var hasWarnedAboutDeprecatedPureOption = false;
  function connect(mapStateToProps, mapDispatchToProps, mergeProps) {
    var _ref4 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
      pure = _ref4.pure,
      _ref4$areStatesEqual = _ref4.areStatesEqual,
      areStatesEqual = _ref4$areStatesEqual === undefined ? strictEqual : _ref4$areStatesEqual,
      _ref4$areOwnPropsEqua = _ref4.areOwnPropsEqual,
      areOwnPropsEqual = _ref4$areOwnPropsEqua === undefined ? shallowEqual : _ref4$areOwnPropsEqua,
      _ref4$areStatePropsEq = _ref4.areStatePropsEqual,
      areStatePropsEqual = _ref4$areStatePropsEq === undefined ? shallowEqual : _ref4$areStatePropsEq,
      _ref4$areMergedPropsE = _ref4.areMergedPropsEqual,
      areMergedPropsEqual = _ref4$areMergedPropsE === undefined ? shallowEqual : _ref4$areMergedPropsE,
      _ref4$forwardRef = _ref4.forwardRef,
      forwardRef = _ref4$forwardRef === undefined ? false : _ref4$forwardRef,
      _ref4$context = _ref4.context,
      context = _ref4$context === undefined ? ReactReduxContext : _ref4$context;
    var Context = context;
    var initMapStateToProps = mapStateToPropsFactory(mapStateToProps);
    var initMapDispatchToProps = mapDispatchToPropsFactory(mapDispatchToProps);
    var initMergeProps = mergePropsFactory(mergeProps);
    var shouldHandleStateChanges = Boolean(mapStateToProps);
    var wrapWithConnect = function wrapWithConnect(WrappedComponent) {
      var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || "Component";
      var displayName = `Connect(${wrappedComponentName})`;
      var selectorFactoryOptions = {
        shouldHandleStateChanges: shouldHandleStateChanges,
        displayName: displayName,
        wrappedComponentName: wrappedComponentName,
        WrappedComponent: WrappedComponent,
        // @ts-ignore
        initMapStateToProps: initMapStateToProps,
        initMapDispatchToProps: initMapDispatchToProps,
        initMergeProps: initMergeProps,
        areStatesEqual: areStatesEqual,
        areStatePropsEqual: areStatePropsEqual,
        areOwnPropsEqual: areOwnPropsEqual,
        areMergedPropsEqual: areMergedPropsEqual
      };
      function ConnectFunction(props) {
        var _React$useMemo = React.useMemo(function () {
            var _a = props,
              reactReduxForwardedRef2 = _a.reactReduxForwardedRef,
              wrapperProps2 = __objRest(_a, ["reactReduxForwardedRef"]);
            return [props.context, reactReduxForwardedRef2, wrapperProps2];
          }, [props]),
          _React$useMemo2 = (0, _slicedToArray2.default)(_React$useMemo, 3),
          propsContext = _React$useMemo2[0],
          reactReduxForwardedRef = _React$useMemo2[1],
          wrapperProps = _React$useMemo2[2];
        var ContextToUse = React.useMemo(function () {
          var ResultContext = Context;
          if (propsContext == null ? undefined : propsContext.Consumer) {}
          return ResultContext;
        }, [propsContext, Context]);
        var contextValue = React.useContext(ContextToUse);
        var didStoreComeFromProps = Boolean(props.store) && Boolean(props.store.getState) && Boolean(props.store.dispatch);
        var didStoreComeFromContext = Boolean(contextValue) && Boolean(contextValue.store);
        var store = didStoreComeFromProps ? props.store : contextValue.store;
        var getServerState = didStoreComeFromContext ? contextValue.getServerState : store.getState;
        var childPropsSelector = React.useMemo(function () {
          return finalPropsSelectorFactory(store.dispatch, selectorFactoryOptions);
        }, [store]);
        var _React$useMemo3 = React.useMemo(function () {
            if (!shouldHandleStateChanges) return NO_SUBSCRIPTION_ARRAY;
            var subscription2 = createSubscription(store, didStoreComeFromProps ? undefined : contextValue.subscription);
            var notifyNestedSubs2 = subscription2.notifyNestedSubs.bind(subscription2);
            return [subscription2, notifyNestedSubs2];
          }, [store, didStoreComeFromProps, contextValue]),
          _React$useMemo4 = (0, _slicedToArray2.default)(_React$useMemo3, 2),
          subscription = _React$useMemo4[0],
          notifyNestedSubs = _React$useMemo4[1];
        var overriddenContextValue = React.useMemo(function () {
          if (didStoreComeFromProps) {
            return contextValue;
          }
          return __spreadProps(__spreadValues({}, contextValue), {
            subscription: subscription
          });
        }, [didStoreComeFromProps, contextValue, subscription]);
        var lastChildProps = React.useRef(undefined);
        var lastWrapperProps = React.useRef(wrapperProps);
        var childPropsFromStoreUpdate = React.useRef(undefined);
        var renderIsScheduled = React.useRef(false);
        var isMounted = React.useRef(false);
        var latestSubscriptionCallbackError = React.useRef(undefined);
        useIsomorphicLayoutEffect(function () {
          isMounted.current = true;
          return function () {
            isMounted.current = false;
          };
        }, []);
        var actualChildPropsSelector = React.useMemo(function () {
          var selector = function selector() {
            if (childPropsFromStoreUpdate.current && wrapperProps === lastWrapperProps.current) {
              return childPropsFromStoreUpdate.current;
            }
            return childPropsSelector(store.getState(), wrapperProps);
          };
          return selector;
        }, [store, wrapperProps]);
        var subscribeForReact = React.useMemo(function () {
          var subscribe = function subscribe(reactListener) {
            if (!subscription) {
              return function () {};
            }
            return subscribeUpdates(shouldHandleStateChanges, store, subscription,
            // @ts-ignore
            childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, isMounted, childPropsFromStoreUpdate, notifyNestedSubs, reactListener);
          };
          return subscribe;
        }, [subscription]);
        useIsomorphicLayoutEffectWithArgs(captureWrapperProps, [lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, childPropsFromStoreUpdate, notifyNestedSubs]);
        var actualChildProps;
        try {
          actualChildProps = React.useSyncExternalStore(
          // TODO We're passing through a big wrapper that does a bunch of extra side effects besides subscribing
          subscribeForReact,
          // TODO This is incredibly hacky. We've already processed the store update and calculated new child props,
          // TODO and we're just passing that through so it triggers a re-render for us rather than relying on `uSES`.
          actualChildPropsSelector, getServerState ? function () {
            return childPropsSelector(getServerState(), wrapperProps);
          } : actualChildPropsSelector);
        } catch (err) {
          if (latestSubscriptionCallbackError.current) {
            ;
            err.message += `
The error may be correlated with this previous error:
${latestSubscriptionCallbackError.current.stack}

`;
          }
          throw err;
        }
        useIsomorphicLayoutEffect(function () {
          latestSubscriptionCallbackError.current = undefined;
          childPropsFromStoreUpdate.current = undefined;
          lastChildProps.current = actualChildProps;
        });
        var renderedWrappedComponent = React.useMemo(function () {
          return (
            // @ts-ignore
            /* @__PURE__ */
            React.createElement(WrappedComponent, __spreadProps(__spreadValues({}, actualChildProps), {
              ref: reactReduxForwardedRef
            }))
          );
        }, [reactReduxForwardedRef, WrappedComponent, actualChildProps]);
        var renderedChild = React.useMemo(function () {
          if (shouldHandleStateChanges) {
            return /* @__PURE__ */React.createElement(ContextToUse.Provider, {
              value: overriddenContextValue
            }, renderedWrappedComponent);
          }
          return renderedWrappedComponent;
        }, [ContextToUse, renderedWrappedComponent, overriddenContextValue]);
        return renderedChild;
      }
      var _Connect = React.memo(ConnectFunction);
      var Connect = _Connect;
      Connect.WrappedComponent = WrappedComponent;
      Connect.displayName = ConnectFunction.displayName = displayName;
      if (forwardRef) {
        var _forwarded = React.forwardRef(function forwardConnectRef(props, ref) {
          return /* @__PURE__ */React.createElement(Connect, __spreadProps(__spreadValues({}, props), {
            reactReduxForwardedRef: ref
          }));
        });
        var forwarded = _forwarded;
        forwarded.displayName = displayName;
        forwarded.WrappedComponent = WrappedComponent;
        return /* @__PURE__ */hoistNonReactStatics(forwarded, WrappedComponent);
      }
      return /* @__PURE__ */hoistNonReactStatics(Connect, WrappedComponent);
    };
    return wrapWithConnect;
  }
  var connect_default = exports.connect = connect;

  // src/components/Provider.tsx
  function Provider(providerProps) {
    var children = providerProps.children,
      context = providerProps.context,
      serverState = providerProps.serverState,
      store = providerProps.store;
    var contextValue = React.useMemo(function () {
      var subscription = createSubscription(store);
      var baseContextValue = {
        store: store,
        subscription: subscription,
        getServerState: serverState ? function () {
          return serverState;
        } : undefined
      };
      {
        return baseContextValue;
      }
    }, [store, serverState]);
    var previousState = React.useMemo(function () {
      return store.getState();
    }, [store]);
    useIsomorphicLayoutEffect(function () {
      var subscription = contextValue.subscription;
      subscription.onStateChange = subscription.notifyNestedSubs;
      subscription.trySubscribe();
      if (previousState !== store.getState()) {
        subscription.notifyNestedSubs();
      }
      return function () {
        subscription.tryUnsubscribe();
        subscription.onStateChange = undefined;
      };
    }, [contextValue, previousState]);
    var Context = context || ReactReduxContext;
    return /* @__PURE__ */React.createElement(Context.Provider, {
      value: contextValue
    }, children);
  }
  var Provider_default = exports.Provider = Provider;

  // src/hooks/useReduxContext.ts
  function createReduxContextHook() {
    var context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ReactReduxContext;
    return function useReduxContext2() {
      var contextValue = React.useContext(context);
      return contextValue;
    };
  }
  var useReduxContext = /* @__PURE__ */createReduxContextHook();

  // src/hooks/useStore.ts
  function createStoreHook() {
    var context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ReactReduxContext;
    var useReduxContext2 = context === ReactReduxContext ? useReduxContext :
    // @ts-ignore
    createReduxContextHook(context);
    var useStore2 = function useStore2() {
      var _useReduxContext = useReduxContext2(),
        store = _useReduxContext.store;
      return store;
    };
    Object.assign(useStore2, {
      withTypes: function withTypes() {
        return useStore2;
      }
    });
    return useStore2;
  }
  var useStore = exports.useStore = /* @__PURE__ */createStoreHook();

  // src/hooks/useDispatch.ts
  function createDispatchHook() {
    var context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ReactReduxContext;
    var useStore2 = context === ReactReduxContext ? useStore : createStoreHook(context);
    var useDispatch2 = function useDispatch2() {
      var store = useStore2();
      return store.dispatch;
    };
    Object.assign(useDispatch2, {
      withTypes: function withTypes() {
        return useDispatch2;
      }
    });
    return useDispatch2;
  }
  var useDispatch = exports.useDispatch = /* @__PURE__ */createDispatchHook();

  // src/hooks/useSelector.ts

  var refEquality = function refEquality(a, b) {
    return a === b;
  };
  function createSelectorHook() {
    var context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ReactReduxContext;
    var useReduxContext2 = context === ReactReduxContext ? useReduxContext : createReduxContextHook(context);
    var useSelector2 = function useSelector2(selector) {
      var equalityFnOrOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var _ref5 = typeof equalityFnOrOptions === "function" ? {
          equalityFn: equalityFnOrOptions
        } : equalityFnOrOptions,
        _ref5$equalityFn = _ref5.equalityFn,
        equalityFn = _ref5$equalityFn === undefined ? refEquality : _ref5$equalityFn;
      var reduxContext = useReduxContext2();
      var store = reduxContext.store,
        subscription = reduxContext.subscription,
        getServerState = reduxContext.getServerState;
      var firstRun = React.useRef(true);
      var wrappedSelector = React.useCallback((0, _defineProperty2.default)({}, selector.name, function (state) {
        var selected = selector(state);
        return selected;
      })[selector.name], [selector]);
      var selectedState = (0, _$$_REQUIRE(_dependencyMap[5]).useSyncExternalStoreWithSelector)(subscription.addNestedSub, store.getState, getServerState || store.getState, wrappedSelector, equalityFn);
      React.useDebugValue(selectedState);
      return selectedState;
    };
    Object.assign(useSelector2, {
      withTypes: function withTypes() {
        return useSelector2;
      }
    });
    return useSelector2;
  }
  var useSelector = exports.useSelector = /* @__PURE__ */createSelectorHook();

  // src/exports.ts
  var batch = exports.batch = defaultNoopBatch;
},509,[1,38,6,99,119,510]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  {
    module.exports = _$$_REQUIRE(_dependencyMap[0]);
  }
},510,[511]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /**
   * @license React
   * use-sync-external-store-with-selector.production.js
   *
   * Copyright (c) Meta Platforms, Inc. and affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  "use strict";

  var React = _$$_REQUIRE(_dependencyMap[0]);
  function is(x, y) {
    return x === y && (0 !== x || 1 / x === 1 / y) || x !== x && y !== y;
  }
  var objectIs = "function" === typeof Object.is ? Object.is : is,
    useSyncExternalStore = React.useSyncExternalStore,
    useRef = React.useRef,
    useEffect = React.useEffect,
    useMemo = React.useMemo,
    useDebugValue = React.useDebugValue;
  exports.useSyncExternalStoreWithSelector = function (subscribe, getSnapshot, getServerSnapshot, selector, isEqual) {
    var instRef = useRef(null);
    if (null === instRef.current) {
      var inst = {
        hasValue: false,
        value: null
      };
      instRef.current = inst;
    } else inst = instRef.current;
    instRef = useMemo(function () {
      function memoizedSelector(nextSnapshot) {
        if (!hasMemo) {
          hasMemo = true;
          memoizedSnapshot = nextSnapshot;
          nextSnapshot = selector(nextSnapshot);
          if (undefined !== isEqual && inst.hasValue) {
            var currentSelection = inst.value;
            if (isEqual(currentSelection, nextSnapshot)) return memoizedSelection = currentSelection;
          }
          return memoizedSelection = nextSnapshot;
        }
        currentSelection = memoizedSelection;
        if (objectIs(memoizedSnapshot, nextSnapshot)) return currentSelection;
        var nextSelection = selector(nextSnapshot);
        if (undefined !== isEqual && isEqual(currentSelection, nextSelection)) return memoizedSnapshot = nextSnapshot, currentSelection;
        memoizedSnapshot = nextSnapshot;
        return memoizedSelection = nextSelection;
      }
      var hasMemo = false,
        memoizedSnapshot,
        memoizedSelection,
        maybeGetServerSnapshot = undefined === getServerSnapshot ? null : getServerSnapshot;
      return [function () {
        return memoizedSelector(getSnapshot());
      }, null === maybeGetServerSnapshot ? undefined : function () {
        return memoizedSelector(maybeGetServerSnapshot());
      }];
    }, [getSnapshot, getServerSnapshot, selector, isEqual]);
    var value = useSyncExternalStore(subscribe, instRef[0], instRef[1]);
    useEffect(function () {
      inst.hasValue = true;
      inst.value = value;
    }, [value]);
    useDebugValue(value);
    return value;
  };
},511,[119]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.weatherStore = undefined;
  var _FetchWeatherSlice = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var weatherStore = exports.weatherStore = (0, _$$_REQUIRE(_dependencyMap[2]).configureStore)({
    reducer: {
      weatherReducerState: _FetchWeatherSlice.default
    }
  });
},512,[1,513,569]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.fetchWeatherSlice = exports.fetchWeatherData = exports.default = undefined;
  var _asyncToGenerator2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _axios = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  /**
   * Thunk middleware and axios to call api,
   * @param search based on city
   */
  var fetchWeatherData = exports.fetchWeatherData = (0, _$$_REQUIRE(_dependencyMap[3]).createAsyncThunk)("async/state", /*#__PURE__*/function () {
    var _ref2 = (0, _asyncToGenerator2.default)(function* (search, _ref) {
      var rejectWithValue = _ref.rejectWithValue;
      console.log("query weather data  =============   ", search);
      try {
        var result = yield _axios.default.get(_$$_REQUIRE(_dependencyMap[4]).GET_WEATHER_API, {
          params: {
            q: search,
            appId: "c11b8e15f6a506071ed716667b9a8d17"
          }
        });
        var responseData = yield result.data;
        console.log("response is ============= ", responseData);
        return responseData;
      } catch (error) {
        console.log("response is on error ======= ", error);
        if (_axios.default.isAxiosError(error)) {
          return rejectWithValue(error.message);
        } else {
          return rejectWithValue("unknown error");
        }
      }
    });
    return function (_x, _x2) {
      return _ref2.apply(this, arguments);
    };
  }());

  /**
   * Weather slice to manager reducer and state
   */
  var fetchWeatherSlice = exports.fetchWeatherSlice = (0, _$$_REQUIRE(_dependencyMap[3]).createSlice)({
    name: "WeatherSlice",
    initialState: _$$_REQUIRE(_dependencyMap[5]).weatherInitialState,
    reducers: {},
    extraReducers: function extraReducers(builder) {
      builder.addCase(fetchWeatherData.pending, function (state) {
        state.status = _$$_REQUIRE(_dependencyMap[5]).ResponseState.Loading;
      });
      builder.addCase(fetchWeatherData.fulfilled, function (state, action) {
        state.status = _$$_REQUIRE(_dependencyMap[5]).ResponseState.Success;
        state.weather = action.payload;
        state.error = "";
      });
      builder.addCase(fetchWeatherData.rejected, function (state, action) {
        state.status = _$$_REQUIRE(_dependencyMap[5]).ResponseState.Failed;
        state.error = typeof action.payload == "string" ? action.payload : "unknown error";
      });
    }
  });
  var _default = exports.default = fetchWeatherSlice.reducer;
},513,[1,363,514,569,576,577]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.all = exports.VERSION = exports.HttpStatusCode = exports.CanceledError = exports.CancelToken = exports.Cancel = exports.AxiosHeaders = exports.AxiosError = exports.Axios = undefined;
  Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function get() {
      return _axios.default;
    }
  });
  exports.toFormData = exports.spread = exports.mergeConfig = exports.isCancel = exports.isAxiosError = exports.getAdapter = exports.formToJSON = undefined;
  var _axios = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  // This module is intended to unwrap Axios default export as named.
  // Keep top-level export same with static properties
  // so that it can keep same with es module or cjs
  var Axios = exports.Axios = _axios.default.Axios,
    AxiosError = exports.AxiosError = _axios.default.AxiosError,
    CanceledError = exports.CanceledError = _axios.default.CanceledError,
    isCancel = exports.isCancel = _axios.default.isCancel,
    CancelToken = exports.CancelToken = _axios.default.CancelToken,
    VERSION = exports.VERSION = _axios.default.VERSION,
    all = exports.all = _axios.default.all,
    Cancel = exports.Cancel = _axios.default.Cancel,
    isAxiosError = exports.isAxiosError = _axios.default.isAxiosError,
    spread = exports.spread = _axios.default.spread,
    toFormData = exports.toFormData = _axios.default.toFormData,
    AxiosHeaders = exports.AxiosHeaders = _axios.default.AxiosHeaders,
    HttpStatusCode = exports.HttpStatusCode = _axios.default.HttpStatusCode,
    formToJSON = exports.formToJSON = _axios.default.formToJSON,
    getAdapter = exports.getAdapter = _axios.default.getAdapter,
    mergeConfig = exports.mergeConfig = _axios.default.mergeConfig;
},514,[1,515]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _utils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _bind = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _Axios = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _mergeConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _formDataToJSON = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _CanceledError = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _CancelToken = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _isCancel = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _toFormData = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  var _AxiosError = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));
  var _spread = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));
  var _isAxiosError = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));
  var _AxiosHeaders = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));
  var _adapters = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));
  var _HttpStatusCode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));
  /**
   * Create an instance of Axios
   *
   * @param {Object} defaultConfig The default config for the instance
   *
   * @returns {Axios} A new instance of Axios
   */
  function createInstance(defaultConfig) {
    var context = new _Axios.default(defaultConfig);
    var instance = (0, _bind.default)(_Axios.default.prototype.request, context);

    // Copy axios.prototype to instance
    _utils.default.extend(instance, _Axios.default.prototype, context, {
      allOwnKeys: true
    });

    // Copy context to instance
    _utils.default.extend(instance, context, null, {
      allOwnKeys: true
    });

    // Factory for creating new instances
    instance.create = function create(instanceConfig) {
      return createInstance((0, _mergeConfig.default)(defaultConfig, instanceConfig));
    };
    return instance;
  }

  // Create the default instance to be exported
  var axios = createInstance(_index.default);

  // Expose Axios class to allow class inheritance
  axios.Axios = _Axios.default;

  // Expose Cancel & CancelToken
  axios.CanceledError = _CanceledError.default;
  axios.CancelToken = _CancelToken.default;
  axios.isCancel = _isCancel.default;
  axios.VERSION = _$$_REQUIRE(_dependencyMap[17]).VERSION;
  axios.toFormData = _toFormData.default;

  // Expose AxiosError class
  axios.AxiosError = _AxiosError.default;

  // alias for CanceledError for backward compatibility
  axios.Cancel = axios.CanceledError;

  // Expose all/spread
  axios.all = function all(promises) {
    return Promise.all(promises);
  };
  axios.spread = _spread.default;

  // Expose isAxiosError
  axios.isAxiosError = _isAxiosError.default;

  // Expose mergeConfig
  axios.mergeConfig = _mergeConfig.default;
  axios.AxiosHeaders = _AxiosHeaders.default;
  axios.formToJSON = function (thing) {
    return (0, _formDataToJSON.default)(_utils.default.isHTMLForm(thing) ? new FormData(thing) : thing);
  };
  axios.getAdapter = _adapters.default.getAdapter;
  axios.HttpStatusCode = _HttpStatusCode.default;
  axios.default = axios;

  // this module should only have a default export
  var _default = exports.default = axios;
},515,[1,516,517,518,552,527,536,540,565,539,521,522,566,567,537,541,568,564]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _bind = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  // utils is a library of generic helper functions non-specific to axios

  var toString = Object.prototype.toString;
  var getPrototypeOf = Object.getPrototypeOf;
  var kindOf = function (cache) {
    return function (thing) {
      var str = toString.call(thing);
      return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());
    };
  }(Object.create(null));
  var kindOfTest = function kindOfTest(type) {
    type = type.toLowerCase();
    return function (thing) {
      return kindOf(thing) === type;
    };
  };
  var typeOfTest = function typeOfTest(type) {
    return function (thing) {
      return typeof thing === type;
    };
  };

  /**
   * Determine if a value is an Array
   *
   * @param {Object} val The value to test
   *
   * @returns {boolean} True if value is an Array, otherwise false
   */
  var isArray = Array.isArray;

  /**
   * Determine if a value is undefined
   *
   * @param {*} val The value to test
   *
   * @returns {boolean} True if the value is undefined, otherwise false
   */
  var isUndefined = typeOfTest('undefined');

  /**
   * Determine if a value is a Buffer
   *
   * @param {*} val The value to test
   *
   * @returns {boolean} True if value is a Buffer, otherwise false
   */
  function isBuffer(val) {
    return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);
  }

  /**
   * Determine if a value is an ArrayBuffer
   *
   * @param {*} val The value to test
   *
   * @returns {boolean} True if value is an ArrayBuffer, otherwise false
   */
  var isArrayBuffer = kindOfTest('ArrayBuffer');

  /**
   * Determine if a value is a view on an ArrayBuffer
   *
   * @param {*} val The value to test
   *
   * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
   */
  function isArrayBufferView(val) {
    var result;
    if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {
      result = ArrayBuffer.isView(val);
    } else {
      result = val && val.buffer && isArrayBuffer(val.buffer);
    }
    return result;
  }

  /**
   * Determine if a value is a String
   *
   * @param {*} val The value to test
   *
   * @returns {boolean} True if value is a String, otherwise false
   */
  var isString = typeOfTest('string');

  /**
   * Determine if a value is a Function
   *
   * @param {*} val The value to test
   * @returns {boolean} True if value is a Function, otherwise false
   */
  var isFunction = typeOfTest('function');

  /**
   * Determine if a value is a Number
   *
   * @param {*} val The value to test
   *
   * @returns {boolean} True if value is a Number, otherwise false
   */
  var isNumber = typeOfTest('number');

  /**
   * Determine if a value is an Object
   *
   * @param {*} thing The value to test
   *
   * @returns {boolean} True if value is an Object, otherwise false
   */
  var isObject = function isObject(thing) {
    return thing !== null && typeof thing === 'object';
  };

  /**
   * Determine if a value is a Boolean
   *
   * @param {*} thing The value to test
   * @returns {boolean} True if value is a Boolean, otherwise false
   */
  var isBoolean = function isBoolean(thing) {
    return thing === true || thing === false;
  };

  /**
   * Determine if a value is a plain Object
   *
   * @param {*} val The value to test
   *
   * @returns {boolean} True if value is a plain Object, otherwise false
   */
  var isPlainObject = function isPlainObject(val) {
    if (kindOf(val) !== 'object') {
      return false;
    }
    var prototype = getPrototypeOf(val);
    return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);
  };

  /**
   * Determine if a value is a Date
   *
   * @param {*} val The value to test
   *
   * @returns {boolean} True if value is a Date, otherwise false
   */
  var isDate = kindOfTest('Date');

  /**
   * Determine if a value is a File
   *
   * @param {*} val The value to test
   *
   * @returns {boolean} True if value is a File, otherwise false
   */
  var isFile = kindOfTest('File');

  /**
   * Determine if a value is a Blob
   *
   * @param {*} val The value to test
   *
   * @returns {boolean} True if value is a Blob, otherwise false
   */
  var isBlob = kindOfTest('Blob');

  /**
   * Determine if a value is a FileList
   *
   * @param {*} val The value to test
   *
   * @returns {boolean} True if value is a File, otherwise false
   */
  var isFileList = kindOfTest('FileList');

  /**
   * Determine if a value is a Stream
   *
   * @param {*} val The value to test
   *
   * @returns {boolean} True if value is a Stream, otherwise false
   */
  var isStream = function isStream(val) {
    return isObject(val) && isFunction(val.pipe);
  };

  /**
   * Determine if a value is a FormData
   *
   * @param {*} thing The value to test
   *
   * @returns {boolean} True if value is an FormData, otherwise false
   */
  var isFormData = function isFormData(thing) {
    var kind;
    return thing && (typeof FormData === 'function' && thing instanceof FormData || isFunction(thing.append) && ((kind = kindOf(thing)) === 'formdata' ||
    // detect form-data instance
    kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]'));
  };

  /**
   * Determine if a value is a URLSearchParams object
   *
   * @param {*} val The value to test
   *
   * @returns {boolean} True if value is a URLSearchParams object, otherwise false
   */
  var isURLSearchParams = kindOfTest('URLSearchParams');
  var _map = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest),
    _map2 = (0, _slicedToArray2.default)(_map, 4),
    isReadableStream = _map2[0],
    isRequest = _map2[1],
    isResponse = _map2[2],
    isHeaders = _map2[3];

  /**
   * Trim excess whitespace off the beginning and end of a string
   *
   * @param {String} str The String to trim
   *
   * @returns {String} The String freed of excess whitespace
   */
  var trim = function trim(str) {
    return str.trim ? str.trim() : str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');
  };

  /**
   * Iterate over an Array or an Object invoking a function for each item.
   *
   * If `obj` is an Array callback will be called passing
   * the value, index, and complete array for each item.
   *
   * If 'obj' is an Object callback will be called passing
   * the value, key, and complete object for each property.
   *
   * @param {Object|Array} obj The object to iterate
   * @param {Function} fn The callback to invoke for each item
   *
   * @param {Boolean} [allOwnKeys = false]
   * @returns {any}
   */
  function forEach(obj, fn) {
    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
      _ref$allOwnKeys = _ref.allOwnKeys,
      allOwnKeys = _ref$allOwnKeys === undefined ? false : _ref$allOwnKeys;
    // Don't bother if no value provided
    if (obj === null || typeof obj === 'undefined') {
      return;
    }
    var i;
    var l;

    // Force an array if not already something iterable
    if (typeof obj !== 'object') {
      /*eslint no-param-reassign:0*/
      obj = [obj];
    }
    if (isArray(obj)) {
      // Iterate over array values
      for (i = 0, l = obj.length; i < l; i++) {
        fn.call(null, obj[i], i, obj);
      }
    } else {
      // Iterate over object keys
      var keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);
      var len = keys.length;
      var key;
      for (i = 0; i < len; i++) {
        key = keys[i];
        fn.call(null, obj[key], key, obj);
      }
    }
  }
  function findKey(obj, key) {
    key = key.toLowerCase();
    var keys = Object.keys(obj);
    var i = keys.length;
    var _key;
    while (i-- > 0) {
      _key = keys[i];
      if (key === _key.toLowerCase()) {
        return _key;
      }
    }
    return null;
  }
  var _global = function () {
    /*eslint no-undef:0*/
    if (typeof globalThis !== "undefined") return globalThis;
    return typeof self !== "undefined" ? self : typeof window !== 'undefined' ? window : global;
  }();
  var isContextDefined = function isContextDefined(context) {
    return !isUndefined(context) && context !== _global;
  };

  /**
   * Accepts varargs expecting each argument to be an object, then
   * immutably merges the properties of each object and returns result.
   *
   * When multiple objects contain the same key the later object in
   * the arguments list will take precedence.
   *
   * Example:
   *
   * ```js
   * var result = merge({foo: 123}, {foo: 456});
   * console.log(result.foo); // outputs 456
   * ```
   *
   * @param {Object} obj1 Object to merge
   *
   * @returns {Object} Result of all merge properties
   */
  function merge(/* obj1, obj2, obj3, ... */
  ) {
    var _ref2 = isContextDefined(this) && this || {},
      caseless = _ref2.caseless;
    var result = {};
    var assignValue = function assignValue(val, key) {
      var targetKey = caseless && findKey(result, key) || key;
      if (isPlainObject(result[targetKey]) && isPlainObject(val)) {
        result[targetKey] = merge(result[targetKey], val);
      } else if (isPlainObject(val)) {
        result[targetKey] = merge({}, val);
      } else if (isArray(val)) {
        result[targetKey] = val.slice();
      } else {
        result[targetKey] = val;
      }
    };
    for (var i = 0, l = arguments.length; i < l; i++) {
      arguments[i] && forEach(arguments[i], assignValue);
    }
    return result;
  }

  /**
   * Extends object a by mutably adding to it the properties of object b.
   *
   * @param {Object} a The object to be extended
   * @param {Object} b The object to copy properties from
   * @param {Object} thisArg The object to bind function to
   *
   * @param {Boolean} [allOwnKeys]
   * @returns {Object} The resulting value of object a
   */
  var extend = function extend(a, b, thisArg) {
    var _ref3 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
      allOwnKeys = _ref3.allOwnKeys;
    forEach(b, function (val, key) {
      if (thisArg && isFunction(val)) {
        a[key] = (0, _bind.default)(val, thisArg);
      } else {
        a[key] = val;
      }
    }, {
      allOwnKeys: allOwnKeys
    });
    return a;
  };

  /**
   * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
   *
   * @param {string} content with BOM
   *
   * @returns {string} content value without BOM
   */
  var stripBOM = function stripBOM(content) {
    if (content.charCodeAt(0) === 0xFEFF) {
      content = content.slice(1);
    }
    return content;
  };

  /**
   * Inherit the prototype methods from one constructor into another
   * @param {function} constructor
   * @param {function} superConstructor
   * @param {object} [props]
   * @param {object} [descriptors]
   *
   * @returns {void}
   */
  var inherits = function inherits(constructor, superConstructor, props, descriptors) {
    constructor.prototype = Object.create(superConstructor.prototype, descriptors);
    constructor.prototype.constructor = constructor;
    Object.defineProperty(constructor, 'super', {
      value: superConstructor.prototype
    });
    props && Object.assign(constructor.prototype, props);
  };

  /**
   * Resolve object with deep prototype chain to a flat object
   * @param {Object} sourceObj source object
   * @param {Object} [destObj]
   * @param {Function|Boolean} [filter]
   * @param {Function} [propFilter]
   *
   * @returns {Object}
   */
  var toFlatObject = function toFlatObject(sourceObj, destObj, filter, propFilter) {
    var props;
    var i;
    var prop;
    var merged = {};
    destObj = destObj || {};
    // eslint-disable-next-line no-eq-null,eqeqeq
    if (sourceObj == null) return destObj;
    do {
      props = Object.getOwnPropertyNames(sourceObj);
      i = props.length;
      while (i-- > 0) {
        prop = props[i];
        if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {
          destObj[prop] = sourceObj[prop];
          merged[prop] = true;
        }
      }
      sourceObj = filter !== false && getPrototypeOf(sourceObj);
    } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);
    return destObj;
  };

  /**
   * Determines whether a string ends with the characters of a specified string
   *
   * @param {String} str
   * @param {String} searchString
   * @param {Number} [position= 0]
   *
   * @returns {boolean}
   */
  var endsWith = function endsWith(str, searchString, position) {
    str = String(str);
    if (position === undefined || position > str.length) {
      position = str.length;
    }
    position -= searchString.length;
    var lastIndex = str.indexOf(searchString, position);
    return lastIndex !== -1 && lastIndex === position;
  };

  /**
   * Returns new array from array like object or null if failed
   *
   * @param {*} [thing]
   *
   * @returns {?Array}
   */
  var toArray = function toArray(thing) {
    if (!thing) return null;
    if (isArray(thing)) return thing;
    var i = thing.length;
    if (!isNumber(i)) return null;
    var arr = new Array(i);
    while (i-- > 0) {
      arr[i] = thing[i];
    }
    return arr;
  };

  /**
   * Checking if the Uint8Array exists and if it does, it returns a function that checks if the
   * thing passed in is an instance of Uint8Array
   *
   * @param {TypedArray}
   *
   * @returns {Array}
   */
  // eslint-disable-next-line func-names
  var isTypedArray = function (TypedArray) {
    // eslint-disable-next-line func-names
    return function (thing) {
      return TypedArray && thing instanceof TypedArray;
    };
  }(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));

  /**
   * For each entry in the object, call the function with the key and value.
   *
   * @param {Object<any, any>} obj - The object to iterate over.
   * @param {Function} fn - The function to call for each entry.
   *
   * @returns {void}
   */
  var forEachEntry = function forEachEntry(obj, fn) {
    var generator = obj && obj[Symbol.iterator];
    var iterator = generator.call(obj);
    var result;
    while ((result = iterator.next()) && !result.done) {
      var pair = result.value;
      fn.call(obj, pair[0], pair[1]);
    }
  };

  /**
   * It takes a regular expression and a string, and returns an array of all the matches
   *
   * @param {string} regExp - The regular expression to match against.
   * @param {string} str - The string to search.
   *
   * @returns {Array<boolean>}
   */
  var matchAll = function matchAll(regExp, str) {
    var matches;
    var arr = [];
    while ((matches = regExp.exec(str)) !== null) {
      arr.push(matches);
    }
    return arr;
  };

  /* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */
  var isHTMLForm = kindOfTest('HTMLFormElement');
  var toCamelCase = function toCamelCase(str) {
    return str.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g, function replacer(m, p1, p2) {
      return p1.toUpperCase() + p2;
    });
  };

  /* Creating a function that will check if an object has a property. */
  var hasOwnProperty = function (_ref4) {
    var hasOwnProperty = _ref4.hasOwnProperty;
    return function (obj, prop) {
      return hasOwnProperty.call(obj, prop);
    };
  }(Object.prototype);

  /**
   * Determine if a value is a RegExp object
   *
   * @param {*} val The value to test
   *
   * @returns {boolean} True if value is a RegExp object, otherwise false
   */
  var isRegExp = kindOfTest('RegExp');
  var reduceDescriptors = function reduceDescriptors(obj, reducer) {
    var descriptors = Object.getOwnPropertyDescriptors(obj);
    var reducedDescriptors = {};
    forEach(descriptors, function (descriptor, name) {
      var ret;
      if ((ret = reducer(descriptor, name, obj)) !== false) {
        reducedDescriptors[name] = ret || descriptor;
      }
    });
    Object.defineProperties(obj, reducedDescriptors);
  };

  /**
   * Makes all methods read-only
   * @param {Object} obj
   */

  var freezeMethods = function freezeMethods(obj) {
    reduceDescriptors(obj, function (descriptor, name) {
      // skip restricted props in strict mode
      if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {
        return false;
      }
      var value = obj[name];
      if (!isFunction(value)) return;
      descriptor.enumerable = false;
      if ('writable' in descriptor) {
        descriptor.writable = false;
        return;
      }
      if (!descriptor.set) {
        descriptor.set = function () {
          throw Error('Can not rewrite read-only method \'' + name + '\'');
        };
      }
    });
  };
  var toObjectSet = function toObjectSet(arrayOrString, delimiter) {
    var obj = {};
    var define = function define(arr) {
      arr.forEach(function (value) {
        obj[value] = true;
      });
    };
    isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));
    return obj;
  };
  var noop = function noop() {};
  var toFiniteNumber = function toFiniteNumber(value, defaultValue) {
    return value != null && Number.isFinite(value = +value) ? value : defaultValue;
  };

  /**
   * If the thing is a FormData object, return true, otherwise return false.
   *
   * @param {unknown} thing - The thing to check.
   *
   * @returns {boolean}
   */
  function isSpecCompliantForm(thing) {
    return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);
  }
  var toJSONObject = function toJSONObject(obj) {
    var stack = new Array(10);
    var _visit = function visit(source, i) {
      if (isObject(source)) {
        if (stack.indexOf(source) >= 0) {
          return;
        }
        if (!('toJSON' in source)) {
          stack[i] = source;
          var target = isArray(source) ? [] : {};
          forEach(source, function (value, key) {
            var reducedValue = _visit(value, i + 1);
            !isUndefined(reducedValue) && (target[key] = reducedValue);
          });
          stack[i] = undefined;
          return target;
        }
      }
      return source;
    };
    return _visit(obj, 0);
  };
  var isAsyncFn = kindOfTest('AsyncFunction');
  var isThenable = function isThenable(thing) {
    return thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);
  };

  // original code
  // https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34

  var _setImmediate = function (setImmediateSupported, postMessageSupported) {
    if (setImmediateSupported) {
      return setImmediate;
    }
    return postMessageSupported ? function (token, callbacks) {
      _global.addEventListener("message", function (_ref5) {
        var source = _ref5.source,
          data = _ref5.data;
        if (source === _global && data === token) {
          callbacks.length && callbacks.shift()();
        }
      }, false);
      return function (cb) {
        callbacks.push(cb);
        _global.postMessage(token, "*");
      };
    }(`axios@${Math.random()}`, []) : function (cb) {
      return setTimeout(cb);
    };
  }(typeof setImmediate === 'function', isFunction(_global.postMessage));
  var asap = typeof queueMicrotask !== 'undefined' ? queueMicrotask.bind(_global) : typeof process !== 'undefined' && process.nextTick || _setImmediate;

  // *********************
  var _default = exports.default = {
    isArray: isArray,
    isArrayBuffer: isArrayBuffer,
    isBuffer: isBuffer,
    isFormData: isFormData,
    isArrayBufferView: isArrayBufferView,
    isString: isString,
    isNumber: isNumber,
    isBoolean: isBoolean,
    isObject: isObject,
    isPlainObject: isPlainObject,
    isReadableStream: isReadableStream,
    isRequest: isRequest,
    isResponse: isResponse,
    isHeaders: isHeaders,
    isUndefined: isUndefined,
    isDate: isDate,
    isFile: isFile,
    isBlob: isBlob,
    isRegExp: isRegExp,
    isFunction: isFunction,
    isStream: isStream,
    isURLSearchParams: isURLSearchParams,
    isTypedArray: isTypedArray,
    isFileList: isFileList,
    forEach: forEach,
    merge: merge,
    extend: extend,
    trim: trim,
    stripBOM: stripBOM,
    inherits: inherits,
    toFlatObject: toFlatObject,
    kindOf: kindOf,
    kindOfTest: kindOfTest,
    endsWith: endsWith,
    toArray: toArray,
    forEachEntry: forEachEntry,
    matchAll: matchAll,
    isHTMLForm: isHTMLForm,
    hasOwnProperty: hasOwnProperty,
    hasOwnProp: hasOwnProperty,
    // an alias to avoid ESLint no-prototype-builtins detection
    reduceDescriptors: reduceDescriptors,
    freezeMethods: freezeMethods,
    toObjectSet: toObjectSet,
    toCamelCase: toCamelCase,
    noop: noop,
    toFiniteNumber: toFiniteNumber,
    findKey: findKey,
    global: _global,
    isContextDefined: isContextDefined,
    isSpecCompliantForm: isSpecCompliantForm,
    toJSONObject: toJSONObject,
    isAsyncFn: isAsyncFn,
    isThenable: isThenable,
    setImmediate: _setImmediate,
    asap: asap
  };
},516,[1,38,517]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = bind;
  function bind(fn, thisArg) {
    return function wrap() {
      return fn.apply(thisArg, arguments);
    };
  }
},517,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _asyncToGenerator2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _utils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _buildURL = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _InterceptorManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _dispatchRequest = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _mergeConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _buildFullPath = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _validator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  var _AxiosHeaders = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));
  var validators = _validator.default.validators;

  /**
   * Create a new instance of Axios
   *
   * @param {Object} instanceConfig The default config for the instance
   *
   * @return {Axios} A new instance of Axios
   */
  var Axios = /*#__PURE__*/function () {
    function Axios(instanceConfig) {
      (0, _classCallCheck2.default)(this, Axios);
      this.defaults = instanceConfig;
      this.interceptors = {
        request: new _InterceptorManager.default(),
        response: new _InterceptorManager.default()
      };
    }

    /**
     * Dispatch a request
     *
     * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)
     * @param {?Object} config
     *
     * @returns {Promise} The Promise to be fulfilled
     */
    return (0, _createClass2.default)(Axios, [{
      key: "request",
      value: (function () {
        var _request2 = (0, _asyncToGenerator2.default)(function* (configOrUrl, config) {
          try {
            return yield this._request(configOrUrl, config);
          } catch (err) {
            if (err instanceof Error) {
              var dummy = {};
              Error.captureStackTrace ? Error.captureStackTrace(dummy) : dummy = new Error();

              // slice off the Error: ... line
              var stack = dummy.stack ? dummy.stack.replace(/^.+\n/, '') : '';
              try {
                if (!err.stack) {
                  err.stack = stack;
                  // match without the 2 top stack lines
                } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\n.+\n/, ''))) {
                  err.stack += '\n' + stack;
                }
              } catch (e) {
                // ignore the case where "stack" is an un-writable property
              }
            }
            throw err;
          }
        });
        function request(_x, _x2) {
          return _request2.apply(this, arguments);
        }
        return request;
      }())
    }, {
      key: "_request",
      value: function _request(configOrUrl, config) {
        /*eslint no-param-reassign:0*/
        // Allow for axios('example/url'[, config]) a la fetch API
        if (typeof configOrUrl === 'string') {
          config = config || {};
          config.url = configOrUrl;
        } else {
          config = configOrUrl || {};
        }
        config = (0, _mergeConfig.default)(this.defaults, config);
        var _config = config,
          transitional = _config.transitional,
          paramsSerializer = _config.paramsSerializer,
          headers = _config.headers;
        if (transitional !== undefined) {
          _validator.default.assertOptions(transitional, {
            silentJSONParsing: validators.transitional(validators.boolean),
            forcedJSONParsing: validators.transitional(validators.boolean),
            clarifyTimeoutError: validators.transitional(validators.boolean)
          }, false);
        }
        if (paramsSerializer != null) {
          if (_utils.default.isFunction(paramsSerializer)) {
            config.paramsSerializer = {
              serialize: paramsSerializer
            };
          } else {
            _validator.default.assertOptions(paramsSerializer, {
              encode: validators.function,
              serialize: validators.function
            }, true);
          }
        }

        // Set config.allowAbsoluteUrls
        if (config.allowAbsoluteUrls !== undefined) {
          // do nothing
        } else if (this.defaults.allowAbsoluteUrls !== undefined) {
          config.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls;
        } else {
          config.allowAbsoluteUrls = true;
        }
        _validator.default.assertOptions(config, {
          baseUrl: validators.spelling('baseURL'),
          withXsrfToken: validators.spelling('withXSRFToken')
        }, true);

        // Set config.method
        config.method = (config.method || this.defaults.method || 'get').toLowerCase();

        // Flatten headers
        var contextHeaders = headers && _utils.default.merge(headers.common, headers[config.method]);
        headers && _utils.default.forEach(['delete', 'get', 'head', 'post', 'put', 'patch', 'common'], function (method) {
          delete headers[method];
        });
        config.headers = _AxiosHeaders.default.concat(contextHeaders, headers);

        // filter out skipped interceptors
        var requestInterceptorChain = [];
        var synchronousRequestInterceptors = true;
        this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
          if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {
            return;
          }
          synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
          requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
        });
        var responseInterceptorChain = [];
        this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
          responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
        });
        var promise;
        var i = 0;
        var len;
        if (!synchronousRequestInterceptors) {
          var chain = [_dispatchRequest.default.bind(this), undefined];
          chain.unshift.apply(chain, requestInterceptorChain);
          chain.push.apply(chain, responseInterceptorChain);
          len = chain.length;
          promise = Promise.resolve(config);
          while (i < len) {
            promise = promise.then(chain[i++], chain[i++]);
          }
          return promise;
        }
        len = requestInterceptorChain.length;
        var newConfig = config;
        i = 0;
        while (i < len) {
          var onFulfilled = requestInterceptorChain[i++];
          var onRejected = requestInterceptorChain[i++];
          try {
            newConfig = onFulfilled(newConfig);
          } catch (error) {
            onRejected.call(this, error);
            break;
          }
        }
        try {
          promise = _dispatchRequest.default.call(this, newConfig);
        } catch (error) {
          return Promise.reject(error);
        }
        i = 0;
        len = responseInterceptorChain.length;
        while (i < len) {
          promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);
        }
        return promise;
      }
    }, {
      key: "getUri",
      value: function getUri(config) {
        config = (0, _mergeConfig.default)(this.defaults, config);
        var fullPath = (0, _buildFullPath.default)(config.baseURL, config.url, config.allowAbsoluteUrls);
        return (0, _buildURL.default)(fullPath, config.params, config.paramsSerializer);
      }
    }]);
  }(); // Provide aliases for supported request methods
  _utils.default.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
    /*eslint func-names:0*/
    Axios.prototype[method] = function (url, config) {
      return this.request((0, _mergeConfig.default)(config || {}, {
        method: method,
        url: url,
        data: (config || {}).data
      }));
    };
  });
  _utils.default.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
    /*eslint func-names:0*/

    function generateHTTPMethod(isForm) {
      return function httpMethod(url, data, config) {
        return this.request((0, _mergeConfig.default)(config || {}, {
          method: method,
          headers: isForm ? {
            'Content-Type': 'multipart/form-data'
          } : {},
          url: url,
          data: data
        }));
      };
    }
    Axios.prototype[method] = generateHTTPMethod();
    Axios.prototype[method + 'Form'] = generateHTTPMethod(true);
  });
  var _default = exports.default = Axios;
},518,[1,363,12,13,516,519,524,525,552,549,563,537]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = buildURL;
  var _utils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _AxiosURLSearchParams = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  /**
   * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their
   * URI encoded counterparts
   *
   * @param {string} val The value to be encoded.
   *
   * @returns {string} The encoded value.
   */
  function encode(val) {
    return encodeURIComponent(val).replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, '+').replace(/%5B/gi, '[').replace(/%5D/gi, ']');
  }

  /**
   * Build a URL by appending params to the end
   *
   * @param {string} url The base of the url (e.g., http://www.google.com)
   * @param {object} [params] The params to be appended
   * @param {?(object|Function)} options
   *
   * @returns {string} The formatted url
   */
  function buildURL(url, params, options) {
    /*eslint no-param-reassign:0*/
    if (!params) {
      return url;
    }
    var _encode = options && options.encode || encode;
    if (_utils.default.isFunction(options)) {
      options = {
        serialize: options
      };
    }
    var serializeFn = options && options.serialize;
    var serializedParams;
    if (serializeFn) {
      serializedParams = serializeFn(params, options);
    } else {
      serializedParams = _utils.default.isURLSearchParams(params) ? params.toString() : new _AxiosURLSearchParams.default(params, options).toString(_encode);
    }
    if (serializedParams) {
      var hashmarkIndex = url.indexOf("#");
      if (hashmarkIndex !== -1) {
        url = url.slice(0, hashmarkIndex);
      }
      url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
    }
    return url;
  }
},519,[1,516,520]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _toFormData = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  /**
   * It encodes a string by replacing all characters that are not in the unreserved set with
   * their percent-encoded equivalents
   *
   * @param {string} str - The string to encode.
   *
   * @returns {string} The encoded string.
   */
  function encode(str) {
    var charMap = {
      '!': '%21',
      "'": '%27',
      '(': '%28',
      ')': '%29',
      '~': '%7E',
      '%20': '+',
      '%00': '\x00'
    };
    return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {
      return charMap[match];
    });
  }

  /**
   * It takes a params object and converts it to a FormData object
   *
   * @param {Object<string, any>} params - The parameters to be converted to a FormData object.
   * @param {Object<string, any>} options - The options object passed to the Axios constructor.
   *
   * @returns {void}
   */
  function AxiosURLSearchParams(params, options) {
    this._pairs = [];
    params && (0, _toFormData.default)(params, this, options);
  }
  var prototype = AxiosURLSearchParams.prototype;
  prototype.append = function append(name, value) {
    this._pairs.push([name, value]);
  };
  prototype.toString = function toString(encoder) {
    var _encode = encoder ? function (value) {
      return encoder.call(this, value, encode);
    } : encode;
    return this._pairs.map(function each(pair) {
      return _encode(pair[0]) + '=' + _encode(pair[1]);
    }, '').join('&');
  };
  var _default = exports.default = AxiosURLSearchParams;
},520,[1,521]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _utils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _AxiosError = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _FormData = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  // temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored

  /**
   * Determines if the given thing is a array or js object.
   *
   * @param {string} thing - The object or array to be visited.
   *
   * @returns {boolean}
   */
  function isVisitable(thing) {
    return _utils.default.isPlainObject(thing) || _utils.default.isArray(thing);
  }

  /**
   * It removes the brackets from the end of a string
   *
   * @param {string} key - The key of the parameter.
   *
   * @returns {string} the key without the brackets.
   */
  function removeBrackets(key) {
    return _utils.default.endsWith(key, '[]') ? key.slice(0, -2) : key;
  }

  /**
   * It takes a path, a key, and a boolean, and returns a string
   *
   * @param {string} path - The path to the current key.
   * @param {string} key - The key of the current object being iterated over.
   * @param {string} dots - If true, the key will be rendered with dots instead of brackets.
   *
   * @returns {string} The path to the current key.
   */
  function renderKey(path, key, dots) {
    if (!path) return key;
    return path.concat(key).map(function each(token, i) {
      // eslint-disable-next-line no-param-reassign
      token = removeBrackets(token);
      return !dots && i ? '[' + token + ']' : token;
    }).join(dots ? '.' : '');
  }

  /**
   * If the array is an array and none of its elements are visitable, then it's a flat array.
   *
   * @param {Array<any>} arr - The array to check
   *
   * @returns {boolean}
   */
  function isFlatArray(arr) {
    return _utils.default.isArray(arr) && !arr.some(isVisitable);
  }
  var predicates = _utils.default.toFlatObject(_utils.default, {}, null, function filter(prop) {
    return /^is[A-Z]/.test(prop);
  });

  /**
   * Convert a data object to FormData
   *
   * @param {Object} obj
   * @param {?Object} [formData]
   * @param {?Object} [options]
   * @param {Function} [options.visitor]
   * @param {Boolean} [options.metaTokens = true]
   * @param {Boolean} [options.dots = false]
   * @param {?Boolean} [options.indexes = false]
   *
   * @returns {Object}
   **/

  /**
   * It converts an object into a FormData object
   *
   * @param {Object<any, any>} obj - The object to convert to form data.
   * @param {string} formData - The FormData object to append to.
   * @param {Object<string, any>} options
   *
   * @returns
   */
  function toFormData(obj, formData, options) {
    if (!_utils.default.isObject(obj)) {
      throw new TypeError('target must be an object');
    }

    // eslint-disable-next-line no-param-reassign
    formData = formData || new (_FormData.default || FormData)();

    // eslint-disable-next-line no-param-reassign
    options = _utils.default.toFlatObject(options, {
      metaTokens: true,
      dots: false,
      indexes: false
    }, false, function defined(option, source) {
      // eslint-disable-next-line no-eq-null,eqeqeq
      return !_utils.default.isUndefined(source[option]);
    });
    var metaTokens = options.metaTokens;
    // eslint-disable-next-line no-use-before-define
    var visitor = options.visitor || defaultVisitor;
    var dots = options.dots;
    var indexes = options.indexes;
    var _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;
    var useBlob = _Blob && _utils.default.isSpecCompliantForm(formData);
    if (!_utils.default.isFunction(visitor)) {
      throw new TypeError('visitor must be a function');
    }
    function convertValue(value) {
      if (value === null) return '';
      if (_utils.default.isDate(value)) {
        return value.toISOString();
      }
      if (!useBlob && _utils.default.isBlob(value)) {
        throw new _AxiosError.default('Blob is not supported. Use a Buffer instead.');
      }
      if (_utils.default.isArrayBuffer(value) || _utils.default.isTypedArray(value)) {
        return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);
      }
      return value;
    }

    /**
     * Default visitor.
     *
     * @param {*} value
     * @param {String|Number} key
     * @param {Array<String|Number>} path
     * @this {FormData}
     *
     * @returns {boolean} return true to visit the each prop of the value recursively
     */
    function defaultVisitor(value, key, path) {
      var arr = value;
      if (value && !path && typeof value === 'object') {
        if (_utils.default.endsWith(key, '{}')) {
          // eslint-disable-next-line no-param-reassign
          key = metaTokens ? key : key.slice(0, -2);
          // eslint-disable-next-line no-param-reassign
          value = JSON.stringify(value);
        } else if (_utils.default.isArray(value) && isFlatArray(value) || (_utils.default.isFileList(value) || _utils.default.endsWith(key, '[]')) && (arr = _utils.default.toArray(value))) {
          // eslint-disable-next-line no-param-reassign
          key = removeBrackets(key);
          arr.forEach(function each(el, index) {
            !(_utils.default.isUndefined(el) || el === null) && formData.append(
            // eslint-disable-next-line no-nested-ternary
            indexes === true ? renderKey([key], index, dots) : indexes === null ? key : key + '[]', convertValue(el));
          });
          return false;
        }
      }
      if (isVisitable(value)) {
        return true;
      }
      formData.append(renderKey(path, key, dots), convertValue(value));
      return false;
    }
    var stack = [];
    var exposedHelpers = Object.assign(predicates, {
      defaultVisitor: defaultVisitor,
      convertValue: convertValue,
      isVisitable: isVisitable
    });
    function build(value, path) {
      if (_utils.default.isUndefined(value)) return;
      if (stack.indexOf(value) !== -1) {
        throw Error('Circular reference detected in ' + path.join('.'));
      }
      stack.push(value);
      _utils.default.forEach(value, function each(el, key) {
        var result = !(_utils.default.isUndefined(el) || el === null) && visitor.call(formData, el, _utils.default.isString(key) ? key.trim() : key, path, exposedHelpers);
        if (result === true) {
          build(el, path ? path.concat(key) : [key]);
        }
      });
      stack.pop();
    }
    if (!_utils.default.isObject(obj)) {
      throw new TypeError('data must be an object');
    }
    build(obj);
    return formData;
  }
  var _default = exports.default = toFormData;
},521,[1,516,522,523]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _utils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  /**
   * Create an Error with the specified message, config, error code, request and response.
   *
   * @param {string} message The error message.
   * @param {string} [code] The error code (for example, 'ECONNABORTED').
   * @param {Object} [config] The config.
   * @param {Object} [request] The request.
   * @param {Object} [response] The response.
   *
   * @returns {Error} The created error.
   */
  function AxiosError(message, code, config, request, response) {
    Error.call(this);
    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, this.constructor);
    } else {
      this.stack = new Error().stack;
    }
    this.message = message;
    this.name = 'AxiosError';
    code && (this.code = code);
    config && (this.config = config);
    request && (this.request = request);
    if (response) {
      this.response = response;
      this.status = response.status ? response.status : null;
    }
  }
  _utils.default.inherits(AxiosError, Error, {
    toJSON: function toJSON() {
      return {
        // Standard
        message: this.message,
        name: this.name,
        // Microsoft
        description: this.description,
        number: this.number,
        // Mozilla
        fileName: this.fileName,
        lineNumber: this.lineNumber,
        columnNumber: this.columnNumber,
        stack: this.stack,
        // Axios
        config: _utils.default.toJSONObject(this.config),
        code: this.code,
        status: this.status
      };
    }
  });
  var prototype = AxiosError.prototype;
  var descriptors = {};
  ['ERR_BAD_OPTION_VALUE', 'ERR_BAD_OPTION', 'ECONNABORTED', 'ETIMEDOUT', 'ERR_NETWORK', 'ERR_FR_TOO_MANY_REDIRECTS', 'ERR_DEPRECATED', 'ERR_BAD_RESPONSE', 'ERR_BAD_REQUEST', 'ERR_CANCELED', 'ERR_NOT_SUPPORT', 'ERR_INVALID_URL'
  // eslint-disable-next-line func-names
  ].forEach(function (code) {
    descriptors[code] = {
      value: code
    };
  });
  Object.defineProperties(AxiosError, descriptors);
  Object.defineProperty(prototype, 'isAxiosError', {
    value: true
  });

  // eslint-disable-next-line func-names
  AxiosError.from = function (error, code, config, request, response, customProps) {
    var axiosError = Object.create(prototype);
    _utils.default.toFlatObject(error, axiosError, function filter(obj) {
      return obj !== Error.prototype;
    }, function (prop) {
      return prop !== 'isAxiosError';
    });
    AxiosError.call(axiosError, error.message, code, config, request, response);
    axiosError.cause = error;
    axiosError.name = error.name;
    customProps && Object.assign(axiosError, customProps);
    return axiosError;
  };
  var _default = exports.default = AxiosError;
},522,[1,516]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  // eslint-disable-next-line strict
  var _default = exports.default = null;
},523,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _utils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var InterceptorManager = /*#__PURE__*/function () {
    function InterceptorManager() {
      (0, _classCallCheck2.default)(this, InterceptorManager);
      this.handlers = [];
    }

    /**
     * Add a new interceptor to the stack
     *
     * @param {Function} fulfilled The function to handle `then` for a `Promise`
     * @param {Function} rejected The function to handle `reject` for a `Promise`
     *
     * @return {Number} An ID used to remove interceptor later
     */
    return (0, _createClass2.default)(InterceptorManager, [{
      key: "use",
      value: function use(fulfilled, rejected, options) {
        this.handlers.push({
          fulfilled: fulfilled,
          rejected: rejected,
          synchronous: options ? options.synchronous : false,
          runWhen: options ? options.runWhen : null
        });
        return this.handlers.length - 1;
      }

      /**
       * Remove an interceptor from the stack
       *
       * @param {Number} id The ID that was returned by `use`
       *
       * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise
       */
    }, {
      key: "eject",
      value: function eject(id) {
        if (this.handlers[id]) {
          this.handlers[id] = null;
        }
      }

      /**
       * Clear all interceptors from the stack
       *
       * @returns {void}
       */
    }, {
      key: "clear",
      value: function clear() {
        if (this.handlers) {
          this.handlers = [];
        }
      }

      /**
       * Iterate over all the registered interceptors
       *
       * This method is particularly useful for skipping over any
       * interceptors that may have become `null` calling `eject`.
       *
       * @param {Function} fn The function to call for each interceptor
       *
       * @returns {void}
       */
    }, {
      key: "forEach",
      value: function forEach(fn) {
        _utils.default.forEach(this.handlers, function forEachHandler(h) {
          if (h !== null) {
            fn(h);
          }
        });
      }
    }]);
  }();
  var _default = exports.default = InterceptorManager;
},524,[1,12,13,516]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = dispatchRequest;
  var _transformData = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _isCancel = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _CanceledError = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _AxiosHeaders = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _adapters = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  /**
   * Throws a `CanceledError` if cancellation has been requested.
   *
   * @param {Object} config The config that is to be used for the request
   *
   * @returns {void}
   */
  function throwIfCancellationRequested(config) {
    if (config.cancelToken) {
      config.cancelToken.throwIfRequested();
    }
    if (config.signal && config.signal.aborted) {
      throw new _CanceledError.default(null, config);
    }
  }

  /**
   * Dispatch a request to the server using the configured adapter.
   *
   * @param {object} config The config that is to be used for the request
   *
   * @returns {Promise} The Promise to be fulfilled
   */
  function dispatchRequest(config) {
    throwIfCancellationRequested(config);
    config.headers = _AxiosHeaders.default.from(config.headers);

    // Transform request data
    config.data = _transformData.default.call(config, config.transformRequest);
    if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {
      config.headers.setContentType('application/x-www-form-urlencoded', false);
    }
    var adapter = _adapters.default.getAdapter(config.adapter || _index.default.adapter);
    return adapter(config).then(function onAdapterResolution(response) {
      throwIfCancellationRequested(config);

      // Transform response data
      response.data = _transformData.default.call(config, config.transformResponse, response);
      response.headers = _AxiosHeaders.default.from(response.headers);
      return response;
    }, function onAdapterRejection(reason) {
      if (!(0, _isCancel.default)(reason)) {
        throwIfCancellationRequested(config);

        // Transform response data
        if (reason && reason.response) {
          reason.response.data = _transformData.default.call(config, config.transformResponse, reason.response);
          reason.response.headers = _AxiosHeaders.default.from(reason.response.headers);
        }
      }
      return Promise.reject(reason);
    });
  }
},525,[1,526,539,527,540,537,541]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = transformData;
  var _utils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _AxiosHeaders = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  /**
   * Transform the data for a request or a response
   *
   * @param {Array|Function} fns A single function or Array of functions
   * @param {?Object} response The response object
   *
   * @returns {*} The resulting transformed data
   */
  function transformData(fns, response) {
    var config = this || _index.default;
    var context = response || config;
    var headers = _AxiosHeaders.default.from(context.headers);
    var data = context.data;
    _utils.default.forEach(fns, function transform(fn) {
      data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);
    });
    headers.normalize();
    return data;
  }
},526,[1,516,527,537]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _utils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _AxiosError = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _transitional = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _toFormData = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _toURLEncodedForm = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _formDataToJSON = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  /**
   * It takes a string, tries to parse it, and if it fails, it returns the stringified version
   * of the input
   *
   * @param {any} rawValue - The value to be stringified.
   * @param {Function} parser - A function that parses a string into a JavaScript object.
   * @param {Function} encoder - A function that takes a value and returns a string.
   *
   * @returns {string} A stringified version of the rawValue.
   */
  function stringifySafely(rawValue, parser, encoder) {
    if (_utils.default.isString(rawValue)) {
      try {
        (parser || JSON.parse)(rawValue);
        return _utils.default.trim(rawValue);
      } catch (e) {
        if (e.name !== 'SyntaxError') {
          throw e;
        }
      }
    }
    return (encoder || JSON.stringify)(rawValue);
  }
  var defaults = {
    transitional: _transitional.default,
    adapter: ['xhr', 'http', 'fetch'],
    transformRequest: [function transformRequest(data, headers) {
      var contentType = headers.getContentType() || '';
      var hasJSONContentType = contentType.indexOf('application/json') > -1;
      var isObjectPayload = _utils.default.isObject(data);
      if (isObjectPayload && _utils.default.isHTMLForm(data)) {
        data = new FormData(data);
      }
      var isFormData = _utils.default.isFormData(data);
      if (isFormData) {
        return hasJSONContentType ? JSON.stringify((0, _formDataToJSON.default)(data)) : data;
      }
      if (_utils.default.isArrayBuffer(data) || _utils.default.isBuffer(data) || _utils.default.isStream(data) || _utils.default.isFile(data) || _utils.default.isBlob(data) || _utils.default.isReadableStream(data)) {
        return data;
      }
      if (_utils.default.isArrayBufferView(data)) {
        return data.buffer;
      }
      if (_utils.default.isURLSearchParams(data)) {
        headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);
        return data.toString();
      }
      var isFileList;
      if (isObjectPayload) {
        if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {
          return (0, _toURLEncodedForm.default)(data, this.formSerializer).toString();
        }
        if ((isFileList = _utils.default.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {
          var _FormData = this.env && this.env.FormData;
          return (0, _toFormData.default)(isFileList ? {
            'files[]': data
          } : data, _FormData && new _FormData(), this.formSerializer);
        }
      }
      if (isObjectPayload || hasJSONContentType) {
        headers.setContentType('application/json', false);
        return stringifySafely(data);
      }
      return data;
    }],
    transformResponse: [function transformResponse(data) {
      var transitional = this.transitional || defaults.transitional;
      var forcedJSONParsing = transitional && transitional.forcedJSONParsing;
      var JSONRequested = this.responseType === 'json';
      if (_utils.default.isResponse(data) || _utils.default.isReadableStream(data)) {
        return data;
      }
      if (data && _utils.default.isString(data) && (forcedJSONParsing && !this.responseType || JSONRequested)) {
        var silentJSONParsing = transitional && transitional.silentJSONParsing;
        var strictJSONParsing = !silentJSONParsing && JSONRequested;
        try {
          return JSON.parse(data);
        } catch (e) {
          if (strictJSONParsing) {
            if (e.name === 'SyntaxError') {
              throw _AxiosError.default.from(e, _AxiosError.default.ERR_BAD_RESPONSE, this, null, this.response);
            }
            throw e;
          }
        }
      }
      return data;
    }],
    /**
     * A timeout in milliseconds to abort a request. If set to 0 (default) a
     * timeout is not created.
     */
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: _index.default.classes.FormData,
      Blob: _index.default.classes.Blob
    },
    validateStatus: function validateStatus(status) {
      return status >= 200 && status < 300;
    },
    headers: {
      common: {
        'Accept': 'application/json, text/plain, */*',
        'Content-Type': undefined
      }
    }
  };
  _utils.default.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], function (method) {
    defaults.headers[method] = {};
  });
  var _default = exports.default = defaults;
},527,[1,516,522,528,521,529,530,536]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = exports.default = {
    silentJSONParsing: true,
    forcedJSONParsing: true,
    clarifyTimeoutError: false
  };
},528,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = toURLEncodedForm;
  var _utils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _toFormData = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  function toURLEncodedForm(data, options) {
    return (0, _toFormData.default)(data, new _index.default.classes.URLSearchParams(), Object.assign({
      visitor: function visitor(value, key, path, helpers) {
        if (_index.default.isNode && _utils.default.isBuffer(value)) {
          this.append(key, value.toString('base64'));
          return false;
        }
        return helpers.defaultVisitor.apply(this, arguments);
      }
    }, options));
  }
},529,[1,516,521,530]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var utils = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var _default = exports.default = Object.assign({}, utils, _index.default);
},530,[1,531,535]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _URLSearchParams = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _FormData = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _Blob = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _default = exports.default = {
    isBrowser: true,
    classes: {
      URLSearchParams: _URLSearchParams.default,
      FormData: _FormData.default,
      Blob: _Blob.default
    },
    protocols: ['http', 'https', 'file', 'blob', 'url', 'data']
  };
},531,[1,532,533,534]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _AxiosURLSearchParams = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _default = exports.default = typeof URLSearchParams !== 'undefined' ? URLSearchParams : _AxiosURLSearchParams.default;
},532,[1,520]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = exports.default = typeof FormData !== 'undefined' ? FormData : null;
},533,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = exports.default = typeof Blob !== 'undefined' ? Blob : null;
},534,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.origin = exports.navigator = exports.hasStandardBrowserWebWorkerEnv = exports.hasStandardBrowserEnv = exports.hasBrowserEnv = undefined;
  var hasBrowserEnv = exports.hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';
  var _navigator = exports.navigator = typeof navigator === 'object' && navigator || undefined;

  /**
   * Determine if we're running in a standard browser environment
   *
   * This allows axios to run in a web worker, and react-native.
   * Both environments support XMLHttpRequest, but not fully standard globals.
   *
   * web workers:
   *  typeof window -> undefined
   *  typeof document -> undefined
   *
   * react-native:
   *  navigator.product -> 'ReactNative'
   * nativescript
   *  navigator.product -> 'NativeScript' or 'NS'
   *
   * @returns {boolean}
   */
  var hasStandardBrowserEnv = exports.hasStandardBrowserEnv = hasBrowserEnv && (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);

  /**
   * Determine if we're running in a standard browser webWorker environment
   *
   * Although the `isStandardBrowserEnv` method indicates that
   * `allows axios to run in a web worker`, the WebWorker will still be
   * filtered out due to its judgment standard
   * `typeof window !== 'undefined' && typeof document !== 'undefined'`.
   * This leads to a problem when axios post `FormData` in webWorker
   */
  var hasStandardBrowserWebWorkerEnv = exports.hasStandardBrowserWebWorkerEnv = function () {
    return typeof WorkerGlobalScope !== 'undefined' &&
    // eslint-disable-next-line no-undef
    self instanceof WorkerGlobalScope && typeof self.importScripts === 'function';
  }();
  var origin = exports.origin = hasBrowserEnv && window.location.href || 'http://localhost';
},535,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _utils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  /**
   * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']
   *
   * @param {string} name - The name of the property to get.
   *
   * @returns An array of strings.
   */
  function parsePropPath(name) {
    // foo[x][y][z]
    // foo.x.y.z
    // foo-x-y-z
    // foo x y z
    return _utils.default.matchAll(/\w+|\[(\w*)]/g, name).map(function (match) {
      return match[0] === '[]' ? '' : match[1] || match[0];
    });
  }

  /**
   * Convert an array to an object.
   *
   * @param {Array<any>} arr - The array to convert to an object.
   *
   * @returns An object with the same keys and values as the array.
   */
  function arrayToObject(arr) {
    var obj = {};
    var keys = Object.keys(arr);
    var i;
    var len = keys.length;
    var key;
    for (i = 0; i < len; i++) {
      key = keys[i];
      obj[key] = arr[key];
    }
    return obj;
  }

  /**
   * It takes a FormData object and returns a JavaScript object
   *
   * @param {string} formData The FormData object to convert to JSON.
   *
   * @returns {Object<string, any> | null} The converted object.
   */
  function formDataToJSON(formData) {
    function buildPath(path, value, target, index) {
      var name = path[index++];
      if (name === '__proto__') return true;
      var isNumericKey = Number.isFinite(+name);
      var isLast = index >= path.length;
      name = !name && _utils.default.isArray(target) ? target.length : name;
      if (isLast) {
        if (_utils.default.hasOwnProp(target, name)) {
          target[name] = [target[name], value];
        } else {
          target[name] = value;
        }
        return !isNumericKey;
      }
      if (!target[name] || !_utils.default.isObject(target[name])) {
        target[name] = [];
      }
      var result = buildPath(path, value, target[name], index);
      if (result && _utils.default.isArray(target[name])) {
        target[name] = arrayToObject(target[name]);
      }
      return !isNumericKey;
    }
    if (_utils.default.isFormData(formData) && _utils.default.isFunction(formData.entries)) {
      var obj = {};
      _utils.default.forEachEntry(formData, function (name, value) {
        buildPath(parsePropPath(name), value, obj, 0);
      });
      return obj;
    }
    return null;
  }
  var _default = exports.default = formDataToJSON;
},536,[1,516]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _utils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _parseHeaders = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var $internals = Symbol('internals');
  function normalizeHeader(header) {
    return header && String(header).trim().toLowerCase();
  }
  function normalizeValue(value) {
    if (value === false || value == null) {
      return value;
    }
    return _utils.default.isArray(value) ? value.map(normalizeValue) : String(value);
  }
  function parseTokens(str) {
    var tokens = Object.create(null);
    var tokensRE = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
    var match;
    while (match = tokensRE.exec(str)) {
      tokens[match[1]] = match[2];
    }
    return tokens;
  }
  var isValidHeaderName = function isValidHeaderName(str) {
    return /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());
  };
  function matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {
    if (_utils.default.isFunction(filter)) {
      return filter.call(this, value, header);
    }
    if (isHeaderNameFilter) {
      value = header;
    }
    if (!_utils.default.isString(value)) return;
    if (_utils.default.isString(filter)) {
      return value.indexOf(filter) !== -1;
    }
    if (_utils.default.isRegExp(filter)) {
      return filter.test(value);
    }
  }
  function formatHeader(header) {
    return header.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, function (w, char, str) {
      return char.toUpperCase() + str;
    });
  }
  function buildAccessors(obj, header) {
    var accessorName = _utils.default.toCamelCase(' ' + header);
    ['get', 'set', 'has'].forEach(function (methodName) {
      Object.defineProperty(obj, methodName + accessorName, {
        value: function value(arg1, arg2, arg3) {
          return this[methodName].call(this, header, arg1, arg2, arg3);
        },
        configurable: true
      });
    });
  }
  var AxiosHeaders = /*#__PURE__*/function () {
    function AxiosHeaders(headers) {
      (0, _classCallCheck2.default)(this, AxiosHeaders);
      headers && this.set(headers);
    }
    return (0, _createClass2.default)(AxiosHeaders, [{
      key: "set",
      value: function set(header, valueOrRewrite, rewrite) {
        var self = this;
        function setHeader(_value, _header, _rewrite) {
          var lHeader = normalizeHeader(_header);
          if (!lHeader) {
            throw new Error('header name must be a non-empty string');
          }
          var key = _utils.default.findKey(self, lHeader);
          if (!key || self[key] === undefined || _rewrite === true || _rewrite === undefined && self[key] !== false) {
            self[key || _header] = normalizeValue(_value);
          }
        }
        var setHeaders = function setHeaders(headers, _rewrite) {
          return _utils.default.forEach(headers, function (_value, _header) {
            return setHeader(_value, _header, _rewrite);
          });
        };
        if (_utils.default.isPlainObject(header) || header instanceof this.constructor) {
          setHeaders(header, valueOrRewrite);
        } else if (_utils.default.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {
          setHeaders((0, _parseHeaders.default)(header), valueOrRewrite);
        } else if (_utils.default.isHeaders(header)) {
          for (var _ref3 of header.entries()) {
            var _ref2 = (0, _slicedToArray2.default)(_ref3, 2);
            var key = _ref2[0];
            var value = _ref2[1];
            setHeader(value, key, rewrite);
          }
        } else {
          header != null && setHeader(valueOrRewrite, header, rewrite);
        }
        return this;
      }
    }, {
      key: "get",
      value: function get(header, parser) {
        header = normalizeHeader(header);
        if (header) {
          var key = _utils.default.findKey(this, header);
          if (key) {
            var value = this[key];
            if (!parser) {
              return value;
            }
            if (parser === true) {
              return parseTokens(value);
            }
            if (_utils.default.isFunction(parser)) {
              return parser.call(this, value, key);
            }
            if (_utils.default.isRegExp(parser)) {
              return parser.exec(value);
            }
            throw new TypeError('parser must be boolean|regexp|function');
          }
        }
      }
    }, {
      key: "has",
      value: function has(header, matcher) {
        header = normalizeHeader(header);
        if (header) {
          var key = _utils.default.findKey(this, header);
          return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));
        }
        return false;
      }
    }, {
      key: "delete",
      value: function _delete(header, matcher) {
        var self = this;
        var deleted = false;
        function deleteHeader(_header) {
          _header = normalizeHeader(_header);
          if (_header) {
            var key = _utils.default.findKey(self, _header);
            if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {
              delete self[key];
              deleted = true;
            }
          }
        }
        if (_utils.default.isArray(header)) {
          header.forEach(deleteHeader);
        } else {
          deleteHeader(header);
        }
        return deleted;
      }
    }, {
      key: "clear",
      value: function clear(matcher) {
        var keys = Object.keys(this);
        var i = keys.length;
        var deleted = false;
        while (i--) {
          var key = keys[i];
          if (!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {
            delete this[key];
            deleted = true;
          }
        }
        return deleted;
      }
    }, {
      key: "normalize",
      value: function normalize(format) {
        var self = this;
        var headers = {};
        _utils.default.forEach(this, function (value, header) {
          var key = _utils.default.findKey(headers, header);
          if (key) {
            self[key] = normalizeValue(value);
            delete self[header];
            return;
          }
          var normalized = format ? formatHeader(header) : String(header).trim();
          if (normalized !== header) {
            delete self[header];
          }
          self[normalized] = normalizeValue(value);
          headers[normalized] = true;
        });
        return this;
      }
    }, {
      key: "concat",
      value: function concat() {
        var _this$constructor;
        for (var _len = arguments.length, targets = new Array(_len), _key = 0; _key < _len; _key++) {
          targets[_key] = arguments[_key];
        }
        return (_this$constructor = this.constructor).concat.apply(_this$constructor, [this].concat(targets));
      }
    }, {
      key: "toJSON",
      value: function toJSON(asStrings) {
        var obj = Object.create(null);
        _utils.default.forEach(this, function (value, header) {
          value != null && value !== false && (obj[header] = asStrings && _utils.default.isArray(value) ? value.join(', ') : value);
        });
        return obj;
      }
    }, {
      key: Symbol.iterator,
      value: function value() {
        return Object.entries(this.toJSON())[Symbol.iterator]();
      }
    }, {
      key: "toString",
      value: function toString() {
        return Object.entries(this.toJSON()).map(function (_ref4) {
          var _ref5 = (0, _slicedToArray2.default)(_ref4, 2),
            header = _ref5[0],
            value = _ref5[1];
          return header + ': ' + value;
        }).join('\n');
      }
    }, {
      key: Symbol.toStringTag,
      get: function get() {
        return 'AxiosHeaders';
      }
    }], [{
      key: "from",
      value: function from(thing) {
        return thing instanceof this ? thing : new this(thing);
      }
    }, {
      key: "concat",
      value: function concat(first) {
        var computed = new this(first);
        for (var _len2 = arguments.length, targets = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
          targets[_key2 - 1] = arguments[_key2];
        }
        targets.forEach(function (target) {
          return computed.set(target);
        });
        return computed;
      }
    }, {
      key: "accessor",
      value: function accessor(header) {
        var internals = this[$internals] = this[$internals] = {
          accessors: {}
        };
        var accessors = internals.accessors;
        var prototype = this.prototype;
        function defineAccessor(_header) {
          var lHeader = normalizeHeader(_header);
          if (!accessors[lHeader]) {
            buildAccessors(prototype, _header);
            accessors[lHeader] = true;
          }
        }
        _utils.default.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);
        return this;
      }
    }]);
  }();
  AxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);

  // reserved names hotfix
  _utils.default.reduceDescriptors(AxiosHeaders.prototype, function (_ref6, key) {
    var value = _ref6.value;
    var mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`
    return {
      get: function get() {
        return value;
      },
      set: function set(headerValue) {
        this[mapped] = headerValue;
      }
    };
  });
  _utils.default.freezeMethods(AxiosHeaders);
  var _default = exports.default = AxiosHeaders;
},537,[1,38,12,13,516,538]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _utils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  // RawAxiosHeaders whose duplicates are ignored by node
  // c.f. https://nodejs.org/api/http.html#http_message_headers
  var ignoreDuplicateOf = _utils.default.toObjectSet(['age', 'authorization', 'content-length', 'content-type', 'etag', 'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since', 'last-modified', 'location', 'max-forwards', 'proxy-authorization', 'referer', 'retry-after', 'user-agent']);

  /**
   * Parse headers into an object
   *
   * ```
   * Date: Wed, 27 Aug 2014 08:58:49 GMT
   * Content-Type: application/json
   * Connection: keep-alive
   * Transfer-Encoding: chunked
   * ```
   *
   * @param {String} rawHeaders Headers needing to be parsed
   *
   * @returns {Object} Headers parsed into an object
   */
  var _default = exports.default = function _default(rawHeaders) {
    var parsed = {};
    var key;
    var val;
    var i;
    rawHeaders && rawHeaders.split('\n').forEach(function parser(line) {
      i = line.indexOf(':');
      key = line.substring(0, i).trim().toLowerCase();
      val = line.substring(i + 1).trim();
      if (!key || parsed[key] && ignoreDuplicateOf[key]) {
        return;
      }
      if (key === 'set-cookie') {
        if (parsed[key]) {
          parsed[key].push(val);
        } else {
          parsed[key] = [val];
        }
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    });
    return parsed;
  };
},538,[1,516]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = isCancel;
  function isCancel(value) {
    return !!(value && value.__CANCEL__);
  }
},539,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _AxiosError = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _utils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  /**
   * A `CanceledError` is an object that is thrown when an operation is canceled.
   *
   * @param {string=} message The message.
   * @param {Object=} config The config.
   * @param {Object=} request The request.
   *
   * @returns {CanceledError} The created error.
   */
  function CanceledError(message, config, request) {
    // eslint-disable-next-line no-eq-null,eqeqeq
    _AxiosError.default.call(this, message == null ? 'canceled' : message, _AxiosError.default.ERR_CANCELED, config, request);
    this.name = 'CanceledError';
  }
  _utils.default.inherits(CanceledError, _AxiosError.default, {
    __CANCEL__: true
  });
  var _default = exports.default = CanceledError;
},540,[1,522,516]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _utils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _http = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _xhr = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _fetch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _AxiosError = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var knownAdapters = {
    http: _http.default,
    xhr: _xhr.default,
    fetch: _fetch.default
  };
  _utils.default.forEach(knownAdapters, function (fn, value) {
    if (fn) {
      try {
        Object.defineProperty(fn, 'name', {
          value: value
        });
      } catch (e) {
        // eslint-disable-next-line no-empty
      }
      Object.defineProperty(fn, 'adapterName', {
        value: value
      });
    }
  });
  var renderReason = function renderReason(reason) {
    return `- ${reason}`;
  };
  var isResolvedHandle = function isResolvedHandle(adapter) {
    return _utils.default.isFunction(adapter) || adapter === null || adapter === false;
  };
  var _default = exports.default = {
    getAdapter: function getAdapter(adapters) {
      adapters = _utils.default.isArray(adapters) ? adapters : [adapters];
      var _adapters = adapters,
        length = _adapters.length;
      var nameOrAdapter;
      var adapter;
      var rejectedReasons = {};
      for (var i = 0; i < length; i++) {
        nameOrAdapter = adapters[i];
        var id = undefined;
        adapter = nameOrAdapter;
        if (!isResolvedHandle(nameOrAdapter)) {
          adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];
          if (adapter === undefined) {
            throw new _AxiosError.default(`Unknown adapter '${id}'`);
          }
        }
        if (adapter) {
          break;
        }
        rejectedReasons[id || '#' + i] = adapter;
      }
      if (!adapter) {
        var reasons = Object.entries(rejectedReasons).map(function (_ref) {
          var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
            id = _ref2[0],
            state = _ref2[1];
          return `adapter ${id} ` + (state === false ? 'is not supported by the environment' : 'is not available in the build');
        });
        var s = length ? reasons.length > 1 ? 'since :\n' + reasons.map(renderReason).join('\n') : ' ' + renderReason(reasons[0]) : 'as no adapter specified';
        throw new _AxiosError.default(`There is no suitable adapter to dispatch the request ` + s, 'ERR_NOT_SUPPORT');
      }
      return adapter;
    },
    adapters: knownAdapters
  };
},541,[1,38,516,523,542,556,522]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _utils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _settle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _transitional = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _AxiosError = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _CanceledError = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _parseProtocol = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _AxiosHeaders = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _resolveConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  var isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';
  var _default = exports.default = isXHRAdapterSupported && function (config) {
    return new Promise(function dispatchXhrRequest(resolve, reject) {
      var _config = (0, _resolveConfig.default)(config);
      var requestData = _config.data;
      var requestHeaders = _AxiosHeaders.default.from(_config.headers).normalize();
      var responseType = _config.responseType,
        onUploadProgress = _config.onUploadProgress,
        onDownloadProgress = _config.onDownloadProgress;
      var onCanceled;
      var uploadThrottled, downloadThrottled;
      var flushUpload, flushDownload;
      function done() {
        flushUpload && flushUpload(); // flush events
        flushDownload && flushDownload(); // flush events

        _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);
        _config.signal && _config.signal.removeEventListener('abort', onCanceled);
      }
      var request = new XMLHttpRequest();
      request.open(_config.method.toUpperCase(), _config.url, true);

      // Set the request timeout in MS
      request.timeout = _config.timeout;
      function onloadend() {
        if (!request) {
          return;
        }
        // Prepare the response
        var responseHeaders = _AxiosHeaders.default.from('getAllResponseHeaders' in request && request.getAllResponseHeaders());
        var responseData = !responseType || responseType === 'text' || responseType === 'json' ? request.responseText : request.response;
        var response = {
          data: responseData,
          status: request.status,
          statusText: request.statusText,
          headers: responseHeaders,
          config: config,
          request: request
        };
        (0, _settle.default)(function _resolve(value) {
          resolve(value);
          done();
        }, function _reject(err) {
          reject(err);
          done();
        }, response);

        // Clean up request
        request = null;
      }
      if ('onloadend' in request) {
        // Use onloadend if available
        request.onloadend = onloadend;
      } else {
        // Listen for ready state to emulate onloadend
        request.onreadystatechange = function handleLoad() {
          if (!request || request.readyState !== 4) {
            return;
          }

          // The request errored out and we didn't get a response, this will be
          // handled by onerror instead
          // With one exception: request that using file: protocol, most browsers
          // will return status as 0 even though it's a successful request
          if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
            return;
          }
          // readystate handler is calling before onerror or ontimeout handlers,
          // so we should call onloadend on the next 'tick'
          setTimeout(onloadend);
        };
      }

      // Handle browser request cancellation (as opposed to a manual cancellation)
      request.onabort = function handleAbort() {
        if (!request) {
          return;
        }
        reject(new _AxiosError.default('Request aborted', _AxiosError.default.ECONNABORTED, config, request));

        // Clean up request
        request = null;
      };

      // Handle low level network errors
      request.onerror = function handleError() {
        // Real errors are hidden from us by the browser
        // onerror should only fire if it's a network error
        reject(new _AxiosError.default('Network Error', _AxiosError.default.ERR_NETWORK, config, request));

        // Clean up request
        request = null;
      };

      // Handle timeout
      request.ontimeout = function handleTimeout() {
        var timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';
        var transitional = _config.transitional || _transitional.default;
        if (_config.timeoutErrorMessage) {
          timeoutErrorMessage = _config.timeoutErrorMessage;
        }
        reject(new _AxiosError.default(timeoutErrorMessage, transitional.clarifyTimeoutError ? _AxiosError.default.ETIMEDOUT : _AxiosError.default.ECONNABORTED, config, request));

        // Clean up request
        request = null;
      };

      // Remove Content-Type if data is undefined
      requestData === undefined && requestHeaders.setContentType(null);

      // Add headers to the request
      if ('setRequestHeader' in request) {
        _utils.default.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {
          request.setRequestHeader(key, val);
        });
      }

      // Add withCredentials to request if needed
      if (!_utils.default.isUndefined(_config.withCredentials)) {
        request.withCredentials = !!_config.withCredentials;
      }

      // Add responseType to request if needed
      if (responseType && responseType !== 'json') {
        request.responseType = _config.responseType;
      }

      // Handle progress if needed
      if (onDownloadProgress) {
        var _progressEventReducer = (0, _$$_REQUIRE(_dependencyMap[11]).progressEventReducer)(onDownloadProgress, true);
        var _progressEventReducer2 = (0, _slicedToArray2.default)(_progressEventReducer, 2);
        downloadThrottled = _progressEventReducer2[0];
        flushDownload = _progressEventReducer2[1];
        request.addEventListener('progress', downloadThrottled);
      }

      // Not all browsers support upload events
      if (onUploadProgress && request.upload) {
        var _progressEventReducer3 = (0, _$$_REQUIRE(_dependencyMap[11]).progressEventReducer)(onUploadProgress);
        var _progressEventReducer4 = (0, _slicedToArray2.default)(_progressEventReducer3, 2);
        uploadThrottled = _progressEventReducer4[0];
        flushUpload = _progressEventReducer4[1];
        request.upload.addEventListener('progress', uploadThrottled);
        request.upload.addEventListener('loadend', flushUpload);
      }
      if (_config.cancelToken || _config.signal) {
        // Handle cancellation
        // eslint-disable-next-line func-names
        onCanceled = function onCanceled(cancel) {
          if (!request) {
            return;
          }
          reject(!cancel || cancel.type ? new _CanceledError.default(null, config, request) : cancel);
          request.abort();
          request = null;
        };
        _config.cancelToken && _config.cancelToken.subscribe(onCanceled);
        if (_config.signal) {
          _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);
        }
      }
      var protocol = (0, _parseProtocol.default)(_config.url);
      if (protocol && _index.default.protocols.indexOf(protocol) === -1) {
        reject(new _AxiosError.default('Unsupported protocol ' + protocol + ':', _AxiosError.default.ERR_BAD_REQUEST, config));
        return;
      }

      // Send the request
      request.send(requestData || null);
    });
  };
},542,[1,38,516,543,528,522,540,544,530,537,545,553]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = settle;
  var _AxiosError = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  /**
   * Resolve or reject a Promise based on response status.
   *
   * @param {Function} resolve A function that resolves the promise.
   * @param {Function} reject A function that rejects the promise.
   * @param {object} response The response.
   *
   * @returns {object} The response.
   */
  function settle(resolve, reject, response) {
    var validateStatus = response.config.validateStatus;
    if (!response.status || !validateStatus || validateStatus(response.status)) {
      resolve(response);
    } else {
      reject(new _AxiosError.default('Request failed with status code ' + response.status, [_AxiosError.default.ERR_BAD_REQUEST, _AxiosError.default.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4], response.config, response.request, response));
    }
  }
},543,[1,522]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = parseProtocol;
  function parseProtocol(url) {
    var match = /^([-+\w]{1,25})(:?\/\/|:)/.exec(url);
    return match && match[1] || '';
  }
},544,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _toArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _utils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _isURLSameOrigin = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _cookies = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _buildFullPath = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _mergeConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _AxiosHeaders = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _buildURL = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  var _default = exports.default = function _default(config) {
    var newConfig = (0, _mergeConfig.default)({}, config);
    var data = newConfig.data,
      withXSRFToken = newConfig.withXSRFToken,
      xsrfHeaderName = newConfig.xsrfHeaderName,
      xsrfCookieName = newConfig.xsrfCookieName,
      headers = newConfig.headers,
      auth = newConfig.auth;
    newConfig.headers = headers = _AxiosHeaders.default.from(headers);
    newConfig.url = (0, _buildURL.default)((0, _buildFullPath.default)(newConfig.baseURL, newConfig.url, newConfig.allowAbsoluteUrls), config.params, config.paramsSerializer);

    // HTTP basic authentication
    if (auth) {
      headers.set('Authorization', 'Basic ' + btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : '')));
    }
    var contentType;
    if (_utils.default.isFormData(data)) {
      if (_index.default.hasStandardBrowserEnv || _index.default.hasStandardBrowserWebWorkerEnv) {
        headers.setContentType(undefined); // Let the browser set it
      } else if ((contentType = headers.getContentType()) !== false) {
        // fix semicolon duplication issue for ReactNative FormData implementation
        var _ref = contentType ? contentType.split(';').map(function (token) {
            return token.trim();
          }).filter(Boolean) : [],
          _ref2 = (0, _toArray2.default)(_ref),
          type = _ref2[0],
          tokens = _ref2.slice(1);
        headers.setContentType([type || 'multipart/form-data'].concat((0, _toConsumableArray2.default)(tokens)).join('; '));
      }
    }

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.

    if (_index.default.hasStandardBrowserEnv) {
      withXSRFToken && _utils.default.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));
      if (withXSRFToken || withXSRFToken !== false && (0, _isURLSameOrigin.default)(newConfig.url)) {
        // Add xsrf header
        var xsrfValue = xsrfHeaderName && xsrfCookieName && _cookies.default.read(xsrfCookieName);
        if (xsrfValue) {
          headers.set(xsrfHeaderName, xsrfValue);
        }
      }
    }
    return newConfig;
  };
},545,[1,6,546,530,516,547,548,549,552,537,519]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _toArray(r) {
    return _$$_REQUIRE(_dependencyMap[0])(r) || _$$_REQUIRE(_dependencyMap[1])(r) || _$$_REQUIRE(_dependencyMap[2])(r) || _$$_REQUIRE(_dependencyMap[3])();
  }
  module.exports = _toArray, module.exports.__esModule = true, module.exports["default"] = module.exports;
},546,[39,9,10,41]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _default = exports.default = _index.default.hasStandardBrowserEnv ? function (origin, isMSIE) {
    return function (url) {
      url = new URL(url, _index.default.origin);
      return origin.protocol === url.protocol && origin.host === url.host && (isMSIE || origin.port === url.port);
    };
  }(new URL(_index.default.origin), _index.default.navigator && /(msie|trident)/i.test(_index.default.navigator.userAgent)) : function () {
    return true;
  };
},547,[1,530]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _utils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _default = exports.default = _index.default.hasStandardBrowserEnv ?
  // Standard browser envs support document.cookie
  {
    write: function write(name, value, expires, path, domain, secure) {
      var cookie = [name + '=' + encodeURIComponent(value)];
      _utils.default.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());
      _utils.default.isString(path) && cookie.push('path=' + path);
      _utils.default.isString(domain) && cookie.push('domain=' + domain);
      secure === true && cookie.push('secure');
      document.cookie = cookie.join('; ');
    },
    read: function read(name) {
      var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
      return match ? decodeURIComponent(match[3]) : null;
    },
    remove: function remove(name) {
      this.write(name, '', Date.now() - 86400000);
    }
  } :
  // Non-standard browser env (web workers, react-native) lack needed support.
  {
    write: function write() {},
    read: function read() {
      return null;
    },
    remove: function remove() {}
  };
},548,[1,516,530]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = buildFullPath;
  var _isAbsoluteURL = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _combineURLs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  /**
   * Creates a new URL by combining the baseURL with the requestedURL,
   * only when the requestedURL is not already an absolute URL.
   * If the requestURL is absolute, this function returns the requestedURL untouched.
   *
   * @param {string} baseURL The base URL
   * @param {string} requestedURL Absolute or relative URL to combine
   *
   * @returns {string} The combined full path
   */
  function buildFullPath(baseURL, requestedURL, allowAbsoluteUrls) {
    var isRelativeUrl = !(0, _isAbsoluteURL.default)(requestedURL);
    if (baseURL && (isRelativeUrl || allowAbsoluteUrls == false)) {
      return (0, _combineURLs.default)(baseURL, requestedURL);
    }
    return requestedURL;
  }
},549,[1,550,551]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  /**
   * Determines whether the specified URL is absolute
   *
   * @param {string} url The URL to test
   *
   * @returns {boolean} True if the specified URL is absolute, otherwise false
   */
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = isAbsoluteURL;
  function isAbsoluteURL(url) {
    // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
    // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
    // by any combination of letters, digits, plus, period, or hyphen.
    return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(url);
  }
},550,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  /**
   * Creates a new URL by combining the specified URLs
   *
   * @param {string} baseURL The base URL
   * @param {string} relativeURL The relative URL
   *
   * @returns {string} The combined URL
   */
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = combineURLs;
  function combineURLs(baseURL, relativeURL) {
    return relativeURL ? baseURL.replace(/\/?\/$/, '') + '/' + relativeURL.replace(/^\/+/, '') : baseURL;
  }
},551,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = mergeConfig;
  var _utils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _AxiosHeaders = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var headersToObject = function headersToObject(thing) {
    return thing instanceof _AxiosHeaders.default ? Object.assign({}, thing) : thing;
  };

  /**
   * Config-specific merge-function which creates a new config-object
   * by merging two configuration objects together.
   *
   * @param {Object} config1
   * @param {Object} config2
   *
   * @returns {Object} New object resulting from merging config2 to config1
   */
  function mergeConfig(config1, config2) {
    // eslint-disable-next-line no-param-reassign
    config2 = config2 || {};
    var config = {};
    function getMergedValue(target, source, prop, caseless) {
      if (_utils.default.isPlainObject(target) && _utils.default.isPlainObject(source)) {
        return _utils.default.merge.call({
          caseless: caseless
        }, target, source);
      } else if (_utils.default.isPlainObject(source)) {
        return _utils.default.merge({}, source);
      } else if (_utils.default.isArray(source)) {
        return source.slice();
      }
      return source;
    }

    // eslint-disable-next-line consistent-return
    function mergeDeepProperties(a, b, prop, caseless) {
      if (!_utils.default.isUndefined(b)) {
        return getMergedValue(a, b, prop, caseless);
      } else if (!_utils.default.isUndefined(a)) {
        return getMergedValue(undefined, a, prop, caseless);
      }
    }

    // eslint-disable-next-line consistent-return
    function valueFromConfig2(a, b) {
      if (!_utils.default.isUndefined(b)) {
        return getMergedValue(undefined, b);
      }
    }

    // eslint-disable-next-line consistent-return
    function defaultToConfig2(a, b) {
      if (!_utils.default.isUndefined(b)) {
        return getMergedValue(undefined, b);
      } else if (!_utils.default.isUndefined(a)) {
        return getMergedValue(undefined, a);
      }
    }

    // eslint-disable-next-line consistent-return
    function mergeDirectKeys(a, b, prop) {
      if (prop in config2) {
        return getMergedValue(a, b);
      } else if (prop in config1) {
        return getMergedValue(undefined, a);
      }
    }
    var mergeMap = {
      url: valueFromConfig2,
      method: valueFromConfig2,
      data: valueFromConfig2,
      baseURL: defaultToConfig2,
      transformRequest: defaultToConfig2,
      transformResponse: defaultToConfig2,
      paramsSerializer: defaultToConfig2,
      timeout: defaultToConfig2,
      timeoutMessage: defaultToConfig2,
      withCredentials: defaultToConfig2,
      withXSRFToken: defaultToConfig2,
      adapter: defaultToConfig2,
      responseType: defaultToConfig2,
      xsrfCookieName: defaultToConfig2,
      xsrfHeaderName: defaultToConfig2,
      onUploadProgress: defaultToConfig2,
      onDownloadProgress: defaultToConfig2,
      decompress: defaultToConfig2,
      maxContentLength: defaultToConfig2,
      maxBodyLength: defaultToConfig2,
      beforeRedirect: defaultToConfig2,
      transport: defaultToConfig2,
      httpAgent: defaultToConfig2,
      httpsAgent: defaultToConfig2,
      cancelToken: defaultToConfig2,
      socketPath: defaultToConfig2,
      responseEncoding: defaultToConfig2,
      validateStatus: mergeDirectKeys,
      headers: function headers(a, b, prop) {
        return mergeDeepProperties(headersToObject(a), headersToObject(b), prop, true);
      }
    };
    _utils.default.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {
      var merge = mergeMap[prop] || mergeDeepProperties;
      var configValue = merge(config1[prop], config2[prop], prop);
      _utils.default.isUndefined(configValue) && merge !== mergeDirectKeys || (config[prop] = configValue);
    });
    return config;
  }
},552,[1,516,537]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.progressEventReducer = exports.progressEventDecorator = exports.asyncDecorator = undefined;
  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _speedometer2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _throttle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _utils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var progressEventReducer = exports.progressEventReducer = function progressEventReducer(listener, isDownloadStream) {
    var freq = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;
    var bytesNotified = 0;
    var _speedometer = (0, _speedometer2.default)(50, 250);
    return (0, _throttle.default)(function (e) {
      var loaded = e.loaded;
      var total = e.lengthComputable ? e.total : undefined;
      var progressBytes = loaded - bytesNotified;
      var rate = _speedometer(progressBytes);
      var inRange = loaded <= total;
      bytesNotified = loaded;
      var data = (0, _defineProperty2.default)({
        loaded: loaded,
        total: total,
        progress: total ? loaded / total : undefined,
        bytes: progressBytes,
        rate: rate ? rate : undefined,
        estimated: rate && total && inRange ? (total - loaded) / rate : undefined,
        event: e,
        lengthComputable: total != null
      }, isDownloadStream ? 'download' : 'upload', true);
      listener(data);
    }, freq);
  };
  var progressEventDecorator = exports.progressEventDecorator = function progressEventDecorator(total, throttled) {
    var lengthComputable = total != null;
    return [function (loaded) {
      return throttled[0]({
        lengthComputable: lengthComputable,
        total: total,
        loaded: loaded
      });
    }, throttled[1]];
  };
  var asyncDecorator = exports.asyncDecorator = function asyncDecorator(fn) {
    return function () {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      return _utils.default.asap(function () {
        return fn.apply(undefined, args);
      });
    };
  };
},553,[1,99,554,555,516]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  /**
   * Calculate data maxRate
   * @param {Number} [samplesCount= 10]
   * @param {Number} [min= 1000]
   * @returns {Function}
   */
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  function speedometer(samplesCount, min) {
    samplesCount = samplesCount || 10;
    var bytes = new Array(samplesCount);
    var timestamps = new Array(samplesCount);
    var head = 0;
    var tail = 0;
    var firstSampleTS;
    min = min !== undefined ? min : 1000;
    return function push(chunkLength) {
      var now = Date.now();
      var startedAt = timestamps[tail];
      if (!firstSampleTS) {
        firstSampleTS = now;
      }
      bytes[head] = chunkLength;
      timestamps[head] = now;
      var i = tail;
      var bytesCount = 0;
      while (i !== head) {
        bytesCount += bytes[i++];
        i = i % samplesCount;
      }
      head = (head + 1) % samplesCount;
      if (head === tail) {
        tail = (tail + 1) % samplesCount;
      }
      if (now - firstSampleTS < min) {
        return;
      }
      var passed = startedAt && now - startedAt;
      return passed ? Math.round(bytesCount * 1000 / passed) : undefined;
    };
  }
  var _default = exports.default = speedometer;
},554,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  /**
   * Throttle decorator
   * @param {Function} fn
   * @param {Number} freq
   * @return {Function}
   */
  function throttle(fn, freq) {
    var timestamp = 0;
    var threshold = 1000 / freq;
    var lastArgs;
    var timer;
    var invoke = function invoke(args) {
      var now = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Date.now();
      timestamp = now;
      lastArgs = null;
      if (timer) {
        clearTimeout(timer);
        timer = null;
      }
      fn.apply(null, args);
    };
    var throttled = function throttled() {
      var now = Date.now();
      var passed = now - timestamp;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      if (passed >= threshold) {
        invoke(args, now);
      } else {
        lastArgs = args;
        if (!timer) {
          timer = setTimeout(function () {
            timer = null;
            invoke(lastArgs);
          }, threshold - passed);
        }
      }
    };
    var flush = function flush() {
      return lastArgs && invoke(lastArgs);
    };
    return [throttled, flush];
  }
  var _default = exports.default = throttle;
},555,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _asyncToGenerator2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _utils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _AxiosError = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _composeSignals = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _AxiosHeaders = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _resolveConfig2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _settle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';
  var isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';

  // used only inside the fetch adapter
  var encodeText = isFetchSupported && (typeof TextEncoder === 'function' ? function (encoder) {
    return function (str) {
      return encoder.encode(str);
    };
  }(new TextEncoder()) : (/*#__PURE__*/function () {
    var _ref = (0, _asyncToGenerator2.default)(function* (str) {
      return new Uint8Array(yield new Response(str).arrayBuffer());
    });
    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }()));
  var test = function test(fn) {
    try {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      return !!fn.apply(undefined, args);
    } catch (e) {
      return false;
    }
  };
  var supportsRequestStream = isReadableStreamSupported && test(function () {
    var duplexAccessed = false;
    var hasContentType = new Request(_index.default.origin, {
      body: new ReadableStream(),
      method: 'POST',
      get duplex() {
        duplexAccessed = true;
        return 'half';
      }
    }).headers.has('Content-Type');
    return duplexAccessed && !hasContentType;
  });
  var DEFAULT_CHUNK_SIZE = 65536;
  var supportsResponseStream = isReadableStreamSupported && test(function () {
    return _utils.default.isReadableStream(new Response('').body);
  });
  var resolvers = {
    stream: supportsResponseStream && function (res) {
      return res.body;
    }
  };
  isFetchSupported && function (res) {
    ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(function (type) {
      !resolvers[type] && (resolvers[type] = _utils.default.isFunction(res[type]) ? function (res) {
        return res[type]();
      } : function (_, config) {
        throw new _AxiosError.default(`Response type '${type}' is not supported`, _AxiosError.default.ERR_NOT_SUPPORT, config);
      });
    });
  }(new Response());
  var getBodyLength = /*#__PURE__*/function () {
    var _ref2 = (0, _asyncToGenerator2.default)(function* (body) {
      if (body == null) {
        return 0;
      }
      if (_utils.default.isBlob(body)) {
        return body.size;
      }
      if (_utils.default.isSpecCompliantForm(body)) {
        var _request = new Request(_index.default.origin, {
          method: 'POST',
          body: body
        });
        return (yield _request.arrayBuffer()).byteLength;
      }
      if (_utils.default.isArrayBufferView(body) || _utils.default.isArrayBuffer(body)) {
        return body.byteLength;
      }
      if (_utils.default.isURLSearchParams(body)) {
        body = body + '';
      }
      if (_utils.default.isString(body)) {
        return (yield encodeText(body)).byteLength;
      }
    });
    return function getBodyLength(_x2) {
      return _ref2.apply(this, arguments);
    };
  }();
  var resolveBodyLength = /*#__PURE__*/function () {
    var _ref3 = (0, _asyncToGenerator2.default)(function* (headers, body) {
      var length = _utils.default.toFiniteNumber(headers.getContentLength());
      return length == null ? getBodyLength(body) : length;
    });
    return function resolveBodyLength(_x3, _x4) {
      return _ref3.apply(this, arguments);
    };
  }();
  var _default = exports.default = isFetchSupported && (/*#__PURE__*/function () {
    var _ref4 = (0, _asyncToGenerator2.default)(function* (config) {
      var _resolveConfig = (0, _resolveConfig2.default)(config),
        url = _resolveConfig.url,
        method = _resolveConfig.method,
        data = _resolveConfig.data,
        signal = _resolveConfig.signal,
        cancelToken = _resolveConfig.cancelToken,
        timeout = _resolveConfig.timeout,
        onDownloadProgress = _resolveConfig.onDownloadProgress,
        onUploadProgress = _resolveConfig.onUploadProgress,
        responseType = _resolveConfig.responseType,
        headers = _resolveConfig.headers,
        _resolveConfig$withCr = _resolveConfig.withCredentials,
        withCredentials = _resolveConfig$withCr === undefined ? 'same-origin' : _resolveConfig$withCr,
        fetchOptions = _resolveConfig.fetchOptions;
      responseType = responseType ? (responseType + '').toLowerCase() : 'text';
      var composedSignal = (0, _composeSignals.default)([signal, cancelToken && cancelToken.toAbortSignal()], timeout);
      var request;
      var unsubscribe = composedSignal && composedSignal.unsubscribe && function () {
        composedSignal.unsubscribe();
      };
      var requestContentLength;
      try {
        if (onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' && (requestContentLength = yield resolveBodyLength(headers, data)) !== 0) {
          var _request = new Request(url, {
            method: 'POST',
            body: data,
            duplex: "half"
          });
          var contentTypeHeader;
          if (_utils.default.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {
            headers.setContentType(contentTypeHeader);
          }
          if (_request.body) {
            var _progressEventDecorat = (0, _$$_REQUIRE(_dependencyMap[10]).progressEventDecorator)(requestContentLength, (0, _$$_REQUIRE(_dependencyMap[10]).progressEventReducer)((0, _$$_REQUIRE(_dependencyMap[10]).asyncDecorator)(onUploadProgress))),
              _progressEventDecorat2 = (0, _slicedToArray2.default)(_progressEventDecorat, 2),
              onProgress = _progressEventDecorat2[0],
              flush = _progressEventDecorat2[1];
            data = (0, _$$_REQUIRE(_dependencyMap[11]).trackStream)(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);
          }
        }
        if (!_utils.default.isString(withCredentials)) {
          withCredentials = withCredentials ? 'include' : 'omit';
        }

        // Cloudflare Workers throws when credentials are defined
        // see https://github.com/cloudflare/workerd/issues/902
        var isCredentialsSupported = "credentials" in Request.prototype;
        request = new Request(url, Object.assign({}, fetchOptions, {
          signal: composedSignal,
          method: method.toUpperCase(),
          headers: headers.normalize().toJSON(),
          body: data,
          duplex: "half",
          credentials: isCredentialsSupported ? withCredentials : undefined
        }));
        var response = yield fetch(request);
        var isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');
        if (supportsResponseStream && (onDownloadProgress || isStreamResponse && unsubscribe)) {
          var options = {};
          ['status', 'statusText', 'headers'].forEach(function (prop) {
            options[prop] = response[prop];
          });
          var responseContentLength = _utils.default.toFiniteNumber(response.headers.get('content-length'));
          var _ref5 = onDownloadProgress && (0, _$$_REQUIRE(_dependencyMap[10]).progressEventDecorator)(responseContentLength, (0, _$$_REQUIRE(_dependencyMap[10]).progressEventReducer)((0, _$$_REQUIRE(_dependencyMap[10]).asyncDecorator)(onDownloadProgress), true)) || [],
            _ref6 = (0, _slicedToArray2.default)(_ref5, 2),
            _onProgress = _ref6[0],
            _flush = _ref6[1];
          response = new Response((0, _$$_REQUIRE(_dependencyMap[11]).trackStream)(response.body, DEFAULT_CHUNK_SIZE, _onProgress, function () {
            _flush && _flush();
            unsubscribe && unsubscribe();
          }), options);
        }
        responseType = responseType || 'text';
        var responseData = yield resolvers[_utils.default.findKey(resolvers, responseType) || 'text'](response, config);
        !isStreamResponse && unsubscribe && unsubscribe();
        return yield new Promise(function (resolve, reject) {
          (0, _settle.default)(resolve, reject, {
            data: responseData,
            headers: _AxiosHeaders.default.from(response.headers),
            status: response.status,
            statusText: response.statusText,
            config: config,
            request: request
          });
        });
      } catch (err) {
        unsubscribe && unsubscribe();
        if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {
          throw Object.assign(new _AxiosError.default('Network Error', _AxiosError.default.ERR_NETWORK, config, request), {
            cause: err.cause || err
          });
        }
        throw _AxiosError.default.from(err, err && err.code, config, request);
      }
    });
    return function (_x5) {
      return _ref4.apply(this, arguments);
    };
  }());
},556,[1,38,363,530,516,522,557,537,545,543,553,558]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _CanceledError = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _AxiosError = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _utils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var composeSignals = function composeSignals(signals, timeout) {
    var _signals = signals = signals ? signals.filter(Boolean) : [],
      length = _signals.length;
    if (timeout || length) {
      var controller = new AbortController();
      var aborted;
      var onabort = function onabort(reason) {
        if (!aborted) {
          aborted = true;
          unsubscribe();
          var err = reason instanceof Error ? reason : this.reason;
          controller.abort(err instanceof _AxiosError.default ? err : new _CanceledError.default(err instanceof Error ? err.message : err));
        }
      };
      var timer = timeout && setTimeout(function () {
        timer = null;
        onabort(new _AxiosError.default(`timeout ${timeout} of ms exceeded`, _AxiosError.default.ETIMEDOUT));
      }, timeout);
      var unsubscribe = function unsubscribe() {
        if (signals) {
          timer && clearTimeout(timer);
          timer = null;
          signals.forEach(function (signal) {
            signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);
          });
          signals = null;
        }
      };
      signals.forEach(function (signal) {
        return signal.addEventListener('abort', onabort);
      });
      var signal = controller.signal;
      signal.unsubscribe = function () {
        return _utils.default.asap(unsubscribe);
      };
      return signal;
    }
  };
  var _default = exports.default = composeSignals;
},557,[1,540,522,516]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.trackStream = exports.streamChunk = exports.readBytes = undefined;
  var _asyncToGenerator2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _wrapAsyncGenerator2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _awaitAsyncGenerator2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _asyncGeneratorDelegate2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  function _asyncIterator(r) { var n, t, o, e = 2; for ("undefined" != typeof Symbol && (t = Symbol.asyncIterator, o = Symbol.iterator); e--;) { if (t && null != (n = r[t])) return n.call(r); if (o && null != (n = r[o])) return new AsyncFromSyncIterator(n.call(r)); t = "@@asyncIterator", o = "@@iterator"; } throw new TypeError("Object is not async iterable"); }
  function AsyncFromSyncIterator(r) { function AsyncFromSyncIteratorContinuation(r) { if (Object(r) !== r) return Promise.reject(new TypeError(r + " is not an object.")); var n = r.done; return Promise.resolve(r.value).then(function (r) { return { value: r, done: n }; }); } return AsyncFromSyncIterator = function AsyncFromSyncIterator(r) { this.s = r, this.n = r.next; }, AsyncFromSyncIterator.prototype = { s: null, n: null, next: function next() { return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments)); }, return: function _return(r) { var n = this.s.return; return undefined === n ? Promise.resolve({ value: r, done: true }) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments)); }, throw: function _throw(r) { var n = this.s.return; return undefined === n ? Promise.reject(r) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments)); } }, new AsyncFromSyncIterator(r); }
  var streamChunk = exports.streamChunk = function* streamChunk(chunk, chunkSize) {
    var len = chunk.byteLength;
    if (!chunkSize || len < chunkSize) {
      yield chunk;
      return;
    }
    var pos = 0;
    var end;
    while (pos < len) {
      end = pos + chunkSize;
      yield chunk.slice(pos, end);
      pos = end;
    }
  };
  var readBytes = exports.readBytes = /*#__PURE__*/function () {
    var _ref = (0, _wrapAsyncGenerator2.default)(function* (iterable, chunkSize) {
      var _iteratorAbruptCompletion = false;
      var _didIteratorError = false;
      var _iteratorError;
      try {
        for (var _iterator = _asyncIterator(readStream(iterable)), _step; _iteratorAbruptCompletion = !(_step = yield (0, _awaitAsyncGenerator2.default)(_iterator.next())).done; _iteratorAbruptCompletion = false) {
          var chunk = _step.value;
          {
            yield* (0, _asyncGeneratorDelegate2.default)(_asyncIterator(streamChunk(chunk, chunkSize)), _awaitAsyncGenerator2.default);
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (_iteratorAbruptCompletion && _iterator.return != null) {
            yield (0, _awaitAsyncGenerator2.default)(_iterator.return());
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    });
    return function readBytes(_x, _x2) {
      return _ref.apply(this, arguments);
    };
  }();
  var readStream = /*#__PURE__*/function () {
    var _ref2 = (0, _wrapAsyncGenerator2.default)(function* (stream) {
      if (stream[Symbol.asyncIterator]) {
        yield* (0, _asyncGeneratorDelegate2.default)(_asyncIterator(stream), _awaitAsyncGenerator2.default);
        return;
      }
      var reader = stream.getReader();
      try {
        for (;;) {
          var _yield$_awaitAsyncGen = yield (0, _awaitAsyncGenerator2.default)(reader.read()),
            done = _yield$_awaitAsyncGen.done,
            value = _yield$_awaitAsyncGen.value;
          if (done) {
            break;
          }
          yield value;
        }
      } finally {
        yield (0, _awaitAsyncGenerator2.default)(reader.cancel());
      }
    });
    return function readStream(_x3) {
      return _ref2.apply(this, arguments);
    };
  }();
  var trackStream = exports.trackStream = function trackStream(stream, chunkSize, onProgress, onFinish) {
    var iterator = readBytes(stream, chunkSize);
    var bytes = 0;
    var done;
    var _onFinish = function _onFinish(e) {
      if (!done) {
        done = true;
        onFinish && onFinish(e);
      }
    };
    return new ReadableStream({
      pull: function () {
        var _pull = (0, _asyncToGenerator2.default)(function* (controller) {
          try {
            var _yield$iterator$next = yield iterator.next(),
              _done = _yield$iterator$next.done,
              value = _yield$iterator$next.value;
            if (_done) {
              _onFinish();
              controller.close();
              return;
            }
            var len = value.byteLength;
            if (onProgress) {
              var loadedBytes = bytes += len;
              onProgress(loadedBytes);
            }
            controller.enqueue(new Uint8Array(value));
          } catch (err) {
            _onFinish(err);
            throw err;
          }
        });
        function pull(_x4) {
          return _pull.apply(this, arguments);
        }
        return pull;
      }(),
      cancel: function cancel(reason) {
        _onFinish(reason);
        return iterator.return();
      }
    }, {
      highWaterMark: 2
    });
  };
},558,[1,363,559,561,562]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _wrapAsyncGenerator(e) {
    return function () {
      return new AsyncGenerator(e.apply(this, arguments));
    };
  }
  function AsyncGenerator(e) {
    var r, t;
    function resume(r, t) {
      try {
        var n = e[r](t),
          o = n.value,
          u = o instanceof _$$_REQUIRE(_dependencyMap[0]);
        Promise.resolve(u ? o.v : o).then(function (t) {
          if (u) {
            var i = "return" === r ? "return" : "next";
            if (!o.k || t.done) return resume(i, t);
            t = e[i](t).value;
          }
          settle(n.done ? "return" : "normal", t);
        }, function (e) {
          resume("throw", e);
        });
      } catch (e) {
        settle("throw", e);
      }
    }
    function settle(e, n) {
      switch (e) {
        case "return":
          r.resolve({
            value: n,
            done: true
          });
          break;
        case "throw":
          r.reject(n);
          break;
        default:
          r.resolve({
            value: n,
            done: false
          });
      }
      (r = r.next) ? resume(r.key, r.arg) : t = null;
    }
    this._invoke = function (e, n) {
      return new Promise(function (o, u) {
        var i = {
          key: e,
          arg: n,
          resolve: o,
          reject: u,
          next: null
        };
        t ? t = t.next = i : (r = t = i, resume(e, n));
      });
    }, "function" != typeof e["return"] && (this["return"] = undefined);
  }
  AsyncGenerator.prototype["function" == typeof Symbol && Symbol.asyncIterator || "@@asyncIterator"] = function () {
    return this;
  }, AsyncGenerator.prototype.next = function (e) {
    return this._invoke("next", e);
  }, AsyncGenerator.prototype["throw"] = function (e) {
    return this._invoke("throw", e);
  }, AsyncGenerator.prototype["return"] = function (e) {
    return this._invoke("return", e);
  };
  module.exports = _wrapAsyncGenerator, module.exports.__esModule = true, module.exports["default"] = module.exports;
},559,[560]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _OverloadYield(e, d) {
    this.v = e, this.k = d;
  }
  module.exports = _OverloadYield, module.exports.__esModule = true, module.exports["default"] = module.exports;
},560,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _awaitAsyncGenerator(e) {
    return new (_$$_REQUIRE(_dependencyMap[0]))(e, 0);
  }
  module.exports = _awaitAsyncGenerator, module.exports.__esModule = true, module.exports["default"] = module.exports;
},561,[560]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _asyncGeneratorDelegate(t) {
    var e = {},
      n = false;
    function pump(e, r) {
      return n = true, r = new Promise(function (n) {
        n(t[e](r));
      }), {
        done: false,
        value: new (_$$_REQUIRE(_dependencyMap[0]))(r, 1)
      };
    }
    return e["undefined" != typeof Symbol && Symbol.iterator || "@@iterator"] = function () {
      return this;
    }, e.next = function (t) {
      return n ? (n = false, t) : pump("next", t);
    }, "function" == typeof t["throw"] && (e["throw"] = function (t) {
      if (n) throw n = false, t;
      return pump("throw", t);
    }), "function" == typeof t["return"] && (e["return"] = function (t) {
      return n ? (n = false, t) : pump("return", t);
    }), e;
  }
  module.exports = _asyncGeneratorDelegate, module.exports.__esModule = true, module.exports["default"] = module.exports;
},562,[560]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _AxiosError = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var validators = {};

  // eslint-disable-next-line func-names
  ['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function (type, i) {
    validators[type] = function validator(thing) {
      return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;
    };
  });
  var deprecatedWarnings = {};

  /**
   * Transitional option validator
   *
   * @param {function|boolean?} validator - set to false if the transitional option has been removed
   * @param {string?} version - deprecated version / removed since version
   * @param {string?} message - some message with additional info
   *
   * @returns {function}
   */
  validators.transitional = function transitional(validator, version, message) {
    function formatMessage(opt, desc) {
      return '[Axios v' + _$$_REQUIRE(_dependencyMap[2]).VERSION + '] Transitional option \'' + opt + '\'' + desc + (message ? '. ' + message : '');
    }

    // eslint-disable-next-line func-names
    return function (value, opt, opts) {
      if (validator === false) {
        throw new _AxiosError.default(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')), _AxiosError.default.ERR_DEPRECATED);
      }
      if (version && !deprecatedWarnings[opt]) {
        deprecatedWarnings[opt] = true;
        // eslint-disable-next-line no-console
        console.warn(formatMessage(opt, ' has been deprecated since v' + version + ' and will be removed in the near future'));
      }
      return validator ? validator(value, opt, opts) : true;
    };
  };
  validators.spelling = function spelling(correctSpelling) {
    return function (value, opt) {
      // eslint-disable-next-line no-console
      console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);
      return true;
    };
  };

  /**
   * Assert object's properties type
   *
   * @param {object} options
   * @param {object} schema
   * @param {boolean?} allowUnknown
   *
   * @returns {object}
   */

  function assertOptions(options, schema, allowUnknown) {
    if (typeof options !== 'object') {
      throw new _AxiosError.default('options must be an object', _AxiosError.default.ERR_BAD_OPTION_VALUE);
    }
    var keys = Object.keys(options);
    var i = keys.length;
    while (i-- > 0) {
      var opt = keys[i];
      var validator = schema[opt];
      if (validator) {
        var value = options[opt];
        var result = value === undefined || validator(value, opt, options);
        if (result !== true) {
          throw new _AxiosError.default('option ' + opt + ' must be ' + result, _AxiosError.default.ERR_BAD_OPTION_VALUE);
        }
        continue;
      }
      if (allowUnknown !== true) {
        throw new _AxiosError.default('Unknown option ' + opt, _AxiosError.default.ERR_BAD_OPTION);
      }
    }
  }
  var _default = exports.default = {
    assertOptions: assertOptions,
    validators: validators
  };
},563,[1,522,564]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.VERSION = undefined;
  var VERSION = exports.VERSION = "1.8.4";
},564,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _CanceledError = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  /**
   * A `CancelToken` is an object that can be used to request cancellation of an operation.
   *
   * @param {Function} executor The executor function.
   *
   * @returns {CancelToken}
   */
  var CancelToken = /*#__PURE__*/function () {
    function CancelToken(executor) {
      (0, _classCallCheck2.default)(this, CancelToken);
      if (typeof executor !== 'function') {
        throw new TypeError('executor must be a function.');
      }
      var resolvePromise;
      this.promise = new Promise(function promiseExecutor(resolve) {
        resolvePromise = resolve;
      });
      var token = this;

      // eslint-disable-next-line func-names
      this.promise.then(function (cancel) {
        if (!token._listeners) return;
        var i = token._listeners.length;
        while (i-- > 0) {
          token._listeners[i](cancel);
        }
        token._listeners = null;
      });

      // eslint-disable-next-line func-names
      this.promise.then = function (onfulfilled) {
        var _resolve;
        // eslint-disable-next-line func-names
        var promise = new Promise(function (resolve) {
          token.subscribe(resolve);
          _resolve = resolve;
        }).then(onfulfilled);
        promise.cancel = function reject() {
          token.unsubscribe(_resolve);
        };
        return promise;
      };
      executor(function cancel(message, config, request) {
        if (token.reason) {
          // Cancellation has already been requested
          return;
        }
        token.reason = new _CanceledError.default(message, config, request);
        resolvePromise(token.reason);
      });
    }

    /**
     * Throws a `CanceledError` if cancellation has been requested.
     */
    return (0, _createClass2.default)(CancelToken, [{
      key: "throwIfRequested",
      value: function throwIfRequested() {
        if (this.reason) {
          throw this.reason;
        }
      }

      /**
       * Subscribe to the cancel signal
       */
    }, {
      key: "subscribe",
      value: function subscribe(listener) {
        if (this.reason) {
          listener(this.reason);
          return;
        }
        if (this._listeners) {
          this._listeners.push(listener);
        } else {
          this._listeners = [listener];
        }
      }

      /**
       * Unsubscribe from the cancel signal
       */
    }, {
      key: "unsubscribe",
      value: function unsubscribe(listener) {
        if (!this._listeners) {
          return;
        }
        var index = this._listeners.indexOf(listener);
        if (index !== -1) {
          this._listeners.splice(index, 1);
        }
      }
    }, {
      key: "toAbortSignal",
      value: function toAbortSignal() {
        var _this = this;
        var controller = new AbortController();
        var abort = function abort(err) {
          controller.abort(err);
        };
        this.subscribe(abort);
        controller.signal.unsubscribe = function () {
          return _this.unsubscribe(abort);
        };
        return controller.signal;
      }

      /**
       * Returns an object that contains a new `CancelToken` and a function that, when called,
       * cancels the `CancelToken`.
       */
    }], [{
      key: "source",
      value: function source() {
        var cancel;
        var token = new CancelToken(function executor(c) {
          cancel = c;
        });
        return {
          token: token,
          cancel: cancel
        };
      }
    }]);
  }();
  var _default = exports.default = CancelToken;
},565,[1,12,13,540]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  /**
   * Syntactic sugar for invoking a function and expanding an array for arguments.
   *
   * Common use case would be to use `Function.prototype.apply`.
   *
   *  ```js
   *  function f(x, y, z) {}
   *  var args = [1, 2, 3];
   *  f.apply(null, args);
   *  ```
   *
   * With `spread` this example can be re-written.
   *
   *  ```js
   *  spread(function(x, y, z) {})([1, 2, 3]);
   *  ```
   *
   * @param {Function} callback
   *
   * @returns {Function}
   */
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = spread;
  function spread(callback) {
    return function wrap(arr) {
      return callback.apply(null, arr);
    };
  }
},566,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = isAxiosError;
  var _utils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  /**
   * Determines whether the payload is an error thrown by Axios
   *
   * @param {*} payload The value to test
   *
   * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false
   */
  function isAxiosError(payload) {
    return _utils.default.isObject(payload) && payload.isAxiosError === true;
  }
},567,[1,516]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var HttpStatusCode = {
    Continue: 100,
    SwitchingProtocols: 101,
    Processing: 102,
    EarlyHints: 103,
    Ok: 200,
    Created: 201,
    Accepted: 202,
    NonAuthoritativeInformation: 203,
    NoContent: 204,
    ResetContent: 205,
    PartialContent: 206,
    MultiStatus: 207,
    AlreadyReported: 208,
    ImUsed: 226,
    MultipleChoices: 300,
    MovedPermanently: 301,
    Found: 302,
    SeeOther: 303,
    NotModified: 304,
    UseProxy: 305,
    Unused: 306,
    TemporaryRedirect: 307,
    PermanentRedirect: 308,
    BadRequest: 400,
    Unauthorized: 401,
    PaymentRequired: 402,
    Forbidden: 403,
    NotFound: 404,
    MethodNotAllowed: 405,
    NotAcceptable: 406,
    ProxyAuthenticationRequired: 407,
    RequestTimeout: 408,
    Conflict: 409,
    Gone: 410,
    LengthRequired: 411,
    PreconditionFailed: 412,
    PayloadTooLarge: 413,
    UriTooLong: 414,
    UnsupportedMediaType: 415,
    RangeNotSatisfiable: 416,
    ExpectationFailed: 417,
    ImATeapot: 418,
    MisdirectedRequest: 421,
    UnprocessableEntity: 422,
    Locked: 423,
    FailedDependency: 424,
    TooEarly: 425,
    UpgradeRequired: 426,
    PreconditionRequired: 428,
    TooManyRequests: 429,
    RequestHeaderFieldsTooLarge: 431,
    UnavailableForLegalReasons: 451,
    InternalServerError: 500,
    NotImplemented: 501,
    BadGateway: 502,
    ServiceUnavailable: 503,
    GatewayTimeout: 504,
    HttpVersionNotSupported: 505,
    VariantAlsoNegotiates: 506,
    InsufficientStorage: 507,
    LoopDetected: 508,
    NotExtended: 510,
    NetworkAuthenticationRequired: 511
  };
  Object.entries(HttpStatusCode).forEach(function (_ref) {
    var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
      key = _ref2[0],
      value = _ref2[1];
    HttpStatusCode[value] = key;
  });
  var _default = exports.default = HttpStatusCode;
},568,[1,38]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {
    ReducerType: true,
    SHOULD_AUTOBATCH: true,
    TaskAbortError: true,
    Tuple: true,
    addListener: true,
    asyncThunkCreator: true,
    autoBatchEnhancer: true,
    buildCreateSlice: true,
    clearAllListeners: true,
    combineSlices: true,
    configureStore: true,
    createAction: true,
    createActionCreatorInvariantMiddleware: true,
    createAsyncThunk: true,
    createDraftSafeSelector: true,
    createDraftSafeSelectorCreator: true,
    createDynamicMiddleware: true,
    createEntityAdapter: true,
    createImmutableStateInvariantMiddleware: true,
    createListenerMiddleware: true,
    createReducer: true,
    createSerializableStateInvariantMiddleware: true,
    createSlice: true,
    findNonSerializableValue: true,
    formatProdErrorMessage: true,
    isActionCreator: true,
    isAllOf: true,
    isAnyOf: true,
    isAsyncThunkAction: true,
    isFluxStandardAction: true,
    isFulfilled: true,
    isImmutableDefault: true,
    isPending: true,
    isPlain: true,
    isRejected: true,
    isRejectedWithValue: true,
    miniSerializeError: true,
    nanoid: true,
    prepareAutoBatched: true,
    removeListener: true,
    unwrapResult: true,
    createNextState: true,
    current: true,
    freeze: true,
    original: true,
    isDraft: true,
    createSelector: true,
    createSelectorCreator: true,
    lruMemoize: true,
    weakMapMemoize: true
  };
  exports.autoBatchEnhancer = exports.asyncThunkCreator = exports.addListener = exports.Tuple = exports.TaskAbortError = exports.SHOULD_AUTOBATCH = exports.ReducerType = undefined;
  exports.buildCreateSlice = buildCreateSlice;
  exports.clearAllListeners = undefined;
  exports.combineSlices = combineSlices;
  exports.configureStore = configureStore;
  exports.createAction = createAction;
  exports.createActionCreatorInvariantMiddleware = createActionCreatorInvariantMiddleware;
  exports.createDynamicMiddleware = exports.createDraftSafeSelectorCreator = exports.createDraftSafeSelector = exports.createAsyncThunk = undefined;
  exports.createEntityAdapter = createEntityAdapter;
  exports.createImmutableStateInvariantMiddleware = createImmutableStateInvariantMiddleware;
  exports.createListenerMiddleware = undefined;
  Object.defineProperty(exports, "createNextState", {
    enumerable: true,
    get: function get() {
      return _$$_REQUIRE(_dependencyMap[1]).produce;
    }
  });
  exports.createReducer = createReducer;
  Object.defineProperty(exports, "createSelector", {
    enumerable: true,
    get: function get() {
      return _$$_REQUIRE(_dependencyMap[2]).createSelector;
    }
  });
  Object.defineProperty(exports, "createSelectorCreator", {
    enumerable: true,
    get: function get() {
      return _$$_REQUIRE(_dependencyMap[2]).createSelectorCreator;
    }
  });
  exports.createSerializableStateInvariantMiddleware = createSerializableStateInvariantMiddleware;
  exports.createSlice = undefined;
  Object.defineProperty(exports, "current", {
    enumerable: true,
    get: function get() {
      return _$$_REQUIRE(_dependencyMap[1]).current;
    }
  });
  exports.findNonSerializableValue = findNonSerializableValue;
  exports.formatProdErrorMessage = formatProdErrorMessage;
  Object.defineProperty(exports, "freeze", {
    enumerable: true,
    get: function get() {
      return _$$_REQUIRE(_dependencyMap[1]).freeze;
    }
  });
  exports.isActionCreator = isActionCreator;
  exports.isAllOf = isAllOf;
  exports.isAnyOf = isAnyOf;
  exports.isAsyncThunkAction = isAsyncThunkAction;
  Object.defineProperty(exports, "isDraft", {
    enumerable: true,
    get: function get() {
      return _$$_REQUIRE(_dependencyMap[1]).isDraft;
    }
  });
  exports.isFluxStandardAction = isFSA;
  exports.isFulfilled = isFulfilled;
  exports.isImmutableDefault = isImmutableDefault;
  exports.isPending = isPending;
  exports.isPlain = isPlain;
  exports.isRejected = isRejected;
  exports.isRejectedWithValue = isRejectedWithValue;
  Object.defineProperty(exports, "lruMemoize", {
    enumerable: true,
    get: function get() {
      return _$$_REQUIRE(_dependencyMap[2]).lruMemoize;
    }
  });
  exports.nanoid = exports.miniSerializeError = undefined;
  Object.defineProperty(exports, "original", {
    enumerable: true,
    get: function get() {
      return _$$_REQUIRE(_dependencyMap[1]).original;
    }
  });
  exports.removeListener = exports.prepareAutoBatched = undefined;
  exports.unwrapResult = unwrapResult;
  Object.defineProperty(exports, "weakMapMemoize", {
    enumerable: true,
    get: function get() {
      return _$$_REQUIRE(_dependencyMap[2]).weakMapMemoize;
    }
  });
  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _asyncToGenerator2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _construct2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));
  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));
  var _wrapNativeSuper2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));
  Object.keys(_$$_REQUIRE(_dependencyMap[16])).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _$$_REQUIRE(_dependencyMap[16])[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _$$_REQUIRE(_dependencyMap[16])[key];
      }
    });
  });
  var _excluded = ["reducerPath"];
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && "function" == typeof p ? function (t) { return p.apply(e, t); } : p; } // src/index.ts
  // src/createDraftSafeSelector.ts
  var createDraftSafeSelectorCreator = exports.createDraftSafeSelectorCreator = function createDraftSafeSelectorCreator() {
    var createSelector2 = _$$_REQUIRE(_dependencyMap[2]).createSelectorCreator.apply(undefined, arguments);
    var createDraftSafeSelector2 = Object.assign(function () {
      var selector = createSelector2.apply(undefined, arguments);
      var wrappedSelector = function wrappedSelector(value) {
        for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          rest[_key - 1] = arguments[_key];
        }
        return selector.apply(undefined, [(0, _$$_REQUIRE(_dependencyMap[1]).isDraft)(value) ? (0, _$$_REQUIRE(_dependencyMap[1]).current)(value) : value].concat(rest));
      };
      Object.assign(wrappedSelector, selector);
      return wrappedSelector;
    }, {
      withTypes: function withTypes() {
        return createDraftSafeSelector2;
      }
    });
    return createDraftSafeSelector2;
  };
  var createDraftSafeSelector = exports.createDraftSafeSelector = /* @__PURE__ */createDraftSafeSelectorCreator(_$$_REQUIRE(_dependencyMap[2]).weakMapMemoize);

  // src/configureStore.ts

  // src/devtoolsExtension.ts

  var composeWithDevTools = typeof window !== "undefined" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : function () {
    if (arguments.length === 0) return undefined;
    if (typeof arguments[0] === "object") return _$$_REQUIRE(_dependencyMap[16]).compose;
    return _$$_REQUIRE(_dependencyMap[16]).compose.apply(null, arguments);
  };
  var devToolsEnhancer = typeof window !== "undefined" && window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__ : function () {
    return function (noop3) {
      return noop3;
    };
  };

  // src/getDefaultMiddleware.ts

  // src/createAction.ts

  // src/tsHelpers.ts
  var hasMatchFunction = function hasMatchFunction(v) {
    return v && typeof v.match === "function";
  };

  // src/createAction.ts
  function createAction(type, prepareAction) {
    function actionCreator() {
      if (prepareAction) {
        var prepared = prepareAction.apply(undefined, arguments);
        if (!prepared) {
          throw new Error(formatProdErrorMessage(0));
        }
        return Object.assign({
          type: type,
          payload: prepared.payload
        }, "meta" in prepared && {
          meta: prepared.meta
        }, "error" in prepared && {
          error: prepared.error
        });
      }
      return {
        type: type,
        payload: arguments.length <= 0 ? undefined : arguments[0]
      };
    }
    actionCreator.toString = function () {
      return `${type}`;
    };
    actionCreator.type = type;
    actionCreator.match = function (action) {
      return (0, _$$_REQUIRE(_dependencyMap[16]).isAction)(action) && action.type === type;
    };
    return actionCreator;
  }
  function isActionCreator(action) {
    return typeof action === "function" && "type" in action &&
    // hasMatchFunction only wants Matchers but I don't see the point in rewriting it
    hasMatchFunction(action);
  }
  function isFSA(action) {
    return (0, _$$_REQUIRE(_dependencyMap[16]).isAction)(action) && Object.keys(action).every(isValidKey);
  }
  function isValidKey(key) {
    return ["type", "payload", "error", "meta"].indexOf(key) > -1;
  }

  // src/actionCreatorInvariantMiddleware.ts
  function getMessage(type) {
    var splitType = type ? `${type}`.split("/") : [];
    var actionName = splitType[splitType.length - 1] || "actionCreator";
    return `Detected an action creator with type "${type || "unknown"}" being dispatched. 
Make sure you're calling the action creator before dispatching, i.e. \`dispatch(${actionName}())\` instead of \`dispatch(${actionName})\`. This is necessary even if the action has no payload.`;
  }
  function createActionCreatorInvariantMiddleware() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    {
      return function () {
        return function (next) {
          return function (action) {
            return next(action);
          };
        };
      };
    }
    var _options$isActionCrea = options.isActionCreator,
      isActionCreator2 = _options$isActionCrea === undefined ? isActionCreator : _options$isActionCrea;
    return function () {
      return function (next) {
        return function (action) {
          if (isActionCreator2(action)) {
            console.warn(getMessage(action.type));
          }
          return next(action);
        };
      };
    };
  }

  // src/utils.ts

  var Tuple = exports.Tuple = /*#__PURE__*/function (_Array) {
    function _Tuple() {
      var _this;
      (0, _classCallCheck2.default)(this, _Tuple);
      for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        items[_key2] = arguments[_key2];
      }
      _this = _callSuper(this, _Tuple, [].concat(items));
      Object.setPrototypeOf(_this, _Tuple.prototype);
      return _this;
    }
    (0, _inherits2.default)(_Tuple, _Array);
    return (0, _createClass2.default)(_Tuple, [{
      key: "concat",
      value: function concat() {
        for (var _len3 = arguments.length, arr = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
          arr[_key3] = arguments[_key3];
        }
        return _superPropGet(_Tuple, "concat", this, 1).apply(this, arr);
      }
    }, {
      key: "prepend",
      value: function prepend() {
        for (var _len4 = arguments.length, arr = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
          arr[_key4] = arguments[_key4];
        }
        if (arr.length === 1 && Array.isArray(arr[0])) {
          return (0, _construct2.default)(_Tuple, (0, _toConsumableArray2.default)(arr[0].concat(this)));
        }
        return (0, _construct2.default)(_Tuple, (0, _toConsumableArray2.default)(arr.concat(this)));
      }
    }], [{
      key: Symbol.species,
      get: function get() {
        return _Tuple;
      }
    }]);
  }(/*#__PURE__*/(0, _wrapNativeSuper2.default)(Array));
  function freezeDraftable(val) {
    return (0, _$$_REQUIRE(_dependencyMap[1]).isDraftable)(val) ? (0, _$$_REQUIRE(_dependencyMap[1]).produce)(val, function () {}) : val;
  }
  function getOrInsertComputed(map, key, compute) {
    if (map.has(key)) return map.get(key);
    return map.set(key, compute(key)).get(key);
  }

  // src/immutableStateInvariantMiddleware.ts
  function isImmutableDefault(value) {
    return typeof value !== "object" || value == null || Object.isFrozen(value);
  }
  function trackProperties(isImmutable) {
    var ignorePaths = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    var obj = arguments.length > 2 ? arguments[2] : undefined;
    var path = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "";
    var checkedObjects = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : /* @__PURE__ */new Set();
    var tracked = {
      value: obj
    };
    if (!isImmutable(obj) && !checkedObjects.has(obj)) {
      checkedObjects.add(obj);
      tracked.children = {};
      for (var key in obj) {
        var childPath = path ? path + "." + key : key;
        if (ignorePaths.length && ignorePaths.indexOf(childPath) !== -1) {
          continue;
        }
        tracked.children[key] = trackProperties(isImmutable, ignorePaths, obj[key], childPath);
      }
    }
    return tracked;
  }
  function _detectMutations(isImmutable) {
    var ignoredPaths = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    var trackedProperty = arguments.length > 2 ? arguments[2] : undefined;
    var obj = arguments.length > 3 ? arguments[3] : undefined;
    var sameParentRef = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
    var path = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : "";
    var prevObj = trackedProperty ? trackedProperty.value : undefined;
    var sameRef = prevObj === obj;
    if (sameParentRef && !sameRef && !Number.isNaN(obj)) {
      return {
        wasMutated: true,
        path: path
      };
    }
    if (isImmutable(prevObj) || isImmutable(obj)) {
      return {
        wasMutated: false
      };
    }
    var keysToDetect = {};
    for (var key in trackedProperty.children) {
      keysToDetect[key] = true;
    }
    for (var _key6 in obj) {
      keysToDetect[_key6] = true;
    }
    var hasIgnoredPaths = ignoredPaths.length > 0;
    var _loop = function _loop() {
        var nestedPath = path ? path + "." + _key7 : _key7;
        if (hasIgnoredPaths) {
          var hasMatches = ignoredPaths.some(function (ignored) {
            if (ignored instanceof RegExp) {
              return ignored.test(nestedPath);
            }
            return nestedPath === ignored;
          });
          if (hasMatches) {
            return 0; // continue
          }
        }
        var result = _detectMutations(isImmutable, ignoredPaths, trackedProperty.children[_key7], obj[_key7], sameRef, nestedPath);
        if (result.wasMutated) {
          return {
            v: result
          };
        }
      },
      _ret;
    for (var _key7 in keysToDetect) {
      _ret = _loop();
      if (_ret === 0) continue;
      if (_ret) return _ret.v;
    }
    return {
      wasMutated: false
    };
  }
  function createImmutableStateInvariantMiddleware() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    {
      return function () {
        return function (next) {
          return function (action) {
            return next(action);
          };
        };
      };
    }
  }

  // src/serializableStateInvariantMiddleware.ts

  function isPlain(val) {
    var type = typeof val;
    return val == null || type === "string" || type === "boolean" || type === "number" || Array.isArray(val) || (0, _$$_REQUIRE(_dependencyMap[16]).isPlainObject)(val);
  }
  function findNonSerializableValue(value) {
    var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
    var isSerializable = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : isPlain;
    var getEntries = arguments.length > 3 ? arguments[3] : undefined;
    var ignoredPaths = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];
    var cache = arguments.length > 5 ? arguments[5] : undefined;
    var foundNestedSerializable;
    if (!isSerializable(value)) {
      return {
        keyPath: path || "<root>",
        value: value
      };
    }
    if (typeof value !== "object" || value === null) {
      return false;
    }
    if (cache != null && cache.has(value)) return false;
    var entries = getEntries != null ? getEntries(value) : Object.entries(value);
    var hasIgnoredPaths = ignoredPaths.length > 0;
    var _loop2 = function _loop2() {
        var nestedPath = path ? path + "." + key : key;
        if (hasIgnoredPaths) {
          var hasMatches = ignoredPaths.some(function (ignored) {
            if (ignored instanceof RegExp) {
              return ignored.test(nestedPath);
            }
            return nestedPath === ignored;
          });
          if (hasMatches) {
            return 0; // continue
          }
        }
        if (!isSerializable(nestedValue)) {
          return {
            v: {
              keyPath: nestedPath,
              value: nestedValue
            }
          };
        }
        if (typeof nestedValue === "object") {
          foundNestedSerializable = findNonSerializableValue(nestedValue, nestedPath, isSerializable, getEntries, ignoredPaths, cache);
          if (foundNestedSerializable) {
            return {
              v: foundNestedSerializable
            };
          }
        }
      },
      _ret2;
    for (var _ref2 of entries) {
      var _ref3 = (0, _slicedToArray2.default)(_ref2, 2);
      var key = _ref3[0];
      var nestedValue = _ref3[1];
      _ret2 = _loop2();
      if (_ret2 === 0) continue;
      if (_ret2) return _ret2.v;
    }
    if (cache && isNestedFrozen(value)) cache.add(value);
    return false;
  }
  function isNestedFrozen(value) {
    if (!Object.isFrozen(value)) return false;
    for (var nestedValue of Object.values(value)) {
      if (typeof nestedValue !== "object" || nestedValue === null) continue;
      if (!isNestedFrozen(nestedValue)) return false;
    }
    return true;
  }
  function createSerializableStateInvariantMiddleware() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    {
      return function () {
        return function (next) {
          return function (action) {
            return next(action);
          };
        };
      };
    }
  }

  // src/getDefaultMiddleware.ts
  function isBoolean(x) {
    return typeof x === "boolean";
  }
  var buildGetDefaultMiddleware = function buildGetDefaultMiddleware() {
    return function getDefaultMiddleware(options) {
      var _ref4 = options != null ? options : {},
        _ref4$thunk = _ref4.thunk,
        thunk = _ref4$thunk === undefined ? true : _ref4$thunk,
        _ref4$immutableCheck = _ref4.immutableCheck,
        immutableCheck = _ref4$immutableCheck === undefined ? true : _ref4$immutableCheck,
        _ref4$serializableChe = _ref4.serializableCheck,
        serializableCheck = _ref4$serializableChe === undefined ? true : _ref4$serializableChe,
        _ref4$actionCreatorCh = _ref4.actionCreatorCheck,
        actionCreatorCheck = _ref4$actionCreatorCh === undefined ? true : _ref4$actionCreatorCh;
      var middlewareArray = new Tuple();
      if (thunk) {
        if (isBoolean(thunk)) {
          middlewareArray.push(_$$_REQUIRE(_dependencyMap[17]).thunk);
        } else {
          middlewareArray.push((0, _$$_REQUIRE(_dependencyMap[17]).withExtraArgument)(thunk.extraArgument));
        }
      }
      return middlewareArray;
    };
  };

  // src/autoBatchEnhancer.ts
  var SHOULD_AUTOBATCH = exports.SHOULD_AUTOBATCH = "RTK_autoBatch";
  var prepareAutoBatched = exports.prepareAutoBatched = function prepareAutoBatched() {
    return function (payload) {
      return {
        payload: payload,
        meta: (0, _defineProperty2.default)({}, SHOULD_AUTOBATCH, true)
      };
    };
  };
  var createQueueWithTimer = function createQueueWithTimer(timeout) {
    return function (notify) {
      setTimeout(notify, timeout);
    };
  };
  var autoBatchEnhancer = exports.autoBatchEnhancer = function autoBatchEnhancer() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
      type: "raf"
    };
    return function (next) {
      return function () {
        var store = next.apply(undefined, arguments);
        var notifying = true;
        var shouldNotifyAtEndOfTick = false;
        var notificationQueued = false;
        var listeners = /* @__PURE__ */new Set();
        var queueCallback = options.type === "tick" ? queueMicrotask : options.type === "raf" ?
        // requestAnimationFrame won't exist in SSR environments. Fall back to a vague approximation just to keep from erroring.
        typeof window !== "undefined" && window.requestAnimationFrame ? window.requestAnimationFrame : createQueueWithTimer(10) : options.type === "callback" ? options.queueNotification : createQueueWithTimer(options.timeout);
        var notifyListeners = function notifyListeners() {
          notificationQueued = false;
          if (shouldNotifyAtEndOfTick) {
            shouldNotifyAtEndOfTick = false;
            listeners.forEach(function (l) {
              return l();
            });
          }
        };
        return Object.assign({}, store, {
          // Override the base `store.subscribe` method to keep original listeners
          // from running if we're delaying notifications
          subscribe: function subscribe(listener2) {
            var wrappedListener = function wrappedListener() {
              return notifying && listener2();
            };
            var unsubscribe = store.subscribe(wrappedListener);
            listeners.add(listener2);
            return function () {
              unsubscribe();
              listeners.delete(listener2);
            };
          },
          // Override the base `store.dispatch` method so that we can check actions
          // for the `shouldAutoBatch` flag and determine if batching is active
          dispatch: function dispatch(action) {
            try {
              var _action$meta;
              notifying = !(action != null && (_action$meta = action.meta) != null && _action$meta[SHOULD_AUTOBATCH]);
              shouldNotifyAtEndOfTick = !notifying;
              if (shouldNotifyAtEndOfTick) {
                if (!notificationQueued) {
                  notificationQueued = true;
                  queueCallback(notifyListeners);
                }
              }
              return store.dispatch(action);
            } finally {
              notifying = true;
            }
          }
        });
      };
    };
  };

  // src/getDefaultEnhancers.ts
  var buildGetDefaultEnhancers = function buildGetDefaultEnhancers(middlewareEnhancer) {
    return function getDefaultEnhancers(options) {
      var _ref5 = options != null ? options : {},
        _ref5$autoBatch = _ref5.autoBatch,
        autoBatch = _ref5$autoBatch === undefined ? true : _ref5$autoBatch;
      var enhancerArray = new Tuple(middlewareEnhancer);
      if (autoBatch) {
        enhancerArray.push(autoBatchEnhancer(typeof autoBatch === "object" ? autoBatch : undefined));
      }
      return enhancerArray;
    };
  };

  // src/configureStore.ts
  function configureStore(options) {
    var getDefaultMiddleware = buildGetDefaultMiddleware();
    var _ref6 = options || {},
      _ref6$reducer = _ref6.reducer,
      reducer = _ref6$reducer === undefined ? undefined : _ref6$reducer,
      middleware = _ref6.middleware,
      _ref6$devTools = _ref6.devTools,
      devTools = _ref6$devTools === undefined ? true : _ref6$devTools,
      _ref6$preloadedState = _ref6.preloadedState,
      preloadedState = _ref6$preloadedState === undefined ? undefined : _ref6$preloadedState,
      _ref6$enhancers = _ref6.enhancers,
      enhancers = _ref6$enhancers === undefined ? undefined : _ref6$enhancers;
    var rootReducer;
    if (typeof reducer === "function") {
      rootReducer = reducer;
    } else if ((0, _$$_REQUIRE(_dependencyMap[16]).isPlainObject)(reducer)) {
      rootReducer = (0, _$$_REQUIRE(_dependencyMap[16]).combineReducers)(reducer);
    } else {
      throw new Error(formatProdErrorMessage(1));
    }
    var finalMiddleware;
    if (typeof middleware === "function") {
      finalMiddleware = middleware(getDefaultMiddleware);
    } else {
      finalMiddleware = getDefaultMiddleware();
    }
    var finalCompose = _$$_REQUIRE(_dependencyMap[16]).compose;
    if (devTools) {
      finalCompose = composeWithDevTools(Object.assign({
        // Enable capture of stack traces for dispatched Redux actions
        trace: false
      }, typeof devTools === "object" && devTools));
    }
    var middlewareEnhancer = _$$_REQUIRE(_dependencyMap[16]).applyMiddleware.apply(undefined, (0, _toConsumableArray2.default)(finalMiddleware));
    var getDefaultEnhancers = buildGetDefaultEnhancers(middlewareEnhancer);
    var storeEnhancers = typeof enhancers === "function" ? enhancers(getDefaultEnhancers) : getDefaultEnhancers();
    var composedEnhancer = finalCompose.apply(undefined, (0, _toConsumableArray2.default)(storeEnhancers));
    return (0, _$$_REQUIRE(_dependencyMap[16]).createStore)(rootReducer, preloadedState, composedEnhancer);
  }

  // src/createReducer.ts

  // src/mapBuilders.ts
  function executeReducerBuilderCallback(builderCallback) {
    var actionsMap = {};
    var actionMatchers = [];
    var defaultCaseReducer;
    var builder = {
      addCase: function addCase(typeOrActionCreator, reducer) {
        var type = typeof typeOrActionCreator === "string" ? typeOrActionCreator : typeOrActionCreator.type;
        if (!type) {
          throw new Error(formatProdErrorMessage(28));
        }
        if (type in actionsMap) {
          throw new Error(formatProdErrorMessage(29));
        }
        actionsMap[type] = reducer;
        return builder;
      },
      addMatcher: function addMatcher(matcher, reducer) {
        actionMatchers.push({
          matcher: matcher,
          reducer: reducer
        });
        return builder;
      },
      addDefaultCase: function addDefaultCase(reducer) {
        defaultCaseReducer = reducer;
        return builder;
      }
    };
    builderCallback(builder);
    return [actionsMap, actionMatchers, defaultCaseReducer];
  }

  // src/createReducer.ts
  function isStateFunction(x) {
    return typeof x === "function";
  }
  function createReducer(initialState, mapOrBuilderCallback) {
    var _executeReducerBuilde = executeReducerBuilderCallback(mapOrBuilderCallback),
      _executeReducerBuilde2 = (0, _slicedToArray2.default)(_executeReducerBuilde, 3),
      actionsMap = _executeReducerBuilde2[0],
      finalActionMatchers = _executeReducerBuilde2[1],
      finalDefaultCaseReducer = _executeReducerBuilde2[2];
    var getInitialState;
    if (isStateFunction(initialState)) {
      getInitialState = function getInitialState() {
        return freezeDraftable(initialState());
      };
    } else {
      var frozenInitialState = freezeDraftable(initialState);
      getInitialState = function getInitialState() {
        return frozenInitialState;
      };
    }
    function reducer() {
      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getInitialState();
      var action = arguments.length > 1 ? arguments[1] : undefined;
      var caseReducers = [actionsMap[action.type]].concat((0, _toConsumableArray2.default)(finalActionMatchers.filter(function (_ref7) {
        var matcher = _ref7.matcher;
        return matcher(action);
      }).map(function (_ref8) {
        var reducer2 = _ref8.reducer;
        return reducer2;
      })));
      if (caseReducers.filter(function (cr) {
        return !!cr;
      }).length === 0) {
        caseReducers = [finalDefaultCaseReducer];
      }
      return caseReducers.reduce(function (previousState, caseReducer) {
        if (caseReducer) {
          if ((0, _$$_REQUIRE(_dependencyMap[1]).isDraft)(previousState)) {
            var draft = previousState;
            var result = caseReducer(draft, action);
            if (result === undefined) {
              return previousState;
            }
            return result;
          } else if (!(0, _$$_REQUIRE(_dependencyMap[1]).isDraftable)(previousState)) {
            var _result = caseReducer(previousState, action);
            if (_result === undefined) {
              if (previousState === null) {
                return previousState;
              }
              throw Error("A case reducer on a non-draftable value must not return undefined");
            }
            return _result;
          } else {
            return (0, _$$_REQUIRE(_dependencyMap[1]).produce)(previousState, function (draft) {
              return caseReducer(draft, action);
            });
          }
        }
        return previousState;
      }, state);
    }
    reducer.getInitialState = getInitialState;
    return reducer;
  }

  // src/matchers.ts
  var matches = function matches(matcher, action) {
    if (hasMatchFunction(matcher)) {
      return matcher.match(action);
    } else {
      return matcher(action);
    }
  };
  function isAnyOf() {
    for (var _len5 = arguments.length, matchers = new Array(_len5), _key8 = 0; _key8 < _len5; _key8++) {
      matchers[_key8] = arguments[_key8];
    }
    return function (action) {
      return matchers.some(function (matcher) {
        return matches(matcher, action);
      });
    };
  }
  function isAllOf() {
    for (var _len6 = arguments.length, matchers = new Array(_len6), _key9 = 0; _key9 < _len6; _key9++) {
      matchers[_key9] = arguments[_key9];
    }
    return function (action) {
      return matchers.every(function (matcher) {
        return matches(matcher, action);
      });
    };
  }
  function hasExpectedRequestMetadata(action, validStatus) {
    if (!action || !action.meta) return false;
    var hasValidRequestId = typeof action.meta.requestId === "string";
    var hasValidRequestStatus = validStatus.indexOf(action.meta.requestStatus) > -1;
    return hasValidRequestId && hasValidRequestStatus;
  }
  function isAsyncThunkArray(a) {
    return typeof a[0] === "function" && "pending" in a[0] && "fulfilled" in a[0] && "rejected" in a[0];
  }
  function isPending() {
    for (var _len7 = arguments.length, asyncThunks = new Array(_len7), _key10 = 0; _key10 < _len7; _key10++) {
      asyncThunks[_key10] = arguments[_key10];
    }
    if (asyncThunks.length === 0) {
      return function (action) {
        return hasExpectedRequestMetadata(action, ["pending"]);
      };
    }
    if (!isAsyncThunkArray(asyncThunks)) {
      return isPending()(asyncThunks[0]);
    }
    return isAnyOf.apply(undefined, (0, _toConsumableArray2.default)(asyncThunks.map(function (asyncThunk) {
      return asyncThunk.pending;
    })));
  }
  function isRejected() {
    for (var _len8 = arguments.length, asyncThunks = new Array(_len8), _key11 = 0; _key11 < _len8; _key11++) {
      asyncThunks[_key11] = arguments[_key11];
    }
    if (asyncThunks.length === 0) {
      return function (action) {
        return hasExpectedRequestMetadata(action, ["rejected"]);
      };
    }
    if (!isAsyncThunkArray(asyncThunks)) {
      return isRejected()(asyncThunks[0]);
    }
    return isAnyOf.apply(undefined, (0, _toConsumableArray2.default)(asyncThunks.map(function (asyncThunk) {
      return asyncThunk.rejected;
    })));
  }
  function isRejectedWithValue() {
    var hasFlag = function hasFlag(action) {
      return action && action.meta && action.meta.rejectedWithValue;
    };
    for (var _len9 = arguments.length, asyncThunks = new Array(_len9), _key12 = 0; _key12 < _len9; _key12++) {
      asyncThunks[_key12] = arguments[_key12];
    }
    if (asyncThunks.length === 0) {
      return isAllOf(isRejected.apply(undefined, asyncThunks), hasFlag);
    }
    if (!isAsyncThunkArray(asyncThunks)) {
      return isRejectedWithValue()(asyncThunks[0]);
    }
    return isAllOf(isRejected.apply(undefined, asyncThunks), hasFlag);
  }
  function isFulfilled() {
    for (var _len10 = arguments.length, asyncThunks = new Array(_len10), _key13 = 0; _key13 < _len10; _key13++) {
      asyncThunks[_key13] = arguments[_key13];
    }
    if (asyncThunks.length === 0) {
      return function (action) {
        return hasExpectedRequestMetadata(action, ["fulfilled"]);
      };
    }
    if (!isAsyncThunkArray(asyncThunks)) {
      return isFulfilled()(asyncThunks[0]);
    }
    return isAnyOf.apply(undefined, (0, _toConsumableArray2.default)(asyncThunks.map(function (asyncThunk) {
      return asyncThunk.fulfilled;
    })));
  }
  function isAsyncThunkAction() {
    for (var _len11 = arguments.length, asyncThunks = new Array(_len11), _key14 = 0; _key14 < _len11; _key14++) {
      asyncThunks[_key14] = arguments[_key14];
    }
    if (asyncThunks.length === 0) {
      return function (action) {
        return hasExpectedRequestMetadata(action, ["pending", "fulfilled", "rejected"]);
      };
    }
    if (!isAsyncThunkArray(asyncThunks)) {
      return isAsyncThunkAction()(asyncThunks[0]);
    }
    return isAnyOf.apply(undefined, (0, _toConsumableArray2.default)(asyncThunks.flatMap(function (asyncThunk) {
      return [asyncThunk.pending, asyncThunk.rejected, asyncThunk.fulfilled];
    })));
  }

  // src/nanoid.ts
  var urlAlphabet = "ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW";
  var nanoid = exports.nanoid = function nanoid() {
    var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 21;
    var id = "";
    var i = size;
    while (i--) {
      id += urlAlphabet[Math.random() * 64 | 0];
    }
    return id;
  };

  // src/createAsyncThunk.ts
  var commonProperties = ["name", "message", "stack", "code"];
  var RejectWithValue = /*#__PURE__*/(0, _createClass2.default)(function RejectWithValue(payload, meta) {
    (0, _classCallCheck2.default)(this, RejectWithValue);
    this.payload = payload;
    this.meta = meta;
  }
  /*
  type-only property to distinguish between RejectWithValue and FulfillWithMeta
  does not exist at runtime
  */);
  var FulfillWithMeta = /*#__PURE__*/(0, _createClass2.default)(function FulfillWithMeta(payload, meta) {
    (0, _classCallCheck2.default)(this, FulfillWithMeta);
    this.payload = payload;
    this.meta = meta;
  }
  /*
  type-only property to distinguish between RejectWithValue and FulfillWithMeta
  does not exist at runtime
  */);
  var miniSerializeError = exports.miniSerializeError = function miniSerializeError(value) {
    if (typeof value === "object" && value !== null) {
      var simpleError = {};
      for (var property of commonProperties) {
        if (typeof value[property] === "string") {
          simpleError[property] = value[property];
        }
      }
      return simpleError;
    }
    return {
      message: String(value)
    };
  };
  var externalAbortMessage = "External signal was aborted";
  var createAsyncThunk = exports.createAsyncThunk = /* @__PURE__ */function () {
    function createAsyncThunk2(typePrefix, payloadCreator, options) {
      var fulfilled = createAction(typePrefix + "/fulfilled", function (payload, requestId, arg, meta) {
        return {
          payload: payload,
          meta: Object.assign({}, meta || {}, {
            arg: arg,
            requestId: requestId,
            requestStatus: "fulfilled"
          })
        };
      });
      var pending = createAction(typePrefix + "/pending", function (requestId, arg, meta) {
        return {
          payload: undefined,
          meta: Object.assign({}, meta || {}, {
            arg: arg,
            requestId: requestId,
            requestStatus: "pending"
          })
        };
      });
      var rejected = createAction(typePrefix + "/rejected", function (error, requestId, arg, payload, meta) {
        return {
          payload: payload,
          error: (options && options.serializeError || miniSerializeError)(error || "Rejected"),
          meta: Object.assign({}, meta || {}, {
            arg: arg,
            requestId: requestId,
            rejectedWithValue: !!payload,
            requestStatus: "rejected",
            aborted: (error == null ? undefined : error.name) === "AbortError",
            condition: (error == null ? undefined : error.name) === "ConditionError"
          })
        };
      });
      function actionCreator(arg) {
        var _ref9 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          signal = _ref9.signal;
        return function (dispatch, getState, extra) {
          var requestId = options != null && options.idGenerator ? options.idGenerator(arg) : nanoid();
          var abortController = new AbortController();
          var abortHandler;
          var abortReason;
          function abort(reason) {
            abortReason = reason;
            abortController.abort();
          }
          if (signal) {
            if (signal.aborted) {
              abort(externalAbortMessage);
            } else {
              signal.addEventListener("abort", function () {
                return abort(externalAbortMessage);
              }, {
                once: true
              });
            }
          }
          var promise = (0, _asyncToGenerator2.default)(function* () {
            var finalAction;
            try {
              var conditionResult = options == null ? undefined : options.condition == null ? undefined : options.condition(arg, {
                getState: getState,
                extra: extra
              });
              if (isThenable(conditionResult)) {
                conditionResult = yield conditionResult;
              }
              if (conditionResult === false || abortController.signal.aborted) {
                throw {
                  name: "ConditionError",
                  message: "Aborted due to condition callback returning false."
                };
              }
              var abortedPromise = new Promise(function (_, reject) {
                abortHandler = function abortHandler() {
                  reject({
                    name: "AbortError",
                    message: abortReason || "Aborted"
                  });
                };
                abortController.signal.addEventListener("abort", abortHandler);
              });
              dispatch(pending(requestId, arg, options == null ? undefined : options.getPendingMeta == null ? undefined : options.getPendingMeta({
                requestId: requestId,
                arg: arg
              }, {
                getState: getState,
                extra: extra
              })));
              finalAction = yield Promise.race([abortedPromise, Promise.resolve(payloadCreator(arg, {
                dispatch: dispatch,
                getState: getState,
                extra: extra,
                requestId: requestId,
                signal: abortController.signal,
                abort: abort,
                rejectWithValue: function rejectWithValue(value, meta) {
                  return new RejectWithValue(value, meta);
                },
                fulfillWithValue: function fulfillWithValue(value, meta) {
                  return new FulfillWithMeta(value, meta);
                }
              })).then(function (result) {
                if (result instanceof RejectWithValue) {
                  throw result;
                }
                if (result instanceof FulfillWithMeta) {
                  return fulfilled(result.payload, requestId, arg, result.meta);
                }
                return fulfilled(result, requestId, arg);
              })]);
            } catch (err) {
              finalAction = err instanceof RejectWithValue ? rejected(null, requestId, arg, err.payload, err.meta) : rejected(err, requestId, arg);
            } finally {
              if (abortHandler) {
                abortController.signal.removeEventListener("abort", abortHandler);
              }
            }
            var skipDispatch = options && !options.dispatchConditionRejection && rejected.match(finalAction) && finalAction.meta.condition;
            if (!skipDispatch) {
              dispatch(finalAction);
            }
            return finalAction;
          })();
          return Object.assign(promise, {
            abort: abort,
            requestId: requestId,
            arg: arg,
            unwrap: function unwrap() {
              return promise.then(unwrapResult);
            }
          });
        };
      }
      return Object.assign(actionCreator, {
        pending: pending,
        rejected: rejected,
        fulfilled: fulfilled,
        settled: isAnyOf(rejected, fulfilled),
        typePrefix: typePrefix
      });
    }
    createAsyncThunk2.withTypes = function () {
      return createAsyncThunk2;
    };
    return createAsyncThunk2;
  }();
  function unwrapResult(action) {
    if (action.meta && action.meta.rejectedWithValue) {
      throw action.payload;
    }
    if (action.error) {
      throw action.error;
    }
    return action.payload;
  }
  function isThenable(value) {
    return value !== null && typeof value === "object" && typeof value.then === "function";
  }

  // src/createSlice.ts
  var asyncThunkSymbol = /* @__PURE__ */Symbol.for("rtk-slice-createasyncthunk");
  var asyncThunkCreator = exports.asyncThunkCreator = (0, _defineProperty2.default)({}, asyncThunkSymbol, createAsyncThunk);
  var ReducerType = exports.ReducerType = /* @__PURE__ */function (ReducerType2) {
    ReducerType2["reducer"] = "reducer";
    ReducerType2["reducerWithPrepare"] = "reducerWithPrepare";
    ReducerType2["asyncThunk"] = "asyncThunk";
    return ReducerType2;
  }(ReducerType || {});
  function getType(slice, actionKey) {
    return `${slice}/${actionKey}`;
  }
  function buildCreateSlice() {
    var _creators$asyncThunk;
    var _ref11 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      creators = _ref11.creators;
    var cAT = creators == null ? undefined : (_creators$asyncThunk = creators.asyncThunk) == null ? undefined : _creators$asyncThunk[asyncThunkSymbol];
    return function createSlice2(options) {
      var name = options.name,
        _options$reducerPath = options.reducerPath,
        reducerPath = _options$reducerPath === undefined ? name : _options$reducerPath;
      if (!name) {
        throw new Error(formatProdErrorMessage(11));
      }
      if (typeof process !== "undefined" && false) {
        if (options.initialState === undefined) {
          console.error("You must provide an `initialState` value that is not `undefined`. You may have misspelled `initialState`");
        }
      }
      var reducers = (typeof options.reducers === "function" ? options.reducers(buildReducerCreators()) : options.reducers) || {};
      var reducerNames = Object.keys(reducers);
      var context = {
        sliceCaseReducersByName: {},
        sliceCaseReducersByType: {},
        actionCreators: {},
        sliceMatchers: []
      };
      var contextMethods = {
        addCase: function addCase(typeOrActionCreator, reducer2) {
          var type = typeof typeOrActionCreator === "string" ? typeOrActionCreator : typeOrActionCreator.type;
          if (!type) {
            throw new Error(formatProdErrorMessage(12));
          }
          if (type in context.sliceCaseReducersByType) {
            throw new Error(formatProdErrorMessage(13));
          }
          context.sliceCaseReducersByType[type] = reducer2;
          return contextMethods;
        },
        addMatcher: function addMatcher(matcher, reducer2) {
          context.sliceMatchers.push({
            matcher: matcher,
            reducer: reducer2
          });
          return contextMethods;
        },
        exposeAction: function exposeAction(name2, actionCreator) {
          context.actionCreators[name2] = actionCreator;
          return contextMethods;
        },
        exposeCaseReducer: function exposeCaseReducer(name2, reducer2) {
          context.sliceCaseReducersByName[name2] = reducer2;
          return contextMethods;
        }
      };
      reducerNames.forEach(function (reducerName) {
        var reducerDefinition = reducers[reducerName];
        var reducerDetails = {
          reducerName: reducerName,
          type: getType(name, reducerName),
          createNotation: typeof options.reducers === "function"
        };
        if (isAsyncThunkSliceReducerDefinition(reducerDefinition)) {
          handleThunkCaseReducerDefinition(reducerDetails, reducerDefinition, contextMethods, cAT);
        } else {
          handleNormalReducerDefinition(reducerDetails, reducerDefinition, contextMethods);
        }
      });
      function buildReducer() {
        var _ref12 = typeof options.extraReducers === "function" ? executeReducerBuilderCallback(options.extraReducers) : [options.extraReducers],
          _ref13 = (0, _slicedToArray2.default)(_ref12, 3),
          _ref13$ = _ref13[0],
          extraReducers = _ref13$ === undefined ? {} : _ref13$,
          _ref13$2 = _ref13[1],
          actionMatchers = _ref13$2 === undefined ? [] : _ref13$2,
          _ref13$3 = _ref13[2],
          defaultCaseReducer = _ref13$3 === undefined ? undefined : _ref13$3;
        var finalCaseReducers = Object.assign({}, extraReducers, context.sliceCaseReducersByType);
        return createReducer(options.initialState, function (builder) {
          for (var key in finalCaseReducers) {
            builder.addCase(key, finalCaseReducers[key]);
          }
          for (var sM of context.sliceMatchers) {
            builder.addMatcher(sM.matcher, sM.reducer);
          }
          for (var m of actionMatchers) {
            builder.addMatcher(m.matcher, m.reducer);
          }
          if (defaultCaseReducer) {
            builder.addDefaultCase(defaultCaseReducer);
          }
        });
      }
      var selectSelf = function selectSelf(state) {
        return state;
      };
      var injectedSelectorCache = /* @__PURE__ */new Map();
      var _reducer;
      function reducer(state, action) {
        if (!_reducer) _reducer = buildReducer();
        return _reducer(state, action);
      }
      function getInitialState() {
        if (!_reducer) _reducer = buildReducer();
        return _reducer.getInitialState();
      }
      function makeSelectorProps(reducerPath2) {
        var injected = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
        function selectSlice(state) {
          var sliceState = state[reducerPath2];
          if (typeof sliceState === "undefined") {
            if (injected) {
              sliceState = getInitialState();
            }
          }
          return sliceState;
        }
        function getSelectors() {
          var selectState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : selectSelf;
          var selectorCache = getOrInsertComputed(injectedSelectorCache, injected, function () {
            return /* @__PURE__ */new WeakMap();
          });
          return getOrInsertComputed(selectorCache, selectState, function () {
            var map = {};
            for (var _ref16 of Object.entries((_options$selectors = options.selectors) != null ? _options$selectors : {})) {
              var _options$selectors;
              var _ref15 = (0, _slicedToArray2.default)(_ref16, 2);
              var name2 = _ref15[0];
              var selector = _ref15[1];
              map[name2] = wrapSelector(selector, selectState, getInitialState, injected);
            }
            return map;
          });
        }
        return {
          reducerPath: reducerPath2,
          getSelectors: getSelectors,
          get selectors() {
            return getSelectors(selectSlice);
          },
          selectSlice: selectSlice
        };
      }
      var slice = Object.assign({
        name: name,
        reducer: reducer,
        actions: context.actionCreators,
        caseReducers: context.sliceCaseReducersByName,
        getInitialState: getInitialState
      }, makeSelectorProps(reducerPath), {
        injectInto: function injectInto(injectable) {
          var _ref17 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
            pathOpt = _ref17.reducerPath,
            config = (0, _objectWithoutProperties2.default)(_ref17, _excluded);
          var newReducerPath = pathOpt != null ? pathOpt : reducerPath;
          injectable.inject({
            reducerPath: newReducerPath,
            reducer: reducer
          }, config);
          return Object.assign({}, slice, makeSelectorProps(newReducerPath, true));
        }
      });
      return slice;
    };
  }
  function wrapSelector(selector, selectState, getInitialState, injected) {
    function wrapper(rootState) {
      var sliceState = selectState(rootState);
      if (typeof sliceState === "undefined") {
        if (injected) {
          sliceState = getInitialState();
        }
      }
      for (var _len12 = arguments.length, args = new Array(_len12 > 1 ? _len12 - 1 : 0), _key15 = 1; _key15 < _len12; _key15++) {
        args[_key15 - 1] = arguments[_key15];
      }
      return selector.apply(undefined, [sliceState].concat(args));
    }
    wrapper.unwrapped = selector;
    return wrapper;
  }
  var createSlice = exports.createSlice = /* @__PURE__ */buildCreateSlice();
  function buildReducerCreators() {
    function asyncThunk(payloadCreator, config) {
      return Object.assign({
        _reducerDefinitionType: "asyncThunk" /* asyncThunk */,
        payloadCreator: payloadCreator
      }, config);
    }
    asyncThunk.withTypes = function () {
      return asyncThunk;
    };
    return {
      reducer: function reducer(caseReducer) {
        return Object.assign((0, _defineProperty2.default)({}, caseReducer.name, function () {
          return caseReducer.apply(undefined, arguments);
        })[caseReducer.name], {
          _reducerDefinitionType: "reducer" /* reducer */
        });
      },
      preparedReducer: function preparedReducer(prepare, reducer) {
        return {
          _reducerDefinitionType: "reducerWithPrepare" /* reducerWithPrepare */,
          prepare: prepare,
          reducer: reducer
        };
      },
      asyncThunk: asyncThunk
    };
  }
  function handleNormalReducerDefinition(_ref18, maybeReducerWithPrepare, context) {
    var type = _ref18.type,
      reducerName = _ref18.reducerName,
      createNotation = _ref18.createNotation;
    var caseReducer;
    var prepareCallback;
    if ("reducer" in maybeReducerWithPrepare) {
      if (createNotation && !isCaseReducerWithPrepareDefinition(maybeReducerWithPrepare)) {
        throw new Error(formatProdErrorMessage(17));
      }
      caseReducer = maybeReducerWithPrepare.reducer;
      prepareCallback = maybeReducerWithPrepare.prepare;
    } else {
      caseReducer = maybeReducerWithPrepare;
    }
    context.addCase(type, caseReducer).exposeCaseReducer(reducerName, caseReducer).exposeAction(reducerName, prepareCallback ? createAction(type, prepareCallback) : createAction(type));
  }
  function isAsyncThunkSliceReducerDefinition(reducerDefinition) {
    return reducerDefinition._reducerDefinitionType === "asyncThunk" /* asyncThunk */;
  }
  function isCaseReducerWithPrepareDefinition(reducerDefinition) {
    return reducerDefinition._reducerDefinitionType === "reducerWithPrepare" /* reducerWithPrepare */;
  }
  function handleThunkCaseReducerDefinition(_ref19, reducerDefinition, context, cAT) {
    var type = _ref19.type,
      reducerName = _ref19.reducerName;
    if (!cAT) {
      throw new Error(formatProdErrorMessage(18));
    }
    var payloadCreator = reducerDefinition.payloadCreator,
      fulfilled = reducerDefinition.fulfilled,
      pending = reducerDefinition.pending,
      rejected = reducerDefinition.rejected,
      settled = reducerDefinition.settled,
      options = reducerDefinition.options;
    var thunk = cAT(type, payloadCreator, options);
    context.exposeAction(reducerName, thunk);
    if (fulfilled) {
      context.addCase(thunk.fulfilled, fulfilled);
    }
    if (pending) {
      context.addCase(thunk.pending, pending);
    }
    if (rejected) {
      context.addCase(thunk.rejected, rejected);
    }
    if (settled) {
      context.addMatcher(thunk.settled, settled);
    }
    context.exposeCaseReducer(reducerName, {
      fulfilled: fulfilled || noop,
      pending: pending || noop,
      rejected: rejected || noop,
      settled: settled || noop
    });
  }
  function noop() {}

  // src/entities/entity_state.ts
  function getInitialEntityState() {
    return {
      ids: [],
      entities: {}
    };
  }
  function createInitialStateFactory(stateAdapter) {
    function getInitialState() {
      var additionalState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var entities = arguments.length > 1 ? arguments[1] : undefined;
      var state = Object.assign(getInitialEntityState(), additionalState);
      return entities ? stateAdapter.setAll(state, entities) : state;
    }
    return {
      getInitialState: getInitialState
    };
  }

  // src/entities/state_selectors.ts
  function createSelectorsFactory() {
    function getSelectors(selectState) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var _options$createSelect = options.createSelector,
        createSelector2 = _options$createSelect === undefined ? createDraftSafeSelector : _options$createSelect;
      var selectIds = function selectIds(state) {
        return state.ids;
      };
      var selectEntities = function selectEntities(state) {
        return state.entities;
      };
      var selectAll = createSelector2(selectIds, selectEntities, function (ids, entities) {
        return ids.map(function (id) {
          return entities[id];
        });
      });
      var selectId = function selectId(_, id) {
        return id;
      };
      var selectById = function selectById(entities, id) {
        return entities[id];
      };
      var selectTotal = createSelector2(selectIds, function (ids) {
        return ids.length;
      });
      if (!selectState) {
        return {
          selectIds: selectIds,
          selectEntities: selectEntities,
          selectAll: selectAll,
          selectTotal: selectTotal,
          selectById: createSelector2(selectEntities, selectId, selectById)
        };
      }
      var selectGlobalizedEntities = createSelector2(selectState, selectEntities);
      return {
        selectIds: createSelector2(selectState, selectIds),
        selectEntities: selectGlobalizedEntities,
        selectAll: createSelector2(selectState, selectAll),
        selectTotal: createSelector2(selectState, selectTotal),
        selectById: createSelector2(selectGlobalizedEntities, selectId, selectById)
      };
    }
    return {
      getSelectors: getSelectors
    };
  }

  // src/entities/state_adapter.ts

  function createSingleArgumentStateOperator(mutator) {
    var operator = createStateOperator(function (_, state) {
      return mutator(state);
    });
    return function operation(state) {
      return operator(state, undefined);
    };
  }
  function createStateOperator(mutator) {
    return function operation(state, arg) {
      function isPayloadActionArgument(arg2) {
        return isFSA(arg2);
      }
      var runMutator = function runMutator(draft) {
        if (isPayloadActionArgument(arg)) {
          mutator(arg.payload, draft);
        } else {
          mutator(arg, draft);
        }
      };
      if (_$$_REQUIRE(_dependencyMap[18]).isDraft(state)) {
        runMutator(state);
        return state;
      }
      return (0, _$$_REQUIRE(_dependencyMap[1]).produce)(state, runMutator);
    };
  }

  // src/entities/utils.ts

  function selectIdValue(entity, selectId) {
    var key = selectId(entity);
    return key;
  }
  function ensureEntitiesArray(entities) {
    if (!Array.isArray(entities)) {
      entities = Object.values(entities);
    }
    return entities;
  }
  function getCurrent(value) {
    return (0, _$$_REQUIRE(_dependencyMap[1]).isDraft)(value) ? (0, _$$_REQUIRE(_dependencyMap[1]).current)(value) : value;
  }
  function splitAddedUpdatedEntities(newEntities, selectId, state) {
    newEntities = ensureEntitiesArray(newEntities);
    var existingIdsArray = getCurrent(state.ids);
    var existingIds = new Set(existingIdsArray);
    var added = [];
    var updated = [];
    for (var entity of newEntities) {
      var id = selectIdValue(entity, selectId);
      if (existingIds.has(id)) {
        updated.push({
          id: id,
          changes: entity
        });
      } else {
        added.push(entity);
      }
    }
    return [added, updated, existingIdsArray];
  }

  // src/entities/unsorted_state_adapter.ts
  function createUnsortedStateAdapter(selectId) {
    function addOneMutably(entity, state) {
      var key = selectIdValue(entity, selectId);
      if (key in state.entities) {
        return;
      }
      state.ids.push(key);
      state.entities[key] = entity;
    }
    function addManyMutably(newEntities, state) {
      newEntities = ensureEntitiesArray(newEntities);
      for (var entity of newEntities) {
        addOneMutably(entity, state);
      }
    }
    function setOneMutably(entity, state) {
      var key = selectIdValue(entity, selectId);
      if (!(key in state.entities)) {
        state.ids.push(key);
      }
      ;
      state.entities[key] = entity;
    }
    function setManyMutably(newEntities, state) {
      newEntities = ensureEntitiesArray(newEntities);
      for (var entity of newEntities) {
        setOneMutably(entity, state);
      }
    }
    function setAllMutably(newEntities, state) {
      newEntities = ensureEntitiesArray(newEntities);
      state.ids = [];
      state.entities = {};
      addManyMutably(newEntities, state);
    }
    function removeOneMutably(key, state) {
      return removeManyMutably([key], state);
    }
    function removeManyMutably(keys, state) {
      var didMutate = false;
      keys.forEach(function (key) {
        if (key in state.entities) {
          delete state.entities[key];
          didMutate = true;
        }
      });
      if (didMutate) {
        state.ids = state.ids.filter(function (id) {
          return id in state.entities;
        });
      }
    }
    function removeAllMutably(state) {
      Object.assign(state, {
        ids: [],
        entities: {}
      });
    }
    function takeNewKey(keys, update, state) {
      var original3 = state.entities[update.id];
      if (original3 === undefined) {
        return false;
      }
      var updated = Object.assign({}, original3, update.changes);
      var newKey = selectIdValue(updated, selectId);
      var hasNewKey = newKey !== update.id;
      if (hasNewKey) {
        keys[update.id] = newKey;
        delete state.entities[update.id];
      }
      ;
      state.entities[newKey] = updated;
      return hasNewKey;
    }
    function updateOneMutably(update, state) {
      return updateManyMutably([update], state);
    }
    function updateManyMutably(updates, state) {
      var newKeys = {};
      var updatesPerEntity = {};
      updates.forEach(function (update) {
        if (update.id in state.entities) {
          var _updatesPerEntity$upd;
          updatesPerEntity[update.id] = {
            id: update.id,
            // Spreads ignore falsy values, so this works even if there isn't
            // an existing update already at this key
            changes: Object.assign({}, (_updatesPerEntity$upd = updatesPerEntity[update.id]) == null ? undefined : _updatesPerEntity$upd.changes, update.changes)
          };
        }
      });
      updates = Object.values(updatesPerEntity);
      var didMutateEntities = updates.length > 0;
      if (didMutateEntities) {
        var didMutateIds = updates.filter(function (update) {
          return takeNewKey(newKeys, update, state);
        }).length > 0;
        if (didMutateIds) {
          state.ids = Object.values(state.entities).map(function (e) {
            return selectIdValue(e, selectId);
          });
        }
      }
    }
    function upsertOneMutably(entity, state) {
      return upsertManyMutably([entity], state);
    }
    function upsertManyMutably(newEntities, state) {
      var _splitAddedUpdatedEnt = splitAddedUpdatedEntities(newEntities, selectId, state),
        _splitAddedUpdatedEnt2 = (0, _slicedToArray2.default)(_splitAddedUpdatedEnt, 2),
        added = _splitAddedUpdatedEnt2[0],
        updated = _splitAddedUpdatedEnt2[1];
      updateManyMutably(updated, state);
      addManyMutably(added, state);
    }
    return {
      removeAll: createSingleArgumentStateOperator(removeAllMutably),
      addOne: createStateOperator(addOneMutably),
      addMany: createStateOperator(addManyMutably),
      setOne: createStateOperator(setOneMutably),
      setMany: createStateOperator(setManyMutably),
      setAll: createStateOperator(setAllMutably),
      updateOne: createStateOperator(updateOneMutably),
      updateMany: createStateOperator(updateManyMutably),
      upsertOne: createStateOperator(upsertOneMutably),
      upsertMany: createStateOperator(upsertManyMutably),
      removeOne: createStateOperator(removeOneMutably),
      removeMany: createStateOperator(removeManyMutably)
    };
  }

  // src/entities/sorted_state_adapter.ts
  function findInsertIndex(sortedItems, item, comparisonFunction) {
    var lowIndex = 0;
    var highIndex = sortedItems.length;
    while (lowIndex < highIndex) {
      var middleIndex = lowIndex + highIndex >>> 1;
      var currentItem = sortedItems[middleIndex];
      var res = comparisonFunction(item, currentItem);
      if (res >= 0) {
        lowIndex = middleIndex + 1;
      } else {
        highIndex = middleIndex;
      }
    }
    return lowIndex;
  }
  function insert(sortedItems, item, comparisonFunction) {
    var insertAtIndex = findInsertIndex(sortedItems, item, comparisonFunction);
    sortedItems.splice(insertAtIndex, 0, item);
    return sortedItems;
  }
  function createSortedStateAdapter(selectId, comparer) {
    var _createUnsortedStateA = createUnsortedStateAdapter(selectId),
      removeOne = _createUnsortedStateA.removeOne,
      removeMany = _createUnsortedStateA.removeMany,
      removeAll = _createUnsortedStateA.removeAll;
    function addOneMutably(entity, state) {
      return addManyMutably([entity], state);
    }
    function addManyMutably(newEntities, state, existingIds) {
      newEntities = ensureEntitiesArray(newEntities);
      var existingKeys = new Set(existingIds != null ? existingIds : getCurrent(state.ids));
      var models = newEntities.filter(function (model) {
        return !existingKeys.has(selectIdValue(model, selectId));
      });
      if (models.length !== 0) {
        mergeFunction(state, models);
      }
    }
    function setOneMutably(entity, state) {
      return setManyMutably([entity], state);
    }
    function setManyMutably(newEntities, state) {
      newEntities = ensureEntitiesArray(newEntities);
      if (newEntities.length !== 0) {
        for (var item of newEntities) {
          delete state.entities[selectId(item)];
        }
        mergeFunction(state, newEntities);
      }
    }
    function setAllMutably(newEntities, state) {
      newEntities = ensureEntitiesArray(newEntities);
      state.entities = {};
      state.ids = [];
      addManyMutably(newEntities, state, []);
    }
    function updateOneMutably(update, state) {
      return updateManyMutably([update], state);
    }
    function updateManyMutably(updates, state) {
      var appliedUpdates = false;
      var replacedIds = false;
      for (var update of updates) {
        var entity = state.entities[update.id];
        if (!entity) {
          continue;
        }
        appliedUpdates = true;
        Object.assign(entity, update.changes);
        var newId = selectId(entity);
        if (update.id !== newId) {
          replacedIds = true;
          delete state.entities[update.id];
          var oldIndex = state.ids.indexOf(update.id);
          state.ids[oldIndex] = newId;
          state.entities[newId] = entity;
        }
      }
      if (appliedUpdates) {
        mergeFunction(state, [], appliedUpdates, replacedIds);
      }
    }
    function upsertOneMutably(entity, state) {
      return upsertManyMutably([entity], state);
    }
    function upsertManyMutably(newEntities, state) {
      var _splitAddedUpdatedEnt3 = splitAddedUpdatedEntities(newEntities, selectId, state),
        _splitAddedUpdatedEnt4 = (0, _slicedToArray2.default)(_splitAddedUpdatedEnt3, 3),
        added = _splitAddedUpdatedEnt4[0],
        updated = _splitAddedUpdatedEnt4[1],
        existingIdsArray = _splitAddedUpdatedEnt4[2];
      if (updated.length) {
        updateManyMutably(updated, state);
      }
      if (added.length) {
        addManyMutably(added, state, existingIdsArray);
      }
    }
    function areArraysEqual(a, b) {
      if (a.length !== b.length) {
        return false;
      }
      for (var i = 0; i < a.length; i++) {
        if (a[i] === b[i]) {
          continue;
        }
        return false;
      }
      return true;
    }
    var mergeFunction = function mergeFunction(state, addedItems, appliedUpdates, replacedIds) {
      var currentEntities = getCurrent(state.entities);
      var currentIds = getCurrent(state.ids);
      var stateEntities = state.entities;
      var ids = currentIds;
      if (replacedIds) {
        ids = new Set(currentIds);
      }
      var sortedEntities = [];
      for (var id of ids) {
        var entity = currentEntities[id];
        if (entity) {
          sortedEntities.push(entity);
        }
      }
      var wasPreviouslyEmpty = sortedEntities.length === 0;
      for (var item of addedItems) {
        stateEntities[selectId(item)] = item;
        if (!wasPreviouslyEmpty) {
          insert(sortedEntities, item, comparer);
        }
      }
      if (wasPreviouslyEmpty) {
        sortedEntities = addedItems.slice().sort(comparer);
      } else if (appliedUpdates) {
        sortedEntities.sort(comparer);
      }
      var newSortedIds = sortedEntities.map(selectId);
      if (!areArraysEqual(currentIds, newSortedIds)) {
        state.ids = newSortedIds;
      }
    };
    return {
      removeOne: removeOne,
      removeMany: removeMany,
      removeAll: removeAll,
      addOne: createStateOperator(addOneMutably),
      updateOne: createStateOperator(updateOneMutably),
      upsertOne: createStateOperator(upsertOneMutably),
      setOne: createStateOperator(setOneMutably),
      setMany: createStateOperator(setManyMutably),
      setAll: createStateOperator(setAllMutably),
      addMany: createStateOperator(addManyMutably),
      updateMany: createStateOperator(updateManyMutably),
      upsertMany: createStateOperator(upsertManyMutably)
    };
  }

  // src/entities/create_adapter.ts
  function createEntityAdapter() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var _sortComparer$selectI = Object.assign({
        sortComparer: false,
        selectId: function selectId(instance) {
          return instance.id;
        }
      }, options),
      selectId = _sortComparer$selectI.selectId,
      sortComparer = _sortComparer$selectI.sortComparer;
    var stateAdapter = sortComparer ? createSortedStateAdapter(selectId, sortComparer) : createUnsortedStateAdapter(selectId);
    var stateFactory = createInitialStateFactory(stateAdapter);
    var selectorsFactory = createSelectorsFactory();
    return Object.assign({
      selectId: selectId,
      sortComparer: sortComparer
    }, stateFactory, selectorsFactory, stateAdapter);
  }

  // src/listenerMiddleware/index.ts

  // src/listenerMiddleware/exceptions.ts
  var task = "task";
  var listener = "listener";
  var completed = "completed";
  var cancelled = "cancelled";
  var taskCancelled = `task-${cancelled}`;
  var taskCompleted = `task-${completed}`;
  var listenerCancelled = `${listener}-${cancelled}`;
  var listenerCompleted = `${listener}-${completed}`;
  var TaskAbortError = exports.TaskAbortError = /*#__PURE__*/(0, _createClass2.default)(function TaskAbortError(code) {
    (0, _classCallCheck2.default)(this, TaskAbortError);
    this.name = "TaskAbortError";
    this.code = code;
    this.message = `${task} ${cancelled} (reason: ${code})`;
  });

  // src/listenerMiddleware/utils.ts
  var assertFunction = function assertFunction(func, expected) {
    if (typeof func !== "function") {
      throw new TypeError(formatProdErrorMessage(32));
    }
  };
  var noop2 = function noop2() {};
  var catchRejection = function catchRejection(promise) {
    var onError = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop2;
    promise.catch(onError);
    return promise;
  };
  var addAbortSignalListener = function addAbortSignalListener(abortSignal, callback) {
    abortSignal.addEventListener("abort", callback, {
      once: true
    });
    return function () {
      return abortSignal.removeEventListener("abort", callback);
    };
  };
  var abortControllerWithReason = function abortControllerWithReason(abortController, reason) {
    var signal = abortController.signal;
    if (signal.aborted) {
      return;
    }
    if (!("reason" in signal)) {
      Object.defineProperty(signal, "reason", {
        enumerable: true,
        value: reason,
        configurable: true,
        writable: true
      });
    }
    ;
    abortController.abort(reason);
  };

  // src/listenerMiddleware/task.ts
  var validateActive = function validateActive(signal) {
    if (signal.aborted) {
      var reason = signal.reason;
      throw new TaskAbortError(reason);
    }
  };
  function raceWithSignal(signal, promise) {
    var cleanup = noop2;
    return new Promise(function (resolve, reject) {
      var notifyRejection = function notifyRejection() {
        return reject(new TaskAbortError(signal.reason));
      };
      if (signal.aborted) {
        notifyRejection();
        return;
      }
      cleanup = addAbortSignalListener(signal, notifyRejection);
      promise.finally(function () {
        return cleanup();
      }).then(resolve, reject);
    }).finally(function () {
      cleanup = noop2;
    });
  }
  var runTask = /*#__PURE__*/function () {
    var _ref20 = (0, _asyncToGenerator2.default)(function* (task2, cleanUp) {
      try {
        yield Promise.resolve();
        var value = yield task2();
        return {
          status: "ok",
          value: value
        };
      } catch (error) {
        return {
          status: error instanceof TaskAbortError ? "cancelled" : "rejected",
          error: error
        };
      } finally {
        cleanUp == null ? undefined : cleanUp();
      }
    });
    return function runTask(_x, _x2) {
      return _ref20.apply(this, arguments);
    };
  }();
  var createPause = function createPause(signal) {
    return function (promise) {
      return catchRejection(raceWithSignal(signal, promise).then(function (output) {
        validateActive(signal);
        return output;
      }));
    };
  };
  var createDelay = function createDelay(signal) {
    var pause = createPause(signal);
    return function (timeoutMs) {
      return pause(new Promise(function (resolve) {
        return setTimeout(resolve, timeoutMs);
      }));
    };
  };

  // src/listenerMiddleware/index.ts
  var assign = Object.assign;
  var INTERNAL_NIL_TOKEN = {};
  var alm = "listenerMiddleware";
  var createFork = function createFork(parentAbortSignal, parentBlockingPromises) {
    var linkControllers = function linkControllers(controller) {
      return addAbortSignalListener(parentAbortSignal, function () {
        return abortControllerWithReason(controller, parentAbortSignal.reason);
      });
    };
    return function (taskExecutor, opts) {
      assertFunction(taskExecutor, "taskExecutor");
      var childAbortController = new AbortController();
      linkControllers(childAbortController);
      var result = runTask(/*#__PURE__*/(0, _asyncToGenerator2.default)(function* () {
        validateActive(parentAbortSignal);
        validateActive(childAbortController.signal);
        var result2 = yield taskExecutor({
          pause: createPause(childAbortController.signal),
          delay: createDelay(childAbortController.signal),
          signal: childAbortController.signal
        });
        validateActive(childAbortController.signal);
        return result2;
      }), function () {
        return abortControllerWithReason(childAbortController, taskCompleted);
      });
      if (opts != null && opts.autoJoin) {
        parentBlockingPromises.push(result.catch(noop2));
      }
      return {
        result: createPause(parentAbortSignal)(result),
        cancel: function cancel() {
          abortControllerWithReason(childAbortController, taskCancelled);
        }
      };
    };
  };
  var createTakePattern = function createTakePattern(startListening, signal) {
    var take = /*#__PURE__*/function () {
      var _ref14 = (0, _asyncToGenerator2.default)(function* (predicate, timeout) {
        validateActive(signal);
        var unsubscribe = function unsubscribe() {};
        var tuplePromise = new Promise(function (resolve, reject) {
          var stopListening = startListening({
            predicate: predicate,
            effect: function effect(action, listenerApi) {
              listenerApi.unsubscribe();
              resolve([action, listenerApi.getState(), listenerApi.getOriginalState()]);
            }
          });
          unsubscribe = function unsubscribe() {
            stopListening();
            reject();
          };
        });
        var promises = [tuplePromise];
        if (timeout != null) {
          promises.push(new Promise(function (resolve) {
            return setTimeout(resolve, timeout, null);
          }));
        }
        try {
          var output = yield raceWithSignal(signal, Promise.race(promises));
          validateActive(signal);
          return output;
        } finally {
          unsubscribe();
        }
      });
      return function take(_x3, _x4) {
        return _ref14.apply(this, arguments);
      };
    }();
    return function (predicate, timeout) {
      return catchRejection(take(predicate, timeout));
    };
  };
  var getListenerEntryPropsFrom = function getListenerEntryPropsFrom(options) {
    var type = options.type,
      actionCreator = options.actionCreator,
      matcher = options.matcher,
      predicate = options.predicate,
      effect = options.effect;
    if (type) {
      predicate = createAction(type).match;
    } else if (actionCreator) {
      type = actionCreator.type;
      predicate = actionCreator.match;
    } else if (matcher) {
      predicate = matcher;
    } else if (predicate) {} else {
      throw new Error(formatProdErrorMessage(21));
    }
    assertFunction(effect, "options.listener");
    return {
      predicate: predicate,
      type: type,
      effect: effect
    };
  };
  var createListenerEntry = /* @__PURE__ */assign(function (options) {
    var _getListenerEntryProp = getListenerEntryPropsFrom(options),
      type = _getListenerEntryProp.type,
      predicate = _getListenerEntryProp.predicate,
      effect = _getListenerEntryProp.effect;
    var entry = {
      id: nanoid(),
      effect: effect,
      type: type,
      predicate: predicate,
      pending: /* @__PURE__ */new Set(),
      unsubscribe: function unsubscribe() {
        throw new Error(formatProdErrorMessage(22));
      }
    };
    return entry;
  }, {
    withTypes: function withTypes() {
      return createListenerEntry;
    }
  });
  var findListenerEntry = function findListenerEntry(listenerMap, options) {
    var _getListenerEntryProp2 = getListenerEntryPropsFrom(options),
      type = _getListenerEntryProp2.type,
      effect = _getListenerEntryProp2.effect,
      predicate = _getListenerEntryProp2.predicate;
    return Array.from(listenerMap.values()).find(function (entry) {
      var matchPredicateOrType = typeof type === "string" ? entry.type === type : entry.predicate === predicate;
      return matchPredicateOrType && entry.effect === effect;
    });
  };
  var cancelActiveListeners = function cancelActiveListeners(entry) {
    entry.pending.forEach(function (controller) {
      abortControllerWithReason(controller, listenerCancelled);
    });
  };
  var createClearListenerMiddleware = function createClearListenerMiddleware(listenerMap) {
    return function () {
      listenerMap.forEach(cancelActiveListeners);
      listenerMap.clear();
    };
  };
  var safelyNotifyError = function safelyNotifyError(errorHandler, errorToNotify, errorInfo) {
    try {
      errorHandler(errorToNotify, errorInfo);
    } catch (errorHandlerError) {
      setTimeout(function () {
        throw errorHandlerError;
      }, 0);
    }
  };
  var addListener = exports.addListener = /* @__PURE__ */assign(/* @__PURE__ */createAction(`${alm}/add`), {
    withTypes: function withTypes() {
      return addListener;
    }
  });
  var clearAllListeners = exports.clearAllListeners = /* @__PURE__ */createAction(`${alm}/removeAll`);
  var removeListener = exports.removeListener = /* @__PURE__ */assign(/* @__PURE__ */createAction(`${alm}/remove`), {
    withTypes: function withTypes() {
      return removeListener;
    }
  });
  var defaultErrorHandler = function defaultErrorHandler() {
    var _console;
    for (var _len13 = arguments.length, args = new Array(_len13), _key5 = 0; _key5 < _len13; _key5++) {
      args[_key5] = arguments[_key5];
    }
    (_console = console).error.apply(_console, [`${alm}/error`].concat(args));
  };
  var createListenerMiddleware = exports.createListenerMiddleware = function createListenerMiddleware() {
    var middlewareOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var listenerMap = /* @__PURE__ */new Map();
    var extra = middlewareOptions.extra,
      _middlewareOptions$on = middlewareOptions.onError,
      onError = _middlewareOptions$on === undefined ? defaultErrorHandler : _middlewareOptions$on;
    assertFunction(onError, "onError");
    var insertEntry = function insertEntry(entry) {
      entry.unsubscribe = function () {
        return listenerMap.delete(entry.id);
      };
      listenerMap.set(entry.id, entry);
      return function (cancelOptions) {
        entry.unsubscribe();
        if (cancelOptions != null && cancelOptions.cancelActive) {
          cancelActiveListeners(entry);
        }
      };
    };
    var startListening = function startListening(options) {
      var _findListenerEntry;
      var entry = (_findListenerEntry = findListenerEntry(listenerMap, options)) != null ? _findListenerEntry : createListenerEntry(options);
      return insertEntry(entry);
    };
    assign(startListening, {
      withTypes: function withTypes() {
        return startListening;
      }
    });
    var stopListening = function stopListening(options) {
      var entry = findListenerEntry(listenerMap, options);
      if (entry) {
        entry.unsubscribe();
        if (options.cancelActive) {
          cancelActiveListeners(entry);
        }
      }
      return !!entry;
    };
    assign(stopListening, {
      withTypes: function withTypes() {
        return stopListening;
      }
    });
    var notifyListener = /*#__PURE__*/function () {
      var _ref21 = (0, _asyncToGenerator2.default)(function* (entry, action, api, getOriginalState) {
        var internalTaskController = new AbortController();
        var take = createTakePattern(startListening, internalTaskController.signal);
        var autoJoinPromises = [];
        try {
          entry.pending.add(internalTaskController);
          yield Promise.resolve(entry.effect(action,
          // Use assign() rather than ... to avoid extra helper functions added to bundle
          assign({}, api, {
            getOriginalState: getOriginalState,
            condition: function condition(predicate, timeout) {
              return take(predicate, timeout).then(Boolean);
            },
            take: take,
            delay: createDelay(internalTaskController.signal),
            pause: createPause(internalTaskController.signal),
            extra: extra,
            signal: internalTaskController.signal,
            fork: createFork(internalTaskController.signal, autoJoinPromises),
            unsubscribe: entry.unsubscribe,
            subscribe: function subscribe() {
              listenerMap.set(entry.id, entry);
            },
            cancelActiveListeners: function cancelActiveListeners() {
              entry.pending.forEach(function (controller, _, set) {
                if (controller !== internalTaskController) {
                  abortControllerWithReason(controller, listenerCancelled);
                  set.delete(controller);
                }
              });
            },
            cancel: function cancel() {
              abortControllerWithReason(internalTaskController, listenerCancelled);
              entry.pending.delete(internalTaskController);
            },
            throwIfCancelled: function throwIfCancelled() {
              validateActive(internalTaskController.signal);
            }
          })));
        } catch (listenerError) {
          if (!(listenerError instanceof TaskAbortError)) {
            safelyNotifyError(onError, listenerError, {
              raisedBy: "effect"
            });
          }
        } finally {
          yield Promise.all(autoJoinPromises);
          abortControllerWithReason(internalTaskController, listenerCompleted);
          entry.pending.delete(internalTaskController);
        }
      });
      return function notifyListener(_x5, _x6, _x7, _x8) {
        return _ref21.apply(this, arguments);
      };
    }();
    var clearListenerMiddleware = createClearListenerMiddleware(listenerMap);
    var middleware = function middleware(api) {
      return function (next) {
        return function (action) {
          if (!(0, _$$_REQUIRE(_dependencyMap[16]).isAction)(action)) {
            return next(action);
          }
          if (addListener.match(action)) {
            return startListening(action.payload);
          }
          if (clearAllListeners.match(action)) {
            clearListenerMiddleware();
            return;
          }
          if (removeListener.match(action)) {
            return stopListening(action.payload);
          }
          var originalState = api.getState();
          var getOriginalState = function getOriginalState() {
            if (originalState === INTERNAL_NIL_TOKEN) {
              throw new Error(formatProdErrorMessage(23));
            }
            return originalState;
          };
          var result;
          try {
            result = next(action);
            if (listenerMap.size > 0) {
              var currentState = api.getState();
              var listenerEntries = Array.from(listenerMap.values());
              for (var entry of listenerEntries) {
                var runListener = false;
                try {
                  runListener = entry.predicate(action, currentState, originalState);
                } catch (predicateError) {
                  runListener = false;
                  safelyNotifyError(onError, predicateError, {
                    raisedBy: "predicate"
                  });
                }
                if (!runListener) {
                  continue;
                }
                notifyListener(entry, action, api, getOriginalState);
              }
            }
          } finally {
            originalState = INTERNAL_NIL_TOKEN;
          }
          return result;
        };
      };
    };
    return {
      middleware: middleware,
      startListening: startListening,
      stopListening: stopListening,
      clearListeners: clearListenerMiddleware
    };
  };

  // src/dynamicMiddleware/index.ts

  var createMiddlewareEntry = function createMiddlewareEntry(middleware) {
    return {
      middleware: middleware,
      applied: /* @__PURE__ */new Map()
    };
  };
  var matchInstance = function matchInstance(instanceId) {
    return function (action) {
      var _action$meta2;
      return (action == null ? undefined : (_action$meta2 = action.meta) == null ? undefined : _action$meta2.instanceId) === instanceId;
    };
  };
  var createDynamicMiddleware = exports.createDynamicMiddleware = function createDynamicMiddleware() {
    var instanceId = nanoid();
    var middlewareMap = /* @__PURE__ */new Map();
    var withMiddleware = Object.assign(createAction("dynamicMiddleware/add", function () {
      for (var _len14 = arguments.length, middlewares = new Array(_len14), _key16 = 0; _key16 < _len14; _key16++) {
        middlewares[_key16] = arguments[_key16];
      }
      return {
        payload: middlewares,
        meta: {
          instanceId: instanceId
        }
      };
    }), {
      withTypes: function withTypes() {
        return withMiddleware;
      }
    });
    var addMiddleware = Object.assign(function addMiddleware2() {
      for (var _len15 = arguments.length, middlewares = new Array(_len15), _key17 = 0; _key17 < _len15; _key17++) {
        middlewares[_key17] = arguments[_key17];
      }
      middlewares.forEach(function (middleware2) {
        getOrInsertComputed(middlewareMap, middleware2, createMiddlewareEntry);
      });
    }, {
      withTypes: function withTypes() {
        return addMiddleware;
      }
    });
    var getFinalMiddleware = function getFinalMiddleware(api) {
      var appliedMiddleware = Array.from(middlewareMap.values()).map(function (entry) {
        return getOrInsertComputed(entry.applied, api, entry.middleware);
      });
      return _$$_REQUIRE(_dependencyMap[16]).compose.apply(undefined, (0, _toConsumableArray2.default)(appliedMiddleware));
    };
    var isWithMiddleware = isAllOf(withMiddleware, matchInstance(instanceId));
    var middleware = function middleware(api) {
      return function (next) {
        return function (action) {
          if (isWithMiddleware(action)) {
            addMiddleware.apply(undefined, (0, _toConsumableArray2.default)(action.payload));
            return api.dispatch;
          }
          return getFinalMiddleware(api)(next)(action);
        };
      };
    };
    return {
      middleware: middleware,
      addMiddleware: addMiddleware,
      withMiddleware: withMiddleware,
      instanceId: instanceId
    };
  };

  // src/combineSlices.ts

  var isSliceLike = function isSliceLike(maybeSliceLike) {
    return "reducerPath" in maybeSliceLike && typeof maybeSliceLike.reducerPath === "string";
  };
  var getReducers = function getReducers(slices) {
    return slices.flatMap(function (sliceOrMap) {
      return isSliceLike(sliceOrMap) ? [[sliceOrMap.reducerPath, sliceOrMap.reducer]] : Object.entries(sliceOrMap);
    });
  };
  var ORIGINAL_STATE = Symbol.for("rtk-state-proxy-original");
  var isStateProxy = function isStateProxy(value) {
    return !!value && !!value[ORIGINAL_STATE];
  };
  var stateProxyMap = /* @__PURE__ */new WeakMap();
  var createStateProxy = function createStateProxy(state, reducerMap) {
    return getOrInsertComputed(stateProxyMap, state, function () {
      return new Proxy(state, {
        get: function get(target, prop, receiver) {
          if (prop === ORIGINAL_STATE) return target;
          var result = Reflect.get(target, prop, receiver);
          if (typeof result === "undefined") {
            var reducer = reducerMap[prop.toString()];
            if (reducer) {
              var reducerResult = reducer(undefined, {
                type: nanoid()
              });
              if (typeof reducerResult === "undefined") {
                throw new Error(formatProdErrorMessage(24));
              }
              return reducerResult;
            }
          }
          return result;
        }
      });
    });
  };
  var original = function original(state) {
    if (!isStateProxy(state)) {
      throw new Error(formatProdErrorMessage(25));
    }
    return state[ORIGINAL_STATE];
  };
  var noopReducer = function noopReducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    return state;
  };
  function combineSlices() {
    for (var _len16 = arguments.length, slices = new Array(_len16), _key18 = 0; _key18 < _len16; _key18++) {
      slices[_key18] = arguments[_key18];
    }
    var reducerMap = Object.fromEntries(getReducers(slices));
    var getReducer = function getReducer() {
      return Object.keys(reducerMap).length ? (0, _$$_REQUIRE(_dependencyMap[16]).combineReducers)(reducerMap) : noopReducer;
    };
    var reducer = getReducer();
    function combinedReducer(state, action) {
      return reducer(state, action);
    }
    combinedReducer.withLazyLoadedSlices = function () {
      return combinedReducer;
    };
    var inject = function inject(slice) {
      var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var reducerPath = slice.reducerPath,
        reducerToInject = slice.reducer;
      var currentReducer = reducerMap[reducerPath];
      if (!config.overrideExisting && currentReducer && currentReducer !== reducerToInject) {
        if (typeof process !== "undefined" && false) {
          console.error(`called \`inject\` to override already-existing reducer ${reducerPath} without specifying \`overrideExisting: true\``);
        }
        return combinedReducer;
      }
      reducerMap[reducerPath] = reducerToInject;
      reducer = getReducer();
      return combinedReducer;
    };
    var selector = Object.assign(function makeSelector(selectorFn, selectState) {
      return function selector2(state) {
        for (var _len17 = arguments.length, args = new Array(_len17 > 1 ? _len17 - 1 : 0), _key19 = 1; _key19 < _len17; _key19++) {
          args[_key19 - 1] = arguments[_key19];
        }
        return selectorFn.apply(undefined, [createStateProxy(selectState ? selectState.apply(undefined, [state].concat(args)) : state, reducerMap)].concat(args));
      };
    }, {
      original: original
    });
    return Object.assign(combinedReducer, {
      inject: inject,
      selector: selector
    });
  }

  // src/formatProdErrorMessage.ts
  function formatProdErrorMessage(code) {
    return `Minified Redux Toolkit error #${code}; visit https://redux-toolkit.js.org/Errors?code=${code} for the full message or use the non-minified dev environment for full errors. `;
  }
},569,[1,570,571,203,363,99,38,162,6,12,13,23,25,26,28,160,572,573,574]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.applyPatches = exports.Immer = undefined;
  exports.castDraft = castDraft;
  exports.castImmutable = castImmutable;
  exports.createDraft = undefined;
  exports.current = current;
  exports.enableMapSet = enableMapSet;
  exports.enablePatches = enablePatches;
  exports.finishDraft = undefined;
  exports.freeze = freeze;
  exports.immerable = undefined;
  exports.isDraft = isDraft;
  exports.isDraftable = isDraftable;
  exports.nothing = undefined;
  exports.original = original;
  exports.setUseStrictShallowCopy = exports.setAutoFreeze = exports.produceWithPatches = exports.produce = undefined;
  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _wrapNativeSuper2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf3.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf3.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  // src/utils/env.ts
  var NOTHING = exports.nothing = Symbol.for("immer-nothing");
  var DRAFTABLE = exports.immerable = Symbol.for("immer-draftable");
  var DRAFT_STATE = Symbol.for("immer-state");

  // src/utils/errors.ts
  var errors = [];
  function die(error) {
    throw new Error(`[Immer] minified error nr: ${error}. Full error at: https://bit.ly/3cXEKWf`);
  }

  // src/utils/common.ts
  var _getPrototypeOf = Object.getPrototypeOf;
  function isDraft(value) {
    return !!value && !!value[DRAFT_STATE];
  }
  function isDraftable(value) {
    var _value$constructor;
    if (!value) return false;
    return isPlainObject(value) || Array.isArray(value) || !!value[DRAFTABLE] || !!((_value$constructor = value.constructor) != null && _value$constructor[DRAFTABLE]) || isMap(value) || isSet(value);
  }
  var objectCtorString = Object.prototype.constructor.toString();
  function isPlainObject(value) {
    if (!value || typeof value !== "object") return false;
    var proto = _getPrototypeOf(value);
    if (proto === null) {
      return true;
    }
    var Ctor = Object.hasOwnProperty.call(proto, "constructor") && proto.constructor;
    if (Ctor === Object) return true;
    return typeof Ctor == "function" && Function.toString.call(Ctor) === objectCtorString;
  }
  function original(value) {
    if (!isDraft(value)) die(15, value);
    return value[DRAFT_STATE].base_;
  }
  function each(obj, iter) {
    if (getArchtype(obj) === 0 /* Object */) {
      Reflect.ownKeys(obj).forEach(function (key) {
        iter(key, obj[key], obj);
      });
    } else {
      obj.forEach(function (entry, index) {
        return iter(index, entry, obj);
      });
    }
  }
  function getArchtype(thing) {
    var state = thing[DRAFT_STATE];
    return state ? state.type_ : Array.isArray(thing) ? 1 /* Array */ : isMap(thing) ? 2 /* Map */ : isSet(thing) ? 3 /* Set */ : 0 /* Object */;
  }
  function has(thing, prop) {
    return getArchtype(thing) === 2 /* Map */ ? thing.has(prop) : Object.prototype.hasOwnProperty.call(thing, prop);
  }
  function get(thing, prop) {
    return getArchtype(thing) === 2 /* Map */ ? thing.get(prop) : thing[prop];
  }
  function set(thing, propOrOldValue, value) {
    var t = getArchtype(thing);
    if (t === 2 /* Map */) thing.set(propOrOldValue, value);else if (t === 3 /* Set */) {
      thing.add(value);
    } else thing[propOrOldValue] = value;
  }
  function is(x, y) {
    if (x === y) {
      return x !== 0 || 1 / x === 1 / y;
    } else {
      return x !== x && y !== y;
    }
  }
  function isMap(target) {
    return target instanceof Map;
  }
  function isSet(target) {
    return target instanceof Set;
  }
  function latest(state) {
    return state.copy_ || state.base_;
  }
  function shallowCopy(base, strict) {
    if (isMap(base)) {
      return new Map(base);
    }
    if (isSet(base)) {
      return new Set(base);
    }
    if (Array.isArray(base)) return Array.prototype.slice.call(base);
    var isPlain = isPlainObject(base);
    if (strict === true || strict === "class_only" && !isPlain) {
      var descriptors = Object.getOwnPropertyDescriptors(base);
      delete descriptors[DRAFT_STATE];
      var keys = Reflect.ownKeys(descriptors);
      for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        var desc = descriptors[key];
        if (desc.writable === false) {
          desc.writable = true;
          desc.configurable = true;
        }
        if (desc.get || desc.set) descriptors[key] = {
          configurable: true,
          writable: true,
          // could live with !!desc.set as well here...
          enumerable: desc.enumerable,
          value: base[key]
        };
      }
      return Object.create(_getPrototypeOf(base), descriptors);
    } else {
      var proto = _getPrototypeOf(base);
      if (proto !== null && isPlain) {
        return Object.assign({}, base);
      }
      var obj = Object.create(proto);
      return Object.assign(obj, base);
    }
  }
  function freeze(obj) {
    var deep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    if (isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return obj;
    if (getArchtype(obj) > 1) {
      obj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections;
    }
    Object.freeze(obj);
    if (deep) Object.entries(obj).forEach(function (_ref) {
      var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
        key = _ref2[0],
        value = _ref2[1];
      return freeze(value, true);
    });
    return obj;
  }
  function dontMutateFrozenCollections() {
    die(2);
  }
  function isFrozen(obj) {
    return Object.isFrozen(obj);
  }

  // src/utils/plugins.ts
  var plugins = {};
  function getPlugin(pluginKey) {
    var plugin = plugins[pluginKey];
    if (!plugin) {
      die(0, pluginKey);
    }
    return plugin;
  }
  function loadPlugin(pluginKey, implementation) {
    if (!plugins[pluginKey]) plugins[pluginKey] = implementation;
  }

  // src/core/scope.ts
  var currentScope;
  function getCurrentScope() {
    return currentScope;
  }
  function createScope(parent_, immer_) {
    return {
      drafts_: [],
      parent_: parent_,
      immer_: immer_,
      // Whenever the modified draft contains a draft from another scope, we
      // need to prevent auto-freezing so the unowned draft can be finalized.
      canAutoFreeze_: true,
      unfinalizedDrafts_: 0
    };
  }
  function usePatchesInScope(scope, patchListener) {
    if (patchListener) {
      getPlugin("Patches");
      scope.patches_ = [];
      scope.inversePatches_ = [];
      scope.patchListener_ = patchListener;
    }
  }
  function revokeScope(scope) {
    leaveScope(scope);
    scope.drafts_.forEach(revokeDraft);
    scope.drafts_ = null;
  }
  function leaveScope(scope) {
    if (scope === currentScope) {
      currentScope = scope.parent_;
    }
  }
  function enterScope(immer2) {
    return currentScope = createScope(currentScope, immer2);
  }
  function revokeDraft(draft) {
    var state = draft[DRAFT_STATE];
    if (state.type_ === 0 /* Object */ || state.type_ === 1 /* Array */) state.revoke_();else state.revoked_ = true;
  }

  // src/core/finalize.ts
  function processResult(result, scope) {
    scope.unfinalizedDrafts_ = scope.drafts_.length;
    var baseDraft = scope.drafts_[0];
    var isReplaced = result !== undefined && result !== baseDraft;
    if (isReplaced) {
      if (baseDraft[DRAFT_STATE].modified_) {
        revokeScope(scope);
        die(4);
      }
      if (isDraftable(result)) {
        result = finalize(scope, result);
        if (!scope.parent_) maybeFreeze(scope, result);
      }
      if (scope.patches_) {
        getPlugin("Patches").generateReplacementPatches_(baseDraft[DRAFT_STATE].base_, result, scope.patches_, scope.inversePatches_);
      }
    } else {
      result = finalize(scope, baseDraft, []);
    }
    revokeScope(scope);
    if (scope.patches_) {
      scope.patchListener_(scope.patches_, scope.inversePatches_);
    }
    return result !== NOTHING ? result : undefined;
  }
  function finalize(rootScope, value, path) {
    if (isFrozen(value)) return value;
    var state = value[DRAFT_STATE];
    if (!state) {
      each(value, function (key, childValue) {
        return finalizeProperty(rootScope, state, value, key, childValue, path);
      });
      return value;
    }
    if (state.scope_ !== rootScope) return value;
    if (!state.modified_) {
      maybeFreeze(rootScope, state.base_, true);
      return state.base_;
    }
    if (!state.finalized_) {
      state.finalized_ = true;
      state.scope_.unfinalizedDrafts_--;
      var result = state.copy_;
      var resultEach = result;
      var isSet2 = false;
      if (state.type_ === 3 /* Set */) {
        resultEach = new Set(result);
        result.clear();
        isSet2 = true;
      }
      each(resultEach, function (key, childValue) {
        return finalizeProperty(rootScope, state, result, key, childValue, path, isSet2);
      });
      maybeFreeze(rootScope, result, false);
      if (path && rootScope.patches_) {
        getPlugin("Patches").generatePatches_(state, path, rootScope.patches_, rootScope.inversePatches_);
      }
    }
    return state.copy_;
  }
  function finalizeProperty(rootScope, parentState, targetObject, prop, childValue, rootPath, targetIsSet) {
    if (isDraft(childValue)) {
      var path = rootPath && parentState && parentState.type_ !== 3 /* Set */ &&
      // Set objects are atomic since they have no keys.
      !has(parentState.assigned_, prop) ? rootPath.concat(prop) : undefined;
      var res = finalize(rootScope, childValue, path);
      set(targetObject, prop, res);
      if (isDraft(res)) {
        rootScope.canAutoFreeze_ = false;
      } else return;
    } else if (targetIsSet) {
      targetObject.add(childValue);
    }
    if (isDraftable(childValue) && !isFrozen(childValue)) {
      if (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {
        return;
      }
      finalize(rootScope, childValue);
      if ((!parentState || !parentState.scope_.parent_) && typeof prop !== "symbol" && Object.prototype.propertyIsEnumerable.call(targetObject, prop)) maybeFreeze(rootScope, childValue);
    }
  }
  function maybeFreeze(scope, value) {
    var deep = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    if (!scope.parent_ && scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {
      freeze(value, deep);
    }
  }

  // src/core/proxy.ts
  function createProxyProxy(base, parent) {
    var isArray = Array.isArray(base);
    var state = {
      type_: isArray ? 1 /* Array */ : 0 /* Object */,

      // Track which produce call this is associated with.
      scope_: parent ? parent.scope_ : getCurrentScope(),
      // True for both shallow and deep changes.
      modified_: false,
      // Used during finalization.
      finalized_: false,
      // Track which properties have been assigned (true) or deleted (false).
      assigned_: {},
      // The parent draft state.
      parent_: parent,
      // The base state.
      base_: base,
      // The base proxy.
      draft_: null,
      // set below
      // The base copy with any updated values.
      copy_: null,
      // Called by the `produce` function.
      revoke_: null,
      isManual_: false
    };
    var target = state;
    var traps = objectTraps;
    if (isArray) {
      target = [state];
      traps = arrayTraps;
    }
    var _Proxy$revocable = Proxy.revocable(target, traps),
      revoke = _Proxy$revocable.revoke,
      proxy = _Proxy$revocable.proxy;
    state.draft_ = proxy;
    state.revoke_ = revoke;
    return proxy;
  }
  var objectTraps = {
    get: function get(state, prop) {
      if (prop === DRAFT_STATE) return state;
      var source = latest(state);
      if (!has(source, prop)) {
        return readPropFromProto(state, source, prop);
      }
      var value = source[prop];
      if (state.finalized_ || !isDraftable(value)) {
        return value;
      }
      if (value === peek(state.base_, prop)) {
        prepareCopy(state);
        return state.copy_[prop] = createProxy(value, state);
      }
      return value;
    },
    has: function has(state, prop) {
      return prop in latest(state);
    },
    ownKeys: function ownKeys(state) {
      return Reflect.ownKeys(latest(state));
    },
    set: function set(state, prop, value) {
      var desc = getDescriptorFromProto(latest(state), prop);
      if (desc != null && desc.set) {
        desc.set.call(state.draft_, value);
        return true;
      }
      if (!state.modified_) {
        var current2 = peek(latest(state), prop);
        var currentState = current2 == null ? undefined : current2[DRAFT_STATE];
        if (currentState && currentState.base_ === value) {
          state.copy_[prop] = value;
          state.assigned_[prop] = false;
          return true;
        }
        if (is(value, current2) && (value !== undefined || has(state.base_, prop))) return true;
        prepareCopy(state);
        markChanged(state);
      }
      if (state.copy_[prop] === value && (
      // special case: handle new props with value 'undefined'
      value !== undefined || prop in state.copy_) ||
      // special case: NaN
      Number.isNaN(value) && Number.isNaN(state.copy_[prop])) return true;
      state.copy_[prop] = value;
      state.assigned_[prop] = true;
      return true;
    },
    deleteProperty: function deleteProperty(state, prop) {
      if (peek(state.base_, prop) !== undefined || prop in state.base_) {
        state.assigned_[prop] = false;
        prepareCopy(state);
        markChanged(state);
      } else {
        delete state.assigned_[prop];
      }
      if (state.copy_) {
        delete state.copy_[prop];
      }
      return true;
    },
    // Note: We never coerce `desc.value` into an Immer draft, because we can't make
    // the same guarantee in ES5 mode.
    getOwnPropertyDescriptor: function getOwnPropertyDescriptor(state, prop) {
      var owner = latest(state);
      var desc = Reflect.getOwnPropertyDescriptor(owner, prop);
      if (!desc) return desc;
      return {
        writable: true,
        configurable: state.type_ !== 1 /* Array */ || prop !== "length",
        enumerable: desc.enumerable,
        value: owner[prop]
      };
    },
    defineProperty: function defineProperty() {
      die(11);
    },
    getPrototypeOf: function getPrototypeOf(state) {
      return _getPrototypeOf(state.base_);
    },
    setPrototypeOf: function setPrototypeOf() {
      die(12);
    }
  };
  var arrayTraps = {};
  each(objectTraps, function (key, fn) {
    arrayTraps[key] = function () {
      arguments[0] = arguments[0][0];
      return fn.apply(this, arguments);
    };
  });
  arrayTraps.deleteProperty = function (state, prop) {
    return arrayTraps.set.call(this, state, prop, undefined);
  };
  arrayTraps.set = function (state, prop, value) {
    return objectTraps.set.call(this, state[0], prop, value, state[0]);
  };
  function peek(draft, prop) {
    var state = draft[DRAFT_STATE];
    var source = state ? latest(state) : draft;
    return source[prop];
  }
  function readPropFromProto(state, source, prop) {
    var _desc$get;
    var desc = getDescriptorFromProto(source, prop);
    return desc ? `value` in desc ? desc.value : // This is a very special case, if the prop is a getter defined by the
    // prototype, we should invoke it with the draft as context!
    (_desc$get = desc.get) == null ? undefined : _desc$get.call(state.draft_) : undefined;
  }
  function getDescriptorFromProto(source, prop) {
    if (!(prop in source)) return undefined;
    var proto = _getPrototypeOf(source);
    while (proto) {
      var desc = Object.getOwnPropertyDescriptor(proto, prop);
      if (desc) return desc;
      proto = _getPrototypeOf(proto);
    }
    return undefined;
  }
  function markChanged(state) {
    if (!state.modified_) {
      state.modified_ = true;
      if (state.parent_) {
        markChanged(state.parent_);
      }
    }
  }
  function prepareCopy(state) {
    if (!state.copy_) {
      state.copy_ = shallowCopy(state.base_, state.scope_.immer_.useStrictShallowCopy_);
    }
  }

  // src/core/immerClass.ts
  var Immer2 = exports.Immer = /*#__PURE__*/function () {
    function Immer2(config) {
      var _this = this;
      (0, _classCallCheck2.default)(this, Immer2);
      this.autoFreeze_ = true;
      this.useStrictShallowCopy_ = false;
      /**
       * The `produce` function takes a value and a "recipe function" (whose
       * return value often depends on the base state). The recipe function is
       * free to mutate its first argument however it wants. All mutations are
       * only ever applied to a __copy__ of the base state.
       *
       * Pass only a function to create a "curried producer" which relieves you
       * from passing the recipe function every time.
       *
       * Only plain objects and arrays are made mutable. All other objects are
       * considered uncopyable.
       *
       * Note: This function is __bound__ to its `Immer` instance.
       *
       * @param {any} base - the initial state
       * @param {Function} recipe - function that receives a proxy of the base state as first argument and which can be freely modified
       * @param {Function} patchListener - optional function that will be called with all the patches produced here
       * @returns {any} a new state, or the initial state if nothing was modified
       */
      this.produce = function (base, recipe, patchListener) {
        if (typeof base === "function" && typeof recipe !== "function") {
          var defaultBase = recipe;
          recipe = base;
          var self = _this;
          return function curriedProduce() {
            var _this2 = this;
            var base2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultBase;
            for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
              args[_key2 - 1] = arguments[_key2];
            }
            return self.produce(base2, function (draft) {
              var _recipe;
              return (_recipe = recipe).call.apply(_recipe, [_this2, draft].concat(args));
            });
          };
        }
        if (typeof recipe !== "function") die(6);
        if (patchListener !== undefined && typeof patchListener !== "function") die(7);
        var result;
        if (isDraftable(base)) {
          var scope = enterScope(_this);
          var proxy = createProxy(base, undefined);
          var hasError = true;
          try {
            result = recipe(proxy);
            hasError = false;
          } finally {
            if (hasError) revokeScope(scope);else leaveScope(scope);
          }
          usePatchesInScope(scope, patchListener);
          return processResult(result, scope);
        } else if (!base || typeof base !== "object") {
          result = recipe(base);
          if (result === undefined) result = base;
          if (result === NOTHING) result = undefined;
          if (_this.autoFreeze_) freeze(result, true);
          if (patchListener) {
            var p = [];
            var ip = [];
            getPlugin("Patches").generateReplacementPatches_(base, result, p, ip);
            patchListener(p, ip);
          }
          return result;
        } else die(1, base);
      };
      this.produceWithPatches = function (base, recipe) {
        if (typeof base === "function") {
          return function (state) {
            for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
              args[_key3 - 1] = arguments[_key3];
            }
            return _this.produceWithPatches(state, function (draft) {
              return base.apply(undefined, [draft].concat(args));
            });
          };
        }
        var patches, inversePatches;
        var result = _this.produce(base, recipe, function (p, ip) {
          patches = p;
          inversePatches = ip;
        });
        return [result, patches, inversePatches];
      };
      if (typeof (config == null ? undefined : config.autoFreeze) === "boolean") this.setAutoFreeze(config.autoFreeze);
      if (typeof (config == null ? undefined : config.useStrictShallowCopy) === "boolean") this.setUseStrictShallowCopy(config.useStrictShallowCopy);
    }
    return (0, _createClass2.default)(Immer2, [{
      key: "createDraft",
      value: function createDraft(base) {
        if (!isDraftable(base)) die(8);
        if (isDraft(base)) base = current(base);
        var scope = enterScope(this);
        var proxy = createProxy(base, undefined);
        proxy[DRAFT_STATE].isManual_ = true;
        leaveScope(scope);
        return proxy;
      }
    }, {
      key: "finishDraft",
      value: function finishDraft(draft, patchListener) {
        var state = draft && draft[DRAFT_STATE];
        if (!state || !state.isManual_) die(9);
        var scope = state.scope_;
        usePatchesInScope(scope, patchListener);
        return processResult(undefined, scope);
      }
      /**
       * Pass true to automatically freeze all copies created by Immer.
       *
       * By default, auto-freezing is enabled.
       */
    }, {
      key: "setAutoFreeze",
      value: function setAutoFreeze(value) {
        this.autoFreeze_ = value;
      }
      /**
       * Pass true to enable strict shallow copy.
       *
       * By default, immer does not copy the object descriptors such as getter, setter and non-enumrable properties.
       */
    }, {
      key: "setUseStrictShallowCopy",
      value: function setUseStrictShallowCopy(value) {
        this.useStrictShallowCopy_ = value;
      }
    }, {
      key: "applyPatches",
      value: function applyPatches(base, patches) {
        var i;
        for (i = patches.length - 1; i >= 0; i--) {
          var patch = patches[i];
          if (patch.path.length === 0 && patch.op === "replace") {
            base = patch.value;
            break;
          }
        }
        if (i > -1) {
          patches = patches.slice(i + 1);
        }
        var applyPatchesImpl = getPlugin("Patches").applyPatches_;
        if (isDraft(base)) {
          return applyPatchesImpl(base, patches);
        }
        return this.produce(base, function (draft) {
          return applyPatchesImpl(draft, patches);
        });
      }
    }]);
  }();
  function createProxy(value, parent) {
    var draft = isMap(value) ? getPlugin("MapSet").proxyMap_(value, parent) : isSet(value) ? getPlugin("MapSet").proxySet_(value, parent) : createProxyProxy(value, parent);
    var scope = parent ? parent.scope_ : getCurrentScope();
    scope.drafts_.push(draft);
    return draft;
  }

  // src/core/current.ts
  function current(value) {
    if (!isDraft(value)) die(10, value);
    return currentImpl(value);
  }
  function currentImpl(value) {
    if (!isDraftable(value) || isFrozen(value)) return value;
    var state = value[DRAFT_STATE];
    var copy;
    if (state) {
      if (!state.modified_) return state.base_;
      state.finalized_ = true;
      copy = shallowCopy(value, state.scope_.immer_.useStrictShallowCopy_);
    } else {
      copy = shallowCopy(value, true);
    }
    each(copy, function (key, childValue) {
      set(copy, key, currentImpl(childValue));
    });
    if (state) {
      state.finalized_ = false;
    }
    return copy;
  }

  // src/plugins/patches.ts
  function enablePatches() {
    var errorOffset = 16;
    var REPLACE = "replace";
    var ADD = "add";
    var REMOVE = "remove";
    function generatePatches_(state, basePath, patches, inversePatches) {
      switch (state.type_) {
        case 0 /* Object */:
        case 2 /* Map */:
          return generatePatchesFromAssigned(state, basePath, patches, inversePatches);
        case 1 /* Array */:
          return generateArrayPatches(state, basePath, patches, inversePatches);
        case 3 /* Set */:
          return generateSetPatches(state, basePath, patches, inversePatches);
      }
    }
    function generateArrayPatches(state, basePath, patches, inversePatches) {
      var base_ = state.base_,
        assigned_ = state.assigned_;
      var copy_ = state.copy_;
      if (copy_.length < base_.length) {
        ;
        var _ref3 = [copy_, base_];
        base_ = _ref3[0];
        copy_ = _ref3[1];
        var _ref4 = [inversePatches, patches];
        patches = _ref4[0];
        inversePatches = _ref4[1];
      }
      for (var i = 0; i < base_.length; i++) {
        if (assigned_[i] && copy_[i] !== base_[i]) {
          var path = basePath.concat([i]);
          patches.push({
            op: REPLACE,
            path: path,
            // Need to maybe clone it, as it can in fact be the original value
            // due to the base/copy inversion at the start of this function
            value: clonePatchValueIfNeeded(copy_[i])
          });
          inversePatches.push({
            op: REPLACE,
            path: path,
            value: clonePatchValueIfNeeded(base_[i])
          });
        }
      }
      for (var _i2 = base_.length; _i2 < copy_.length; _i2++) {
        var _path = basePath.concat([_i2]);
        patches.push({
          op: ADD,
          path: _path,
          // Need to maybe clone it, as it can in fact be the original value
          // due to the base/copy inversion at the start of this function
          value: clonePatchValueIfNeeded(copy_[_i2])
        });
      }
      for (var _i4 = copy_.length - 1; base_.length <= _i4; --_i4) {
        var _path2 = basePath.concat([_i4]);
        inversePatches.push({
          op: REMOVE,
          path: _path2
        });
      }
    }
    function generatePatchesFromAssigned(state, basePath, patches, inversePatches) {
      var base_ = state.base_,
        copy_ = state.copy_;
      each(state.assigned_, function (key, assignedValue) {
        var origValue = get(base_, key);
        var value = get(copy_, key);
        var op = !assignedValue ? REMOVE : has(base_, key) ? REPLACE : ADD;
        if (origValue === value && op === REPLACE) return;
        var path = basePath.concat(key);
        patches.push(op === REMOVE ? {
          op: op,
          path: path
        } : {
          op: op,
          path: path,
          value: value
        });
        inversePatches.push(op === ADD ? {
          op: REMOVE,
          path: path
        } : op === REMOVE ? {
          op: ADD,
          path: path,
          value: clonePatchValueIfNeeded(origValue)
        } : {
          op: REPLACE,
          path: path,
          value: clonePatchValueIfNeeded(origValue)
        });
      });
    }
    function generateSetPatches(state, basePath, patches, inversePatches) {
      var base_ = state.base_,
        copy_ = state.copy_;
      var i = 0;
      base_.forEach(function (value) {
        if (!copy_.has(value)) {
          var path = basePath.concat([i]);
          patches.push({
            op: REMOVE,
            path: path,
            value: value
          });
          inversePatches.unshift({
            op: ADD,
            path: path,
            value: value
          });
        }
        i++;
      });
      i = 0;
      copy_.forEach(function (value) {
        if (!base_.has(value)) {
          var path = basePath.concat([i]);
          patches.push({
            op: ADD,
            path: path,
            value: value
          });
          inversePatches.unshift({
            op: REMOVE,
            path: path,
            value: value
          });
        }
        i++;
      });
    }
    function generateReplacementPatches_(baseValue, replacement, patches, inversePatches) {
      patches.push({
        op: REPLACE,
        path: [],
        value: replacement === NOTHING ? undefined : replacement
      });
      inversePatches.push({
        op: REPLACE,
        path: [],
        value: baseValue
      });
    }
    function applyPatches_(draft, patches) {
      patches.forEach(function (patch) {
        var path = patch.path,
          op = patch.op;
        var base = draft;
        for (var i = 0; i < path.length - 1; i++) {
          var parentType = getArchtype(base);
          var p = path[i];
          if (typeof p !== "string" && typeof p !== "number") {
            p = "" + p;
          }
          if ((parentType === 0 /* Object */ || parentType === 1 /* Array */) && (p === "__proto__" || p === "constructor")) die(19);
          if (typeof base === "function" && p === "prototype") die(19);
          base = get(base, p);
          if (typeof base !== "object") die(18, path.join("/"));
        }
        var type = getArchtype(base);
        var value = deepClonePatchValue(patch.value);
        var key = path[path.length - 1];
        switch (op) {
          case REPLACE:
            switch (type) {
              case 2 /* Map */:
                return base.set(key, value);
              case 3 /* Set */:
                die(errorOffset);
              default:
                return base[key] = value;
            }
          case ADD:
            switch (type) {
              case 1 /* Array */:
                return key === "-" ? base.push(value) : base.splice(key, 0, value);
              case 2 /* Map */:
                return base.set(key, value);
              case 3 /* Set */:
                return base.add(value);
              default:
                return base[key] = value;
            }
          case REMOVE:
            switch (type) {
              case 1 /* Array */:
                return base.splice(key, 1);
              case 2 /* Map */:
                return base.delete(key);
              case 3 /* Set */:
                return base.delete(patch.value);
              default:
                return delete base[key];
            }
          default:
            die(17, op);
        }
      });
      return draft;
    }
    function deepClonePatchValue(obj) {
      if (!isDraftable(obj)) return obj;
      if (Array.isArray(obj)) return obj.map(deepClonePatchValue);
      if (isMap(obj)) return new Map(Array.from(obj.entries()).map(function (_ref5) {
        var _ref6 = (0, _slicedToArray2.default)(_ref5, 2),
          k = _ref6[0],
          v = _ref6[1];
        return [k, deepClonePatchValue(v)];
      }));
      if (isSet(obj)) return new Set(Array.from(obj).map(deepClonePatchValue));
      var cloned = Object.create(_getPrototypeOf(obj));
      for (var key in obj) cloned[key] = deepClonePatchValue(obj[key]);
      if (has(obj, DRAFTABLE)) cloned[DRAFTABLE] = obj[DRAFTABLE];
      return cloned;
    }
    function clonePatchValueIfNeeded(obj) {
      if (isDraft(obj)) {
        return deepClonePatchValue(obj);
      } else return obj;
    }
    loadPlugin("Patches", {
      applyPatches_: applyPatches_,
      generatePatches_: generatePatches_,
      generateReplacementPatches_: generateReplacementPatches_
    });
  }

  // src/plugins/mapset.ts
  function enableMapSet() {
    var DraftMap = /*#__PURE__*/function (_Map, _ref7) {
      function DraftMap(target, parent) {
        var _this3;
        (0, _classCallCheck2.default)(this, DraftMap);
        _this3 = _callSuper(this, DraftMap);
        _this3[DRAFT_STATE] = {
          type_: 2 /* Map */,
          parent_: parent,
          scope_: parent ? parent.scope_ : getCurrentScope(),
          modified_: false,
          finalized_: false,
          copy_: undefined,
          assigned_: undefined,
          base_: target,
          draft_: _this3,
          isManual_: false,
          revoked_: false
        };
        return _this3;
      }
      (0, _inherits2.default)(DraftMap, _Map);
      return (0, _createClass2.default)(DraftMap, [{
        key: "size",
        get: function get() {
          return latest(this[DRAFT_STATE]).size;
        }
      }, {
        key: "has",
        value: function has(key) {
          return latest(this[DRAFT_STATE]).has(key);
        }
      }, {
        key: "set",
        value: function set(key, value) {
          var state = this[DRAFT_STATE];
          assertUnrevoked(state);
          if (!latest(state).has(key) || latest(state).get(key) !== value) {
            prepareMapCopy(state);
            markChanged(state);
            state.assigned_.set(key, true);
            state.copy_.set(key, value);
            state.assigned_.set(key, true);
          }
          return this;
        }
      }, {
        key: "delete",
        value: function _delete(key) {
          if (!this.has(key)) {
            return false;
          }
          var state = this[DRAFT_STATE];
          assertUnrevoked(state);
          prepareMapCopy(state);
          markChanged(state);
          if (state.base_.has(key)) {
            state.assigned_.set(key, false);
          } else {
            state.assigned_.delete(key);
          }
          state.copy_.delete(key);
          return true;
        }
      }, {
        key: "clear",
        value: function clear() {
          var state = this[DRAFT_STATE];
          assertUnrevoked(state);
          if (latest(state).size) {
            prepareMapCopy(state);
            markChanged(state);
            state.assigned_ = /* @__PURE__ */new Map();
            each(state.base_, function (key) {
              state.assigned_.set(key, false);
            });
            state.copy_.clear();
          }
        }
      }, {
        key: "forEach",
        value: function forEach(cb, thisArg) {
          var _this4 = this;
          var state = this[DRAFT_STATE];
          latest(state).forEach(function (_value, key, _map) {
            cb.call(thisArg, _this4.get(key), key, _this4);
          });
        }
      }, {
        key: "get",
        value: function get(key) {
          var state = this[DRAFT_STATE];
          assertUnrevoked(state);
          var value = latest(state).get(key);
          if (state.finalized_ || !isDraftable(value)) {
            return value;
          }
          if (value !== state.base_.get(key)) {
            return value;
          }
          var draft = createProxy(value, state);
          prepareMapCopy(state);
          state.copy_.set(key, draft);
          return draft;
        }
      }, {
        key: "keys",
        value: function keys() {
          return latest(this[DRAFT_STATE]).keys();
        }
      }, {
        key: "values",
        value: function values() {
          var _this5 = this;
          var iterator = this.keys();
          return (0, _defineProperty2.default)((0, _defineProperty2.default)({}, Symbol.iterator, function () {
            return _this5.values();
          }), "next", function next() {
            var r = iterator.next();
            if (r.done) return r;
            var value = _this5.get(r.value);
            return {
              done: false,
              value: value
            };
          });
        }
      }, {
        key: "entries",
        value: function entries() {
          var _this6 = this;
          var iterator = this.keys();
          return (0, _defineProperty2.default)((0, _defineProperty2.default)({}, Symbol.iterator, function () {
            return _this6.entries();
          }), "next", function next() {
            var r = iterator.next();
            if (r.done) return r;
            var value = _this6.get(r.value);
            return {
              done: false,
              value: [r.value, value]
            };
          });
        }
      }, {
        key: _ref7,
        value: function value() {
          return this.entries();
        }
      }]);
    }(/*#__PURE__*/(0, _wrapNativeSuper2.default)(Map), (DRAFT_STATE, Symbol.iterator));
    function proxyMap_(target, parent) {
      return new DraftMap(target, parent);
    }
    function prepareMapCopy(state) {
      if (!state.copy_) {
        state.assigned_ = /* @__PURE__ */new Map();
        state.copy_ = new Map(state.base_);
      }
    }
    var DraftSet = /*#__PURE__*/function (_Set, _ref10) {
      function DraftSet(target, parent) {
        var _this7;
        (0, _classCallCheck2.default)(this, DraftSet);
        _this7 = _callSuper(this, DraftSet);
        _this7[DRAFT_STATE] = {
          type_: 3 /* Set */,
          parent_: parent,
          scope_: parent ? parent.scope_ : getCurrentScope(),
          modified_: false,
          finalized_: false,
          copy_: undefined,
          base_: target,
          draft_: _this7,
          drafts_: /* @__PURE__ */new Map(),
          revoked_: false,
          isManual_: false
        };
        return _this7;
      }
      (0, _inherits2.default)(DraftSet, _Set);
      return (0, _createClass2.default)(DraftSet, [{
        key: "size",
        get: function get() {
          return latest(this[DRAFT_STATE]).size;
        }
      }, {
        key: "has",
        value: function has(value) {
          var state = this[DRAFT_STATE];
          assertUnrevoked(state);
          if (!state.copy_) {
            return state.base_.has(value);
          }
          if (state.copy_.has(value)) return true;
          if (state.drafts_.has(value) && state.copy_.has(state.drafts_.get(value))) return true;
          return false;
        }
      }, {
        key: "add",
        value: function add(value) {
          var state = this[DRAFT_STATE];
          assertUnrevoked(state);
          if (!this.has(value)) {
            prepareSetCopy(state);
            markChanged(state);
            state.copy_.add(value);
          }
          return this;
        }
      }, {
        key: "delete",
        value: function _delete(value) {
          if (!this.has(value)) {
            return false;
          }
          var state = this[DRAFT_STATE];
          assertUnrevoked(state);
          prepareSetCopy(state);
          markChanged(state);
          return state.copy_.delete(value) || (state.drafts_.has(value) ? state.copy_.delete(state.drafts_.get(value)) : (/* istanbul ignore next */
          false));
        }
      }, {
        key: "clear",
        value: function clear() {
          var state = this[DRAFT_STATE];
          assertUnrevoked(state);
          if (latest(state).size) {
            prepareSetCopy(state);
            markChanged(state);
            state.copy_.clear();
          }
        }
      }, {
        key: "values",
        value: function values() {
          var state = this[DRAFT_STATE];
          assertUnrevoked(state);
          prepareSetCopy(state);
          return state.copy_.values();
        }
      }, {
        key: "entries",
        value: function entries() {
          var state = this[DRAFT_STATE];
          assertUnrevoked(state);
          prepareSetCopy(state);
          return state.copy_.entries();
        }
      }, {
        key: "keys",
        value: function keys() {
          return this.values();
        }
      }, {
        key: _ref10,
        value: function value() {
          return this.values();
        }
      }, {
        key: "forEach",
        value: function forEach(cb, thisArg) {
          var iterator = this.values();
          var result = iterator.next();
          while (!result.done) {
            cb.call(thisArg, result.value, result.value, this);
            result = iterator.next();
          }
        }
      }]);
    }(/*#__PURE__*/(0, _wrapNativeSuper2.default)(Set), (DRAFT_STATE, Symbol.iterator));
    function proxySet_(target, parent) {
      return new DraftSet(target, parent);
    }
    function prepareSetCopy(state) {
      if (!state.copy_) {
        state.copy_ = /* @__PURE__ */new Set();
        state.base_.forEach(function (value) {
          if (isDraftable(value)) {
            var draft = createProxy(value, state);
            state.drafts_.set(value, draft);
            state.copy_.add(draft);
          } else {
            state.copy_.add(value);
          }
        });
      }
    }
    function assertUnrevoked(state) {
      if (state.revoked_) die(3, JSON.stringify(latest(state)));
    }
    loadPlugin("MapSet", {
      proxyMap_: proxyMap_,
      proxySet_: proxySet_
    });
  }

  // src/immer.ts
  var immer = new Immer2();
  var produce = exports.produce = immer.produce;
  var produceWithPatches = exports.produceWithPatches = immer.produceWithPatches.bind(immer);
  var setAutoFreeze = exports.setAutoFreeze = immer.setAutoFreeze.bind(immer);
  var setUseStrictShallowCopy = exports.setUseStrictShallowCopy = immer.setUseStrictShallowCopy.bind(immer);
  var applyPatches = exports.applyPatches = immer.applyPatches.bind(immer);
  var createDraft = exports.createDraft = immer.createDraft.bind(immer);
  var finishDraft = exports.finishDraft = immer.finishDraft.bind(immer);
  function castDraft(value) {
    return value;
  }
  function castImmutable(value) {
    return value;
  }
},570,[1,99,23,25,28,160,12,13,38]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.createSelector = undefined;
  exports.createSelectorCreator = createSelectorCreator;
  exports.createStructuredSelector = undefined;
  exports.lruMemoize = lruMemoize;
  exports.setGlobalDevModeChecks = exports.referenceEqualityCheck = undefined;
  exports.unstable_autotrackMemoize = autotrackMemoize;
  exports.weakMapMemoize = weakMapMemoize;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4])); // src/devModeChecks/identityFunctionCheck.ts
  // src/devModeChecks/inputStabilityCheck.ts
  // src/devModeChecks/setGlobalDevModeChecks.ts
  var globalDevModeChecks = {
    inputStabilityCheck: "once",
    identityFunctionCheck: "once"
  };
  var setGlobalDevModeChecks = exports.setGlobalDevModeChecks = function setGlobalDevModeChecks(devModeChecks) {
    Object.assign(globalDevModeChecks, devModeChecks);
  };

  // src/utils.ts
  var NOT_FOUND = /* @__PURE__ */Symbol("NOT_FOUND");
  function assertIsFunction(func) {
    var errorMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : `expected a function, instead received ${typeof func}`;
    if (typeof func !== "function") {
      throw new TypeError(errorMessage);
    }
  }
  function assertIsObject(object) {
    var errorMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : `expected an object, instead received ${typeof object}`;
    if (typeof object !== "object") {
      throw new TypeError(errorMessage);
    }
  }
  function assertIsArrayOfFunctions(array) {
    var errorMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : `expected all items to be functions, instead received the following types: `;
    if (!array.every(function (item) {
      return typeof item === "function";
    })) {
      var itemTypes = array.map(function (item) {
        return typeof item === "function" ? `function ${item.name || "unnamed"}()` : typeof item;
      }).join(", ");
      throw new TypeError(`${errorMessage}[${itemTypes}]`);
    }
  }
  var ensureIsArray = function ensureIsArray(item) {
    return Array.isArray(item) ? item : [item];
  };
  function getDependencies(createSelectorArgs) {
    var dependencies = Array.isArray(createSelectorArgs[0]) ? createSelectorArgs[0] : createSelectorArgs;
    assertIsArrayOfFunctions(dependencies, `createSelector expects all input-selectors to be functions, but received the following types: `);
    return dependencies;
  }
  function collectInputSelectorResults(dependencies, inputSelectorArgs) {
    var inputSelectorResults = [];
    var length = dependencies.length;
    for (var i = 0; i < length; i++) {
      inputSelectorResults.push(dependencies[i].apply(null, inputSelectorArgs));
    }
    return inputSelectorResults;
  }
  // src/autotrackMemoize/autotracking.ts
  var $REVISION = 0;
  var CURRENT_TRACKER = null;
  var Cell = /*#__PURE__*/function () {
    function Cell(initialValue) {
      var isEqual = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : tripleEq;
      (0, _classCallCheck2.default)(this, Cell);
      this.revision = $REVISION;
      this._isEqual = tripleEq;
      this._value = this._lastValue = initialValue;
      this._isEqual = isEqual;
    }
    // Whenever a storage value is read, it'll add itself to the current tracker if
    // one exists, entangling its state with that cache.
    return (0, _createClass2.default)(Cell, [{
      key: "value",
      get: function get() {
        var _CURRENT_TRACKER;
        (_CURRENT_TRACKER = CURRENT_TRACKER) == null ? undefined : _CURRENT_TRACKER.add(this);
        return this._value;
      }
      // Whenever a storage value is updated, we bump the global revision clock,
      // assign the revision for this storage to the new value, _and_ we schedule a
      // rerender. This is important, and it's what makes autotracking  _pull_
      // based. We don't actively tell the caches which depend on the storage that
      // anything has happened. Instead, we recompute the caches when needed.
      ,
      set: function set(newValue) {
        if (this.value === newValue) return;
        this._value = newValue;
        this.revision = ++$REVISION;
      }
    }]);
  }();
  function tripleEq(a, b) {
    return a === b;
  }
  var TrackingCache = /*#__PURE__*/function () {
    function TrackingCache(fn) {
      (0, _classCallCheck2.default)(this, TrackingCache);
      this._cachedRevision = -1;
      this._deps = [];
      this.hits = 0;
      this.fn = fn;
    }
    return (0, _createClass2.default)(TrackingCache, [{
      key: "clear",
      value: function clear() {
        this._cachedValue = undefined;
        this._cachedRevision = -1;
        this._deps = [];
        this.hits = 0;
      }
    }, {
      key: "value",
      get: function get() {
        var _CURRENT_TRACKER2;
        if (this.revision > this._cachedRevision) {
          var fn = this.fn;
          var currentTracker = /* @__PURE__ */new Set();
          var prevTracker = CURRENT_TRACKER;
          CURRENT_TRACKER = currentTracker;
          this._cachedValue = fn();
          CURRENT_TRACKER = prevTracker;
          this.hits++;
          this._deps = Array.from(currentTracker);
          this._cachedRevision = this.revision;
        }
        (_CURRENT_TRACKER2 = CURRENT_TRACKER) == null ? undefined : _CURRENT_TRACKER2.add(this);
        return this._cachedValue;
      }
    }, {
      key: "revision",
      get: function get() {
        return Math.max.apply(Math, (0, _toConsumableArray2.default)(this._deps.map(function (d) {
          return d.revision;
        })).concat([0]));
      }
    }]);
  }();
  function getValue(cell) {
    if (!(cell instanceof Cell)) {
      console.warn("Not a valid cell! ", cell);
    }
    return cell.value;
  }
  function setValue(storage, value) {
    if (!(storage instanceof Cell)) {
      throw new TypeError("setValue must be passed a tracked store created with `createStorage`.");
    }
    storage.value = storage._lastValue = value;
  }
  function createCell(initialValue) {
    var isEqual = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : tripleEq;
    return new Cell(initialValue, isEqual);
  }
  function createCache(fn) {
    assertIsFunction(fn, "the first parameter to `createCache` must be a function");
    return new TrackingCache(fn);
  }

  // src/autotrackMemoize/tracking.ts
  var neverEq = function neverEq(a, b) {
    return false;
  };
  function createTag() {
    return createCell(null, neverEq);
  }
  function dirtyTag(tag, value) {
    setValue(tag, value);
  }
  var consumeCollection = function consumeCollection(node) {
    var tag = node.collectionTag;
    if (tag === null) {
      tag = node.collectionTag = createTag();
    }
    getValue(tag);
  };
  var dirtyCollection = function dirtyCollection(node) {
    var tag = node.collectionTag;
    if (tag !== null) {
      dirtyTag(tag, null);
    }
  };

  // src/autotrackMemoize/proxy.ts
  var REDUX_PROXY_LABEL = Symbol();
  var nextId = 0;
  var proto = Object.getPrototypeOf({});
  var ObjectTreeNode = /*#__PURE__*/(0, _createClass2.default)(function ObjectTreeNode(value) {
    (0, _classCallCheck2.default)(this, ObjectTreeNode);
    this.proxy = new Proxy(this, objectProxyHandler);
    this.tag = createTag();
    this.tags = {};
    this.children = {};
    this.collectionTag = null;
    this.id = nextId++;
    this.value = value;
    this.value = value;
    this.tag.value = value;
  });
  var objectProxyHandler = {
    get: function get(node, key) {
      function calculateResult() {
        var value = node.value;
        var childValue = Reflect.get(value, key);
        if (typeof key === "symbol") {
          return childValue;
        }
        if (key in proto) {
          return childValue;
        }
        if (typeof childValue === "object" && childValue !== null) {
          var childNode = node.children[key];
          if (childNode === undefined) {
            childNode = node.children[key] = createNode(childValue);
          }
          if (childNode.tag) {
            getValue(childNode.tag);
          }
          return childNode.proxy;
        } else {
          var tag = node.tags[key];
          if (tag === undefined) {
            tag = node.tags[key] = createTag();
            tag.value = childValue;
          }
          getValue(tag);
          return childValue;
        }
      }
      var res = calculateResult();
      return res;
    },
    ownKeys: function ownKeys(node) {
      consumeCollection(node);
      return Reflect.ownKeys(node.value);
    },
    getOwnPropertyDescriptor: function getOwnPropertyDescriptor(node, prop) {
      return Reflect.getOwnPropertyDescriptor(node.value, prop);
    },
    has: function has(node, prop) {
      return Reflect.has(node.value, prop);
    }
  };
  var ArrayTreeNode = /*#__PURE__*/(0, _createClass2.default)(function ArrayTreeNode(value) {
    (0, _classCallCheck2.default)(this, ArrayTreeNode);
    this.proxy = new Proxy([this], arrayProxyHandler);
    this.tag = createTag();
    this.tags = {};
    this.children = {};
    this.collectionTag = null;
    this.id = nextId++;
    this.value = value;
    this.value = value;
    this.tag.value = value;
  });
  var arrayProxyHandler = {
    get: function get(_ref, key) {
      var _ref2 = (0, _slicedToArray2.default)(_ref, 1),
        node = _ref2[0];
      if (key === "length") {
        consumeCollection(node);
      }
      return objectProxyHandler.get(node, key);
    },
    ownKeys: function ownKeys(_ref3) {
      var _ref4 = (0, _slicedToArray2.default)(_ref3, 1),
        node = _ref4[0];
      return objectProxyHandler.ownKeys(node);
    },
    getOwnPropertyDescriptor: function getOwnPropertyDescriptor(_ref5, prop) {
      var _ref6 = (0, _slicedToArray2.default)(_ref5, 1),
        node = _ref6[0];
      return objectProxyHandler.getOwnPropertyDescriptor(node, prop);
    },
    has: function has(_ref7, prop) {
      var _ref8 = (0, _slicedToArray2.default)(_ref7, 1),
        node = _ref8[0];
      return objectProxyHandler.has(node, prop);
    }
  };
  function createNode(value) {
    if (Array.isArray(value)) {
      return new ArrayTreeNode(value);
    }
    return new ObjectTreeNode(value);
  }
  function updateNode(node, newValue) {
    var value = node.value,
      tags = node.tags,
      children = node.children;
    node.value = newValue;
    if (Array.isArray(value) && Array.isArray(newValue) && value.length !== newValue.length) {
      dirtyCollection(node);
    } else {
      if (value !== newValue) {
        var oldKeysSize = 0;
        var newKeysSize = 0;
        var anyKeysAdded = false;
        for (var _key in value) {
          oldKeysSize++;
        }
        for (var key in newValue) {
          newKeysSize++;
          if (!(key in value)) {
            anyKeysAdded = true;
            break;
          }
        }
        var isDifferent = anyKeysAdded || oldKeysSize !== newKeysSize;
        if (isDifferent) {
          dirtyCollection(node);
        }
      }
    }
    for (var _key3 in tags) {
      var childValue = value[_key3];
      var newChildValue = newValue[_key3];
      if (childValue !== newChildValue) {
        dirtyCollection(node);
        dirtyTag(tags[_key3], newChildValue);
      }
      if (typeof newChildValue === "object" && newChildValue !== null) {
        delete tags[_key3];
      }
    }
    for (var _key5 in children) {
      var childNode = children[_key5];
      var _newChildValue = newValue[_key5];
      var _childValue = childNode.value;
      if (_childValue === _newChildValue) {
        continue;
      } else if (typeof _newChildValue === "object" && _newChildValue !== null) {
        updateNode(childNode, _newChildValue);
      } else {
        deleteNode(childNode);
        delete children[_key5];
      }
    }
  }
  function deleteNode(node) {
    if (node.tag) {
      dirtyTag(node.tag, null);
    }
    dirtyCollection(node);
    for (var key in node.tags) {
      dirtyTag(node.tags[key], null);
    }
    for (var _key7 in node.children) {
      deleteNode(node.children[_key7]);
    }
  }

  // src/lruMemoize.ts
  function createSingletonCache(equals) {
    var entry;
    return {
      get: function get(key) {
        if (entry && equals(entry.key, key)) {
          return entry.value;
        }
        return NOT_FOUND;
      },
      put: function put(key, value) {
        entry = {
          key: key,
          value: value
        };
      },
      getEntries: function getEntries() {
        return entry ? [entry] : [];
      },
      clear: function clear() {
        entry = undefined;
      }
    };
  }
  function createLruCache(maxSize, equals) {
    var entries = [];
    function get(key) {
      var cacheIndex = entries.findIndex(function (entry) {
        return equals(key, entry.key);
      });
      if (cacheIndex > -1) {
        var entry = entries[cacheIndex];
        if (cacheIndex > 0) {
          entries.splice(cacheIndex, 1);
          entries.unshift(entry);
        }
        return entry.value;
      }
      return NOT_FOUND;
    }
    function put(key, value) {
      if (get(key) === NOT_FOUND) {
        entries.unshift({
          key: key,
          value: value
        });
        if (entries.length > maxSize) {
          entries.pop();
        }
      }
    }
    function getEntries() {
      return entries;
    }
    function clear() {
      entries = [];
    }
    return {
      get: get,
      put: put,
      getEntries: getEntries,
      clear: clear
    };
  }
  var referenceEqualityCheck = exports.referenceEqualityCheck = function referenceEqualityCheck(a, b) {
    return a === b;
  };
  function createCacheKeyComparator(equalityCheck) {
    return function areArgumentsShallowlyEqual(prev, next) {
      if (prev === null || next === null || prev.length !== next.length) {
        return false;
      }
      var length = prev.length;
      for (var i = 0; i < length; i++) {
        if (!equalityCheck(prev[i], next[i])) {
          return false;
        }
      }
      return true;
    };
  }
  function lruMemoize(func, equalityCheckOrOptions) {
    var providedOptions = typeof equalityCheckOrOptions === "object" ? equalityCheckOrOptions : {
      equalityCheck: equalityCheckOrOptions
    };
    var _providedOptions$equa = providedOptions.equalityCheck,
      equalityCheck = _providedOptions$equa === undefined ? referenceEqualityCheck : _providedOptions$equa,
      _providedOptions$maxS = providedOptions.maxSize,
      maxSize = _providedOptions$maxS === undefined ? 1 : _providedOptions$maxS,
      resultEqualityCheck = providedOptions.resultEqualityCheck;
    var comparator = createCacheKeyComparator(equalityCheck);
    var resultsCount = 0;
    var cache = maxSize <= 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator);
    function memoized() {
      var value = cache.get(arguments);
      if (value === NOT_FOUND) {
        value = func.apply(null, arguments);
        resultsCount++;
        if (resultEqualityCheck) {
          var entries = cache.getEntries();
          var matchingEntry = entries.find(function (entry) {
            return resultEqualityCheck(entry.value, value);
          });
          if (matchingEntry) {
            value = matchingEntry.value;
            resultsCount !== 0 && resultsCount--;
          }
        }
        cache.put(arguments, value);
      }
      return value;
    }
    memoized.clearCache = function () {
      cache.clear();
      memoized.resetResultsCount();
    };
    memoized.resultsCount = function () {
      return resultsCount;
    };
    memoized.resetResultsCount = function () {
      resultsCount = 0;
    };
    return memoized;
  }

  // src/autotrackMemoize/autotrackMemoize.ts
  function autotrackMemoize(func) {
    var node = createNode([]);
    var lastArgs = null;
    var shallowEqual = createCacheKeyComparator(referenceEqualityCheck);
    var cache = createCache(function () {
      var res = func.apply(null, node.proxy);
      return res;
    });
    function memoized() {
      if (!shallowEqual(lastArgs, arguments)) {
        updateNode(node, arguments);
        lastArgs = arguments;
      }
      return cache.value;
    }
    memoized.clearCache = function () {
      return cache.clear();
    };
    return memoized;
  }

  // src/weakMapMemoize.ts
  var StrongRef = /*#__PURE__*/function () {
    function StrongRef(value) {
      (0, _classCallCheck2.default)(this, StrongRef);
      this.value = value;
    }
    return (0, _createClass2.default)(StrongRef, [{
      key: "deref",
      value: function deref() {
        return this.value;
      }
    }]);
  }();
  var Ref = typeof WeakRef !== "undefined" ? WeakRef : StrongRef;
  var UNTERMINATED = 0;
  var TERMINATED = 1;
  function createCacheNode() {
    return {
      s: UNTERMINATED,
      v: undefined,
      o: null,
      p: null
    };
  }
  function weakMapMemoize(func) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var fnNode = createCacheNode();
    var resultEqualityCheck = options.resultEqualityCheck;
    var lastResult;
    var resultsCount = 0;
    function memoized() {
      var cacheNode = fnNode;
      var length = arguments.length;
      for (var i = 0, l = length; i < l; i++) {
        var arg = arguments[i];
        if (typeof arg === "function" || typeof arg === "object" && arg !== null) {
          var objectCache = cacheNode.o;
          if (objectCache === null) {
            cacheNode.o = objectCache = /* @__PURE__ */new WeakMap();
          }
          var objectNode = objectCache.get(arg);
          if (objectNode === undefined) {
            cacheNode = createCacheNode();
            objectCache.set(arg, cacheNode);
          } else {
            cacheNode = objectNode;
          }
        } else {
          var primitiveCache = cacheNode.p;
          if (primitiveCache === null) {
            cacheNode.p = primitiveCache = /* @__PURE__ */new Map();
          }
          var primitiveNode = primitiveCache.get(arg);
          if (primitiveNode === undefined) {
            cacheNode = createCacheNode();
            primitiveCache.set(arg, cacheNode);
          } else {
            cacheNode = primitiveNode;
          }
        }
      }
      var terminatedNode = cacheNode;
      var result;
      if (cacheNode.s === TERMINATED) {
        result = cacheNode.v;
      } else {
        result = func.apply(null, arguments);
        resultsCount++;
        if (resultEqualityCheck) {
          var _lastResult$deref, _lastResult;
          var lastResultValue = (_lastResult$deref = (_lastResult = lastResult) == null ? undefined : _lastResult.deref == null ? undefined : _lastResult.deref()) != null ? _lastResult$deref : lastResult;
          if (lastResultValue != null && resultEqualityCheck(lastResultValue, result)) {
            result = lastResultValue;
            resultsCount !== 0 && resultsCount--;
          }
          var needsWeakRef = typeof result === "object" && result !== null || typeof result === "function";
          lastResult = needsWeakRef ? new Ref(result) : result;
        }
      }
      terminatedNode.s = TERMINATED;
      terminatedNode.v = result;
      return result;
    }
    memoized.clearCache = function () {
      fnNode = createCacheNode();
      memoized.resetResultsCount();
    };
    memoized.resultsCount = function () {
      return resultsCount;
    };
    memoized.resetResultsCount = function () {
      resultsCount = 0;
    };
    return memoized;
  }

  // src/createSelectorCreator.ts
  function createSelectorCreator(memoizeOrOptions) {
    for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key8 = 1; _key8 < _len; _key8++) {
      memoizeOptionsFromArgs[_key8 - 1] = arguments[_key8];
    }
    var createSelectorCreatorOptions = typeof memoizeOrOptions === "function" ? {
      memoize: memoizeOrOptions,
      memoizeOptions: memoizeOptionsFromArgs
    } : memoizeOrOptions;
    var createSelector2 = function createSelector2() {
      for (var _len2 = arguments.length, createSelectorArgs = new Array(_len2), _key9 = 0; _key9 < _len2; _key9++) {
        createSelectorArgs[_key9] = arguments[_key9];
      }
      var _recomputations = 0;
      var _dependencyRecomputations = 0;
      var _lastResult2;
      var directlyPassedOptions = {};
      var resultFunc = createSelectorArgs.pop();
      if (typeof resultFunc === "object") {
        directlyPassedOptions = resultFunc;
        resultFunc = createSelectorArgs.pop();
      }
      assertIsFunction(resultFunc, `createSelector expects an output function after the inputs, but received: [${typeof resultFunc}]`);
      var combinedOptions = Object.assign({}, createSelectorCreatorOptions, directlyPassedOptions);
      var memoize = combinedOptions.memoize,
        _combinedOptions$memo = combinedOptions.memoizeOptions,
        memoizeOptions = _combinedOptions$memo === undefined ? [] : _combinedOptions$memo,
        _combinedOptions$args = combinedOptions.argsMemoize,
        argsMemoize = _combinedOptions$args === undefined ? weakMapMemoize : _combinedOptions$args,
        _combinedOptions$args2 = combinedOptions.argsMemoizeOptions,
        argsMemoizeOptions = _combinedOptions$args2 === undefined ? [] : _combinedOptions$args2,
        _combinedOptions$devM = combinedOptions.devModeChecks,
        devModeChecks = _combinedOptions$devM === undefined ? {} : _combinedOptions$devM;
      var finalMemoizeOptions = ensureIsArray(memoizeOptions);
      var finalArgsMemoizeOptions = ensureIsArray(argsMemoizeOptions);
      var dependencies = getDependencies(createSelectorArgs);
      var memoizedResultFunc = memoize.apply(undefined, [function recomputationWrapper() {
        _recomputations++;
        return resultFunc.apply(null, arguments);
      }].concat((0, _toConsumableArray2.default)(finalMemoizeOptions)));
      var firstRun = true;
      var selector = argsMemoize.apply(undefined, [function dependenciesChecker() {
        _dependencyRecomputations++;
        var inputSelectorResults = collectInputSelectorResults(dependencies, arguments);
        _lastResult2 = memoizedResultFunc.apply(null, inputSelectorResults);
        return _lastResult2;
      }].concat((0, _toConsumableArray2.default)(finalArgsMemoizeOptions)));
      return Object.assign(selector, {
        resultFunc: resultFunc,
        memoizedResultFunc: memoizedResultFunc,
        dependencies: dependencies,
        dependencyRecomputations: function dependencyRecomputations() {
          return _dependencyRecomputations;
        },
        resetDependencyRecomputations: function resetDependencyRecomputations() {
          _dependencyRecomputations = 0;
        },
        lastResult: function lastResult() {
          return _lastResult2;
        },
        recomputations: function recomputations() {
          return _recomputations;
        },
        resetRecomputations: function resetRecomputations() {
          _recomputations = 0;
        },
        memoize: memoize,
        argsMemoize: argsMemoize
      });
    };
    Object.assign(createSelector2, {
      withTypes: function withTypes() {
        return createSelector2;
      }
    });
    return createSelector2;
  }
  var createSelector = exports.createSelector = /* @__PURE__ */createSelectorCreator(weakMapMemoize);

  // src/createStructuredSelector.ts
  var createStructuredSelector = exports.createStructuredSelector = Object.assign(function (inputSelectorsObject) {
    var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;
    assertIsObject(inputSelectorsObject, `createStructuredSelector expects first argument to be an object where each property is a selector, instead received a ${typeof inputSelectorsObject}`);
    var inputSelectorKeys = Object.keys(inputSelectorsObject);
    var dependencies = inputSelectorKeys.map(function (key) {
      return inputSelectorsObject[key];
    });
    var structuredSelector = selectorCreator(dependencies, function () {
      for (var _len3 = arguments.length, inputSelectorResults = new Array(_len3), _key10 = 0; _key10 < _len3; _key10++) {
        inputSelectorResults[_key10] = arguments[_key10];
      }
      return inputSelectorResults.reduce(function (composition, value, index) {
        composition[inputSelectorKeys[index]] = value;
        return composition;
      }, {});
    });
    return structuredSelector;
  }, {
    withTypes: function withTypes() {
      return createStructuredSelector;
    }
  });
},571,[1,38,12,13,6]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.__DO_NOT_USE__ActionTypes = undefined;
  exports.applyMiddleware = applyMiddleware;
  exports.bindActionCreators = bindActionCreators;
  exports.combineReducers = combineReducers;
  exports.compose = compose;
  exports.createStore = createStore;
  exports.isAction = isAction;
  exports.isPlainObject = isPlainObject;
  exports.legacy_createStore = legacy_createStore;
  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  // src/utils/formatProdErrorMessage.ts
  function formatProdErrorMessage(code) {
    return `Minified Redux error #${code}; visit https://redux.js.org/Errors?code=${code} for the full message or use the non-minified dev environment for full errors. `;
  }

  // src/utils/symbol-observable.ts
  var $$observable = /* @__PURE__ */function () {
    return typeof Symbol === "function" && Symbol.observable || "@@observable";
  }();
  var symbol_observable_default = $$observable;

  // src/utils/actionTypes.ts
  var randomString = function randomString() {
    return Math.random().toString(36).substring(7).split("").join(".");
  };
  var ActionTypes = {
    INIT: `@@redux/INIT${/* @__PURE__ */randomString()}`,
    REPLACE: `@@redux/REPLACE${/* @__PURE__ */randomString()}`,
    PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {
      return `@@redux/PROBE_UNKNOWN_ACTION${randomString()}`;
    }
  };
  var actionTypes_default = exports.__DO_NOT_USE__ActionTypes = ActionTypes;

  // src/utils/isPlainObject.ts
  function isPlainObject(obj) {
    if (typeof obj !== "object" || obj === null) return false;
    var proto = obj;
    while (Object.getPrototypeOf(proto) !== null) {
      proto = Object.getPrototypeOf(proto);
    }
    return Object.getPrototypeOf(obj) === proto || Object.getPrototypeOf(obj) === null;
  }

  // src/utils/kindOf.ts

  // src/createStore.ts
  function createStore(reducer, preloadedState, enhancer) {
    if (typeof reducer !== "function") {
      throw new Error(formatProdErrorMessage(2));
    }
    if (typeof preloadedState === "function" && typeof enhancer === "function" || typeof enhancer === "function" && typeof arguments[3] === "function") {
      throw new Error(formatProdErrorMessage(0));
    }
    if (typeof preloadedState === "function" && typeof enhancer === "undefined") {
      enhancer = preloadedState;
      preloadedState = undefined;
    }
    if (typeof enhancer !== "undefined") {
      if (typeof enhancer !== "function") {
        throw new Error(formatProdErrorMessage(1));
      }
      return enhancer(createStore)(reducer, preloadedState);
    }
    var currentReducer = reducer;
    var currentState = preloadedState;
    var currentListeners = /* @__PURE__ */new Map();
    var nextListeners = currentListeners;
    var listenerIdCounter = 0;
    var isDispatching = false;
    function ensureCanMutateNextListeners() {
      if (nextListeners === currentListeners) {
        nextListeners = /* @__PURE__ */new Map();
        currentListeners.forEach(function (listener, key) {
          nextListeners.set(key, listener);
        });
      }
    }
    function getState() {
      if (isDispatching) {
        throw new Error(formatProdErrorMessage(3));
      }
      return currentState;
    }
    function subscribe(listener) {
      if (typeof listener !== "function") {
        throw new Error(formatProdErrorMessage(4));
      }
      if (isDispatching) {
        throw new Error(formatProdErrorMessage(5));
      }
      var isSubscribed = true;
      ensureCanMutateNextListeners();
      var listenerId = listenerIdCounter++;
      nextListeners.set(listenerId, listener);
      return function unsubscribe() {
        if (!isSubscribed) {
          return;
        }
        if (isDispatching) {
          throw new Error(formatProdErrorMessage(6));
        }
        isSubscribed = false;
        ensureCanMutateNextListeners();
        nextListeners.delete(listenerId);
        currentListeners = null;
      };
    }
    function dispatch(action) {
      if (!isPlainObject(action)) {
        throw new Error(formatProdErrorMessage(7));
      }
      if (typeof action.type === "undefined") {
        throw new Error(formatProdErrorMessage(8));
      }
      if (typeof action.type !== "string") {
        throw new Error(formatProdErrorMessage(17));
      }
      if (isDispatching) {
        throw new Error(formatProdErrorMessage(9));
      }
      try {
        isDispatching = true;
        currentState = currentReducer(currentState, action);
      } finally {
        isDispatching = false;
      }
      var listeners = currentListeners = nextListeners;
      listeners.forEach(function (listener) {
        listener();
      });
      return action;
    }
    function replaceReducer(nextReducer) {
      if (typeof nextReducer !== "function") {
        throw new Error(formatProdErrorMessage(10));
      }
      currentReducer = nextReducer;
      dispatch({
        type: actionTypes_default.REPLACE
      });
    }
    function observable() {
      var outerSubscribe = subscribe;
      return (0, _defineProperty2.default)({
        /**
         * The minimal observable subscription method.
         * @param observer Any object that can be used as an observer.
         * The observer object should have a `next` method.
         * @returns An object with an `unsubscribe` method that can
         * be used to unsubscribe the observable from the store, and prevent further
         * emission of values from the observable.
         */
        subscribe: function subscribe(observer) {
          if (typeof observer !== "object" || observer === null) {
            throw new Error(formatProdErrorMessage(11));
          }
          function observeState() {
            var observerAsObserver = observer;
            if (observerAsObserver.next) {
              observerAsObserver.next(getState());
            }
          }
          observeState();
          var unsubscribe = outerSubscribe(observeState);
          return {
            unsubscribe: unsubscribe
          };
        }
      }, symbol_observable_default, function () {
        return this;
      });
    }
    dispatch({
      type: actionTypes_default.INIT
    });
    var store = (0, _defineProperty2.default)({
      dispatch: dispatch,
      subscribe: subscribe,
      getState: getState,
      replaceReducer: replaceReducer
    }, symbol_observable_default, observable);
    return store;
  }
  function legacy_createStore(reducer, preloadedState, enhancer) {
    return createStore(reducer, preloadedState, enhancer);
  }

  // src/utils/warning.ts

  // src/combineReducers.ts

  function assertReducerShape(reducers) {
    Object.keys(reducers).forEach(function (key) {
      var reducer = reducers[key];
      var initialState = reducer(undefined, {
        type: actionTypes_default.INIT
      });
      if (typeof initialState === "undefined") {
        throw new Error(formatProdErrorMessage(12));
      }
      if (typeof reducer(undefined, {
        type: actionTypes_default.PROBE_UNKNOWN_ACTION()
      }) === "undefined") {
        throw new Error(formatProdErrorMessage(13));
      }
    });
  }
  function combineReducers(reducers) {
    var reducerKeys = Object.keys(reducers);
    var finalReducers = {};
    for (var i = 0; i < reducerKeys.length; i++) {
      var key = reducerKeys[i];
      if (typeof reducers[key] === "function") {
        finalReducers[key] = reducers[key];
      }
    }
    var finalReducerKeys = Object.keys(finalReducers);
    var unexpectedKeyCache;
    var shapeAssertionError;
    try {
      assertReducerShape(finalReducers);
    } catch (e) {
      shapeAssertionError = e;
    }
    return function combination() {
      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var action = arguments.length > 1 ? arguments[1] : undefined;
      if (shapeAssertionError) {
        throw shapeAssertionError;
      }
      var hasChanged = false;
      var nextState = {};
      for (var _i2 = 0; _i2 < finalReducerKeys.length; _i2++) {
        var _key = finalReducerKeys[_i2];
        var reducer = finalReducers[_key];
        var previousStateForKey = state[_key];
        var nextStateForKey = reducer(previousStateForKey, action);
        if (typeof nextStateForKey === "undefined") {
          var actionType = action && action.type;
          throw new Error(formatProdErrorMessage(14));
        }
        nextState[_key] = nextStateForKey;
        hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
      }
      hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;
      return hasChanged ? nextState : state;
    };
  }

  // src/bindActionCreators.ts
  function bindActionCreator(actionCreator, dispatch) {
    return function () {
      for (var _len = arguments.length, args = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {
        args[_key2] = arguments[_key2];
      }
      return dispatch(actionCreator.apply(this, args));
    };
  }
  function bindActionCreators(actionCreators, dispatch) {
    if (typeof actionCreators === "function") {
      return bindActionCreator(actionCreators, dispatch);
    }
    if (typeof actionCreators !== "object" || actionCreators === null) {
      throw new Error(formatProdErrorMessage(16));
    }
    var boundActionCreators = {};
    for (var key in actionCreators) {
      var actionCreator = actionCreators[key];
      if (typeof actionCreator === "function") {
        boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
      }
    }
    return boundActionCreators;
  }

  // src/compose.ts
  function compose() {
    for (var _len2 = arguments.length, funcs = new Array(_len2), _key3 = 0; _key3 < _len2; _key3++) {
      funcs[_key3] = arguments[_key3];
    }
    if (funcs.length === 0) {
      return function (arg) {
        return arg;
      };
    }
    if (funcs.length === 1) {
      return funcs[0];
    }
    return funcs.reduce(function (a, b) {
      return function () {
        return a(b.apply(undefined, arguments));
      };
    });
  }

  // src/applyMiddleware.ts
  function applyMiddleware() {
    for (var _len3 = arguments.length, middlewares = new Array(_len3), _key4 = 0; _key4 < _len3; _key4++) {
      middlewares[_key4] = arguments[_key4];
    }
    return function (createStore2) {
      return function (reducer, preloadedState) {
        var store = createStore2(reducer, preloadedState);
        var _dispatch = function dispatch() {
          throw new Error(formatProdErrorMessage(15));
        };
        var middlewareAPI = {
          getState: store.getState,
          dispatch: function dispatch(action) {
            for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key5 = 1; _key5 < _len4; _key5++) {
              args[_key5 - 1] = arguments[_key5];
            }
            return _dispatch.apply(undefined, [action].concat(args));
          }
        };
        var chain = middlewares.map(function (middleware) {
          return middleware(middlewareAPI);
        });
        _dispatch = compose.apply(undefined, (0, _toConsumableArray2.default)(chain))(store.dispatch);
        return Object.assign({}, store, {
          dispatch: _dispatch
        });
      };
    };
  }

  // src/utils/isAction.ts
  function isAction(action) {
    return isPlainObject(action) && "type" in action && typeof action.type === "string";
  }
},572,[1,6,99]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.withExtraArgument = exports.thunk = undefined;
  // src/index.ts
  function createThunkMiddleware(extraArgument) {
    var middleware = function middleware(_ref) {
      var dispatch = _ref.dispatch,
        getState = _ref.getState;
      return function (next) {
        return function (action) {
          if (typeof action === "function") {
            return action(dispatch, getState, extraArgument);
          }
          return next(action);
        };
      };
    };
    return middleware;
  }
  var thunk = exports.thunk = createThunkMiddleware();
  var withExtraArgument = exports.withExtraArgument = createThunkMiddleware;
},573,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  {
    module.exports = _$$_REQUIRE(_dependencyMap[0]);
  }
},574,[575]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var _defineProperty = _$$_REQUIRE(_dependencyMap[0]);
  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[1]);
  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[2]);
  var _inherits = _$$_REQUIRE(_dependencyMap[3]);
  var _wrapNativeSuper = _$$_REQUIRE(_dependencyMap[4]);
  var _classCallCheck = _$$_REQUIRE(_dependencyMap[5]);
  var _createClass = _$$_REQUIRE(_dependencyMap[6]);
  var _slicedToArray = _$$_REQUIRE(_dependencyMap[7]);
  function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var ne = Object.defineProperty;
  var ge = Object.getOwnPropertyDescriptor;
  var be = Object.getOwnPropertyNames;
  var Te = Object.prototype.hasOwnProperty;
  var Ae = function Ae(e, t) {
      for (var r in t) ne(e, r, {
        get: t[r],
        enumerable: true
      });
    },
    Ie = function Ie(e, t, r, n) {
      if (t && typeof t == "object" || typeof t == "function") {
        var _loop = function _loop(i) {
          !Te.call(e, i) && i !== r && ne(e, i, {
            get: function get() {
              return t[i];
            },
            enumerable: !(n = ge(t, i)) || n.enumerable
          });
        };
        for (var i of be(t)) {
          _loop(i);
        }
      }
      return e;
    };
  var De = function De(e) {
    return Ie(ne({}, "__esModule", {
      value: true
    }), e);
  };
  var Be = {};
  Ae(Be, {
    Immer: function Immer() {
      return J;
    },
    applyPatches: function applyPatches() {
      return Ce;
    },
    castDraft: function castDraft() {
      return ke;
    },
    castImmutable: function castImmutable() {
      return Ke;
    },
    createDraft: function createDraft() {
      return Re;
    },
    current: function current() {
      return re;
    },
    enableMapSet: function enableMapSet() {
      return xe;
    },
    enablePatches: function enablePatches() {
      return Pe;
    },
    finishDraft: function finishDraft() {
      return ve;
    },
    freeze: function freeze() {
      return K;
    },
    immerable: function immerable() {
      return N;
    },
    isDraft: function isDraft() {
      return O;
    },
    isDraftable: function isDraftable() {
      return A;
    },
    nothing: function nothing() {
      return j;
    },
    original: function original() {
      return le;
    },
    produce: function produce() {
      return Fe;
    },
    produceWithPatches: function produceWithPatches() {
      return Ne;
    },
    setAutoFreeze: function setAutoFreeze() {
      return ze;
    },
    setUseStrictShallowCopy: function setUseStrictShallowCopy() {
      return je;
    }
  });
  module.exports = De(Be);
  var j = Symbol.for("immer-nothing"),
    N = Symbol.for("immer-draftable"),
    u = Symbol.for("immer-state");
  function h(e) {
    throw new Error(`[Immer] minified error nr: ${e}. Full error at: https://bit.ly/3cXEKWf`);
  }
  var z = Object.getPrototypeOf;
  function O(e) {
    return !!e && !!e[u];
  }
  function A(e) {
    var _e$constructor;
    return e ? ye(e) || Array.isArray(e) || !!e[N] || !!((_e$constructor = e.constructor) != null && _e$constructor[N]) || v(e) || k(e) : false;
  }
  var Oe = Object.prototype.constructor.toString();
  function ye(e) {
    if (!e || typeof e != "object") return false;
    var t = z(e);
    if (t === null) return true;
    var r = Object.hasOwnProperty.call(t, "constructor") && t.constructor;
    return r === Object ? true : typeof r == "function" && Function.toString.call(r) === Oe;
  }
  function le(e) {
    return O(e) || h(15, e), e[u].t;
  }
  function _(e, t) {
    C(e) === 0 ? Reflect.ownKeys(e).forEach(function (r) {
      t(r, e[r], e);
    }) : e.forEach(function (r, n) {
      return t(n, r, e);
    });
  }
  function C(e) {
    var t = e[u];
    return t ? t.o : Array.isArray(e) ? 1 : v(e) ? 2 : k(e) ? 3 : 0;
  }
  function R(e, t) {
    return C(e) === 2 ? e.has(t) : Object.prototype.hasOwnProperty.call(e, t);
  }
  function X(e, t) {
    return C(e) === 2 ? e.get(t) : e[t];
  }
  function Q(e, t, r) {
    var n = C(e);
    n === 2 ? e.set(t, r) : n === 3 ? e.add(r) : e[t] = r;
  }
  function pe(e, t) {
    return e === t ? e !== 0 || 1 / e === 1 / t : e !== e && t !== t;
  }
  function v(e) {
    return e instanceof Map;
  }
  function k(e) {
    return e instanceof Set;
  }
  function T(e) {
    return e.e || e.t;
  }
  function L(e, t) {
    if (v(e)) return new Map(e);
    if (k(e)) return new Set(e);
    if (Array.isArray(e)) return Array.prototype.slice.call(e);
    var r = ye(e);
    if (t === true || t === "class_only" && !r) {
      var n = Object.getOwnPropertyDescriptors(e);
      delete n[u];
      var i = Reflect.ownKeys(n);
      for (var f = 0; f < i.length; f++) {
        var l = i[f],
          c = n[l];
        c.writable === false && (c.writable = true, c.configurable = true), (c.get || c.set) && (n[l] = {
          configurable: true,
          writable: true,
          enumerable: c.enumerable,
          value: e[l]
        });
      }
      return Object.create(z(e), n);
    } else {
      var _n = z(e);
      if (_n !== null && r) return Object.assign({}, e);
      var _i = Object.create(_n);
      return Object.assign(_i, e);
    }
  }
  function K(e) {
    var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    return $(e) || O(e) || !A(e) || (C(e) > 1 && (e.set = e.add = e.clear = e.delete = Me), Object.freeze(e), t && Object.entries(e).forEach(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 2),
        r = _ref2[0],
        n = _ref2[1];
      return K(n, true);
    })), e;
  }
  function Me() {
    h(2);
  }
  function $(e) {
    return Object.isFrozen(e);
  }
  var ae = {};
  function w(e) {
    var t = ae[e];
    return t || h(0, e), t;
  }
  function Y(e, t) {
    ae[e] || (ae[e] = t);
  }
  var U;
  function B() {
    return U;
  }
  function _e(e, t) {
    return {
      a: [],
      i: e,
      p: t,
      P: true,
      d: 0
    };
  }
  function oe(e, t) {
    t && (w("Patches"), e.f = [], e.h = [], e.b = t);
  }
  function V(e) {
    Z(e), e.a.forEach(we), e.a = null;
  }
  function Z(e) {
    e === U && (U = e.i);
  }
  function ie(e) {
    return U = _e(U, e);
  }
  function we(e) {
    var t = e[u];
    t.o === 0 || t.o === 1 ? t.x() : t.m = true;
  }
  function se(e, t) {
    t.d = t.a.length;
    var r = t.a[0];
    return e !== undefined && e !== r ? (r[u].s && (V(t), h(4)), A(e) && (e = ee(t, e), t.i || te(t, e)), t.f && w("Patches").T(r[u].t, e, t.f, t.h)) : e = ee(t, r, []), V(t), t.f && t.b(t.f, t.h), e !== j ? e : undefined;
  }
  function ee(e, t, r) {
    if ($(t)) return t;
    var n = t[u];
    if (!n) return _(t, function (i, f) {
      return de(e, n, t, i, f, r);
    }), t;
    if (n.n !== e) return t;
    if (!n.s) return te(e, n.t, true), n.t;
    if (!n.c) {
      n.c = true, n.n.d--;
      var i = n.e,
        f = i,
        l = false;
      n.o === 3 && (f = new Set(i), i.clear(), l = true), _(f, function (c, b) {
        return de(e, n, i, c, b, r, l);
      }), te(e, i, false), r && e.f && w("Patches").g(n, r, e.f, e.h);
    }
    return n.e;
  }
  function de(e, t, r, n, i, f, l) {
    if (O(i)) {
      var c = f && t && t.o !== 3 && !R(t.r, n) ? f.concat(n) : undefined,
        b = ee(e, i, c);
      if (Q(r, n, b), O(b)) e.P = false;else return;
    } else l && r.add(i);
    if (A(i) && !$(i)) {
      if (!e.p.y && e.d < 1) return;
      ee(e, i), (!t || !t.n.i) && typeof n != "symbol" && Object.prototype.propertyIsEnumerable.call(r, n) && te(e, i);
    }
  }
  function te(e, t) {
    var r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    !e.i && e.p.y && e.P && K(t, r);
  }
  function he(e, t) {
    var r = Array.isArray(e),
      n = {
        o: r ? 1 : 0,
        n: t ? t.n : B(),
        s: false,
        c: false,
        r: {},
        i: t,
        t: e,
        u: null,
        e: null,
        x: null,
        l: false
      },
      i = n,
      f = ue;
    r && (i = [n], f = q);
    var _Proxy$revocable = Proxy.revocable(i, f),
      l = _Proxy$revocable.revoke,
      c = _Proxy$revocable.proxy;
    return n.u = c, n.x = l, c;
  }
  var ue = {
      get: function get(e, t) {
        if (t === u) return e;
        var r = T(e);
        if (!R(r, t)) return Ee(e, r, t);
        var n = r[t];
        return e.c || !A(n) ? n : n === ce(e.t, t) ? (fe(e), e.e[t] = W(n, e)) : n;
      },
      has: function has(e, t) {
        return t in T(e);
      },
      ownKeys: function ownKeys(e) {
        return Reflect.ownKeys(T(e));
      },
      set: function set(e, t, r) {
        var n = me(T(e), t);
        if (n != null && n.set) return n.set.call(e.u, r), true;
        if (!e.s) {
          var i = ce(T(e), t),
            f = i == null ? undefined : i[u];
          if (f && f.t === r) return e.e[t] = r, e.r[t] = false, true;
          if (pe(r, i) && (r !== undefined || R(e.t, t))) return true;
          fe(e), E(e);
        }
        return e.e[t] === r && (r !== undefined || t in e.e) || Number.isNaN(r) && Number.isNaN(e.e[t]) || (e.e[t] = r, e.r[t] = true), true;
      },
      deleteProperty: function deleteProperty(e, t) {
        return ce(e.t, t) !== undefined || t in e.t ? (e.r[t] = false, fe(e), E(e)) : delete e.r[t], e.e && delete e.e[t], true;
      },
      getOwnPropertyDescriptor: function getOwnPropertyDescriptor(e, t) {
        var r = T(e),
          n = Reflect.getOwnPropertyDescriptor(r, t);
        return n && {
          writable: true,
          configurable: e.o !== 1 || t !== "length",
          enumerable: n.enumerable,
          value: r[t]
        };
      },
      defineProperty: function defineProperty() {
        h(11);
      },
      getPrototypeOf: function getPrototypeOf(e) {
        return z(e.t);
      },
      setPrototypeOf: function setPrototypeOf() {
        h(12);
      }
    },
    q = {};
  _(ue, function (e, t) {
    q[e] = function () {
      return arguments[0] = arguments[0][0], t.apply(this, arguments);
    };
  });
  q.deleteProperty = function (e, t) {
    return q.set.call(this, e, t, undefined);
  };
  q.set = function (e, t, r) {
    return ue.set.call(this, e[0], t, r, e[0]);
  };
  function ce(e, t) {
    var r = e[u];
    return (r ? T(r) : e)[t];
  }
  function Ee(e, t, r) {
    var _n$get;
    var n = me(t, r);
    return n ? "value" in n ? n.value : (_n$get = n.get) == null ? undefined : _n$get.call(e.u) : undefined;
  }
  function me(e, t) {
    if (!(t in e)) return;
    var r = z(e);
    for (; r;) {
      var n = Object.getOwnPropertyDescriptor(r, t);
      if (n) return n;
      r = z(r);
    }
  }
  function E(e) {
    e.s || (e.s = true, e.i && E(e.i));
  }
  function fe(e) {
    e.e || (e.e = L(e.t, e.n.p.S));
  }
  var J = /*#__PURE__*/function () {
    function J(t) {
      var _this = this;
      _classCallCheck(this, J);
      this.y = true;
      this.S = false;
      this.produce = function (t, r, n) {
        if (typeof t == "function" && typeof r != "function") {
          var f = r;
          r = t;
          var l = _this;
          return function () {
            var _this2 = this;
            var b = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : f;
            for (var _len = arguments.length, a = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
              a[_key - 1] = arguments[_key];
            }
            return l.produce(b, function (o) {
              var _r;
              return (_r = r).call.apply(_r, [_this2, o].concat(a));
            });
          };
        }
        typeof r != "function" && h(6), n !== undefined && typeof n != "function" && h(7);
        var i;
        if (A(t)) {
          var _f = ie(_this),
            _l = W(t, undefined),
            c = true;
          try {
            i = r(_l), c = false;
          } finally {
            c ? V(_f) : Z(_f);
          }
          return oe(_f, n), se(i, _f);
        } else if (!t || typeof t != "object") {
          if (i = r(t), i === undefined && (i = t), i === j && (i = undefined), _this.y && K(i, true), n) {
            var _f2 = [],
              _l2 = [];
            w("Patches").T(t, i, _f2, _l2), n(_f2, _l2);
          }
          return i;
        } else h(1, t);
      };
      this.produceWithPatches = function (t, r) {
        if (typeof t == "function") return function (l) {
          for (var _len2 = arguments.length, c = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
            c[_key2 - 1] = arguments[_key2];
          }
          return _this.produceWithPatches(l, function (b) {
            return t.apply(undefined, [b].concat(c));
          });
        };
        var n, i;
        return [_this.produce(t, r, function (l, c) {
          n = l, i = c;
        }), n, i];
      };
      typeof (t == null ? undefined : t.autoFreeze) == "boolean" && this.setAutoFreeze(t.autoFreeze), typeof (t == null ? undefined : t.useStrictShallowCopy) == "boolean" && this.setUseStrictShallowCopy(t.useStrictShallowCopy);
    }
    return _createClass(J, [{
      key: "createDraft",
      value: function createDraft(t) {
        A(t) || h(8), O(t) && (t = re(t));
        var r = ie(this),
          n = W(t, undefined);
        return n[u].l = true, Z(r), n;
      }
    }, {
      key: "finishDraft",
      value: function finishDraft(t, r) {
        var n = t && t[u];
        (!n || !n.l) && h(9);
        var i = n.n;
        return oe(i, r), se(undefined, i);
      }
    }, {
      key: "setAutoFreeze",
      value: function setAutoFreeze(t) {
        this.y = t;
      }
    }, {
      key: "setUseStrictShallowCopy",
      value: function setUseStrictShallowCopy(t) {
        this.S = t;
      }
    }, {
      key: "applyPatches",
      value: function applyPatches(t, r) {
        var n;
        for (n = r.length - 1; n >= 0; n--) {
          var f = r[n];
          if (f.path.length === 0 && f.op === "replace") {
            t = f.value;
            break;
          }
        }
        n > -1 && (r = r.slice(n + 1));
        var i = w("Patches").A;
        return O(t) ? i(t, r) : this.produce(t, function (f) {
          return i(f, r);
        });
      }
    }]);
  }();
  function W(e, t) {
    var r = v(e) ? w("MapSet").I(e, t) : k(e) ? w("MapSet").D(e, t) : he(e, t);
    return (t ? t.n : B()).a.push(r), r;
  }
  function re(e) {
    return O(e) || h(10, e), Se(e);
  }
  function Se(e) {
    if (!A(e) || $(e)) return e;
    var t = e[u],
      r;
    if (t) {
      if (!t.s) return t.t;
      t.c = true, r = L(e, t.n.p.S);
    } else r = L(e, true);
    return _(r, function (n, i) {
      Q(r, n, Se(i));
    }), t && (t.c = false), r;
  }
  function Pe() {
    var t = "replace",
      r = "add",
      n = "remove";
    function i(s, S, m, x) {
      switch (s.o) {
        case 0:
        case 2:
          return l(s, S, m, x);
        case 1:
          return f(s, S, m, x);
        case 3:
          return c(s, S, m, x);
      }
    }
    function f(s, S, m, x) {
      var _ref3, _ref4;
      var I = s.t,
        P = s.r,
        g = s.e;
      g.length < I.length && (_ref3 = [g, I], I = _ref3[0], g = _ref3[1], _ref4 = [x, m], m = _ref4[0], x = _ref4[1]);
      for (var y = 0; y < I.length; y++) if (P[y] && g[y] !== I[y]) {
        var d = S.concat([y]);
        m.push({
          op: t,
          path: d,
          value: p(g[y])
        }), x.push({
          op: t,
          path: d,
          value: p(I[y])
        });
      }
      for (var _y2 = I.length; _y2 < g.length; _y2++) {
        var _d = S.concat([_y2]);
        m.push({
          op: r,
          path: _d,
          value: p(g[_y2])
        });
      }
      for (var _y4 = g.length - 1; I.length <= _y4; --_y4) {
        var _d2 = S.concat([_y4]);
        x.push({
          op: n,
          path: _d2
        });
      }
    }
    function l(s, S, m, x) {
      var I = s.t,
        P = s.e;
      _(s.r, function (g, y) {
        var d = X(I, g),
          H = X(P, g),
          F = y ? R(I, g) ? t : r : n;
        if (d === H && F === t) return;
        var D = S.concat(g);
        m.push(F === n ? {
          op: F,
          path: D
        } : {
          op: F,
          path: D,
          value: H
        }), x.push(F === r ? {
          op: n,
          path: D
        } : F === n ? {
          op: r,
          path: D,
          value: p(d)
        } : {
          op: t,
          path: D,
          value: p(d)
        });
      });
    }
    function c(s, S, m, x) {
      var I = s.t,
        P = s.e,
        g = 0;
      I.forEach(function (y) {
        if (!P.has(y)) {
          var d = S.concat([g]);
          m.push({
            op: n,
            path: d,
            value: y
          }), x.unshift({
            op: r,
            path: d,
            value: y
          });
        }
        g++;
      }), g = 0, P.forEach(function (y) {
        if (!I.has(y)) {
          var d = S.concat([g]);
          m.push({
            op: r,
            path: d,
            value: y
          }), x.unshift({
            op: n,
            path: d,
            value: y
          });
        }
        g++;
      });
    }
    function b(s, S, m, x) {
      m.push({
        op: t,
        path: [],
        value: S === j ? undefined : S
      }), x.push({
        op: t,
        path: [],
        value: s
      });
    }
    function a(s, S) {
      return S.forEach(function (m) {
        var x = m.path,
          I = m.op,
          P = s;
        for (var H = 0; H < x.length - 1; H++) {
          var F = C(P),
            D = x[H];
          typeof D != "string" && typeof D != "number" && (D = "" + D), (F === 0 || F === 1) && (D === "__proto__" || D === "constructor") && h(19), typeof P == "function" && D === "prototype" && h(19), P = X(P, D), typeof P != "object" && h(18, x.join("/"));
        }
        var g = C(P),
          y = o(m.value),
          d = x[x.length - 1];
        switch (I) {
          case t:
            switch (g) {
              case 2:
                return P.set(d, y);
              case 3:
                h(16);
              default:
                return P[d] = y;
            }
          case r:
            switch (g) {
              case 1:
                return d === "-" ? P.push(y) : P.splice(d, 0, y);
              case 2:
                return P.set(d, y);
              case 3:
                return P.add(y);
              default:
                return P[d] = y;
            }
          case n:
            switch (g) {
              case 1:
                return P.splice(d, 1);
              case 2:
                return P.delete(d);
              case 3:
                return P.delete(m.value);
              default:
                return delete P[d];
            }
          default:
            h(17, I);
        }
      }), s;
    }
    function o(s) {
      if (!A(s)) return s;
      if (Array.isArray(s)) return s.map(o);
      if (v(s)) return new Map(Array.from(s.entries()).map(function (_ref5) {
        var _ref6 = _slicedToArray(_ref5, 2),
          m = _ref6[0],
          x = _ref6[1];
        return [m, o(x)];
      }));
      if (k(s)) return new Set(Array.from(s).map(o));
      var S = Object.create(z(s));
      for (var m in s) S[m] = o(s[m]);
      return R(s, N) && (S[N] = s[N]), S;
    }
    function p(s) {
      return O(s) ? o(s) : s;
    }
    Y("Patches", {
      A: a,
      g: i,
      T: b
    });
  }
  function xe() {
    var e = /*#__PURE__*/function (_Map, _ref7) {
      function e(a, o) {
        var _this3;
        _classCallCheck(this, e);
        _this3 = _callSuper(this, e);
        _this3[u] = {
          o: 2,
          i: o,
          n: o ? o.n : B(),
          s: false,
          c: false,
          e: undefined,
          r: undefined,
          t: a,
          u: _this3,
          l: false,
          m: false
        };
        return _this3;
      }
      _inherits(e, _Map);
      return _createClass(e, [{
        key: "size",
        get: function get() {
          return T(this[u]).size;
        }
      }, {
        key: "has",
        value: function has(a) {
          return T(this[u]).has(a);
        }
      }, {
        key: "set",
        value: function set(a, o) {
          var p = this[u];
          return l(p), (!T(p).has(a) || T(p).get(a) !== o) && (r(p), E(p), p.r.set(a, true), p.e.set(a, o), p.r.set(a, true)), this;
        }
      }, {
        key: "delete",
        value: function _delete(a) {
          if (!this.has(a)) return false;
          var o = this[u];
          return l(o), r(o), E(o), o.t.has(a) ? o.r.set(a, false) : o.r.delete(a), o.e.delete(a), true;
        }
      }, {
        key: "clear",
        value: function clear() {
          var a = this[u];
          l(a), T(a).size && (r(a), E(a), a.r = new Map(), _(a.t, function (o) {
            a.r.set(o, false);
          }), a.e.clear());
        }
      }, {
        key: "forEach",
        value: function forEach(a, o) {
          var _this4 = this;
          var p = this[u];
          T(p).forEach(function (s, S, m) {
            a.call(o, _this4.get(S), S, _this4);
          });
        }
      }, {
        key: "get",
        value: function get(a) {
          var o = this[u];
          l(o);
          var p = T(o).get(a);
          if (o.c || !A(p) || p !== o.t.get(a)) return p;
          var s = W(p, o);
          return r(o), o.e.set(a, s), s;
        }
      }, {
        key: "keys",
        value: function keys() {
          return T(this[u]).keys();
        }
      }, {
        key: "values",
        value: function values() {
          var _this5 = this;
          var a = this.keys();
          return _defineProperty(_defineProperty({}, Symbol.iterator, function () {
            return _this5.values();
          }), "next", function next() {
            var o = a.next();
            return o.done ? o : {
              done: false,
              value: _this5.get(o.value)
            };
          });
        }
      }, {
        key: "entries",
        value: function entries() {
          var _this6 = this;
          var a = this.keys();
          return _defineProperty(_defineProperty({}, Symbol.iterator, function () {
            return _this6.entries();
          }), "next", function next() {
            var o = a.next();
            if (o.done) return o;
            var p = _this6.get(o.value);
            return {
              done: false,
              value: [o.value, p]
            };
          });
        }
      }, {
        key: _ref7,
        value: function value() {
          return this.entries();
        }
      }]);
    }(/*#__PURE__*/_wrapNativeSuper(Map), (u, Symbol.iterator));
    function t(c, b) {
      return new e(c, b);
    }
    function r(c) {
      c.e || (c.r = new Map(), c.e = new Map(c.t));
    }
    var n = /*#__PURE__*/function (_Set, _ref10) {
      function n(a, o) {
        var _this7;
        _classCallCheck(this, n);
        _this7 = _callSuper(this, n);
        _this7[u] = {
          o: 3,
          i: o,
          n: o ? o.n : B(),
          s: false,
          c: false,
          e: undefined,
          t: a,
          u: _this7,
          a: new Map(),
          m: false,
          l: false
        };
        return _this7;
      }
      _inherits(n, _Set);
      return _createClass(n, [{
        key: "size",
        get: function get() {
          return T(this[u]).size;
        }
      }, {
        key: "has",
        value: function has(a) {
          var o = this[u];
          return l(o), o.e ? !!(o.e.has(a) || o.a.has(a) && o.e.has(o.a.get(a))) : o.t.has(a);
        }
      }, {
        key: "add",
        value: function add(a) {
          var o = this[u];
          return l(o), this.has(a) || (f(o), E(o), o.e.add(a)), this;
        }
      }, {
        key: "delete",
        value: function _delete(a) {
          if (!this.has(a)) return false;
          var o = this[u];
          return l(o), f(o), E(o), o.e.delete(a) || (o.a.has(a) ? o.e.delete(o.a.get(a)) : false);
        }
      }, {
        key: "clear",
        value: function clear() {
          var a = this[u];
          l(a), T(a).size && (f(a), E(a), a.e.clear());
        }
      }, {
        key: "values",
        value: function values() {
          var a = this[u];
          return l(a), f(a), a.e.values();
        }
      }, {
        key: "entries",
        value: function entries() {
          var a = this[u];
          return l(a), f(a), a.e.entries();
        }
      }, {
        key: "keys",
        value: function keys() {
          return this.values();
        }
      }, {
        key: _ref10,
        value: function value() {
          return this.values();
        }
      }, {
        key: "forEach",
        value: function forEach(a, o) {
          var p = this.values(),
            s = p.next();
          for (; !s.done;) a.call(o, s.value, s.value, this), s = p.next();
        }
      }]);
    }(/*#__PURE__*/_wrapNativeSuper(Set), (u, Symbol.iterator));
    function i(c, b) {
      return new n(c, b);
    }
    function f(c) {
      c.e || (c.e = new Set(), c.t.forEach(function (b) {
        if (A(b)) {
          var a = W(b, c);
          c.a.set(b, a), c.e.add(a);
        } else c.e.add(b);
      }));
    }
    function l(c) {
      c.m && h(3, JSON.stringify(T(c)));
    }
    Y("MapSet", {
      I: t,
      D: i
    });
  }
  var M = new J(),
    Fe = M.produce,
    Ne = M.produceWithPatches.bind(M),
    ze = M.setAutoFreeze.bind(M),
    je = M.setUseStrictShallowCopy.bind(M),
    Ce = M.applyPatches.bind(M),
    Re = M.createDraft.bind(M),
    ve = M.finishDraft.bind(M);
  function ke(e) {
    return e;
  }
  function Ke(e) {
    return e;
  }
  0;
},575,[99,23,25,28,160,12,13,38]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GET_WEATHER_API = undefined;
  var GET_WEATHER_API = exports.GET_WEATHER_API = "https://api.openweathermap.org/data/2.5/weather";
},576,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.weatherInitialState = exports.ResponseState = undefined;
  var ResponseState = exports.ResponseState = /*#__PURE__*/function (ResponseState) {
    ResponseState["Idle"] = "IDLE";
    ResponseState["Loading"] = "LOADING";
    ResponseState["Success"] = "SUCCESS";
    ResponseState["Failed"] = "FAILED";
    return ResponseState;
  }({});
  var weatherInitialState = exports.weatherInitialState = {
    weather: null,
    status: ResponseState.Idle,
    error: ""
  };
},577,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.useTheme = exports.ThemeProvider = undefined;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[3]);
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var ThemeContext = (0, _react.createContext)({
    theme: 'light',
    toggleTheme: function toggleTheme() {}
  });
  var ThemeProvider = exports.ThemeProvider = function ThemeProvider(_ref) {
    var children = _ref.children;
    var _useState = (0, _react.useState)('light'),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      theme = _useState2[0],
      setTheme = _useState2[1];
    var toggleTheme = function toggleTheme() {
      setTheme(function (prev) {
        return prev === 'light' ? 'dark' : 'light';
      });
    };
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(ThemeContext.Provider, {
      value: {
        theme: theme,
        toggleTheme: toggleTheme
      },
      children: children
    });
  };
  var useTheme = exports.useTheme = function useTheme() {
    return (0, _react.useContext)(ThemeContext);
  };
},578,[1,38,119,251]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.HomePage = undefined;
  var _asyncToGenerator2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));
  var _Ionicons = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);
  var _asyncStorage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[7]);
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  var HomePage = exports.HomePage = function HomePage() {
    var _weather$weather, _weather$weather$, _weather$weather$$mai;
    var _useTheme = (0, _$$_REQUIRE(_dependencyMap[8]).useTheme)(),
      theme = _useTheme.theme,
      toggleTheme = _useTheme.toggleTheme;
    var isDarkMode = theme === 'dark';
    var weatherDispatch = (0, _$$_REQUIRE(_dependencyMap[9]).useDispatch)();
    var _useSelector = (0, _$$_REQUIRE(_dependencyMap[9]).useSelector)(function (state) {
        return state.weatherReducerState;
      }),
      weather = _useSelector.weather,
      status = _useSelector.status,
      error = _useSelector.error;
    var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      searchVisible = _useState2[0],
      setSearchVisible = _useState2[1];
    var _useState3 = (0, _react.useState)(""),
      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
      searchInput = _useState4[0],
      setSearchInput = _useState4[1];
    var searchTimer = (0, _react.useRef)(null);
    var _useState5 = (0, _react.useState)(''),
      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),
      lastSearchedCity = _useState6[0],
      setLastSearchedCity = _useState6[1];
    var backgroundImage = isDarkMode ? _$$_REQUIRE(_dependencyMap[10]) : _$$_REQUIRE(_dependencyMap[11]);
    function onInputChange(value) {
      setSearchInput(value);
    }
    var saveSearchedCity = /*#__PURE__*/function () {
      var _ref = (0, _asyncToGenerator2.default)(function* (searchCity) {
        yield _asyncStorage.default.setItem(_$$_REQUIRE(_dependencyMap[12]).LAST_SEARCHED_CITY, searchCity);
      });
      return function saveSearchedCity(_x) {
        return _ref.apply(this, arguments);
      };
    }();
    (0, _react.useEffect)(function () {
      if (searchTimer.current) {
        clearTimeout(searchTimer.current);
      }
      searchTimer.current = setTimeout(function () {
        if (searchInput != "") {
          weatherDispatch((0, _$$_REQUIRE(_dependencyMap[13]).fetchWeatherData)(searchInput));
          saveSearchedCity(searchInput);
        }
      }, 2000);
      return function () {
        return clearTimeout(searchTimer.current);
      };
    }, [searchInput]);
    (0, _react.useEffect)(function () {
      var getLastSearchedCity = /*#__PURE__*/function () {
        var _ref2 = (0, _asyncToGenerator2.default)(function* () {
          var city = yield _asyncStorage.default.getItem(_$$_REQUIRE(_dependencyMap[12]).LAST_SEARCHED_CITY);
          if (city) {
            setLastSearchedCity(city);
            weatherDispatch((0, _$$_REQUIRE(_dependencyMap[13]).fetchWeatherData)(city));
          }
        });
        return function getLastSearchedCity() {
          return _ref2.apply(this, arguments);
        };
      }();
      getLastSearchedCity();
    }, []);
    var weatherMain = weather == null ? undefined : (_weather$weather = weather.weather) == null ? undefined : (_weather$weather$ = _weather$weather[0]) == null ? undefined : (_weather$weather$$mai = _weather$weather$.main) == null ? undefined : _weather$weather$$mai.toLowerCase();
    var styles = _reactNative.StyleSheet.create({
      mainContainer: {
        flex: 1
      },
      cardContainer: {
        flex: 1
      },
      container: {
        flex: 1,
        alignItems: "center",
        justifyContent: "center"
      },
      background: {
        flex: 1,
        resizeMode: 'cover'
      },
      topBar: {
        flexDirection: "row",
        justifyContent: "space-between",
        alignItems: "center",
        paddingTop: 10,
        paddingBottom: 10,
        backgroundColor: isDarkMode ? "#0f172a" : "#f3f4f6"
      },
      title: {
        fontSize: 26,
        fontWeight: "600",
        color: isDarkMode ? "white" : "black",
        backgroundColor: isDarkMode ? "#0f172a" : "#f3f4f6"
      },
      searchBox: {
        marginTop: 10,
        backgroundColor: "#fff",
        borderRadius: 10,
        paddingHorizontal: 10,
        paddingVertical: 5,
        elevation: 2
      },
      searchIcon: {
        color: isDarkMode ? "white" : "black"
      },
      rightControls: {
        flexDirection: 'row',
        alignItems: 'center',
        gap: 12
      },
      input: {
        height: 40,
        fontSize: 16
      }
    });
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.ImageBackground, {
      source: backgroundImage,
      style: styles.background,
      children: /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: styles.mainContainer,
        children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactNative.View, {
          style: styles.topBar,
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.Text, {
            style: styles.title,
            children: "Weather"
          }), /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactNative.View, {
            style: styles.rightControls,
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
              onPress: function onPress() {
                return setSearchVisible(!searchVisible);
              },
              children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Ionicons.default, {
                name: "search-outline",
                size: 30,
                style: styles.searchIcon
              })
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.Switch, {
              value: isDarkMode,
              onValueChange: toggleTheme,
              thumbColor: isDarkMode ? "#facc15" : "#0f172a",
              trackColor: {
                false: "#ccc",
                true: "#334155"
              }
            })]
          })]
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactNative.View, {
          style: styles.cardContainer,
          children: [searchVisible && /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.View, {
            style: styles.searchBox,
            children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.TextInput, {
              placeholder: "Enter city",
              value: searchInput,
              onChangeText: function onChangeText(textChange) {
                onInputChange(textChange);
              },
              style: styles.input
            })
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.View, {
            style: styles.container,
            children: status === _$$_REQUIRE(_dependencyMap[14]).ResponseState.Loading ? /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.ActivityIndicator, {
              size: "large",
              color: "#007BFF",
              style: {
                marginTop: 50
              }
            }) : error ? /*#__PURE__*/(0, _jsxRuntime.jsx)(_$$_REQUIRE(_dependencyMap[15]).ErrorPlaceholder, {}) : lastSearchedCity == "" && !weather ? /*#__PURE__*/(0, _jsxRuntime.jsx)(_$$_REQUIRE(_dependencyMap[16]).WeatherPlaceHolder, {}) : /*#__PURE__*/(0, _jsxRuntime.jsx)(_jsxRuntime.Fragment, {
              children: weather && /*#__PURE__*/(0, _jsxRuntime.jsx)(_$$_REQUIRE(_dependencyMap[17]).WeatherCardReport, {
                weather: weather
              })
            })
          })]
        })]
      })
    });
  };
},579,[1,363,38,119,580,2,591,251,578,509,597,598,599,513,577,600,603,604]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getImageSourceSync = exports.getImageSource = exports.default = exports.Button = undefined;
  var _createIconSet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _Ionicons = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  /**
   * Ionicons icon set component.
   * Usage: <Ionicons name="icon-name" size={20} color="#4F8EF7" />
   */

  var iconSet = (0, _createIconSet.default)(_Ionicons.default, 'Ionicons', 'Ionicons.ttf');
  var _default = exports.default = iconSet;
  var Button = exports.Button = iconSet.Button,
    getImageSource = exports.getImageSource = iconSet.getImageSource,
    getImageSourceSync = exports.getImageSourceSync = iconSet.getImageSourceSync;
},580,[1,581,590]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.DEFAULT_ICON_SIZE = exports.DEFAULT_ICON_COLOR = undefined;
  exports.default = createIconSet;
  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _asyncToGenerator2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));
  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);
  var _ensureNativeModuleAvailable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));
  var _createIconSourceCache = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));
  var _iconButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));
  var _NativeRNVectorIcons = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[16]);
  var _excluded = ["name", "size", "color", "style", "children"];
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var DEFAULT_ICON_SIZE = exports.DEFAULT_ICON_SIZE = 12;
  var DEFAULT_ICON_COLOR = exports.DEFAULT_ICON_COLOR = 'black';
  function createIconSet(glyphMap, fontFamily, fontFile, fontStyle) {
    // Android doesn't care about actual fontFamily name, it will only look in fonts folder.
    var fontBasename = fontFile ? fontFile.replace(/\.(otf|ttf)$/, '') : fontFamily;
    var fontReference = _reactNative.Platform.select({
      windows: `/Assets/${fontFile}#${fontFamily}`,
      android: fontBasename,
      web: fontBasename,
      default: fontFamily
    });
    var IconNamePropType = _propTypes.default.oneOf(Object.keys(glyphMap));
    var Icon = /*#__PURE__*/function (_PureComponent) {
      function Icon() {
        (0, _classCallCheck2.default)(this, Icon);
        return _callSuper(this, Icon, arguments);
      }
      (0, _inherits2.default)(Icon, _PureComponent);
      return (0, _createClass2.default)(Icon, [{
        key: "render",
        value: function render() {
          var _this$props = this.props,
            name = _this$props.name,
            size = _this$props.size,
            color = _this$props.color,
            style = _this$props.style,
            children = _this$props.children,
            props = (0, _objectWithoutProperties2.default)(_this$props, _excluded);
          var glyph = name ? glyphMap[name] || '?' : '';
          if (typeof glyph === 'number') {
            glyph = String.fromCodePoint(glyph);
          }
          var styleDefaults = {
            fontSize: size,
            color: color
          };
          var styleOverrides = {
            fontFamily: fontReference,
            fontWeight: 'normal',
            fontStyle: 'normal'
          };
          props.style = [styleDefaults, style, styleOverrides, fontStyle || {}];
          return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactNative.Text, Object.assign({
            selectable: false
          }, props, {
            children: [glyph, children]
          }));
        }
      }]);
    }(_react.PureComponent);
    Icon.propTypes = {
      allowFontScaling: _propTypes.default.bool,
      name: IconNamePropType,
      size: _propTypes.default.number,
      color: _propTypes.default.any,
      // eslint-disable-line react/forbid-prop-types
      children: _propTypes.default.node,
      style: _propTypes.default.any // eslint-disable-line react/forbid-prop-types
    };
    Icon.defaultProps = {
      size: DEFAULT_ICON_SIZE,
      allowFontScaling: false
    };
    var imageSourceCache = (0, _createIconSourceCache.default)();
    function resolveGlyph(name) {
      var glyph = glyphMap[name] || '?';
      if (typeof glyph === 'number') {
        return String.fromCodePoint(glyph);
      }
      return glyph;
    }
    function getImageSourceSync(name) {
      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_ICON_SIZE;
      var color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_ICON_COLOR;
      (0, _ensureNativeModuleAvailable.default)();
      var glyph = resolveGlyph(name);
      var processedColor = (0, _reactNative.processColor)(color);
      var cacheKey = `${glyph}:${size}:${processedColor}`;
      if (imageSourceCache.has(cacheKey)) {
        return imageSourceCache.get(cacheKey);
      }
      try {
        var imagePath = _NativeRNVectorIcons.default.getImageForFontSync(fontReference, glyph, size, processedColor);
        var value = {
          uri: imagePath,
          scale: _reactNative.PixelRatio.get()
        };
        imageSourceCache.setValue(cacheKey, value);
        return value;
      } catch (error) {
        imageSourceCache.setError(cacheKey, error);
        throw error;
      }
    }
    function getImageSource(_x) {
      return _getImageSource.apply(this, arguments);
    }
    function _getImageSource() {
      _getImageSource = (0, _asyncToGenerator2.default)(function* (name) {
        var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_ICON_SIZE;
        var color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_ICON_COLOR;
        (0, _ensureNativeModuleAvailable.default)();
        var glyph = resolveGlyph(name);
        var processedColor = (0, _reactNative.processColor)(color);
        var cacheKey = `${glyph}:${size}:${processedColor}`;
        if (imageSourceCache.has(cacheKey)) {
          return imageSourceCache.get(cacheKey);
        }
        try {
          var imagePath = yield _NativeRNVectorIcons.default.getImageForFont(fontReference, glyph, size, processedColor);
          var value = {
            uri: imagePath,
            scale: _reactNative.PixelRatio.get()
          };
          imageSourceCache.setValue(cacheKey, value);
          return value;
        } catch (error) {
          imageSourceCache.setError(cacheKey, error);
          throw error;
        }
      });
      return _getImageSource.apply(this, arguments);
    }
    function loadFont() {
      return _loadFont.apply(this, arguments);
    }
    function _loadFont() {
      _loadFont = (0, _asyncToGenerator2.default)(function* () {
        var file = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : fontFile;
        if (_reactNative.Platform.OS === 'ios') {
          (0, _ensureNativeModuleAvailable.default)();
          if (!file) {
            throw new Error('Unable to load font, because no file was specified. ');
          }
          yield _NativeRNVectorIcons.default.loadFontWithFileName.apply(_NativeRNVectorIcons.default, (0, _toConsumableArray2.default)(file.split('.')));
        }
      });
      return _loadFont.apply(this, arguments);
    }
    function hasIcon(name) {
      return Object.prototype.hasOwnProperty.call(glyphMap, name);
    }
    function getRawGlyphMap() {
      return glyphMap;
    }
    function getFontFamily() {
      return fontReference;
    }
    Icon.Button = (0, _iconButton.default)(Icon);
    Icon.getImageSource = getImageSource;
    Icon.getImageSourceSync = getImageSourceSync;
    Icon.loadFont = loadFont;
    Icon.hasIcon = hasIcon;
    Icon.getRawGlyphMap = getRawGlyphMap;
    Icon.getFontFamily = getFontFamily;
    return Icon;
  }
},581,[1,6,363,203,12,13,23,25,28,119,582,2,585,587,588,586,251]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  {
    // By explicitly using `prop-types` you are opting into new production behavior.
    // http://fb.me/prop-types-in-prod
    module.exports = _$$_REQUIRE(_dependencyMap[0])();
  }
},582,[583]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  'use strict';

  function emptyFunction() {}
  function emptyFunctionWithReset() {}
  emptyFunctionWithReset.resetWarningCache = emptyFunction;
  module.exports = function () {
    function shim(props, propName, componentName, location, propFullName, secret) {
      if (secret === _$$_REQUIRE(_dependencyMap[0])) {
        // It is still safe when called from React.
        return;
      }
      var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
      err.name = 'Invariant Violation';
      throw err;
    }
    ;
    shim.isRequired = shim;
    function getShim() {
      return shim;
    }
    ;
    // Important!
    // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
    var ReactPropTypes = {
      array: shim,
      bigint: shim,
      bool: shim,
      func: shim,
      number: shim,
      object: shim,
      string: shim,
      symbol: shim,
      any: shim,
      arrayOf: getShim,
      element: shim,
      elementType: shim,
      instanceOf: getShim,
      node: shim,
      objectOf: getShim,
      oneOf: getShim,
      oneOfType: getShim,
      shape: getShim,
      exact: getShim,
      checkPropTypes: emptyFunctionWithReset,
      resetWarningCache: emptyFunction
    };
    ReactPropTypes.PropTypes = ReactPropTypes;
    return ReactPropTypes;
  };
},583,[584]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  'use strict';

  var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
  module.exports = ReactPropTypesSecret;
},584,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = ensureNativeModuleAvailable;
  var _NativeRNVectorIcons = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  function ensureNativeModuleAvailable() {
    if (!_NativeRNVectorIcons.default) {
      throw new Error('The native RNVectorIcons API is not available, did you properly integrate the module? Please verify your autolinking setup and recompile.');
    }
  }
},585,[1,586]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);
  var _default = exports.default = _reactNative.TurboModuleRegistry.get('RNVectorIcons');
},586,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = createIconSourceCache;
  var TYPE_VALUE = 'value';
  var TYPE_ERROR = 'error';
  function createIconSourceCache() {
    var cache = new Map();
    var setValue = function setValue(key, value) {
      return cache.set(key, {
        type: TYPE_VALUE,
        data: value
      });
    };
    var setError = function setError(key, error) {
      return cache.set(key, {
        type: TYPE_ERROR,
        data: error
      });
    };
    var has = function has(key) {
      return cache.has(key);
    };
    var get = function get(key) {
      if (!cache.has(key)) {
        return undefined;
      }
      var _cache$get = cache.get(key),
        type = _cache$get.type,
        data = _cache$get.data;
      if (type === TYPE_ERROR) {
        throw data;
      }
      return data;
    };
    return {
      setValue: setValue,
      setError: setError,
      has: has,
      get: get
    };
  }
},587,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = createIconButtonComponent;
  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));
  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));
  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[10]);
  var _excluded = ["style", "iconStyle", "children"];
  function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      justifyContent: 'flex-start',
      alignItems: 'center',
      padding: 8
    },
    touchable: {
      overflow: 'hidden'
    },
    icon: {
      marginRight: 10
    },
    text: {
      fontWeight: '600',
      backgroundColor: 'transparent'
    }
  });
  var IOS7_BLUE = '#007AFF';
  var TEXT_PROP_NAMES = ['ellipsizeMode', 'numberOfLines', 'textBreakStrategy', 'selectable', 'suppressHighlighting', 'allowFontScaling', 'adjustsFontSizeToFit', 'minimumFontScale'];
  var TOUCHABLE_PROP_NAMES = ['accessible', 'accessibilityLabel', 'accessibilityHint', 'accessibilityComponentType', 'accessibilityRole', 'accessibilityStates', 'accessibilityTraits', 'onFocus', 'onBlur', 'disabled', 'onPress', 'onPressIn', 'onPressOut', 'onLayout', 'onLongPress', 'nativeID', 'testID', 'delayPressIn', 'delayPressOut', 'delayLongPress', 'activeOpacity', 'underlayColor', 'selectionColor', 'onShowUnderlay', 'onHideUnderlay', 'hasTVPreferredFocus', 'tvParallaxProperties'];
  function createIconButtonComponent(Icon) {
    var _IconButton;
    return _IconButton = /*#__PURE__*/function (_PureComponent) {
      function IconButton() {
        (0, _classCallCheck2.default)(this, IconButton);
        return _callSuper(this, IconButton, arguments);
      }
      (0, _inherits2.default)(IconButton, _PureComponent);
      return (0, _createClass2.default)(IconButton, [{
        key: "render",
        value: function render() {
          var _this$props = this.props,
            style = _this$props.style,
            iconStyle = _this$props.iconStyle,
            children = _this$props.children,
            restProps = (0, _objectWithoutProperties2.default)(_this$props, _excluded);
          var iconProps = (0, _$$_REQUIRE(_dependencyMap[11]).pick)(restProps, TEXT_PROP_NAMES, 'style', 'name', 'size', 'color');
          var touchableProps = (0, _$$_REQUIRE(_dependencyMap[11]).pick)(restProps, TOUCHABLE_PROP_NAMES);
          var props = (0, _$$_REQUIRE(_dependencyMap[11]).omit)(restProps, Object.keys(iconProps), Object.keys(touchableProps), 'iconStyle', 'borderRadius', 'backgroundColor');
          iconProps.style = iconStyle ? [styles.icon, iconStyle] : styles.icon;
          var colorStyle = (0, _$$_REQUIRE(_dependencyMap[11]).pick)(this.props, 'color');
          var blockStyle = (0, _$$_REQUIRE(_dependencyMap[11]).pick)(this.props, 'backgroundColor', 'borderRadius');
          return /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.TouchableHighlight, Object.assign({
            style: [styles.touchable, blockStyle]
          }, touchableProps, {
            children: /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactNative.View, Object.assign({
              style: [styles.container, blockStyle, style]
            }, props, {
              children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(Icon, Object.assign({}, iconProps)), typeof children === 'string' ? /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.Text, {
                style: [styles.text, colorStyle],
                selectable: false,
                children: children
              }) : children]
            }))
          }));
        }
      }]);
    }(_react.PureComponent), _IconButton.propTypes = {
      backgroundColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
      borderRadius: _propTypes.default.number,
      color: _propTypes.default.any,
      // eslint-disable-line react/forbid-prop-types
      size: _propTypes.default.number,
      iconStyle: _propTypes.default.any,
      // eslint-disable-line react/forbid-prop-types
      style: _propTypes.default.any,
      // eslint-disable-line react/forbid-prop-types
      children: _propTypes.default.node
    }, _IconButton.defaultProps = {
      backgroundColor: IOS7_BLUE,
      borderRadius: 5,
      color: 'white',
      size: 20
    }, _IconButton;
  }
},588,[1,203,12,13,23,25,28,119,582,2,251,589]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var pick = function pick(obj) {
    for (var _len = arguments.length, keys = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      keys[_key - 1] = arguments[_key];
    }
    return keys.flat().filter(function (key) {
      return Object.prototype.hasOwnProperty.call(obj, key);
    }).reduce(function (acc, key) {
      acc[key] = obj[key];
      return acc;
    }, {});
  };
  var omit = function omit(obj) {
    for (var _len2 = arguments.length, keysToOmit = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      keysToOmit[_key2 - 1] = arguments[_key2];
    }
    var keysToOmitSet = new Set(keysToOmit.flat());
    return Object.getOwnPropertyNames(obj).filter(function (key) {
      return !keysToOmitSet.has(key);
    }).reduce(function (acc, key) {
      acc[key] = obj[key];
      return acc;
    }, {});
  };
  module.exports = {
    pick: pick,
    omit: omit
  };
},589,[]);
__d(function(global, require, _importDefaultUnused, _importAllUnused, module, exports, _dependencyMapUnused) {
  module.exports = {
  "accessibility": 59905,
  "accessibility-outline": 59906,
  "accessibility-sharp": 59907,
  "add": 59908,
  "add-circle": 59909,
  "add-circle-outline": 59910,
  "add-circle-sharp": 59911,
  "add-outline": 59912,
  "add-sharp": 59913,
  "airplane": 59914,
  "airplane-outline": 59915,
  "airplane-sharp": 59916,
  "alarm": 59917,
  "alarm-outline": 59918,
  "alarm-sharp": 59919,
  "albums": 59920,
  "albums-outline": 59921,
  "albums-sharp": 59922,
  "alert": 59923,
  "alert-circle": 59924,
  "alert-circle-outline": 59925,
  "alert-circle-sharp": 59926,
  "alert-outline": 59927,
  "alert-sharp": 59928,
  "american-football": 59929,
  "american-football-outline": 59930,
  "american-football-sharp": 59931,
  "analytics": 59932,
  "analytics-outline": 59933,
  "analytics-sharp": 59934,
  "aperture": 59935,
  "aperture-outline": 59936,
  "aperture-sharp": 59937,
  "apps": 59938,
  "apps-outline": 59939,
  "apps-sharp": 59940,
  "archive": 59941,
  "archive-outline": 59942,
  "archive-sharp": 59943,
  "arrow-back": 59944,
  "arrow-back-circle": 59945,
  "arrow-back-circle-outline": 59946,
  "arrow-back-circle-sharp": 59947,
  "arrow-back-outline": 59948,
  "arrow-back-sharp": 59949,
  "arrow-down": 59950,
  "arrow-down-circle": 59951,
  "arrow-down-circle-outline": 59952,
  "arrow-down-circle-sharp": 59953,
  "arrow-down-outline": 59954,
  "arrow-down-sharp": 59955,
  "arrow-forward": 59956,
  "arrow-forward-circle": 59957,
  "arrow-forward-circle-outline": 59958,
  "arrow-forward-circle-sharp": 59959,
  "arrow-forward-outline": 59960,
  "arrow-forward-sharp": 59961,
  "arrow-redo": 59962,
  "arrow-redo-circle": 59963,
  "arrow-redo-circle-outline": 59964,
  "arrow-redo-circle-sharp": 59965,
  "arrow-redo-outline": 59966,
  "arrow-redo-sharp": 59967,
  "arrow-undo": 59968,
  "arrow-undo-circle": 59969,
  "arrow-undo-circle-outline": 59970,
  "arrow-undo-circle-sharp": 59971,
  "arrow-undo-outline": 59972,
  "arrow-undo-sharp": 59973,
  "arrow-up": 59974,
  "arrow-up-circle": 59975,
  "arrow-up-circle-outline": 59976,
  "arrow-up-circle-sharp": 59977,
  "arrow-up-outline": 59978,
  "arrow-up-sharp": 59979,
  "at": 59980,
  "at-circle": 59981,
  "at-circle-outline": 59982,
  "at-circle-sharp": 59983,
  "at-outline": 59984,
  "at-sharp": 59985,
  "attach": 59986,
  "attach-outline": 59987,
  "attach-sharp": 59988,
  "backspace": 59989,
  "backspace-outline": 59990,
  "backspace-sharp": 59991,
  "bag": 59992,
  "bag-add": 59993,
  "bag-add-outline": 59994,
  "bag-add-sharp": 59995,
  "bag-check": 59996,
  "bag-check-outline": 59997,
  "bag-check-sharp": 59998,
  "bag-handle": 59999,
  "bag-handle-outline": 60000,
  "bag-handle-sharp": 60001,
  "bag-outline": 60002,
  "bag-remove": 60003,
  "bag-remove-outline": 60004,
  "bag-remove-sharp": 60005,
  "bag-sharp": 60006,
  "balloon": 60007,
  "balloon-outline": 60008,
  "balloon-sharp": 60009,
  "ban": 60010,
  "ban-outline": 60011,
  "ban-sharp": 60012,
  "bandage": 60013,
  "bandage-outline": 60014,
  "bandage-sharp": 60015,
  "bar-chart": 60016,
  "bar-chart-outline": 60017,
  "bar-chart-sharp": 60018,
  "barbell": 60019,
  "barbell-outline": 60020,
  "barbell-sharp": 60021,
  "barcode": 60022,
  "barcode-outline": 60023,
  "barcode-sharp": 60024,
  "baseball": 60025,
  "baseball-outline": 60026,
  "baseball-sharp": 60027,
  "basket": 60028,
  "basket-outline": 60029,
  "basket-sharp": 60030,
  "basketball": 60031,
  "basketball-outline": 60032,
  "basketball-sharp": 60033,
  "battery-charging": 60034,
  "battery-charging-outline": 60035,
  "battery-charging-sharp": 60036,
  "battery-dead": 60037,
  "battery-dead-outline": 60038,
  "battery-dead-sharp": 60039,
  "battery-full": 60040,
  "battery-full-outline": 60041,
  "battery-full-sharp": 60042,
  "battery-half": 60043,
  "battery-half-outline": 60044,
  "battery-half-sharp": 60045,
  "beaker": 60046,
  "beaker-outline": 60047,
  "beaker-sharp": 60048,
  "bed": 60049,
  "bed-outline": 60050,
  "bed-sharp": 60051,
  "beer": 60052,
  "beer-outline": 60053,
  "beer-sharp": 60054,
  "bicycle": 60055,
  "bicycle-outline": 60056,
  "bicycle-sharp": 60057,
  "bluetooth": 60058,
  "bluetooth-outline": 60059,
  "bluetooth-sharp": 60060,
  "boat": 60061,
  "boat-outline": 60062,
  "boat-sharp": 60063,
  "body": 60064,
  "body-outline": 60065,
  "body-sharp": 60066,
  "bonfire": 60067,
  "bonfire-outline": 60068,
  "bonfire-sharp": 60069,
  "book": 60070,
  "book-outline": 60071,
  "book-sharp": 60072,
  "bookmark": 60073,
  "bookmark-outline": 60074,
  "bookmark-sharp": 60075,
  "bookmarks": 60076,
  "bookmarks-outline": 60077,
  "bookmarks-sharp": 60078,
  "bowling-ball": 60079,
  "bowling-ball-outline": 60080,
  "bowling-ball-sharp": 60081,
  "briefcase": 60082,
  "briefcase-outline": 60083,
  "briefcase-sharp": 60084,
  "browsers": 60085,
  "browsers-outline": 60086,
  "browsers-sharp": 60087,
  "brush": 60088,
  "brush-outline": 60089,
  "brush-sharp": 60090,
  "bug": 60091,
  "bug-outline": 60092,
  "bug-sharp": 60093,
  "build": 60094,
  "build-outline": 60095,
  "build-sharp": 60096,
  "bulb": 60097,
  "bulb-outline": 60098,
  "bulb-sharp": 60099,
  "bus": 60100,
  "bus-outline": 60101,
  "bus-sharp": 60102,
  "business": 60103,
  "business-outline": 60104,
  "business-sharp": 60105,
  "cafe": 60106,
  "cafe-outline": 60107,
  "cafe-sharp": 60108,
  "calculator": 60109,
  "calculator-outline": 60110,
  "calculator-sharp": 60111,
  "calendar": 60112,
  "calendar-clear": 60113,
  "calendar-clear-outline": 60114,
  "calendar-clear-sharp": 60115,
  "calendar-number": 60116,
  "calendar-number-outline": 60117,
  "calendar-number-sharp": 60118,
  "calendar-outline": 60119,
  "calendar-sharp": 60120,
  "call": 60121,
  "call-outline": 60122,
  "call-sharp": 60123,
  "camera": 60124,
  "camera-outline": 60125,
  "camera-reverse": 60126,
  "camera-reverse-outline": 60127,
  "camera-reverse-sharp": 60128,
  "camera-sharp": 60129,
  "car": 60130,
  "car-outline": 60131,
  "car-sharp": 60132,
  "car-sport": 60133,
  "car-sport-outline": 60134,
  "car-sport-sharp": 60135,
  "card": 60136,
  "card-outline": 60137,
  "card-sharp": 60138,
  "caret-back": 60139,
  "caret-back-circle": 60140,
  "caret-back-circle-outline": 60141,
  "caret-back-circle-sharp": 60142,
  "caret-back-outline": 60143,
  "caret-back-sharp": 60144,
  "caret-down": 60145,
  "caret-down-circle": 60146,
  "caret-down-circle-outline": 60147,
  "caret-down-circle-sharp": 60148,
  "caret-down-outline": 60149,
  "caret-down-sharp": 60150,
  "caret-forward": 60151,
  "caret-forward-circle": 60152,
  "caret-forward-circle-outline": 60153,
  "caret-forward-circle-sharp": 60154,
  "caret-forward-outline": 60155,
  "caret-forward-sharp": 60156,
  "caret-up": 60157,
  "caret-up-circle": 60158,
  "caret-up-circle-outline": 60159,
  "caret-up-circle-sharp": 60160,
  "caret-up-outline": 60161,
  "caret-up-sharp": 60162,
  "cart": 60163,
  "cart-outline": 60164,
  "cart-sharp": 60165,
  "cash": 60166,
  "cash-outline": 60167,
  "cash-sharp": 60168,
  "cellular": 60169,
  "cellular-outline": 60170,
  "cellular-sharp": 60171,
  "chatbox": 60172,
  "chatbox-ellipses": 60173,
  "chatbox-ellipses-outline": 60174,
  "chatbox-ellipses-sharp": 60175,
  "chatbox-outline": 60176,
  "chatbox-sharp": 60177,
  "chatbubble": 60178,
  "chatbubble-ellipses": 60179,
  "chatbubble-ellipses-outline": 60180,
  "chatbubble-ellipses-sharp": 60181,
  "chatbubble-outline": 60182,
  "chatbubble-sharp": 60183,
  "chatbubbles": 60184,
  "chatbubbles-outline": 60185,
  "chatbubbles-sharp": 60186,
  "checkbox": 60187,
  "checkbox-outline": 60188,
  "checkbox-sharp": 60189,
  "checkmark": 60190,
  "checkmark-circle": 60191,
  "checkmark-circle-outline": 60192,
  "checkmark-circle-sharp": 60193,
  "checkmark-done": 60194,
  "checkmark-done-circle": 60195,
  "checkmark-done-circle-outline": 60196,
  "checkmark-done-circle-sharp": 60197,
  "checkmark-done-outline": 60198,
  "checkmark-done-sharp": 60199,
  "checkmark-outline": 60200,
  "checkmark-sharp": 60201,
  "chevron-back": 60202,
  "chevron-back-circle": 60203,
  "chevron-back-circle-outline": 60204,
  "chevron-back-circle-sharp": 60205,
  "chevron-back-outline": 60206,
  "chevron-back-sharp": 60207,
  "chevron-collapse": 60208,
  "chevron-collapse-outline": 60209,
  "chevron-collapse-sharp": 60210,
  "chevron-down": 60211,
  "chevron-down-circle": 60212,
  "chevron-down-circle-outline": 60213,
  "chevron-down-circle-sharp": 60214,
  "chevron-down-outline": 60215,
  "chevron-down-sharp": 60216,
  "chevron-expand": 60217,
  "chevron-expand-outline": 60218,
  "chevron-expand-sharp": 60219,
  "chevron-forward": 60220,
  "chevron-forward-circle": 60221,
  "chevron-forward-circle-outline": 60222,
  "chevron-forward-circle-sharp": 60223,
  "chevron-forward-outline": 60224,
  "chevron-forward-sharp": 60225,
  "chevron-up": 60226,
  "chevron-up-circle": 60227,
  "chevron-up-circle-outline": 60228,
  "chevron-up-circle-sharp": 60229,
  "chevron-up-outline": 60230,
  "chevron-up-sharp": 60231,
  "clipboard": 60232,
  "clipboard-outline": 60233,
  "clipboard-sharp": 60234,
  "close": 60235,
  "close-circle": 60236,
  "close-circle-outline": 60237,
  "close-circle-sharp": 60238,
  "close-outline": 60239,
  "close-sharp": 60240,
  "cloud": 60241,
  "cloud-circle": 60242,
  "cloud-circle-outline": 60243,
  "cloud-circle-sharp": 60244,
  "cloud-done": 60245,
  "cloud-done-outline": 60246,
  "cloud-done-sharp": 60247,
  "cloud-download": 60248,
  "cloud-download-outline": 60249,
  "cloud-download-sharp": 60250,
  "cloud-offline": 60251,
  "cloud-offline-outline": 60252,
  "cloud-offline-sharp": 60253,
  "cloud-outline": 60254,
  "cloud-sharp": 60255,
  "cloud-upload": 60256,
  "cloud-upload-outline": 60257,
  "cloud-upload-sharp": 60258,
  "cloudy": 60259,
  "cloudy-night": 60260,
  "cloudy-night-outline": 60261,
  "cloudy-night-sharp": 60262,
  "cloudy-outline": 60263,
  "cloudy-sharp": 60264,
  "code": 60265,
  "code-download": 60266,
  "code-download-outline": 60267,
  "code-download-sharp": 60268,
  "code-outline": 60269,
  "code-sharp": 60270,
  "code-slash": 60271,
  "code-slash-outline": 60272,
  "code-slash-sharp": 60273,
  "code-working": 60274,
  "code-working-outline": 60275,
  "code-working-sharp": 60276,
  "cog": 60277,
  "cog-outline": 60278,
  "cog-sharp": 60279,
  "color-fill": 60280,
  "color-fill-outline": 60281,
  "color-fill-sharp": 60282,
  "color-filter": 60283,
  "color-filter-outline": 60284,
  "color-filter-sharp": 60285,
  "color-palette": 60286,
  "color-palette-outline": 60287,
  "color-palette-sharp": 60288,
  "color-wand": 60289,
  "color-wand-outline": 60290,
  "color-wand-sharp": 60291,
  "compass": 60292,
  "compass-outline": 60293,
  "compass-sharp": 60294,
  "construct": 60295,
  "construct-outline": 60296,
  "construct-sharp": 60297,
  "contract": 60298,
  "contract-outline": 60299,
  "contract-sharp": 60300,
  "contrast": 60301,
  "contrast-outline": 60302,
  "contrast-sharp": 60303,
  "copy": 60304,
  "copy-outline": 60305,
  "copy-sharp": 60306,
  "create": 60307,
  "create-outline": 60308,
  "create-sharp": 60309,
  "crop": 60310,
  "crop-outline": 60311,
  "crop-sharp": 60312,
  "cube": 60313,
  "cube-outline": 60314,
  "cube-sharp": 60315,
  "cut": 60316,
  "cut-outline": 60317,
  "cut-sharp": 60318,
  "desktop": 60319,
  "desktop-outline": 60320,
  "desktop-sharp": 60321,
  "diamond": 60322,
  "diamond-outline": 60323,
  "diamond-sharp": 60324,
  "dice": 60325,
  "dice-outline": 60326,
  "dice-sharp": 60327,
  "disc": 60328,
  "disc-outline": 60329,
  "disc-sharp": 60330,
  "document": 60331,
  "document-attach": 60332,
  "document-attach-outline": 60333,
  "document-attach-sharp": 60334,
  "document-lock": 60335,
  "document-lock-outline": 60336,
  "document-lock-sharp": 60337,
  "document-outline": 60338,
  "document-sharp": 60339,
  "document-text": 60340,
  "document-text-outline": 60341,
  "document-text-sharp": 60342,
  "documents": 60343,
  "documents-outline": 60344,
  "documents-sharp": 60345,
  "download": 60346,
  "download-outline": 60347,
  "download-sharp": 60348,
  "duplicate": 60349,
  "duplicate-outline": 60350,
  "duplicate-sharp": 60351,
  "ear": 60352,
  "ear-outline": 60353,
  "ear-sharp": 60354,
  "earth": 60355,
  "earth-outline": 60356,
  "earth-sharp": 60357,
  "easel": 60358,
  "easel-outline": 60359,
  "easel-sharp": 60360,
  "egg": 60361,
  "egg-outline": 60362,
  "egg-sharp": 60363,
  "ellipse": 60364,
  "ellipse-outline": 60365,
  "ellipse-sharp": 60366,
  "ellipsis-horizontal": 60367,
  "ellipsis-horizontal-circle": 60368,
  "ellipsis-horizontal-circle-outline": 60369,
  "ellipsis-horizontal-circle-sharp": 60370,
  "ellipsis-horizontal-outline": 60371,
  "ellipsis-horizontal-sharp": 60372,
  "ellipsis-vertical": 60373,
  "ellipsis-vertical-circle": 60374,
  "ellipsis-vertical-circle-outline": 60375,
  "ellipsis-vertical-circle-sharp": 60376,
  "ellipsis-vertical-outline": 60377,
  "ellipsis-vertical-sharp": 60378,
  "enter": 60379,
  "enter-outline": 60380,
  "enter-sharp": 60381,
  "exit": 60382,
  "exit-outline": 60383,
  "exit-sharp": 60384,
  "expand": 60385,
  "expand-outline": 60386,
  "expand-sharp": 60387,
  "extension-puzzle": 60388,
  "extension-puzzle-outline": 60389,
  "extension-puzzle-sharp": 60390,
  "eye": 60391,
  "eye-off": 60392,
  "eye-off-outline": 60393,
  "eye-off-sharp": 60394,
  "eye-outline": 60395,
  "eye-sharp": 60396,
  "eyedrop": 60397,
  "eyedrop-outline": 60398,
  "eyedrop-sharp": 60399,
  "fast-food": 60400,
  "fast-food-outline": 60401,
  "fast-food-sharp": 60402,
  "female": 60403,
  "female-outline": 60404,
  "female-sharp": 60405,
  "file-tray": 60406,
  "file-tray-full": 60407,
  "file-tray-full-outline": 60408,
  "file-tray-full-sharp": 60409,
  "file-tray-outline": 60410,
  "file-tray-sharp": 60411,
  "file-tray-stacked": 60412,
  "file-tray-stacked-outline": 60413,
  "file-tray-stacked-sharp": 60414,
  "film": 60415,
  "film-outline": 60416,
  "film-sharp": 60417,
  "filter": 60418,
  "filter-circle": 60419,
  "filter-circle-outline": 60420,
  "filter-circle-sharp": 60421,
  "filter-outline": 60422,
  "filter-sharp": 60423,
  "finger-print": 60424,
  "finger-print-outline": 60425,
  "finger-print-sharp": 60426,
  "fish": 60427,
  "fish-outline": 60428,
  "fish-sharp": 60429,
  "fitness": 60430,
  "fitness-outline": 60431,
  "fitness-sharp": 60432,
  "flag": 60433,
  "flag-outline": 60434,
  "flag-sharp": 60435,
  "flame": 60436,
  "flame-outline": 60437,
  "flame-sharp": 60438,
  "flash": 60439,
  "flash-off": 60440,
  "flash-off-outline": 60441,
  "flash-off-sharp": 60442,
  "flash-outline": 60443,
  "flash-sharp": 60444,
  "flashlight": 60445,
  "flashlight-outline": 60446,
  "flashlight-sharp": 60447,
  "flask": 60448,
  "flask-outline": 60449,
  "flask-sharp": 60450,
  "flower": 60451,
  "flower-outline": 60452,
  "flower-sharp": 60453,
  "folder": 60454,
  "folder-open": 60455,
  "folder-open-outline": 60456,
  "folder-open-sharp": 60457,
  "folder-outline": 60458,
  "folder-sharp": 60459,
  "football": 60460,
  "football-outline": 60461,
  "football-sharp": 60462,
  "footsteps": 60463,
  "footsteps-outline": 60464,
  "footsteps-sharp": 60465,
  "funnel": 60466,
  "funnel-outline": 60467,
  "funnel-sharp": 60468,
  "game-controller": 60469,
  "game-controller-outline": 60470,
  "game-controller-sharp": 60471,
  "gift": 60472,
  "gift-outline": 60473,
  "gift-sharp": 60474,
  "git-branch": 60475,
  "git-branch-outline": 60476,
  "git-branch-sharp": 60477,
  "git-commit": 60478,
  "git-commit-outline": 60479,
  "git-commit-sharp": 60480,
  "git-compare": 60481,
  "git-compare-outline": 60482,
  "git-compare-sharp": 60483,
  "git-merge": 60484,
  "git-merge-outline": 60485,
  "git-merge-sharp": 60486,
  "git-network": 60487,
  "git-network-outline": 60488,
  "git-network-sharp": 60489,
  "git-pull-request": 60490,
  "git-pull-request-outline": 60491,
  "git-pull-request-sharp": 60492,
  "glasses": 60493,
  "glasses-outline": 60494,
  "glasses-sharp": 60495,
  "globe": 60496,
  "globe-outline": 60497,
  "globe-sharp": 60498,
  "golf": 60499,
  "golf-outline": 60500,
  "golf-sharp": 60501,
  "grid": 60502,
  "grid-outline": 60503,
  "grid-sharp": 60504,
  "hammer": 60505,
  "hammer-outline": 60506,
  "hammer-sharp": 60507,
  "hand-left": 60508,
  "hand-left-outline": 60509,
  "hand-left-sharp": 60510,
  "hand-right": 60511,
  "hand-right-outline": 60512,
  "hand-right-sharp": 60513,
  "happy": 60514,
  "happy-outline": 60515,
  "happy-sharp": 60516,
  "hardware-chip": 60517,
  "hardware-chip-outline": 60518,
  "hardware-chip-sharp": 60519,
  "headset": 60520,
  "headset-outline": 60521,
  "headset-sharp": 60522,
  "heart": 60523,
  "heart-circle": 60524,
  "heart-circle-outline": 60525,
  "heart-circle-sharp": 60526,
  "heart-dislike": 60527,
  "heart-dislike-circle": 60528,
  "heart-dislike-circle-outline": 60529,
  "heart-dislike-circle-sharp": 60530,
  "heart-dislike-outline": 60531,
  "heart-dislike-sharp": 60532,
  "heart-half": 60533,
  "heart-half-outline": 60534,
  "heart-half-sharp": 60535,
  "heart-outline": 60536,
  "heart-sharp": 60537,
  "help": 60538,
  "help-buoy": 60539,
  "help-buoy-outline": 60540,
  "help-buoy-sharp": 60541,
  "help-circle": 60542,
  "help-circle-outline": 60543,
  "help-circle-sharp": 60544,
  "help-outline": 60545,
  "help-sharp": 60546,
  "home": 60547,
  "home-outline": 60548,
  "home-sharp": 60549,
  "hourglass": 60550,
  "hourglass-outline": 60551,
  "hourglass-sharp": 60552,
  "ice-cream": 60553,
  "ice-cream-outline": 60554,
  "ice-cream-sharp": 60555,
  "id-card": 60556,
  "id-card-outline": 60557,
  "id-card-sharp": 60558,
  "image": 60559,
  "image-outline": 60560,
  "image-sharp": 60561,
  "images": 60562,
  "images-outline": 60563,
  "images-sharp": 60564,
  "infinite": 60565,
  "infinite-outline": 60566,
  "infinite-sharp": 60567,
  "information": 60568,
  "information-circle": 60569,
  "information-circle-outline": 60570,
  "information-circle-sharp": 60571,
  "information-outline": 60572,
  "information-sharp": 60573,
  "invert-mode": 60574,
  "invert-mode-outline": 60575,
  "invert-mode-sharp": 60576,
  "journal": 60577,
  "journal-outline": 60578,
  "journal-sharp": 60579,
  "key": 60580,
  "key-outline": 60581,
  "key-sharp": 60582,
  "keypad": 60583,
  "keypad-outline": 60584,
  "keypad-sharp": 60585,
  "language": 60586,
  "language-outline": 60587,
  "language-sharp": 60588,
  "laptop": 60589,
  "laptop-outline": 60590,
  "laptop-sharp": 60591,
  "layers": 60592,
  "layers-outline": 60593,
  "layers-sharp": 60594,
  "leaf": 60595,
  "leaf-outline": 60596,
  "leaf-sharp": 60597,
  "library": 60598,
  "library-outline": 60599,
  "library-sharp": 60600,
  "link": 60601,
  "link-outline": 60602,
  "link-sharp": 60603,
  "list": 60604,
  "list-circle": 60605,
  "list-circle-outline": 60606,
  "list-circle-sharp": 60607,
  "list-outline": 60608,
  "list-sharp": 60609,
  "locate": 60610,
  "locate-outline": 60611,
  "locate-sharp": 60612,
  "location": 60613,
  "location-outline": 60614,
  "location-sharp": 60615,
  "lock-closed": 60616,
  "lock-closed-outline": 60617,
  "lock-closed-sharp": 60618,
  "lock-open": 60619,
  "lock-open-outline": 60620,
  "lock-open-sharp": 60621,
  "log-in": 60622,
  "log-in-outline": 60623,
  "log-in-sharp": 60624,
  "log-out": 60625,
  "log-out-outline": 60626,
  "log-out-sharp": 60627,
  "logo-alipay": 60628,
  "logo-amazon": 60629,
  "logo-amplify": 60630,
  "logo-android": 60631,
  "logo-angular": 60632,
  "logo-apple": 60633,
  "logo-apple-appstore": 60634,
  "logo-apple-ar": 60635,
  "logo-behance": 60636,
  "logo-bitbucket": 60637,
  "logo-bitcoin": 60638,
  "logo-buffer": 60639,
  "logo-capacitor": 60640,
  "logo-chrome": 60641,
  "logo-closed-captioning": 60642,
  "logo-codepen": 60643,
  "logo-css3": 60644,
  "logo-designernews": 60645,
  "logo-deviantart": 60646,
  "logo-discord": 60647,
  "logo-docker": 60648,
  "logo-dribbble": 60649,
  "logo-dropbox": 60650,
  "logo-edge": 60651,
  "logo-electron": 60652,
  "logo-euro": 60653,
  "logo-facebook": 60654,
  "logo-figma": 60655,
  "logo-firebase": 60656,
  "logo-firefox": 60657,
  "logo-flickr": 60658,
  "logo-foursquare": 60659,
  "logo-github": 60660,
  "logo-gitlab": 60661,
  "logo-google": 60662,
  "logo-google-playstore": 60663,
  "logo-hackernews": 60664,
  "logo-html5": 60665,
  "logo-instagram": 60666,
  "logo-ionic": 60667,
  "logo-ionitron": 60668,
  "logo-javascript": 60669,
  "logo-laravel": 60670,
  "logo-linkedin": 60671,
  "logo-markdown": 60672,
  "logo-mastodon": 60673,
  "logo-medium": 60674,
  "logo-microsoft": 60675,
  "logo-no-smoking": 60676,
  "logo-nodejs": 60677,
  "logo-npm": 60678,
  "logo-octocat": 60679,
  "logo-paypal": 60680,
  "logo-pinterest": 60681,
  "logo-playstation": 60682,
  "logo-pwa": 60683,
  "logo-python": 60684,
  "logo-react": 60685,
  "logo-reddit": 60686,
  "logo-rss": 60687,
  "logo-sass": 60688,
  "logo-skype": 60689,
  "logo-slack": 60690,
  "logo-snapchat": 60691,
  "logo-soundcloud": 60692,
  "logo-stackoverflow": 60693,
  "logo-steam": 60694,
  "logo-stencil": 60695,
  "logo-tableau": 60696,
  "logo-tiktok": 60697,
  "logo-tumblr": 60698,
  "logo-tux": 60699,
  "logo-twitch": 60700,
  "logo-twitter": 60701,
  "logo-usd": 60702,
  "logo-venmo": 60703,
  "logo-vercel": 60704,
  "logo-vimeo": 60705,
  "logo-vk": 60706,
  "logo-vue": 60707,
  "logo-web-component": 60708,
  "logo-wechat": 60709,
  "logo-whatsapp": 60710,
  "logo-windows": 60711,
  "logo-wordpress": 60712,
  "logo-xbox": 60713,
  "logo-xing": 60714,
  "logo-yahoo": 60715,
  "logo-yen": 60716,
  "logo-youtube": 60717,
  "magnet": 60718,
  "magnet-outline": 60719,
  "magnet-sharp": 60720,
  "mail": 60721,
  "mail-open": 60722,
  "mail-open-outline": 60723,
  "mail-open-sharp": 60724,
  "mail-outline": 60725,
  "mail-sharp": 60726,
  "mail-unread": 60727,
  "mail-unread-outline": 60728,
  "mail-unread-sharp": 60729,
  "male": 60730,
  "male-female": 60731,
  "male-female-outline": 60732,
  "male-female-sharp": 60733,
  "male-outline": 60734,
  "male-sharp": 60735,
  "man": 60736,
  "man-outline": 60737,
  "man-sharp": 60738,
  "map": 60739,
  "map-outline": 60740,
  "map-sharp": 60741,
  "medal": 60742,
  "medal-outline": 60743,
  "medal-sharp": 60744,
  "medical": 60745,
  "medical-outline": 60746,
  "medical-sharp": 60747,
  "medkit": 60748,
  "medkit-outline": 60749,
  "medkit-sharp": 60750,
  "megaphone": 60751,
  "megaphone-outline": 60752,
  "megaphone-sharp": 60753,
  "menu": 60754,
  "menu-outline": 60755,
  "menu-sharp": 60756,
  "mic": 60757,
  "mic-circle": 60758,
  "mic-circle-outline": 60759,
  "mic-circle-sharp": 60760,
  "mic-off": 60761,
  "mic-off-circle": 60762,
  "mic-off-circle-outline": 60763,
  "mic-off-circle-sharp": 60764,
  "mic-off-outline": 60765,
  "mic-off-sharp": 60766,
  "mic-outline": 60767,
  "mic-sharp": 60768,
  "moon": 60769,
  "moon-outline": 60770,
  "moon-sharp": 60771,
  "move": 60772,
  "move-outline": 60773,
  "move-sharp": 60774,
  "musical-note": 60775,
  "musical-note-outline": 60776,
  "musical-note-sharp": 60777,
  "musical-notes": 60778,
  "musical-notes-outline": 60779,
  "musical-notes-sharp": 60780,
  "navigate": 60781,
  "navigate-circle": 60782,
  "navigate-circle-outline": 60783,
  "navigate-circle-sharp": 60784,
  "navigate-outline": 60785,
  "navigate-sharp": 60786,
  "newspaper": 60787,
  "newspaper-outline": 60788,
  "newspaper-sharp": 60789,
  "notifications": 60790,
  "notifications-circle": 60791,
  "notifications-circle-outline": 60792,
  "notifications-circle-sharp": 60793,
  "notifications-off": 60794,
  "notifications-off-circle": 60795,
  "notifications-off-circle-outline": 60796,
  "notifications-off-circle-sharp": 60797,
  "notifications-off-outline": 60798,
  "notifications-off-sharp": 60799,
  "notifications-outline": 60800,
  "notifications-sharp": 60801,
  "nuclear": 60802,
  "nuclear-outline": 60803,
  "nuclear-sharp": 60804,
  "nutrition": 60805,
  "nutrition-outline": 60806,
  "nutrition-sharp": 60807,
  "open": 60808,
  "open-outline": 60809,
  "open-sharp": 60810,
  "options": 60811,
  "options-outline": 60812,
  "options-sharp": 60813,
  "paper-plane": 60814,
  "paper-plane-outline": 60815,
  "paper-plane-sharp": 60816,
  "partly-sunny": 60817,
  "partly-sunny-outline": 60818,
  "partly-sunny-sharp": 60819,
  "pause": 60820,
  "pause-circle": 60821,
  "pause-circle-outline": 60822,
  "pause-circle-sharp": 60823,
  "pause-outline": 60824,
  "pause-sharp": 60825,
  "paw": 60826,
  "paw-outline": 60827,
  "paw-sharp": 60828,
  "pencil": 60829,
  "pencil-outline": 60830,
  "pencil-sharp": 60831,
  "people": 60832,
  "people-circle": 60833,
  "people-circle-outline": 60834,
  "people-circle-sharp": 60835,
  "people-outline": 60836,
  "people-sharp": 60837,
  "person": 60838,
  "person-add": 60839,
  "person-add-outline": 60840,
  "person-add-sharp": 60841,
  "person-circle": 60842,
  "person-circle-outline": 60843,
  "person-circle-sharp": 60844,
  "person-outline": 60845,
  "person-remove": 60846,
  "person-remove-outline": 60847,
  "person-remove-sharp": 60848,
  "person-sharp": 60849,
  "phone-landscape": 60850,
  "phone-landscape-outline": 60851,
  "phone-landscape-sharp": 60852,
  "phone-portrait": 60853,
  "phone-portrait-outline": 60854,
  "phone-portrait-sharp": 60855,
  "pie-chart": 60856,
  "pie-chart-outline": 60857,
  "pie-chart-sharp": 60858,
  "pin": 60859,
  "pin-outline": 60860,
  "pin-sharp": 60861,
  "pint": 60862,
  "pint-outline": 60863,
  "pint-sharp": 60864,
  "pizza": 60865,
  "pizza-outline": 60866,
  "pizza-sharp": 60867,
  "planet": 60868,
  "planet-outline": 60869,
  "planet-sharp": 60870,
  "play": 60871,
  "play-back": 60872,
  "play-back-circle": 60873,
  "play-back-circle-outline": 60874,
  "play-back-circle-sharp": 60875,
  "play-back-outline": 60876,
  "play-back-sharp": 60877,
  "play-circle": 60878,
  "play-circle-outline": 60879,
  "play-circle-sharp": 60880,
  "play-forward": 60881,
  "play-forward-circle": 60882,
  "play-forward-circle-outline": 60883,
  "play-forward-circle-sharp": 60884,
  "play-forward-outline": 60885,
  "play-forward-sharp": 60886,
  "play-outline": 60887,
  "play-sharp": 60888,
  "play-skip-back": 60889,
  "play-skip-back-circle": 60890,
  "play-skip-back-circle-outline": 60891,
  "play-skip-back-circle-sharp": 60892,
  "play-skip-back-outline": 60893,
  "play-skip-back-sharp": 60894,
  "play-skip-forward": 60895,
  "play-skip-forward-circle": 60896,
  "play-skip-forward-circle-outline": 60897,
  "play-skip-forward-circle-sharp": 60898,
  "play-skip-forward-outline": 60899,
  "play-skip-forward-sharp": 60900,
  "podium": 60901,
  "podium-outline": 60902,
  "podium-sharp": 60903,
  "power": 60904,
  "power-outline": 60905,
  "power-sharp": 60906,
  "pricetag": 60907,
  "pricetag-outline": 60908,
  "pricetag-sharp": 60909,
  "pricetags": 60910,
  "pricetags-outline": 60911,
  "pricetags-sharp": 60912,
  "print": 60913,
  "print-outline": 60914,
  "print-sharp": 60915,
  "prism": 60916,
  "prism-outline": 60917,
  "prism-sharp": 60918,
  "pulse": 60919,
  "pulse-outline": 60920,
  "pulse-sharp": 60921,
  "push": 60922,
  "push-outline": 60923,
  "push-sharp": 60924,
  "qr-code": 60925,
  "qr-code-outline": 60926,
  "qr-code-sharp": 60927,
  "radio": 60928,
  "radio-button-off": 60929,
  "radio-button-off-outline": 60930,
  "radio-button-off-sharp": 60931,
  "radio-button-on": 60932,
  "radio-button-on-outline": 60933,
  "radio-button-on-sharp": 60934,
  "radio-outline": 60935,
  "radio-sharp": 60936,
  "rainy": 60937,
  "rainy-outline": 60938,
  "rainy-sharp": 60939,
  "reader": 60940,
  "reader-outline": 60941,
  "reader-sharp": 60942,
  "receipt": 60943,
  "receipt-outline": 60944,
  "receipt-sharp": 60945,
  "recording": 60946,
  "recording-outline": 60947,
  "recording-sharp": 60948,
  "refresh": 60949,
  "refresh-circle": 60950,
  "refresh-circle-outline": 60951,
  "refresh-circle-sharp": 60952,
  "refresh-outline": 60953,
  "refresh-sharp": 60954,
  "reload": 60955,
  "reload-circle": 60956,
  "reload-circle-outline": 60957,
  "reload-circle-sharp": 60958,
  "reload-outline": 60959,
  "reload-sharp": 60960,
  "remove": 60961,
  "remove-circle": 60962,
  "remove-circle-outline": 60963,
  "remove-circle-sharp": 60964,
  "remove-outline": 60965,
  "remove-sharp": 60966,
  "reorder-four": 60967,
  "reorder-four-outline": 60968,
  "reorder-four-sharp": 60969,
  "reorder-three": 60970,
  "reorder-three-outline": 60971,
  "reorder-three-sharp": 60972,
  "reorder-two": 60973,
  "reorder-two-outline": 60974,
  "reorder-two-sharp": 60975,
  "repeat": 60976,
  "repeat-outline": 60977,
  "repeat-sharp": 60978,
  "resize": 60979,
  "resize-outline": 60980,
  "resize-sharp": 60981,
  "restaurant": 60982,
  "restaurant-outline": 60983,
  "restaurant-sharp": 60984,
  "return-down-back": 60985,
  "return-down-back-outline": 60986,
  "return-down-back-sharp": 60987,
  "return-down-forward": 60988,
  "return-down-forward-outline": 60989,
  "return-down-forward-sharp": 60990,
  "return-up-back": 60991,
  "return-up-back-outline": 60992,
  "return-up-back-sharp": 60993,
  "return-up-forward": 60994,
  "return-up-forward-outline": 60995,
  "return-up-forward-sharp": 60996,
  "ribbon": 60997,
  "ribbon-outline": 60998,
  "ribbon-sharp": 60999,
  "rocket": 61000,
  "rocket-outline": 61001,
  "rocket-sharp": 61002,
  "rose": 61003,
  "rose-outline": 61004,
  "rose-sharp": 61005,
  "sad": 61006,
  "sad-outline": 61007,
  "sad-sharp": 61008,
  "save": 61009,
  "save-outline": 61010,
  "save-sharp": 61011,
  "scale": 61012,
  "scale-outline": 61013,
  "scale-sharp": 61014,
  "scan": 61015,
  "scan-circle": 61016,
  "scan-circle-outline": 61017,
  "scan-circle-sharp": 61018,
  "scan-outline": 61019,
  "scan-sharp": 61020,
  "school": 61021,
  "school-outline": 61022,
  "school-sharp": 61023,
  "search": 61024,
  "search-circle": 61025,
  "search-circle-outline": 61026,
  "search-circle-sharp": 61027,
  "search-outline": 61028,
  "search-sharp": 61029,
  "send": 61030,
  "send-outline": 61031,
  "send-sharp": 61032,
  "server": 61033,
  "server-outline": 61034,
  "server-sharp": 61035,
  "settings": 61036,
  "settings-outline": 61037,
  "settings-sharp": 61038,
  "shapes": 61039,
  "shapes-outline": 61040,
  "shapes-sharp": 61041,
  "share": 61042,
  "share-outline": 61043,
  "share-sharp": 61044,
  "share-social": 61045,
  "share-social-outline": 61046,
  "share-social-sharp": 61047,
  "shield": 61048,
  "shield-checkmark": 61049,
  "shield-checkmark-outline": 61050,
  "shield-checkmark-sharp": 61051,
  "shield-half": 61052,
  "shield-half-outline": 61053,
  "shield-half-sharp": 61054,
  "shield-outline": 61055,
  "shield-sharp": 61056,
  "shirt": 61057,
  "shirt-outline": 61058,
  "shirt-sharp": 61059,
  "shuffle": 61060,
  "shuffle-outline": 61061,
  "shuffle-sharp": 61062,
  "skull": 61063,
  "skull-outline": 61064,
  "skull-sharp": 61065,
  "snow": 61066,
  "snow-outline": 61067,
  "snow-sharp": 61068,
  "sparkles": 61069,
  "sparkles-outline": 61070,
  "sparkles-sharp": 61071,
  "speedometer": 61072,
  "speedometer-outline": 61073,
  "speedometer-sharp": 61074,
  "square": 61075,
  "square-outline": 61076,
  "square-sharp": 61077,
  "star": 61078,
  "star-half": 61079,
  "star-half-outline": 61080,
  "star-half-sharp": 61081,
  "star-outline": 61082,
  "star-sharp": 61083,
  "stats-chart": 61084,
  "stats-chart-outline": 61085,
  "stats-chart-sharp": 61086,
  "stop": 61087,
  "stop-circle": 61088,
  "stop-circle-outline": 61089,
  "stop-circle-sharp": 61090,
  "stop-outline": 61091,
  "stop-sharp": 61092,
  "stopwatch": 61093,
  "stopwatch-outline": 61094,
  "stopwatch-sharp": 61095,
  "storefront": 61096,
  "storefront-outline": 61097,
  "storefront-sharp": 61098,
  "subway": 61099,
  "subway-outline": 61100,
  "subway-sharp": 61101,
  "sunny": 61102,
  "sunny-outline": 61103,
  "sunny-sharp": 61104,
  "swap-horizontal": 61105,
  "swap-horizontal-outline": 61106,
  "swap-horizontal-sharp": 61107,
  "swap-vertical": 61108,
  "swap-vertical-outline": 61109,
  "swap-vertical-sharp": 61110,
  "sync": 61111,
  "sync-circle": 61112,
  "sync-circle-outline": 61113,
  "sync-circle-sharp": 61114,
  "sync-outline": 61115,
  "sync-sharp": 61116,
  "tablet-landscape": 61117,
  "tablet-landscape-outline": 61118,
  "tablet-landscape-sharp": 61119,
  "tablet-portrait": 61120,
  "tablet-portrait-outline": 61121,
  "tablet-portrait-sharp": 61122,
  "telescope": 61123,
  "telescope-outline": 61124,
  "telescope-sharp": 61125,
  "tennisball": 61126,
  "tennisball-outline": 61127,
  "tennisball-sharp": 61128,
  "terminal": 61129,
  "terminal-outline": 61130,
  "terminal-sharp": 61131,
  "text": 61132,
  "text-outline": 61133,
  "text-sharp": 61134,
  "thermometer": 61135,
  "thermometer-outline": 61136,
  "thermometer-sharp": 61137,
  "thumbs-down": 61138,
  "thumbs-down-outline": 61139,
  "thumbs-down-sharp": 61140,
  "thumbs-up": 61141,
  "thumbs-up-outline": 61142,
  "thumbs-up-sharp": 61143,
  "thunderstorm": 61144,
  "thunderstorm-outline": 61145,
  "thunderstorm-sharp": 61146,
  "ticket": 61147,
  "ticket-outline": 61148,
  "ticket-sharp": 61149,
  "time": 61150,
  "time-outline": 61151,
  "time-sharp": 61152,
  "timer": 61153,
  "timer-outline": 61154,
  "timer-sharp": 61155,
  "today": 61156,
  "today-outline": 61157,
  "today-sharp": 61158,
  "toggle": 61159,
  "toggle-outline": 61160,
  "toggle-sharp": 61161,
  "trail-sign": 61162,
  "trail-sign-outline": 61163,
  "trail-sign-sharp": 61164,
  "train": 61165,
  "train-outline": 61166,
  "train-sharp": 61167,
  "transgender": 61168,
  "transgender-outline": 61169,
  "transgender-sharp": 61170,
  "trash": 61171,
  "trash-bin": 61172,
  "trash-bin-outline": 61173,
  "trash-bin-sharp": 61174,
  "trash-outline": 61175,
  "trash-sharp": 61176,
  "trending-down": 61177,
  "trending-down-outline": 61178,
  "trending-down-sharp": 61179,
  "trending-up": 61180,
  "trending-up-outline": 61181,
  "trending-up-sharp": 61182,
  "triangle": 61183,
  "triangle-outline": 61184,
  "triangle-sharp": 61185,
  "trophy": 61186,
  "trophy-outline": 61187,
  "trophy-sharp": 61188,
  "tv": 61189,
  "tv-outline": 61190,
  "tv-sharp": 61191,
  "umbrella": 61192,
  "umbrella-outline": 61193,
  "umbrella-sharp": 61194,
  "unlink": 61195,
  "unlink-outline": 61196,
  "unlink-sharp": 61197,
  "videocam": 61198,
  "videocam-off": 61199,
  "videocam-off-outline": 61200,
  "videocam-off-sharp": 61201,
  "videocam-outline": 61202,
  "videocam-sharp": 61203,
  "volume-high": 61204,
  "volume-high-outline": 61205,
  "volume-high-sharp": 61206,
  "volume-low": 61207,
  "volume-low-outline": 61208,
  "volume-low-sharp": 61209,
  "volume-medium": 61210,
  "volume-medium-outline": 61211,
  "volume-medium-sharp": 61212,
  "volume-mute": 61213,
  "volume-mute-outline": 61214,
  "volume-mute-sharp": 61215,
  "volume-off": 61216,
  "volume-off-outline": 61217,
  "volume-off-sharp": 61218,
  "walk": 61219,
  "walk-outline": 61220,
  "walk-sharp": 61221,
  "wallet": 61222,
  "wallet-outline": 61223,
  "wallet-sharp": 61224,
  "warning": 61225,
  "warning-outline": 61226,
  "warning-sharp": 61227,
  "watch": 61228,
  "watch-outline": 61229,
  "watch-sharp": 61230,
  "water": 61231,
  "water-outline": 61232,
  "water-sharp": 61233,
  "wifi": 61234,
  "wifi-outline": 61235,
  "wifi-sharp": 61236,
  "wine": 61237,
  "wine-outline": 61238,
  "wine-sharp": 61239,
  "woman": 61240,
  "woman-outline": 61241,
  "woman-sharp": 61242
};
},590,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  Object.defineProperty(exports, "useAsyncStorage", {
    enumerable: true,
    get: function get() {
      return _$$_REQUIRE(_dependencyMap[1]).useAsyncStorage;
    }
  });
  var _AsyncStorage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _default = exports.default = _AsyncStorage.default;
},591,[1,592,593]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.useAsyncStorage = useAsyncStorage;
  var _AsyncStorage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  function useAsyncStorage(key) {
    return {
      getItem: function getItem() {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return _AsyncStorage.default.getItem.apply(_AsyncStorage.default, [key].concat(args));
      },
      setItem: function setItem() {
        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }
        return _AsyncStorage.default.setItem.apply(_AsyncStorage.default, [key].concat(args));
      },
      mergeItem: function mergeItem() {
        for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
          args[_key3] = arguments[_key3];
        }
        return _AsyncStorage.default.mergeItem.apply(_AsyncStorage.default, [key].concat(args));
      },
      removeItem: function removeItem() {
        for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
          args[_key4] = arguments[_key4];
        }
        return _AsyncStorage.default.removeItem.apply(_AsyncStorage.default, [key].concat(args));
      }
    };
  }
},592,[1,593]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _RCTAsyncStorage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  /**
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  if (!_RCTAsyncStorage.default) {
    throw new Error(`[@RNC/AsyncStorage]: NativeModule: AsyncStorage is null.

To fix this issue try these steps:

  • Uninstall, rebuild and restart the app.

  • Run the packager with \`--reset-cache\` flag.

  • If you are using CocoaPods on iOS, run \`pod install\` in the \`ios\` directory, then rebuild and re-run the app.

  • Make sure your project's \`package.json\` depends on \`@react-native-async-storage/async-storage\`, even if you only depend on it indirectly through other dependencies. CLI only autolinks native modules found in your \`package.json\`.

  • If this happens while testing with Jest, check out how to integrate AsyncStorage here: https://react-native-async-storage.github.io/async-storage/docs/advanced/jest

If none of these fix the issue, please open an issue on the GitHub repository: https://github.com/react-native-async-storage/async-storage/issues
`);
  }

  /**
   * `AsyncStorage` is a simple, unencrypted, asynchronous, persistent, key-value
   * storage system that is global to the app. It should be used instead of
   * LocalStorage.
   *
   * See https://react-native-async-storage.github.io/async-storage/docs/api
   */
  var AsyncStorage = function () {
    var _getRequests = [];
    var _getKeys = [];
    var _immediate = null;
    return {
      /**
       * Fetches an item for a `key` and invokes a callback upon completion.
       *
       * See https://react-native-async-storage.github.io/async-storage/docs/api#getitem
       */
      getItem: function getItem(key, callback) {
        return new Promise(function (resolve, reject) {
          (0, _$$_REQUIRE(_dependencyMap[3]).checkValidInput)(key);
          _RCTAsyncStorage.default.multiGet([key], function (errors, result) {
            var _result$;
            // Unpack result to get value from [[key,value]]
            var value = result != null && (_result$ = result[0]) != null && _result$[1] ? result[0][1] : null;
            var errs = (0, _$$_REQUIRE(_dependencyMap[3]).convertErrors)(errors);
            callback == null ? undefined : callback(errs == null ? undefined : errs[0], value);
            if (errs) {
              reject(errs[0]);
            } else {
              resolve(value);
            }
          });
        });
      },
      /**
       * Sets the value for a `key` and invokes a callback upon completion.
       *
       * See https://react-native-async-storage.github.io/async-storage/docs/api#setitem
       */
      setItem: function setItem(key, value, callback) {
        return new Promise(function (resolve, reject) {
          (0, _$$_REQUIRE(_dependencyMap[3]).checkValidInput)(key, value);
          _RCTAsyncStorage.default.multiSet([[key, value]], function (errors) {
            var errs = (0, _$$_REQUIRE(_dependencyMap[3]).convertErrors)(errors);
            callback == null ? undefined : callback(errs == null ? undefined : errs[0]);
            if (errs) {
              reject(errs[0]);
            } else {
              resolve();
            }
          });
        });
      },
      /**
       * Removes an item for a `key` and invokes a callback upon completion.
       *
       * See https://react-native-async-storage.github.io/async-storage/docs/api#removeitem
       */
      removeItem: function removeItem(key, callback) {
        return new Promise(function (resolve, reject) {
          (0, _$$_REQUIRE(_dependencyMap[3]).checkValidInput)(key);
          _RCTAsyncStorage.default.multiRemove([key], function (errors) {
            var errs = (0, _$$_REQUIRE(_dependencyMap[3]).convertErrors)(errors);
            callback == null ? undefined : callback(errs == null ? undefined : errs[0]);
            if (errs) {
              reject(errs[0]);
            } else {
              resolve();
            }
          });
        });
      },
      /**
       * Merges an existing `key` value with an input value, assuming both values
       * are stringified JSON.
       *
       * See https://react-native-async-storage.github.io/async-storage/docs/api#mergeitem
       */
      mergeItem: function mergeItem(key, value, callback) {
        return new Promise(function (resolve, reject) {
          (0, _$$_REQUIRE(_dependencyMap[3]).checkValidInput)(key, value);
          _RCTAsyncStorage.default.multiMerge([[key, value]], function (errors) {
            var errs = (0, _$$_REQUIRE(_dependencyMap[3]).convertErrors)(errors);
            callback == null ? undefined : callback(errs == null ? undefined : errs[0]);
            if (errs) {
              reject(errs[0]);
            } else {
              resolve();
            }
          });
        });
      },
      /**
       * Erases *all* `AsyncStorage` for all clients, libraries, etc. You probably
       * don't want to call this; use `removeItem` or `multiRemove` to clear only
       * your app's keys.
       *
       * See https://react-native-async-storage.github.io/async-storage/docs/api#clear
       */
      clear: function clear(callback) {
        return new Promise(function (resolve, reject) {
          _RCTAsyncStorage.default.clear(function (error) {
            var err = (0, _$$_REQUIRE(_dependencyMap[3]).convertError)(error);
            callback == null ? undefined : callback(err);
            if (err) {
              reject(err);
            } else {
              resolve();
            }
          });
        });
      },
      /**
       * Gets *all* keys known to your app; for all callers, libraries, etc.
       *
       * See https://react-native-async-storage.github.io/async-storage/docs/api#getallkeys
       */
      getAllKeys: function getAllKeys(callback) {
        return new Promise(function (resolve, reject) {
          _RCTAsyncStorage.default.getAllKeys(function (error, keys) {
            var err = (0, _$$_REQUIRE(_dependencyMap[3]).convertError)(error);
            callback == null ? undefined : callback(err, keys);
            if (keys) {
              resolve(keys);
            } else {
              reject(err);
            }
          });
        });
      },
      /**
       * The following batched functions are useful for executing a lot of
       * operations at once, allowing for native optimizations and provide the
       * convenience of a single callback after all operations are complete.
       *
       * These functions return arrays of errors, potentially one for every key.
       * For key-specific errors, the Error object will have a key property to
       * indicate which key caused the error.
       */

      /**
       * Flushes any pending requests using a single batch call to get the data.
       *
       * See https://react-native-async-storage.github.io/async-storage/docs/api#flushgetrequests
       * */
      flushGetRequests: function flushGetRequests() {
        var getRequests = _getRequests;
        var getKeys = _getKeys;
        _getRequests = [];
        _getKeys = [];
        _RCTAsyncStorage.default.multiGet(getKeys, function (errors, result) {
          // Even though the runtime complexity of this is theoretically worse vs if we used a map,
          // it's much, much faster in practice for the data sets we deal with (we avoid
          // allocating result pair arrays). This was heavily benchmarked.
          //
          // Is there a way to avoid using the map but fix the bug in this breaking test?
          // https://github.com/facebook/react-native/commit/8dd8ad76579d7feef34c014d387bf02065692264
          var map = {};
          result == null ? undefined : result.forEach(function (_ref) {
            var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
              key = _ref2[0],
              value = _ref2[1];
            map[key] = value;
            return value;
          });
          var reqLength = getRequests.length;

          /**
           * As mentioned few lines above, this method could be called with the array of potential error,
           * in case of anything goes wrong. The problem is, if any of the batched calls fails
           * the rest of them would fail too, but the error would be consumed by just one. The rest
           * would simply return `undefined` as their result, rendering false negatives.
           *
           * In order to avoid this situation, in case of any call failing,
           * the rest of them will be rejected as well (with the same error).
           */
          var errorList = (0, _$$_REQUIRE(_dependencyMap[3]).convertErrors)(errors);
          var error = errorList != null && errorList.length ? errorList[0] : null;
          for (var i = 0; i < reqLength; i++) {
            var request = getRequests[i];
            if (error) {
              request.callback == null ? undefined : request.callback(errorList);
              request.reject == null ? undefined : request.reject(error);
              continue;
            }
            var requestResult = request.keys.map(function (key) {
              return [key, map[key]];
            });
            request.callback == null ? undefined : request.callback(null, requestResult);
            request.resolve == null ? undefined : request.resolve(requestResult);
          }
        });
      },
      /**
       * This allows you to batch the fetching of items given an array of `key`
       * inputs. Your callback will be invoked with an array of corresponding
       * key-value pairs found.
       *
       * See https://react-native-async-storage.github.io/async-storage/docs/api#multiget
       */
      multiGet: function multiGet(keys, callback) {
        if (!_immediate) {
          _immediate = setImmediate(function () {
            _immediate = null;
            AsyncStorage.flushGetRequests();
          });
        }
        var getRequest = {
          keys: keys,
          callback: callback,
          // do we need this?
          keyIndex: _getKeys.length
        };
        var promiseResult = new Promise(function (resolve, reject) {
          getRequest.resolve = resolve;
          getRequest.reject = reject;
        });
        _getRequests.push(getRequest);
        // avoid fetching duplicates
        keys.forEach(function (key) {
          if (_getKeys.indexOf(key) === -1) {
            _getKeys.push(key);
          }
        });
        return promiseResult;
      },
      /**
       * Use this as a batch operation for storing multiple key-value pairs. When
       * the operation completes you'll get a single callback with any errors.
       *
       * See https://react-native-async-storage.github.io/async-storage/docs/api#multiset
       */
      multiSet: function multiSet(keyValuePairs, callback) {
        (0, _$$_REQUIRE(_dependencyMap[3]).checkValidArgs)(keyValuePairs, callback);
        return new Promise(function (resolve, reject) {
          keyValuePairs.forEach(function (_ref3) {
            var _ref4 = (0, _slicedToArray2.default)(_ref3, 2),
              key = _ref4[0],
              value = _ref4[1];
            (0, _$$_REQUIRE(_dependencyMap[3]).checkValidInput)(key, value);
          });
          _RCTAsyncStorage.default.multiSet(keyValuePairs, function (errors) {
            var error = (0, _$$_REQUIRE(_dependencyMap[3]).convertErrors)(errors);
            callback == null ? undefined : callback(error);
            if (error) {
              reject(error);
            } else {
              resolve();
            }
          });
        });
      },
      /**
       * Call this to batch the deletion of all keys in the `keys` array.
       *
       * See https://react-native-async-storage.github.io/async-storage/docs/api#multiremove
       */
      multiRemove: function multiRemove(keys, callback) {
        return new Promise(function (resolve, reject) {
          keys.forEach(function (key) {
            return (0, _$$_REQUIRE(_dependencyMap[3]).checkValidInput)(key);
          });
          _RCTAsyncStorage.default.multiRemove(keys, function (errors) {
            var error = (0, _$$_REQUIRE(_dependencyMap[3]).convertErrors)(errors);
            callback == null ? undefined : callback(error);
            if (error) {
              reject(error);
            } else {
              resolve();
            }
          });
        });
      },
      /**
       * Batch operation to merge in existing and new values for a given set of
       * keys. This assumes that the values are stringified JSON.
       *
       * See https://react-native-async-storage.github.io/async-storage/docs/api#multimerge
       */
      multiMerge: function multiMerge(keyValuePairs, callback) {
        return new Promise(function (resolve, reject) {
          _RCTAsyncStorage.default.multiMerge(keyValuePairs, function (errors) {
            var error = (0, _$$_REQUIRE(_dependencyMap[3]).convertErrors)(errors);
            callback == null ? undefined : callback(error);
            if (error) {
              reject(error);
            } else {
              resolve();
            }
          });
        });
      }
    };
  }();
  var _default = exports.default = AsyncStorage;
},593,[1,38,594,596]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);
  // TurboModuleRegistry falls back to NativeModules so we don't have to try go
  // assign NativeModules' counterparts if TurboModuleRegistry would resolve
  // with undefined.
  var RCTAsyncStorage = _reactNative.TurboModuleRegistry ? _reactNative.TurboModuleRegistry.get("PlatformLocalStorage") ||
  // Support for external modules, like react-native-windows
  _reactNative.TurboModuleRegistry.get("RNC_AsyncSQLiteDBStorage") || _reactNative.TurboModuleRegistry.get("RNCAsyncStorage") : _reactNative.NativeModules["PlatformLocalStorage"] ||
  // Support for external modules, like react-native-windows
  _reactNative.NativeModules["RNC_AsyncSQLiteDBStorage"] || _reactNative.NativeModules["RNCAsyncStorage"];
  if (!RCTAsyncStorage && (0, _$$_REQUIRE(_dependencyMap[1]).shouldFallbackToLegacyNativeModule)()) {
    if (_reactNative.TurboModuleRegistry) {
      RCTAsyncStorage = _reactNative.TurboModuleRegistry.get("AsyncSQLiteDBStorage") || _reactNative.TurboModuleRegistry.get("AsyncLocalStorage");
    } else {
      RCTAsyncStorage = _reactNative.NativeModules["AsyncSQLiteDBStorage"] || _reactNative.NativeModules["AsyncLocalStorage"];
    }
  }
  var _default = exports.default = RCTAsyncStorage;
},594,[2,595]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.shouldFallbackToLegacyNativeModule = shouldFallbackToLegacyNativeModule;
  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);
  function shouldFallbackToLegacyNativeModule() {
    var _NativeModules$Native, _NativeModules$Native2;
    var expoConstants = (_NativeModules$Native = _reactNative.NativeModules["NativeUnimoduleProxy"]) == null ? undefined : (_NativeModules$Native2 = _NativeModules$Native.modulesConstants) == null ? undefined : _NativeModules$Native2.ExponentConstants;
    if (expoConstants) {
      /**
       * In SDK <= 39, appOwnership is defined in managed apps but executionEnvironment is not.
       * In bare React Native apps using expo-constants, appOwnership is never defined, so
       * isLegacySdkVersion will be false in that context.
       */
      var isLegacySdkVersion = expoConstants.appOwnership && !expoConstants.executionEnvironment;

      /**
       * Expo managed apps don't include the @react-native-async-storage/async-storage
       * native modules yet, but the API interface is the same, so we can use the version
       * exported from React Native still.
       *
       * If in future releases (eg: @react-native-async-storage/async-storage >= 2.0.0) this
       * will likely not be valid anymore, and the package will need to be included in the Expo SDK
       * to continue to work.
       */
      if (isLegacySdkVersion || ["storeClient", "standalone"].includes(expoConstants.executionEnvironment)) {
        return true;
      }
    }
    return false;
  }
},595,[2]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.checkValidArgs = checkValidArgs;
  exports.checkValidInput = checkValidInput;
  exports.convertError = convertError;
  exports.convertErrors = convertErrors;
  function checkValidArgs(keyValuePairs, callback) {
    if (!Array.isArray(keyValuePairs) || keyValuePairs.length === 0 || !Array.isArray(keyValuePairs[0])) {
      throw new Error("[AsyncStorage] Expected array of key-value pairs as first argument to multiSet");
    }
    if (callback && typeof callback !== "function") {
      if (Array.isArray(callback)) {
        throw new Error("[AsyncStorage] Expected function as second argument to multiSet. Did you forget to wrap key-value pairs in an array for the first argument?");
      }
      throw new Error("[AsyncStorage] Expected function as second argument to multiSet");
    }
  }
  function checkValidInput() {
    for (var _len = arguments.length, input = new Array(_len), _key = 0; _key < _len; _key++) {
      input[_key] = arguments[_key];
    }
    var key = input[0],
      value = input[1];
    if (typeof key !== "string") {
      // eslint-disable-next-line no-console
      console.warn(`[AsyncStorage] Using ${typeof key} type for key is not supported. This can lead to unexpected behavior/errors. Use string instead.\nKey passed: ${key}\n`);
    }
    if (input.length > 1 && typeof value !== "string") {
      if (value == null) {
        throw new Error(`[AsyncStorage] Passing null/undefined as value is not supported. If you want to remove value, Use .removeItem method instead.\nPassed value: ${value}\nPassed key: ${key}\n`);
      } else {
        // eslint-disable-next-line no-console
        console.warn(`[AsyncStorage] The value for key "${key}" is not a string. This can lead to unexpected behavior/errors. Consider stringifying it.\nPassed value: ${value}\nPassed key: ${key}\n`);
      }
    }
  }
  function convertError(error) {
    if (!error) {
      return null;
    }
    var out = new Error(error.message);
    out["key"] = error.key;
    return out;
  }
  function convertErrors(errs) {
    var errors = ensureArray(errs);
    return errors ? errors.map(function (e) {
      return convertError(e);
    }) : null;
  }
  function ensureArray(e) {
    if (Array.isArray(e)) {
      return e.length === 0 ? null : e;
    } else if (e) {
      return [e];
    } else {
      return null;
    }
  }
},596,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/assets",
    "width": 1120,
    "height": 1120,
    "scales": [1],
    "hash": "3f005b6918fbf3470423719ce0520b78",
    "name": "dark_mode_bg",
    "type": "jpg"
  });
},597,[504]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/assets",
    "width": 1120,
    "height": 1120,
    "scales": [1],
    "hash": "d4f88d2837f25ccbcfc0d021f82e5d6f",
    "name": "light_mode_bg",
    "type": "jpg"
  });
},598,[504]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.LAST_SEARCHED_CITY = undefined;
  var LAST_SEARCHED_CITY = exports.LAST_SEARCHED_CITY = "LAST_SEARCHED_CITY";
},599,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ErrorPlaceholder = undefined;
  var _reactNative = _$$_REQUIRE(_dependencyMap[1]);
  var _MaterialCommunityIcons = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[3]);
  var ErrorPlaceholder = exports.ErrorPlaceholder = function ErrorPlaceholder() {
    var _useTheme = (0, _$$_REQUIRE(_dependencyMap[4]).useTheme)(),
      theme = _useTheme.theme,
      toggleTheme = _useTheme.toggleTheme;
    var isDarkMode = theme === 'dark';
    var styles = _reactNative.StyleSheet.create({
      card: {
        margin: 20,
        padding: 25,
        borderRadius: 20,
        alignItems: 'center'
      },
      title: {
        color: isDarkMode ? "white" : "black",
        alignSelf: "center",
        fontSize: 22,
        fontWeight: "600"
      },
      description: {
        color: isDarkMode ? "white" : "black",
        alignSelf: "center",
        fontSize: 22,
        fontWeight: "600"
      }
    });
    return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.card,
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.title,
        children: "City name not found"
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_MaterialCommunityIcons.default, {
        name: "sync-alert",
        size: 150,
        color: "#fff"
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.description,
        children: "Enter city again"
      })]
    });
  };
},600,[1,2,601,251,578]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getImageSourceSync = exports.getImageSource = exports.default = exports.Button = undefined;
  var _createIconSet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
  var _MaterialCommunityIcons = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  /**
   * MaterialCommunityIcons icon set component.
   * Usage: <MaterialCommunityIcons name="icon-name" size={20} color="#4F8EF7" />
   */

  var iconSet = (0, _createIconSet.default)(_MaterialCommunityIcons.default, 'Material Design Icons', 'MaterialCommunityIcons.ttf');
  var _default = exports.default = iconSet;
  var Button = exports.Button = iconSet.Button,
    getImageSource = exports.getImageSource = iconSet.getImageSource,
    getImageSourceSync = exports.getImageSourceSync = iconSet.getImageSourceSync;
},601,[1,581,602]);
__d(function(global, require, _importDefaultUnused, _importAllUnused, module, exports, _dependencyMapUnused) {
  module.exports = {
  "ab-testing": 983497,
  "abacus": 988896,
  "abjad-arabic": 987944,
  "abjad-hebrew": 987945,
  "abugida-devanagari": 987946,
  "abugida-thai": 987947,
  "access-point": 983043,
  "access-point-check": 988472,
  "access-point-minus": 988473,
  "access-point-network": 983042,
  "access-point-network-off": 986081,
  "access-point-off": 988433,
  "access-point-plus": 988474,
  "access-point-remove": 988475,
  "account": 983044,
  "account-alert": 983045,
  "account-alert-outline": 985936,
  "account-arrow-down": 989288,
  "account-arrow-down-outline": 989289,
  "account-arrow-left": 985937,
  "account-arrow-left-outline": 985938,
  "account-arrow-right": 985939,
  "account-arrow-right-outline": 985940,
  "account-arrow-up": 989287,
  "account-arrow-up-outline": 989290,
  "account-box": 983046,
  "account-box-multiple": 985396,
  "account-box-multiple-outline": 987146,
  "account-box-outline": 983047,
  "account-cancel": 987871,
  "account-cancel-outline": 987872,
  "account-cash": 987287,
  "account-cash-outline": 987288,
  "account-check": 983048,
  "account-check-outline": 986082,
  "account-child": 985737,
  "account-child-circle": 985738,
  "account-child-outline": 987336,
  "account-circle": 983049,
  "account-circle-outline": 985941,
  "account-clock": 985942,
  "account-clock-outline": 985943,
  "account-cog": 988016,
  "account-cog-outline": 988017,
  "account-convert": 983050,
  "account-convert-outline": 987905,
  "account-cowboy-hat": 986779,
  "account-cowboy-hat-outline": 989171,
  "account-details": 984625,
  "account-details-outline": 988018,
  "account-edit": 984764,
  "account-edit-outline": 987131,
  "account-eye": 984096,
  "account-eye-outline": 987771,
  "account-filter": 985398,
  "account-filter-outline": 987037,
  "account-group": 985161,
  "account-group-outline": 985944,
  "account-hard-hat": 984501,
  "account-heart": 985241,
  "account-heart-outline": 986083,
  "account-injury": 989205,
  "account-injury-outline": 989206,
  "account-key": 983051,
  "account-key-outline": 986084,
  "account-lock": 987486,
  "account-lock-open": 989536,
  "account-lock-open-outline": 989537,
  "account-lock-outline": 987487,
  "account-minus": 983053,
  "account-minus-outline": 985836,
  "account-multiple": 983054,
  "account-multiple-check": 985285,
  "account-multiple-check-outline": 987646,
  "account-multiple-minus": 984531,
  "account-multiple-minus-outline": 986085,
  "account-multiple-outline": 983055,
  "account-multiple-plus": 983056,
  "account-multiple-plus-outline": 985088,
  "account-multiple-remove": 987658,
  "account-multiple-remove-outline": 987659,
  "account-music": 985091,
  "account-music-outline": 986345,
  "account-network": 983057,
  "account-network-outline": 986086,
  "account-off": 983058,
  "account-off-outline": 986087,
  "account-outline": 983059,
  "account-plus": 983060,
  "account-plus-outline": 985089,
  "account-question": 985945,
  "account-question-outline": 985946,
  "account-reactivate": 988459,
  "account-reactivate-outline": 988460,
  "account-remove": 983061,
  "account-remove-outline": 985837,
  "account-search": 983062,
  "account-search-outline": 985397,
  "account-settings": 984624,
  "account-settings-outline": 987337,
  "account-star": 983063,
  "account-star-outline": 986088,
  "account-supervisor": 985739,
  "account-supervisor-circle": 985740,
  "account-supervisor-circle-outline": 988396,
  "account-supervisor-outline": 987437,
  "account-switch": 983065,
  "account-switch-outline": 984267,
  "account-sync": 989467,
  "account-sync-outline": 989468,
  "account-tie": 986339,
  "account-tie-hat": 989336,
  "account-tie-hat-outline": 989337,
  "account-tie-outline": 987338,
  "account-tie-voice": 987912,
  "account-tie-voice-off": 987914,
  "account-tie-voice-off-outline": 987915,
  "account-tie-voice-outline": 987913,
  "account-voice": 984523,
  "account-voice-off": 986836,
  "account-wrench": 989338,
  "account-wrench-outline": 989339,
  "adjust": 983066,
  "advertisements": 989482,
  "advertisements-off": 989483,
  "air-conditioner": 983067,
  "air-filter": 986435,
  "air-horn": 986540,
  "air-humidifier": 987289,
  "air-humidifier-off": 988262,
  "air-purifier": 986436,
  "airbag": 986089,
  "airballoon": 983068,
  "airballoon-outline": 987147,
  "airplane": 983069,
  "airplane-alert": 989306,
  "airplane-check": 989307,
  "airplane-clock": 989308,
  "airplane-cog": 989309,
  "airplane-edit": 989310,
  "airplane-landing": 984532,
  "airplane-marker": 989311,
  "airplane-minus": 989312,
  "airplane-off": 983070,
  "airplane-plus": 989313,
  "airplane-remove": 989314,
  "airplane-search": 989315,
  "airplane-settings": 989316,
  "airplane-takeoff": 984533,
  "airport": 985163,
  "alarm": 983072,
  "alarm-bell": 984974,
  "alarm-check": 983073,
  "alarm-light": 984975,
  "alarm-light-off": 988958,
  "alarm-light-off-outline": 988959,
  "alarm-light-outline": 986090,
  "alarm-multiple": 983074,
  "alarm-note": 986737,
  "alarm-note-off": 986738,
  "alarm-off": 983075,
  "alarm-panel": 988612,
  "alarm-panel-outline": 988613,
  "alarm-plus": 983076,
  "alarm-snooze": 984718,
  "album": 983077,
  "alert": 983078,
  "alert-box": 983079,
  "alert-box-outline": 986340,
  "alert-circle": 983080,
  "alert-circle-check": 987629,
  "alert-circle-check-outline": 987630,
  "alert-circle-outline": 984534,
  "alert-decagram": 984765,
  "alert-decagram-outline": 986341,
  "alert-minus": 988347,
  "alert-minus-outline": 988350,
  "alert-octagon": 983081,
  "alert-octagon-outline": 986342,
  "alert-octagram": 984935,
  "alert-octagram-outline": 986343,
  "alert-outline": 983082,
  "alert-plus": 988346,
  "alert-plus-outline": 988349,
  "alert-remove": 988348,
  "alert-remove-outline": 988351,
  "alert-rhombus": 987598,
  "alert-rhombus-outline": 987599,
  "alien": 985242,
  "alien-outline": 987339,
  "align-horizontal-center": 987587,
  "align-horizontal-distribute": 989538,
  "align-horizontal-left": 987586,
  "align-horizontal-right": 987588,
  "align-vertical-bottom": 987589,
  "align-vertical-center": 987590,
  "align-vertical-distribute": 989539,
  "align-vertical-top": 987591,
  "all-inclusive": 984766,
  "all-inclusive-box": 989325,
  "all-inclusive-box-outline": 989326,
  "allergy": 987736,
  "alpha": 983083,
  "alpha-a": 985838,
  "alpha-a-box": 985864,
  "alpha-a-box-outline": 986091,
  "alpha-a-circle": 986092,
  "alpha-a-circle-outline": 986093,
  "alpha-b": 985839,
  "alpha-b-box": 985865,
  "alpha-b-box-outline": 986094,
  "alpha-b-circle": 986095,
  "alpha-b-circle-outline": 986096,
  "alpha-c": 985840,
  "alpha-c-box": 985866,
  "alpha-c-box-outline": 986097,
  "alpha-c-circle": 986098,
  "alpha-c-circle-outline": 986099,
  "alpha-d": 985841,
  "alpha-d-box": 985867,
  "alpha-d-box-outline": 986100,
  "alpha-d-circle": 986101,
  "alpha-d-circle-outline": 986102,
  "alpha-e": 985842,
  "alpha-e-box": 985868,
  "alpha-e-box-outline": 986103,
  "alpha-e-circle": 986104,
  "alpha-e-circle-outline": 986105,
  "alpha-f": 985843,
  "alpha-f-box": 985869,
  "alpha-f-box-outline": 986106,
  "alpha-f-circle": 986107,
  "alpha-f-circle-outline": 986108,
  "alpha-g": 985844,
  "alpha-g-box": 985870,
  "alpha-g-box-outline": 986109,
  "alpha-g-circle": 986110,
  "alpha-g-circle-outline": 986111,
  "alpha-h": 985845,
  "alpha-h-box": 985871,
  "alpha-h-box-outline": 986112,
  "alpha-h-circle": 986113,
  "alpha-h-circle-outline": 986114,
  "alpha-i": 985846,
  "alpha-i-box": 985872,
  "alpha-i-box-outline": 986115,
  "alpha-i-circle": 986116,
  "alpha-i-circle-outline": 986117,
  "alpha-j": 985847,
  "alpha-j-box": 985873,
  "alpha-j-box-outline": 986118,
  "alpha-j-circle": 986119,
  "alpha-j-circle-outline": 986120,
  "alpha-k": 985848,
  "alpha-k-box": 985874,
  "alpha-k-box-outline": 986121,
  "alpha-k-circle": 986122,
  "alpha-k-circle-outline": 986123,
  "alpha-l": 985849,
  "alpha-l-box": 985875,
  "alpha-l-box-outline": 986124,
  "alpha-l-circle": 986125,
  "alpha-l-circle-outline": 986126,
  "alpha-m": 985850,
  "alpha-m-box": 985876,
  "alpha-m-box-outline": 986127,
  "alpha-m-circle": 986128,
  "alpha-m-circle-outline": 986129,
  "alpha-n": 985851,
  "alpha-n-box": 985877,
  "alpha-n-box-outline": 986130,
  "alpha-n-circle": 986131,
  "alpha-n-circle-outline": 986132,
  "alpha-o": 985852,
  "alpha-o-box": 985878,
  "alpha-o-box-outline": 986133,
  "alpha-o-circle": 986134,
  "alpha-o-circle-outline": 986135,
  "alpha-p": 985853,
  "alpha-p-box": 985879,
  "alpha-p-box-outline": 986136,
  "alpha-p-circle": 986137,
  "alpha-p-circle-outline": 986138,
  "alpha-q": 985854,
  "alpha-q-box": 985880,
  "alpha-q-box-outline": 986139,
  "alpha-q-circle": 986140,
  "alpha-q-circle-outline": 986141,
  "alpha-r": 985855,
  "alpha-r-box": 985881,
  "alpha-r-box-outline": 986142,
  "alpha-r-circle": 986143,
  "alpha-r-circle-outline": 986144,
  "alpha-s": 985856,
  "alpha-s-box": 985882,
  "alpha-s-box-outline": 986145,
  "alpha-s-circle": 986146,
  "alpha-s-circle-outline": 986147,
  "alpha-t": 985857,
  "alpha-t-box": 985883,
  "alpha-t-box-outline": 986148,
  "alpha-t-circle": 986149,
  "alpha-t-circle-outline": 986150,
  "alpha-u": 985858,
  "alpha-u-box": 985884,
  "alpha-u-box-outline": 986151,
  "alpha-u-circle": 986152,
  "alpha-u-circle-outline": 986153,
  "alpha-v": 985859,
  "alpha-v-box": 985885,
  "alpha-v-box-outline": 986154,
  "alpha-v-circle": 986155,
  "alpha-v-circle-outline": 986156,
  "alpha-w": 985860,
  "alpha-w-box": 985886,
  "alpha-w-box-outline": 986157,
  "alpha-w-circle": 986158,
  "alpha-w-circle-outline": 986159,
  "alpha-x": 985861,
  "alpha-x-box": 985887,
  "alpha-x-box-outline": 986160,
  "alpha-x-circle": 986161,
  "alpha-x-circle-outline": 986162,
  "alpha-y": 985862,
  "alpha-y-box": 985888,
  "alpha-y-box-outline": 986163,
  "alpha-y-circle": 986164,
  "alpha-y-circle-outline": 986165,
  "alpha-z": 985863,
  "alpha-z-box": 985889,
  "alpha-z-box-outline": 986166,
  "alpha-z-circle": 986167,
  "alpha-z-circle-outline": 986168,
  "alphabet-aurebesh": 987948,
  "alphabet-cyrillic": 987949,
  "alphabet-greek": 987950,
  "alphabet-latin": 987951,
  "alphabet-piqad": 987952,
  "alphabet-tengwar": 987959,
  "alphabetical": 983084,
  "alphabetical-off": 987148,
  "alphabetical-variant": 987149,
  "alphabetical-variant-off": 987150,
  "altimeter": 984535,
  "ambulance": 983087,
  "ammunition": 986344,
  "ampersand": 985741,
  "amplifier": 983088,
  "amplifier-off": 987573,
  "anchor": 983089,
  "android": 983090,
  "android-messages": 986437,
  "android-studio": 983092,
  "angle-acute": 985399,
  "angle-obtuse": 985400,
  "angle-right": 985401,
  "angular": 984754,
  "angularjs": 984767,
  "animation": 984536,
  "animation-outline": 985743,
  "animation-play": 985402,
  "animation-play-outline": 985744,
  "ansible": 987290,
  "antenna": 987417,
  "anvil": 985243,
  "apache-kafka": 987151,
  "api": 987291,
  "api-off": 987735,
  "apple": 983093,
  "apple-finder": 983094,
  "apple-icloud": 983096,
  "apple-ios": 983095,
  "apple-keyboard-caps": 984626,
  "apple-keyboard-command": 984627,
  "apple-keyboard-control": 984628,
  "apple-keyboard-option": 984629,
  "apple-keyboard-shift": 984630,
  "apple-safari": 983097,
  "application": 985286,
  "application-array": 987381,
  "application-array-outline": 987382,
  "application-braces": 987383,
  "application-braces-outline": 987384,
  "application-brackets": 986251,
  "application-brackets-outline": 986252,
  "application-cog": 984693,
  "application-cog-outline": 988535,
  "application-edit": 983214,
  "application-edit-outline": 984601,
  "application-export": 986541,
  "application-import": 986542,
  "application-outline": 984596,
  "application-parentheses": 987385,
  "application-parentheses-outline": 987386,
  "application-settings": 985952,
  "application-settings-outline": 988501,
  "application-variable": 987387,
  "application-variable-outline": 987388,
  "approximately-equal": 987038,
  "approximately-equal-box": 987039,
  "apps": 983099,
  "apps-box": 986438,
  "arch": 985287,
  "archive": 983100,
  "archive-alert": 988413,
  "archive-alert-outline": 988414,
  "archive-arrow-down": 987737,
  "archive-arrow-down-outline": 987738,
  "archive-arrow-up": 987739,
  "archive-arrow-up-outline": 987740,
  "archive-cancel": 989003,
  "archive-cancel-outline": 989004,
  "archive-check": 989005,
  "archive-check-outline": 989006,
  "archive-clock": 989007,
  "archive-clock-outline": 989008,
  "archive-cog": 989009,
  "archive-cog-outline": 989010,
  "archive-edit": 989011,
  "archive-edit-outline": 989012,
  "archive-eye": 989013,
  "archive-eye-outline": 989014,
  "archive-lock": 989015,
  "archive-lock-open": 989016,
  "archive-lock-open-outline": 989017,
  "archive-lock-outline": 989018,
  "archive-marker": 989019,
  "archive-marker-outline": 989020,
  "archive-minus": 989021,
  "archive-minus-outline": 989022,
  "archive-music": 989023,
  "archive-music-outline": 989024,
  "archive-off": 989025,
  "archive-off-outline": 989026,
  "archive-outline": 987662,
  "archive-plus": 989027,
  "archive-plus-outline": 989028,
  "archive-refresh": 989029,
  "archive-refresh-outline": 989030,
  "archive-remove": 989031,
  "archive-remove-outline": 989032,
  "archive-search": 989033,
  "archive-search-outline": 989034,
  "archive-settings": 989035,
  "archive-settings-outline": 989036,
  "archive-star": 989037,
  "archive-star-outline": 989038,
  "archive-sync": 989039,
  "archive-sync-outline": 989040,
  "arm-flex": 987095,
  "arm-flex-outline": 987094,
  "arrange-bring-forward": 983101,
  "arrange-bring-to-front": 983102,
  "arrange-send-backward": 983103,
  "arrange-send-to-back": 983104,
  "arrow-all": 983105,
  "arrow-bottom-left": 983106,
  "arrow-bottom-left-bold-box": 989540,
  "arrow-bottom-left-bold-box-outline": 989541,
  "arrow-bottom-left-bold-outline": 985527,
  "arrow-bottom-left-thick": 985528,
  "arrow-bottom-left-thin": 989622,
  "arrow-bottom-left-thin-circle-outline": 988566,
  "arrow-bottom-right": 983107,
  "arrow-bottom-right-bold-box": 989542,
  "arrow-bottom-right-bold-box-outline": 989543,
  "arrow-bottom-right-bold-outline": 985529,
  "arrow-bottom-right-thick": 985530,
  "arrow-bottom-right-thin": 989623,
  "arrow-bottom-right-thin-circle-outline": 988565,
  "arrow-collapse": 984597,
  "arrow-collapse-all": 983108,
  "arrow-collapse-down": 984978,
  "arrow-collapse-horizontal": 985164,
  "arrow-collapse-left": 984979,
  "arrow-collapse-right": 984980,
  "arrow-collapse-up": 984981,
  "arrow-collapse-vertical": 985165,
  "arrow-decision": 985531,
  "arrow-decision-auto": 985532,
  "arrow-decision-auto-outline": 985533,
  "arrow-decision-outline": 985534,
  "arrow-down": 983109,
  "arrow-down-bold": 984878,
  "arrow-down-bold-box": 984879,
  "arrow-down-bold-box-outline": 984880,
  "arrow-down-bold-circle": 983111,
  "arrow-down-bold-circle-outline": 983112,
  "arrow-down-bold-hexagon-outline": 983113,
  "arrow-down-bold-outline": 985535,
  "arrow-down-box": 984768,
  "arrow-down-circle": 986331,
  "arrow-down-circle-outline": 986332,
  "arrow-down-drop-circle": 983114,
  "arrow-down-drop-circle-outline": 983115,
  "arrow-down-left": 989089,
  "arrow-down-left-bold": 989090,
  "arrow-down-right": 989091,
  "arrow-down-right-bold": 989092,
  "arrow-down-thick": 983110,
  "arrow-down-thin": 989619,
  "arrow-down-thin-circle-outline": 988569,
  "arrow-expand": 984598,
  "arrow-expand-all": 983116,
  "arrow-expand-down": 984982,
  "arrow-expand-horizontal": 985166,
  "arrow-expand-left": 984983,
  "arrow-expand-right": 984984,
  "arrow-expand-up": 984985,
  "arrow-expand-vertical": 985167,
  "arrow-horizontal-lock": 987483,
  "arrow-left": 983117,
  "arrow-left-bold": 984881,
  "arrow-left-bold-box": 984882,
  "arrow-left-bold-box-outline": 984883,
  "arrow-left-bold-circle": 983119,
  "arrow-left-bold-circle-outline": 983120,
  "arrow-left-bold-hexagon-outline": 983121,
  "arrow-left-bold-outline": 985536,
  "arrow-left-bottom": 989093,
  "arrow-left-bottom-bold": 989094,
  "arrow-left-box": 984769,
  "arrow-left-circle": 986333,
  "arrow-left-circle-outline": 986334,
  "arrow-left-drop-circle": 983122,
  "arrow-left-drop-circle-outline": 983123,
  "arrow-left-right": 986739,
  "arrow-left-right-bold": 986740,
  "arrow-left-right-bold-outline": 985537,
  "arrow-left-thick": 983118,
  "arrow-left-thin": 989617,
  "arrow-left-thin-circle-outline": 988570,
  "arrow-left-top": 989095,
  "arrow-left-top-bold": 989096,
  "arrow-projectile": 989248,
  "arrow-projectile-multiple": 989247,
  "arrow-right": 983124,
  "arrow-right-bold": 984884,
  "arrow-right-bold-box": 984885,
  "arrow-right-bold-box-outline": 984886,
  "arrow-right-bold-circle": 983126,
  "arrow-right-bold-circle-outline": 983127,
  "arrow-right-bold-hexagon-outline": 983128,
  "arrow-right-bold-outline": 985538,
  "arrow-right-bottom": 989097,
  "arrow-right-bottom-bold": 989098,
  "arrow-right-box": 984770,
  "arrow-right-circle": 986335,
  "arrow-right-circle-outline": 986336,
  "arrow-right-drop-circle": 983129,
  "arrow-right-drop-circle-outline": 983130,
  "arrow-right-thick": 983125,
  "arrow-right-thin": 989616,
  "arrow-right-thin-circle-outline": 988568,
  "arrow-right-top": 989099,
  "arrow-right-top-bold": 989100,
  "arrow-split-horizontal": 985403,
  "arrow-split-vertical": 985404,
  "arrow-top-left": 983131,
  "arrow-top-left-bold-box": 989544,
  "arrow-top-left-bold-box-outline": 989545,
  "arrow-top-left-bold-outline": 985539,
  "arrow-top-left-bottom-right": 986741,
  "arrow-top-left-bottom-right-bold": 986742,
  "arrow-top-left-thick": 985540,
  "arrow-top-left-thin": 989621,
  "arrow-top-left-thin-circle-outline": 988563,
  "arrow-top-right": 983132,
  "arrow-top-right-bold-box": 989546,
  "arrow-top-right-bold-box-outline": 989547,
  "arrow-top-right-bold-outline": 985541,
  "arrow-top-right-bottom-left": 986743,
  "arrow-top-right-bottom-left-bold": 986744,
  "arrow-top-right-thick": 985542,
  "arrow-top-right-thin": 989620,
  "arrow-top-right-thin-circle-outline": 988564,
  "arrow-u-down-left": 989101,
  "arrow-u-down-left-bold": 989102,
  "arrow-u-down-right": 989103,
  "arrow-u-down-right-bold": 989104,
  "arrow-u-left-bottom": 989105,
  "arrow-u-left-bottom-bold": 989106,
  "arrow-u-left-top": 989107,
  "arrow-u-left-top-bold": 989108,
  "arrow-u-right-bottom": 989109,
  "arrow-u-right-bottom-bold": 989110,
  "arrow-u-right-top": 989111,
  "arrow-u-right-top-bold": 989112,
  "arrow-u-up-left": 989113,
  "arrow-u-up-left-bold": 989114,
  "arrow-u-up-right": 989115,
  "arrow-u-up-right-bold": 989116,
  "arrow-up": 983133,
  "arrow-up-bold": 984887,
  "arrow-up-bold-box": 984888,
  "arrow-up-bold-box-outline": 984889,
  "arrow-up-bold-circle": 983135,
  "arrow-up-bold-circle-outline": 983136,
  "arrow-up-bold-hexagon-outline": 983137,
  "arrow-up-bold-outline": 985543,
  "arrow-up-box": 984771,
  "arrow-up-circle": 986337,
  "arrow-up-circle-outline": 986338,
  "arrow-up-down": 986745,
  "arrow-up-down-bold": 986746,
  "arrow-up-down-bold-outline": 985544,
  "arrow-up-drop-circle": 983138,
  "arrow-up-drop-circle-outline": 983139,
  "arrow-up-left": 989117,
  "arrow-up-left-bold": 989118,
  "arrow-up-right": 989119,
  "arrow-up-right-bold": 989120,
  "arrow-up-thick": 983134,
  "arrow-up-thin": 989618,
  "arrow-up-thin-circle-outline": 988567,
  "arrow-vertical-lock": 987484,
  "artstation": 985947,
  "aspect-ratio": 985636,
  "assistant": 983140,
  "asterisk": 984772,
  "at": 983141,
  "atlassian": 985092,
  "atm": 986439,
  "atom": 984936,
  "atom-variant": 986747,
  "attachment": 983142,
  "audio-input-rca": 989291,
  "audio-input-stereo-minijack": 989292,
  "audio-input-xlr": 989293,
  "audio-video": 985405,
  "audio-video-off": 987574,
  "augmented-reality": 985168,
  "auto-download": 988030,
  "auto-fix": 983144,
  "auto-upload": 983145,
  "autorenew": 983146,
  "av-timer": 983147,
  "aws": 986639,
  "axe": 985288,
  "axe-battle": 989250,
  "axis": 986440,
  "axis-arrow": 986441,
  "axis-arrow-info": 988174,
  "axis-arrow-lock": 986442,
  "axis-lock": 986443,
  "axis-x-arrow": 986444,
  "axis-x-arrow-lock": 986445,
  "axis-x-rotate-clockwise": 986446,
  "axis-x-rotate-counterclockwise": 986447,
  "axis-x-y-arrow-lock": 986448,
  "axis-y-arrow": 986449,
  "axis-y-arrow-lock": 986450,
  "axis-y-rotate-clockwise": 986451,
  "axis-y-rotate-counterclockwise": 986452,
  "axis-z-arrow": 986453,
  "axis-z-arrow-lock": 986454,
  "axis-z-rotate-clockwise": 986455,
  "axis-z-rotate-counterclockwise": 986456,
  "babel": 985637,
  "baby": 983148,
  "baby-bottle": 986937,
  "baby-bottle-outline": 986938,
  "baby-buggy": 988128,
  "baby-carriage": 984719,
  "baby-carriage-off": 987040,
  "baby-face": 986748,
  "baby-face-outline": 986749,
  "backburger": 983149,
  "backspace": 983150,
  "backspace-outline": 985948,
  "backspace-reverse": 986750,
  "backspace-reverse-outline": 986751,
  "backup-restore": 983151,
  "bacteria": 986837,
  "bacteria-outline": 986838,
  "badge-account": 986535,
  "badge-account-alert": 986536,
  "badge-account-alert-outline": 986537,
  "badge-account-horizontal": 986637,
  "badge-account-horizontal-outline": 986638,
  "badge-account-outline": 986538,
  "badminton": 985169,
  "bag-carry-on": 986939,
  "bag-carry-on-check": 986469,
  "bag-carry-on-off": 986940,
  "bag-checked": 986941,
  "bag-personal": 986640,
  "bag-personal-off": 986641,
  "bag-personal-off-outline": 986642,
  "bag-personal-outline": 986643,
  "bag-suitcase": 988555,
  "bag-suitcase-off": 988557,
  "bag-suitcase-off-outline": 988558,
  "bag-suitcase-outline": 988556,
  "baguette": 986942,
  "balcony": 989207,
  "balloon": 985638,
  "ballot": 985545,
  "ballot-outline": 985546,
  "ballot-recount": 986169,
  "ballot-recount-outline": 986170,
  "bandage": 986543,
  "bank": 983152,
  "bank-check": 988757,
  "bank-minus": 986544,
  "bank-off": 988758,
  "bank-off-outline": 988759,
  "bank-outline": 986752,
  "bank-plus": 986545,
  "bank-remove": 986546,
  "bank-transfer": 985639,
  "bank-transfer-in": 985640,
  "bank-transfer-out": 985641,
  "barcode": 983153,
  "barcode-off": 987702,
  "barcode-scan": 983154,
  "barley": 983155,
  "barley-off": 985949,
  "barn": 985950,
  "barrel": 983156,
  "baseball": 985170,
  "baseball-bat": 985171,
  "baseball-diamond": 988652,
  "baseball-diamond-outline": 988653,
  "bash": 987523,
  "basket": 983158,
  "basket-check": 989413,
  "basket-check-outline": 989414,
  "basket-fill": 983159,
  "basket-minus": 988451,
  "basket-minus-outline": 988452,
  "basket-off": 988453,
  "basket-off-outline": 988454,
  "basket-outline": 987521,
  "basket-plus": 988455,
  "basket-plus-outline": 988456,
  "basket-remove": 988457,
  "basket-remove-outline": 988458,
  "basket-unfill": 983160,
  "basketball": 985094,
  "basketball-hoop": 986171,
  "basketball-hoop-outline": 986172,
  "bat": 985951,
  "bathtub": 989208,
  "bathtub-outline": 989209,
  "battery": 983161,
  "battery-10": 983162,
  "battery-10-bluetooth": 985406,
  "battery-20": 983163,
  "battery-20-bluetooth": 985407,
  "battery-30": 983164,
  "battery-30-bluetooth": 985408,
  "battery-40": 983165,
  "battery-40-bluetooth": 985409,
  "battery-50": 983166,
  "battery-50-bluetooth": 985410,
  "battery-60": 983167,
  "battery-60-bluetooth": 985411,
  "battery-70": 983168,
  "battery-70-bluetooth": 985412,
  "battery-80": 983169,
  "battery-80-bluetooth": 985413,
  "battery-90": 983170,
  "battery-90-bluetooth": 985414,
  "battery-alert": 983171,
  "battery-alert-bluetooth": 985415,
  "battery-alert-variant": 987340,
  "battery-alert-variant-outline": 987341,
  "battery-arrow-down": 989150,
  "battery-arrow-down-outline": 989151,
  "battery-arrow-up": 989152,
  "battery-arrow-up-outline": 989153,
  "battery-bluetooth": 985416,
  "battery-bluetooth-variant": 985417,
  "battery-charging": 983172,
  "battery-charging-10": 985244,
  "battery-charging-100": 983173,
  "battery-charging-20": 983174,
  "battery-charging-30": 983175,
  "battery-charging-40": 983176,
  "battery-charging-50": 985245,
  "battery-charging-60": 983177,
  "battery-charging-70": 985246,
  "battery-charging-80": 983178,
  "battery-charging-90": 983179,
  "battery-charging-high": 987814,
  "battery-charging-low": 987812,
  "battery-charging-medium": 987813,
  "battery-charging-outline": 985247,
  "battery-charging-wireless": 985095,
  "battery-charging-wireless-10": 985096,
  "battery-charging-wireless-20": 985097,
  "battery-charging-wireless-30": 985098,
  "battery-charging-wireless-40": 985099,
  "battery-charging-wireless-50": 985100,
  "battery-charging-wireless-60": 985101,
  "battery-charging-wireless-70": 985102,
  "battery-charging-wireless-80": 985103,
  "battery-charging-wireless-90": 985104,
  "battery-charging-wireless-alert": 985105,
  "battery-charging-wireless-outline": 985106,
  "battery-check": 989154,
  "battery-check-outline": 989155,
  "battery-heart": 987663,
  "battery-heart-outline": 987664,
  "battery-heart-variant": 987665,
  "battery-high": 987811,
  "battery-lock": 989084,
  "battery-lock-open": 989085,
  "battery-low": 987809,
  "battery-medium": 987810,
  "battery-minus": 989156,
  "battery-minus-outline": 989157,
  "battery-minus-variant": 983180,
  "battery-negative": 983181,
  "battery-off": 987741,
  "battery-off-outline": 987742,
  "battery-outline": 983182,
  "battery-plus": 989158,
  "battery-plus-outline": 989159,
  "battery-plus-variant": 983183,
  "battery-positive": 983184,
  "battery-remove": 989160,
  "battery-remove-outline": 989161,
  "battery-sync": 989236,
  "battery-sync-outline": 989237,
  "battery-unknown": 983185,
  "battery-unknown-bluetooth": 985418,
  "beach": 983186,
  "beaker": 986346,
  "beaker-alert": 987689,
  "beaker-alert-outline": 987690,
  "beaker-check": 987691,
  "beaker-check-outline": 987692,
  "beaker-minus": 987693,
  "beaker-minus-outline": 987694,
  "beaker-outline": 984720,
  "beaker-plus": 987695,
  "beaker-plus-outline": 987696,
  "beaker-question": 987697,
  "beaker-question-outline": 987698,
  "beaker-remove": 987699,
  "beaker-remove-outline": 987700,
  "bed": 983779,
  "bed-double": 987092,
  "bed-double-outline": 987091,
  "bed-empty": 985248,
  "bed-king": 987090,
  "bed-king-outline": 987089,
  "bed-outline": 983193,
  "bed-queen": 987088,
  "bed-queen-outline": 987099,
  "bed-single": 987245,
  "bed-single-outline": 987246,
  "bee": 987041,
  "bee-flower": 987042,
  "beehive-off-outline": 988141,
  "beehive-outline": 987342,
  "beekeeper": 988386,
  "beer": 983192,
  "beer-outline": 987916,
  "bell": 983194,
  "bell-alert": 986457,
  "bell-alert-outline": 986753,
  "bell-badge": 987499,
  "bell-badge-outline": 983416,
  "bell-cancel": 988135,
  "bell-cancel-outline": 988136,
  "bell-check": 987621,
  "bell-check-outline": 987622,
  "bell-circle": 986458,
  "bell-circle-outline": 986459,
  "bell-minus": 988137,
  "bell-minus-outline": 988138,
  "bell-off": 983195,
  "bell-off-outline": 985745,
  "bell-outline": 983196,
  "bell-plus": 983197,
  "bell-plus-outline": 985746,
  "bell-remove": 988139,
  "bell-remove-outline": 988140,
  "bell-ring": 983198,
  "bell-ring-outline": 983199,
  "bell-sleep": 983200,
  "bell-sleep-outline": 985747,
  "beta": 983201,
  "betamax": 985547,
  "biathlon": 986644,
  "bicycle": 987292,
  "bicycle-basket": 987701,
  "bicycle-cargo": 989340,
  "bicycle-electric": 988596,
  "bicycle-penny-farthing": 988649,
  "bike": 983203,
  "bike-fast": 987423,
  "billboard": 987152,
  "billiards": 985953,
  "billiards-rack": 985954,
  "binoculars": 983205,
  "bio": 983206,
  "biohazard": 983207,
  "bird": 988614,
  "bitbucket": 983208,
  "bitcoin": 985107,
  "black-mesa": 983209,
  "blender": 986347,
  "blender-outline": 989210,
  "blender-software": 983211,
  "blinds": 983212,
  "blinds-open": 987153,
  "block-helper": 983213,
  "blood-bag": 986348,
  "bluetooth": 983215,
  "bluetooth-audio": 983216,
  "bluetooth-connect": 983217,
  "bluetooth-off": 983218,
  "bluetooth-settings": 983219,
  "bluetooth-transfer": 983220,
  "blur": 983221,
  "blur-linear": 983222,
  "blur-off": 983223,
  "blur-radial": 983224,
  "bolt": 986547,
  "bomb": 984721,
  "bomb-off": 984773,
  "bone": 983225,
  "book": 983226,
  "book-account": 988077,
  "book-account-outline": 988078,
  "book-alert": 988796,
  "book-alert-outline": 988797,
  "book-alphabet": 984605,
  "book-arrow-down": 988798,
  "book-arrow-down-outline": 988799,
  "book-arrow-left": 988800,
  "book-arrow-left-outline": 988801,
  "book-arrow-right": 988802,
  "book-arrow-right-outline": 988803,
  "book-arrow-up": 988804,
  "book-arrow-up-outline": 988805,
  "book-cancel": 988806,
  "book-cancel-outline": 988807,
  "book-check": 988403,
  "book-check-outline": 988404,
  "book-clock": 988808,
  "book-clock-outline": 988809,
  "book-cog": 988810,
  "book-cog-outline": 988811,
  "book-cross": 983202,
  "book-edit": 988812,
  "book-edit-outline": 988813,
  "book-education": 988873,
  "book-education-outline": 988874,
  "book-information-variant": 987247,
  "book-lock": 984986,
  "book-lock-open": 984987,
  "book-lock-open-outline": 988814,
  "book-lock-outline": 988815,
  "book-marker": 988816,
  "book-marker-outline": 988817,
  "book-minus": 984537,
  "book-minus-multiple": 985748,
  "book-minus-multiple-outline": 985355,
  "book-minus-outline": 988818,
  "book-multiple": 983227,
  "book-multiple-outline": 984118,
  "book-music": 983143,
  "book-music-outline": 988819,
  "book-off": 988820,
  "book-off-outline": 988821,
  "book-open": 983229,
  "book-open-blank-variant": 983230,
  "book-open-outline": 985955,
  "book-open-page-variant": 984538,
  "book-open-page-variant-outline": 988630,
  "book-open-variant": 988407,
  "book-outline": 985956,
  "book-play": 986754,
  "book-play-outline": 986755,
  "book-plus": 984539,
  "book-plus-multiple": 985749,
  "book-plus-multiple-outline": 985822,
  "book-plus-outline": 988822,
  "book-refresh": 988823,
  "book-refresh-outline": 988824,
  "book-remove": 985751,
  "book-remove-multiple": 985750,
  "book-remove-multiple-outline": 984266,
  "book-remove-outline": 988825,
  "book-search": 986756,
  "book-search-outline": 986757,
  "book-settings": 988826,
  "book-settings-outline": 988827,
  "book-sync": 988828,
  "book-sync-outline": 988872,
  "book-variant": 983231,
  "book-variant-multiple": 983228,
  "bookmark": 983232,
  "bookmark-box-multiple": 989548,
  "bookmark-box-multiple-outline": 989549,
  "bookmark-check": 983233,
  "bookmark-check-outline": 988027,
  "bookmark-minus": 985548,
  "bookmark-minus-outline": 985549,
  "bookmark-multiple": 986645,
  "bookmark-multiple-outline": 986646,
  "bookmark-music": 983234,
  "bookmark-music-outline": 988025,
  "bookmark-off": 985550,
  "bookmark-off-outline": 985551,
  "bookmark-outline": 983235,
  "bookmark-plus": 983237,
  "bookmark-plus-outline": 983236,
  "bookmark-remove": 983238,
  "bookmark-remove-outline": 988026,
  "bookshelf": 987743,
  "boom-gate": 986758,
  "boom-gate-alert": 986759,
  "boom-gate-alert-outline": 986760,
  "boom-gate-arrow-down": 986761,
  "boom-gate-arrow-down-outline": 986762,
  "boom-gate-arrow-up": 986764,
  "boom-gate-arrow-up-outline": 986765,
  "boom-gate-outline": 986763,
  "boom-gate-up": 989177,
  "boom-gate-up-outline": 989178,
  "boombox": 984540,
  "boomerang": 987343,
  "bootstrap": 984774,
  "border-all": 983239,
  "border-all-variant": 985249,
  "border-bottom": 983240,
  "border-bottom-variant": 985250,
  "border-color": 983241,
  "border-horizontal": 983242,
  "border-inside": 983243,
  "border-left": 983244,
  "border-left-variant": 985251,
  "border-none": 983245,
  "border-none-variant": 985252,
  "border-outside": 983246,
  "border-right": 983247,
  "border-right-variant": 985253,
  "border-style": 983248,
  "border-top": 983249,
  "border-top-variant": 985254,
  "border-vertical": 983250,
  "bottle-soda": 987248,
  "bottle-soda-classic": 987249,
  "bottle-soda-classic-outline": 988003,
  "bottle-soda-outline": 987250,
  "bottle-tonic": 987438,
  "bottle-tonic-outline": 987439,
  "bottle-tonic-plus": 987440,
  "bottle-tonic-plus-outline": 987441,
  "bottle-tonic-skull": 987442,
  "bottle-tonic-skull-outline": 987443,
  "bottle-wine": 985172,
  "bottle-wine-outline": 987920,
  "bow-arrow": 989249,
  "bow-tie": 984696,
  "bowl": 983694,
  "bowl-mix": 984599,
  "bowl-mix-outline": 983780,
  "bowl-outline": 983721,
  "bowling": 983251,
  "box": 983252,
  "box-cutter": 983253,
  "box-cutter-off": 985930,
  "box-shadow": 984631,
  "boxing-glove": 985957,
  "braille": 985552,
  "brain": 985553,
  "bread-slice": 986350,
  "bread-slice-outline": 986351,
  "bridge": 984600,
  "briefcase": 983254,
  "briefcase-account": 986352,
  "briefcase-account-outline": 986353,
  "briefcase-check": 983255,
  "briefcase-check-outline": 987934,
  "briefcase-clock": 987344,
  "briefcase-clock-outline": 987345,
  "briefcase-download": 983256,
  "briefcase-download-outline": 986173,
  "briefcase-edit": 985752,
  "briefcase-edit-outline": 986174,
  "briefcase-eye": 989145,
  "briefcase-eye-outline": 989146,
  "briefcase-minus": 985642,
  "briefcase-minus-outline": 986175,
  "briefcase-off": 988760,
  "briefcase-off-outline": 988761,
  "briefcase-outline": 985108,
  "briefcase-plus": 985643,
  "briefcase-plus-outline": 986176,
  "briefcase-remove": 985644,
  "briefcase-remove-outline": 986177,
  "briefcase-search": 985645,
  "briefcase-search-outline": 986178,
  "briefcase-upload": 983257,
  "briefcase-upload-outline": 986179,
  "briefcase-variant": 988308,
  "briefcase-variant-off": 988762,
  "briefcase-variant-off-outline": 988763,
  "briefcase-variant-outline": 988309,
  "brightness-1": 983258,
  "brightness-2": 983259,
  "brightness-3": 983260,
  "brightness-4": 983261,
  "brightness-5": 983262,
  "brightness-6": 983263,
  "brightness-7": 983264,
  "brightness-auto": 983265,
  "brightness-percent": 986354,
  "broadcast": 988960,
  "broadcast-off": 988961,
  "broom": 983266,
  "brush": 983267,
  "brush-off": 989041,
  "brush-variant": 989203,
  "bucket": 988181,
  "bucket-outline": 988182,
  "buffet": 984440,
  "bug": 983268,
  "bug-check": 985646,
  "bug-check-outline": 985647,
  "bug-outline": 985648,
  "bugle": 986548,
  "bulldozer": 985890,
  "bullet": 986355,
  "bulletin-board": 983269,
  "bullhorn": 983270,
  "bullhorn-outline": 985891,
  "bullhorn-variant": 989550,
  "bullhorn-variant-outline": 989551,
  "bullseye": 984541,
  "bullseye-arrow": 985289,
  "bulma": 987879,
  "bunk-bed": 987906,
  "bunk-bed-outline": 983191,
  "bus": 983271,
  "bus-alert": 985753,
  "bus-articulated-end": 984988,
  "bus-articulated-front": 984989,
  "bus-clock": 985290,
  "bus-double-decker": 984990,
  "bus-electric": 989469,
  "bus-marker": 987666,
  "bus-multiple": 986943,
  "bus-school": 984991,
  "bus-side": 984992,
  "bus-stop": 987154,
  "bus-stop-covered": 987155,
  "bus-stop-uncovered": 987156,
  "butterfly": 988553,
  "butterfly-outline": 988554,
  "cabin-a-frame": 989324,
  "cable-data": 988052,
  "cached": 983272,
  "cactus": 986549,
  "cake": 983273,
  "cake-layered": 983274,
  "cake-variant": 983275,
  "cake-variant-outline": 989168,
  "calculator": 983276,
  "calculator-variant": 985754,
  "calculator-variant-outline": 988582,
  "calendar": 983277,
  "calendar-account": 986839,
  "calendar-account-outline": 986840,
  "calendar-alert": 985649,
  "calendar-arrow-left": 987444,
  "calendar-arrow-right": 987445,
  "calendar-blank": 983278,
  "calendar-blank-multiple": 987251,
  "calendar-blank-outline": 985958,
  "calendar-check": 983279,
  "calendar-check-outline": 986180,
  "calendar-clock": 983280,
  "calendar-clock-outline": 988897,
  "calendar-collapse-horizontal": 989341,
  "calendar-cursor": 988539,
  "calendar-edit": 985255,
  "calendar-end": 988780,
  "calendar-expand-horizontal": 989342,
  "calendar-export": 985892,
  "calendar-heart": 985554,
  "calendar-import": 985893,
  "calendar-lock": 988737,
  "calendar-lock-outline": 988738,
  "calendar-minus": 986460,
  "calendar-month": 986647,
  "calendar-month-outline": 986648,
  "calendar-multiple": 983281,
  "calendar-multiple-check": 983282,
  "calendar-multiselect": 985650,
  "calendar-outline": 985959,
  "calendar-plus": 983283,
  "calendar-question": 984722,
  "calendar-range": 984697,
  "calendar-range-outline": 985960,
  "calendar-refresh": 983521,
  "calendar-refresh-outline": 983555,
  "calendar-remove": 983284,
  "calendar-remove-outline": 986181,
  "calendar-search": 985420,
  "calendar-star": 985555,
  "calendar-start": 988781,
  "calendar-sync": 986766,
  "calendar-sync-outline": 986767,
  "calendar-text": 983285,
  "calendar-text-outline": 986182,
  "calendar-today": 983286,
  "calendar-week": 985651,
  "calendar-week-begin": 985652,
  "calendar-weekend": 986841,
  "calendar-weekend-outline": 986842,
  "call-made": 983287,
  "call-merge": 983288,
  "call-missed": 983289,
  "call-received": 983290,
  "call-split": 983291,
  "camcorder": 983292,
  "camcorder-off": 983295,
  "camera": 983296,
  "camera-account": 985291,
  "camera-burst": 984723,
  "camera-control": 985961,
  "camera-document": 989297,
  "camera-document-off": 989298,
  "camera-enhance": 983297,
  "camera-enhance-outline": 985962,
  "camera-flip": 988633,
  "camera-flip-outline": 988634,
  "camera-front": 983298,
  "camera-front-variant": 983299,
  "camera-gopro": 984993,
  "camera-image": 985292,
  "camera-iris": 983300,
  "camera-marker": 989607,
  "camera-marker-outline": 989608,
  "camera-metering-center": 984994,
  "camera-metering-matrix": 984995,
  "camera-metering-partial": 984996,
  "camera-metering-spot": 984997,
  "camera-off": 984543,
  "camera-off-outline": 989631,
  "camera-outline": 986461,
  "camera-party-mode": 983301,
  "camera-plus": 986843,
  "camera-plus-outline": 986844,
  "camera-rear": 983302,
  "camera-rear-variant": 983303,
  "camera-retake": 986649,
  "camera-retake-outline": 986650,
  "camera-switch": 983304,
  "camera-switch-outline": 985162,
  "camera-timer": 983305,
  "camera-wireless": 986550,
  "camera-wireless-outline": 986551,
  "campfire": 986845,
  "cancel": 984890,
  "candelabra": 989138,
  "candelabra-fire": 989139,
  "candle": 984546,
  "candy": 989552,
  "candy-off": 989553,
  "candy-off-outline": 989554,
  "candy-outline": 989555,
  "candycane": 983306,
  "cannabis": 984998,
  "cannabis-off": 988782,
  "caps-lock": 985755,
  "car": 983307,
  "car-2-plus": 987157,
  "car-3-plus": 987158,
  "car-arrow-left": 988082,
  "car-arrow-right": 988083,
  "car-back": 986651,
  "car-battery": 983308,
  "car-brake-abs": 986183,
  "car-brake-alert": 986184,
  "car-brake-fluid-level": 989449,
  "car-brake-hold": 986462,
  "car-brake-low-pressure": 989450,
  "car-brake-parking": 986463,
  "car-brake-retarder": 987159,
  "car-brake-temperature": 989451,
  "car-brake-worn-linings": 989452,
  "car-child-seat": 987043,
  "car-clock": 989556,
  "car-clutch": 987160,
  "car-cog": 988108,
  "car-connected": 983309,
  "car-convertible": 984999,
  "car-coolant-level": 987161,
  "car-cruise-control": 986464,
  "car-defrost-front": 986465,
  "car-defrost-rear": 986466,
  "car-door": 985963,
  "car-door-lock": 987293,
  "car-electric": 985964,
  "car-electric-outline": 988597,
  "car-emergency": 988687,
  "car-esp": 986185,
  "car-estate": 985000,
  "car-hatchback": 985001,
  "car-info": 987582,
  "car-key": 985965,
  "car-lifted-pickup": 988461,
  "car-light-alert": 989453,
  "car-light-dimmed": 986186,
  "car-light-fog": 986187,
  "car-light-high": 986188,
  "car-limousine": 985293,
  "car-multiple": 985966,
  "car-off": 986652,
  "car-outline": 988397,
  "car-parking-lights": 986467,
  "car-pickup": 985002,
  "car-seat": 987044,
  "car-seat-cooler": 987045,
  "car-seat-heater": 987046,
  "car-select": 989305,
  "car-settings": 988109,
  "car-shift-pattern": 986944,
  "car-side": 985003,
  "car-speed-limiter": 989454,
  "car-sports": 985004,
  "car-tire-alert": 986189,
  "car-traction-control": 986468,
  "car-turbocharger": 987162,
  "car-wash": 983310,
  "car-windshield": 987163,
  "car-windshield-outline": 987164,
  "car-wireless": 989304,
  "car-wrench": 989204,
  "carabiner": 988352,
  "caravan": 985005,
  "card": 985967,
  "card-account-details": 984530,
  "card-account-details-outline": 986539,
  "card-account-details-star": 983715,
  "card-account-details-star-outline": 984795,
  "card-account-mail": 983438,
  "card-account-mail-outline": 986776,
  "card-account-phone": 986777,
  "card-account-phone-outline": 986778,
  "card-bulleted": 985968,
  "card-bulleted-off": 985969,
  "card-bulleted-off-outline": 985970,
  "card-bulleted-outline": 985971,
  "card-bulleted-settings": 985972,
  "card-bulleted-settings-outline": 985973,
  "card-minus": 988672,
  "card-minus-outline": 988673,
  "card-multiple": 989169,
  "card-multiple-outline": 989170,
  "card-off": 988674,
  "card-off-outline": 988675,
  "card-outline": 985974,
  "card-plus": 987647,
  "card-plus-outline": 987648,
  "card-remove": 988676,
  "card-remove-outline": 988677,
  "card-search": 987252,
  "card-search-outline": 987253,
  "card-text": 985975,
  "card-text-outline": 985976,
  "cards": 984632,
  "cards-club": 985294,
  "cards-club-outline": 989343,
  "cards-diamond": 985295,
  "cards-diamond-outline": 987165,
  "cards-heart": 985296,
  "cards-heart-outline": 989344,
  "cards-outline": 984633,
  "cards-playing": 989345,
  "cards-playing-club": 989346,
  "cards-playing-club-multiple": 989347,
  "cards-playing-club-multiple-outline": 989348,
  "cards-playing-club-outline": 989349,
  "cards-playing-diamond": 989350,
  "cards-playing-diamond-multiple": 989351,
  "cards-playing-diamond-multiple-outline": 989352,
  "cards-playing-diamond-outline": 989353,
  "cards-playing-heart": 989354,
  "cards-playing-heart-multiple": 989355,
  "cards-playing-heart-multiple-outline": 989356,
  "cards-playing-heart-outline": 989357,
  "cards-playing-outline": 984634,
  "cards-playing-spade": 989358,
  "cards-playing-spade-multiple": 989359,
  "cards-playing-spade-multiple-outline": 989360,
  "cards-playing-spade-outline": 989361,
  "cards-spade": 985297,
  "cards-spade-outline": 989362,
  "cards-variant": 984775,
  "carrot": 983311,
  "cart": 983312,
  "cart-arrow-down": 986470,
  "cart-arrow-right": 986190,
  "cart-arrow-up": 986471,
  "cart-check": 988650,
  "cart-heart": 989408,
  "cart-minus": 986472,
  "cart-off": 984683,
  "cart-outline": 983313,
  "cart-plus": 983314,
  "cart-remove": 986473,
  "cart-variant": 988651,
  "case-sensitive-alt": 983315,
  "cash": 983316,
  "cash-100": 983317,
  "cash-check": 988398,
  "cash-fast": 989276,
  "cash-lock": 988394,
  "cash-lock-open": 988395,
  "cash-marker": 986552,
  "cash-minus": 987744,
  "cash-multiple": 983318,
  "cash-plus": 987745,
  "cash-refund": 985756,
  "cash-register": 986356,
  "cash-remove": 987746,
  "cassette": 985556,
  "cast": 983320,
  "cast-audio": 987166,
  "cast-audio-variant": 989001,
  "cast-connected": 983321,
  "cast-education": 986653,
  "cast-off": 984970,
  "cast-variant": 983071,
  "castle": 983322,
  "cat": 983323,
  "cctv": 985006,
  "cctv-off": 989279,
  "ceiling-fan": 989079,
  "ceiling-fan-light": 989080,
  "ceiling-light": 984937,
  "ceiling-light-multiple": 989405,
  "ceiling-light-multiple-outline": 989406,
  "ceiling-light-outline": 989127,
  "cellphone": 983324,
  "cellphone-arrow-down": 985557,
  "cellphone-basic": 983326,
  "cellphone-charging": 988055,
  "cellphone-check": 989181,
  "cellphone-cog": 985425,
  "cellphone-dock": 983327,
  "cellphone-information": 986945,
  "cellphone-key": 985422,
  "cellphone-link": 983329,
  "cellphone-link-off": 983330,
  "cellphone-lock": 985423,
  "cellphone-marker": 989242,
  "cellphone-message": 985299,
  "cellphone-message-off": 987346,
  "cellphone-nfc": 986768,
  "cellphone-nfc-off": 987864,
  "cellphone-off": 985424,
  "cellphone-play": 987167,
  "cellphone-remove": 985421,
  "cellphone-screenshot": 985653,
  "cellphone-settings": 983331,
  "cellphone-sound": 985426,
  "cellphone-text": 985298,
  "cellphone-wireless": 985109,
  "centos": 987418,
  "certificate": 983332,
  "certificate-outline": 987528,
  "chair-rolling": 986952,
  "chair-school": 983333,
  "chandelier": 989075,
  "charity": 986191,
  "chart-arc": 983334,
  "chart-areaspline": 983335,
  "chart-areaspline-variant": 986769,
  "chart-bar": 983336,
  "chart-bar-stacked": 984938,
  "chart-bell-curve": 986192,
  "chart-bell-curve-cumulative": 987047,
  "chart-box": 988493,
  "chart-box-outline": 988494,
  "chart-box-plus-outline": 988495,
  "chart-bubble": 984547,
  "chart-donut": 985007,
  "chart-donut-variant": 985008,
  "chart-gantt": 984684,
  "chart-histogram": 983337,
  "chart-line": 983338,
  "chart-line-stacked": 984939,
  "chart-line-variant": 985009,
  "chart-multiline": 985300,
  "chart-multiple": 987667,
  "chart-pie": 983339,
  "chart-ppf": 988032,
  "chart-sankey": 987615,
  "chart-sankey-variant": 987616,
  "chart-scatter-plot": 986770,
  "chart-scatter-plot-hexbin": 984685,
  "chart-timeline": 984686,
  "chart-timeline-variant": 986771,
  "chart-timeline-variant-shimmer": 988598,
  "chart-tree": 986772,
  "chart-waterfall": 989464,
  "chat": 985977,
  "chat-alert": 985978,
  "chat-alert-outline": 987849,
  "chat-minus": 988176,
  "chat-minus-outline": 988179,
  "chat-outline": 986846,
  "chat-plus": 988175,
  "chat-plus-outline": 988178,
  "chat-processing": 985979,
  "chat-processing-outline": 987850,
  "chat-question": 988984,
  "chat-question-outline": 988985,
  "chat-remove": 988177,
  "chat-remove-outline": 988180,
  "chat-sleep": 987857,
  "chat-sleep-outline": 987858,
  "check": 983340,
  "check-all": 983341,
  "check-bold": 986654,
  "check-circle": 984544,
  "check-circle-outline": 984545,
  "check-decagram": 984977,
  "check-decagram-outline": 988992,
  "check-network": 986195,
  "check-network-outline": 986196,
  "check-outline": 985173,
  "check-underline": 986655,
  "check-underline-circle": 986656,
  "check-underline-circle-outline": 986657,
  "checkbook": 985757,
  "checkbox-blank": 983342,
  "checkbox-blank-badge": 987510,
  "checkbox-blank-badge-outline": 983319,
  "checkbox-blank-circle": 983343,
  "checkbox-blank-circle-outline": 983344,
  "checkbox-blank-off": 987884,
  "checkbox-blank-off-outline": 987885,
  "checkbox-blank-outline": 983345,
  "checkbox-intermediate": 985174,
  "checkbox-marked": 983346,
  "checkbox-marked-circle": 983347,
  "checkbox-marked-circle-outline": 983348,
  "checkbox-marked-circle-plus-outline": 989479,
  "checkbox-marked-outline": 983349,
  "checkbox-multiple-blank": 983350,
  "checkbox-multiple-blank-circle": 984635,
  "checkbox-multiple-blank-circle-outline": 984636,
  "checkbox-multiple-blank-outline": 983351,
  "checkbox-multiple-marked": 983352,
  "checkbox-multiple-marked-circle": 984637,
  "checkbox-multiple-marked-circle-outline": 984638,
  "checkbox-multiple-marked-outline": 983353,
  "checkbox-multiple-outline": 986193,
  "checkbox-outline": 986194,
  "checkerboard": 983354,
  "checkerboard-minus": 987650,
  "checkerboard-plus": 987649,
  "checkerboard-remove": 987651,
  "cheese": 987833,
  "cheese-off": 988142,
  "chef-hat": 985980,
  "chemical-weapon": 983355,
  "chess-bishop": 985180,
  "chess-king": 985175,
  "chess-knight": 985176,
  "chess-pawn": 985177,
  "chess-queen": 985178,
  "chess-rook": 985179,
  "chevron-double-down": 983356,
  "chevron-double-left": 983357,
  "chevron-double-right": 983358,
  "chevron-double-up": 983359,
  "chevron-down": 983360,
  "chevron-down-box": 985558,
  "chevron-down-box-outline": 985559,
  "chevron-down-circle": 985894,
  "chevron-down-circle-outline": 985895,
  "chevron-left": 983361,
  "chevron-left-box": 985560,
  "chevron-left-box-outline": 985561,
  "chevron-left-circle": 985896,
  "chevron-left-circle-outline": 985897,
  "chevron-right": 983362,
  "chevron-right-box": 985562,
  "chevron-right-box-outline": 985563,
  "chevron-right-circle": 985898,
  "chevron-right-circle-outline": 985899,
  "chevron-triple-down": 986553,
  "chevron-triple-left": 986554,
  "chevron-triple-right": 986555,
  "chevron-triple-up": 986556,
  "chevron-up": 983363,
  "chevron-up-box": 985564,
  "chevron-up-box-outline": 985565,
  "chevron-up-circle": 985900,
  "chevron-up-circle-outline": 985901,
  "chili-alert": 989162,
  "chili-alert-outline": 989163,
  "chili-hot": 985010,
  "chili-hot-outline": 989164,
  "chili-medium": 985011,
  "chili-medium-outline": 989165,
  "chili-mild": 985012,
  "chili-mild-outline": 989166,
  "chili-off": 988263,
  "chili-off-outline": 989167,
  "chip": 984602,
  "church": 983364,
  "cigar": 987529,
  "cigar-off": 988187,
  "circle": 984933,
  "circle-box": 988636,
  "circle-box-outline": 988637,
  "circle-double": 986773,
  "circle-edit-outline": 985301,
  "circle-expand": 986774,
  "circle-half": 988053,
  "circle-half-full": 988054,
  "circle-medium": 985566,
  "circle-multiple": 985912,
  "circle-multiple-outline": 984725,
  "circle-off-outline": 987347,
  "circle-opacity": 989267,
  "circle-outline": 984934,
  "circle-slice-1": 985758,
  "circle-slice-2": 985759,
  "circle-slice-3": 985760,
  "circle-slice-4": 985761,
  "circle-slice-5": 985762,
  "circle-slice-6": 985763,
  "circle-slice-7": 985764,
  "circle-slice-8": 985765,
  "circle-small": 985567,
  "circular-saw": 986658,
  "city": 983366,
  "city-variant": 985654,
  "city-variant-outline": 985655,
  "clipboard": 983367,
  "clipboard-account": 983368,
  "clipboard-account-outline": 986197,
  "clipboard-alert": 983369,
  "clipboard-alert-outline": 986359,
  "clipboard-arrow-down": 983370,
  "clipboard-arrow-down-outline": 986198,
  "clipboard-arrow-left": 983371,
  "clipboard-arrow-left-outline": 986360,
  "clipboard-arrow-right": 986361,
  "clipboard-arrow-right-outline": 986362,
  "clipboard-arrow-up": 986199,
  "clipboard-arrow-up-outline": 986200,
  "clipboard-check": 983374,
  "clipboard-check-multiple": 987747,
  "clipboard-check-multiple-outline": 987748,
  "clipboard-check-outline": 985256,
  "clipboard-clock": 988898,
  "clipboard-clock-outline": 988899,
  "clipboard-edit": 988389,
  "clipboard-edit-outline": 988390,
  "clipboard-file": 987749,
  "clipboard-file-outline": 987750,
  "clipboard-flow": 984776,
  "clipboard-flow-outline": 987415,
  "clipboard-list": 987348,
  "clipboard-list-outline": 987349,
  "clipboard-minus": 988696,
  "clipboard-minus-outline": 988697,
  "clipboard-multiple": 987751,
  "clipboard-multiple-outline": 987752,
  "clipboard-off": 988698,
  "clipboard-off-outline": 988699,
  "clipboard-outline": 983372,
  "clipboard-play": 986201,
  "clipboard-play-multiple": 987753,
  "clipboard-play-multiple-outline": 987754,
  "clipboard-play-outline": 986202,
  "clipboard-plus": 984913,
  "clipboard-plus-outline": 987935,
  "clipboard-pulse": 985181,
  "clipboard-pulse-outline": 985182,
  "clipboard-remove": 988700,
  "clipboard-remove-outline": 988701,
  "clipboard-search": 988702,
  "clipboard-search-outline": 988703,
  "clipboard-text": 983373,
  "clipboard-text-clock": 989433,
  "clipboard-text-clock-outline": 989434,
  "clipboard-text-multiple": 987755,
  "clipboard-text-multiple-outline": 987756,
  "clipboard-text-off": 988704,
  "clipboard-text-off-outline": 988705,
  "clipboard-text-outline": 985656,
  "clipboard-text-play": 986203,
  "clipboard-text-play-outline": 986204,
  "clipboard-text-search": 988706,
  "clipboard-text-search-outline": 988707,
  "clippy": 983375,
  "clock": 985428,
  "clock-alert": 985429,
  "clock-alert-outline": 984526,
  "clock-check": 987048,
  "clock-check-outline": 987049,
  "clock-digital": 986775,
  "clock-edit": 989626,
  "clock-edit-outline": 989627,
  "clock-end": 983377,
  "clock-fast": 983378,
  "clock-in": 983379,
  "clock-minus": 989283,
  "clock-minus-outline": 989284,
  "clock-out": 983380,
  "clock-outline": 983376,
  "clock-plus": 989281,
  "clock-plus-outline": 989282,
  "clock-remove": 989285,
  "clock-remove-outline": 989286,
  "clock-start": 983381,
  "clock-time-eight": 988230,
  "clock-time-eight-outline": 988242,
  "clock-time-eleven": 988233,
  "clock-time-eleven-outline": 988245,
  "clock-time-five": 988227,
  "clock-time-five-outline": 988239,
  "clock-time-four": 988226,
  "clock-time-four-outline": 988238,
  "clock-time-nine": 988231,
  "clock-time-nine-outline": 988243,
  "clock-time-one": 988223,
  "clock-time-one-outline": 988235,
  "clock-time-seven": 988229,
  "clock-time-seven-outline": 988241,
  "clock-time-six": 988228,
  "clock-time-six-outline": 988240,
  "clock-time-ten": 988232,
  "clock-time-ten-outline": 988244,
  "clock-time-three": 988225,
  "clock-time-three-outline": 988237,
  "clock-time-twelve": 988234,
  "clock-time-twelve-outline": 988246,
  "clock-time-two": 988224,
  "clock-time-two-outline": 988236,
  "close": 983382,
  "close-box": 983383,
  "close-box-multiple": 986205,
  "close-box-multiple-outline": 986206,
  "close-box-outline": 983384,
  "close-circle": 983385,
  "close-circle-multiple": 984618,
  "close-circle-multiple-outline": 985219,
  "close-circle-outline": 983386,
  "close-network": 983387,
  "close-network-outline": 986207,
  "close-octagon": 983388,
  "close-octagon-outline": 983389,
  "close-outline": 984777,
  "close-thick": 988056,
  "closed-caption": 983390,
  "closed-caption-outline": 986557,
  "cloud": 983391,
  "cloud-alert": 985568,
  "cloud-braces": 985013,
  "cloud-check": 983392,
  "cloud-check-outline": 987852,
  "cloud-circle": 983393,
  "cloud-download": 983394,
  "cloud-download-outline": 985981,
  "cloud-lock": 987633,
  "cloud-lock-outline": 987634,
  "cloud-off-outline": 983396,
  "cloud-outline": 983395,
  "cloud-print": 983397,
  "cloud-print-outline": 983398,
  "cloud-question": 985657,
  "cloud-refresh": 984362,
  "cloud-search": 985430,
  "cloud-search-outline": 985431,
  "cloud-sync": 984639,
  "cloud-sync-outline": 987862,
  "cloud-tags": 985014,
  "cloud-upload": 983399,
  "cloud-upload-outline": 985982,
  "clover": 985110,
  "coach-lamp": 987168,
  "coat-rack": 987294,
  "code-array": 983400,
  "code-braces": 983401,
  "code-braces-box": 987350,
  "code-brackets": 983402,
  "code-equal": 983403,
  "code-greater-than": 983404,
  "code-greater-than-or-equal": 983405,
  "code-json": 984614,
  "code-less-than": 983406,
  "code-less-than-or-equal": 983407,
  "code-not-equal": 983408,
  "code-not-equal-variant": 983409,
  "code-parentheses": 983410,
  "code-parentheses-box": 987351,
  "code-string": 983411,
  "code-tags": 983412,
  "code-tags-check": 984724,
  "codepen": 983413,
  "coffee": 983414,
  "coffee-maker": 987295,
  "coffee-maker-check": 989489,
  "coffee-maker-check-outline": 989490,
  "coffee-maker-outline": 989211,
  "coffee-off": 987050,
  "coffee-off-outline": 987051,
  "coffee-outline": 984778,
  "coffee-to-go": 983415,
  "coffee-to-go-outline": 987918,
  "coffin": 985983,
  "cog": 984211,
  "cog-box": 984212,
  "cog-clockwise": 987613,
  "cog-counterclockwise": 987614,
  "cog-off": 988110,
  "cog-off-outline": 988111,
  "cog-outline": 985275,
  "cog-pause": 989491,
  "cog-pause-outline": 989492,
  "cog-play": 989493,
  "cog-play-outline": 989494,
  "cog-refresh": 988254,
  "cog-refresh-outline": 988255,
  "cog-stop": 989495,
  "cog-stop-outline": 989496,
  "cog-sync": 988256,
  "cog-sync-outline": 988257,
  "cog-transfer": 987227,
  "cog-transfer-outline": 987228,
  "cogs": 985302,
  "collage": 984640,
  "collapse-all": 985766,
  "collapse-all-outline": 985767,
  "color-helper": 983417,
  "comma": 986659,
  "comma-box": 986667,
  "comma-box-outline": 986660,
  "comma-circle": 986661,
  "comma-circle-outline": 986662,
  "comment": 983418,
  "comment-account": 983419,
  "comment-account-outline": 983420,
  "comment-alert": 983421,
  "comment-alert-outline": 983422,
  "comment-arrow-left": 985569,
  "comment-arrow-left-outline": 985570,
  "comment-arrow-right": 985571,
  "comment-arrow-right-outline": 985572,
  "comment-bookmark": 988590,
  "comment-bookmark-outline": 988591,
  "comment-check": 983423,
  "comment-check-outline": 983424,
  "comment-edit": 987583,
  "comment-edit-outline": 987844,
  "comment-eye": 985658,
  "comment-eye-outline": 985659,
  "comment-flash": 988592,
  "comment-flash-outline": 988593,
  "comment-minus": 988639,
  "comment-minus-outline": 988640,
  "comment-multiple": 985183,
  "comment-multiple-outline": 983425,
  "comment-off": 988641,
  "comment-off-outline": 988642,
  "comment-outline": 983426,
  "comment-plus": 985573,
  "comment-plus-outline": 983427,
  "comment-processing": 983428,
  "comment-processing-outline": 983429,
  "comment-question": 985111,
  "comment-question-outline": 983430,
  "comment-quote": 987169,
  "comment-quote-outline": 987170,
  "comment-remove": 984542,
  "comment-remove-outline": 983431,
  "comment-search": 985660,
  "comment-search-outline": 985661,
  "comment-text": 983432,
  "comment-text-multiple": 985184,
  "comment-text-multiple-outline": 985185,
  "comment-text-outline": 983433,
  "compare": 983434,
  "compare-horizontal": 988306,
  "compare-remove": 989363,
  "compare-vertical": 988307,
  "compass": 983435,
  "compass-off": 985984,
  "compass-off-outline": 985985,
  "compass-outline": 983436,
  "compass-rose": 988034,
  "cone": 989516,
  "cone-off": 989517,
  "connection": 988694,
  "console": 983437,
  "console-line": 985015,
  "console-network": 985257,
  "console-network-outline": 986208,
  "consolidate": 987352,
  "contactless-payment": 986474,
  "contactless-payment-circle": 983841,
  "contactless-payment-circle-outline": 984072,
  "contacts": 984779,
  "contacts-outline": 984504,
  "contain": 985662,
  "contain-end": 985663,
  "contain-start": 985664,
  "content-copy": 983439,
  "content-cut": 983440,
  "content-duplicate": 983441,
  "content-paste": 983442,
  "content-save": 983443,
  "content-save-alert": 986946,
  "content-save-alert-outline": 986947,
  "content-save-all": 983444,
  "content-save-all-outline": 986948,
  "content-save-check": 989418,
  "content-save-check-outline": 989419,
  "content-save-cog": 988251,
  "content-save-cog-outline": 988252,
  "content-save-edit": 986363,
  "content-save-edit-outline": 986364,
  "content-save-move": 986663,
  "content-save-move-outline": 986664,
  "content-save-off": 988739,
  "content-save-off-outline": 988740,
  "content-save-outline": 985112,
  "content-save-settings": 984603,
  "content-save-settings-outline": 985902,
  "contrast": 983445,
  "contrast-box": 983446,
  "contrast-circle": 983447,
  "controller-classic": 985986,
  "controller-classic-outline": 985987,
  "cookie": 983448,
  "cookie-alert": 988880,
  "cookie-alert-outline": 988881,
  "cookie-check": 988882,
  "cookie-check-outline": 988883,
  "cookie-clock": 988900,
  "cookie-clock-outline": 988901,
  "cookie-cog": 988884,
  "cookie-cog-outline": 988885,
  "cookie-edit": 988902,
  "cookie-edit-outline": 988903,
  "cookie-lock": 988904,
  "cookie-lock-outline": 988905,
  "cookie-minus": 988890,
  "cookie-minus-outline": 988891,
  "cookie-off": 988906,
  "cookie-off-outline": 988907,
  "cookie-outline": 988894,
  "cookie-plus": 988886,
  "cookie-plus-outline": 988887,
  "cookie-refresh": 988908,
  "cookie-refresh-outline": 988909,
  "cookie-remove": 988888,
  "cookie-remove-outline": 988889,
  "cookie-settings": 988892,
  "cookie-settings-outline": 988893,
  "coolant-temperature": 984008,
  "copyleft": 989497,
  "copyright": 984550,
  "cordova": 985432,
  "corn": 985016,
  "corn-off": 988143,
  "cosine-wave": 988281,
  "counter": 983449,
  "countertop": 989212,
  "countertop-outline": 989213,
  "cow": 983450,
  "cow-off": 989436,
  "cpu-32-bit": 986847,
  "cpu-64-bit": 986848,
  "cradle": 989579,
  "cradle-outline": 989585,
  "crane": 985186,
  "creation": 984692,
  "creative-commons": 986475,
  "credit-card": 987119,
  "credit-card-check": 988112,
  "credit-card-check-outline": 988113,
  "credit-card-chip": 989455,
  "credit-card-chip-outline": 989456,
  "credit-card-clock": 986849,
  "credit-card-clock-outline": 986850,
  "credit-card-edit": 989143,
  "credit-card-edit-outline": 989144,
  "credit-card-fast": 989457,
  "credit-card-fast-outline": 989458,
  "credit-card-lock": 989415,
  "credit-card-lock-outline": 989416,
  "credit-card-marker": 984744,
  "credit-card-marker-outline": 986558,
  "credit-card-minus": 987052,
  "credit-card-minus-outline": 987053,
  "credit-card-multiple": 987120,
  "credit-card-multiple-outline": 983452,
  "credit-card-off": 987121,
  "credit-card-off-outline": 984548,
  "credit-card-outline": 983451,
  "credit-card-plus": 987122,
  "credit-card-plus-outline": 984694,
  "credit-card-refresh": 988741,
  "credit-card-refresh-outline": 988742,
  "credit-card-refund": 987123,
  "credit-card-refund-outline": 985768,
  "credit-card-remove": 987054,
  "credit-card-remove-outline": 987055,
  "credit-card-scan": 987124,
  "credit-card-scan-outline": 983453,
  "credit-card-search": 988743,
  "credit-card-search-outline": 988744,
  "credit-card-settings": 987125,
  "credit-card-settings-outline": 985303,
  "credit-card-sync": 988745,
  "credit-card-sync-outline": 988746,
  "credit-card-wireless": 985090,
  "credit-card-wireless-off": 984442,
  "credit-card-wireless-off-outline": 984443,
  "credit-card-wireless-outline": 986476,
  "cricket": 986477,
  "crop": 983454,
  "crop-free": 983455,
  "crop-landscape": 983456,
  "crop-portrait": 983457,
  "crop-rotate": 984726,
  "crop-square": 983458,
  "cross": 985427,
  "cross-bolnisi": 986349,
  "cross-celtic": 986357,
  "cross-outline": 986358,
  "crosshairs": 983459,
  "crosshairs-gps": 983460,
  "crosshairs-off": 986949,
  "crosshairs-question": 987446,
  "crowd": 989557,
  "crown": 983461,
  "crown-circle": 989148,
  "crown-circle-outline": 989149,
  "crown-outline": 987600,
  "cryengine": 985433,
  "crystal-ball": 985903,
  "cube": 983462,
  "cube-off": 988188,
  "cube-off-outline": 988189,
  "cube-outline": 983463,
  "cube-scan": 985988,
  "cube-send": 983464,
  "cube-unfolded": 983465,
  "cup": 983466,
  "cup-off": 984549,
  "cup-off-outline": 988029,
  "cup-outline": 987919,
  "cup-water": 983467,
  "cupboard": 986950,
  "cupboard-outline": 986951,
  "cupcake": 985434,
  "curling": 985187,
  "currency-bdt": 985188,
  "currency-brl": 985989,
  "currency-btc": 983468,
  "currency-cny": 985018,
  "currency-eth": 985019,
  "currency-eur": 983469,
  "currency-eur-off": 987925,
  "currency-gbp": 983470,
  "currency-ils": 986209,
  "currency-inr": 983471,
  "currency-jpy": 985020,
  "currency-krw": 985021,
  "currency-kzt": 985189,
  "currency-mnt": 988434,
  "currency-ngn": 983472,
  "currency-php": 985574,
  "currency-rial": 986780,
  "currency-rub": 983473,
  "currency-rupee": 989558,
  "currency-sign": 985022,
  "currency-try": 983474,
  "currency-twd": 985023,
  "currency-usd": 983489,
  "currency-usd-off": 984698,
  "current-ac": 988288,
  "current-dc": 985436,
  "cursor-default": 983488,
  "cursor-default-click": 986365,
  "cursor-default-click-outline": 986366,
  "cursor-default-gesture": 987431,
  "cursor-default-gesture-outline": 987432,
  "cursor-default-outline": 983487,
  "cursor-move": 983486,
  "cursor-pointer": 983485,
  "cursor-text": 984551,
  "curtains": 989254,
  "curtains-closed": 989255,
  "cylinder": 989518,
  "cylinder-off": 989519,
  "dance-ballroom": 988667,
  "dance-pole": 988536,
  "data-matrix": 988476,
  "data-matrix-edit": 988477,
  "data-matrix-minus": 988478,
  "data-matrix-plus": 988479,
  "data-matrix-remove": 988480,
  "data-matrix-scan": 988481,
  "database": 983484,
  "database-alert": 988730,
  "database-alert-outline": 988708,
  "database-arrow-down": 988731,
  "database-arrow-down-outline": 988709,
  "database-arrow-left": 988732,
  "database-arrow-left-outline": 988710,
  "database-arrow-right": 988733,
  "database-arrow-right-outline": 988711,
  "database-arrow-up": 988734,
  "database-arrow-up-outline": 988712,
  "database-check": 985769,
  "database-check-outline": 988713,
  "database-clock": 988735,
  "database-clock-outline": 988714,
  "database-cog": 988747,
  "database-cog-outline": 988748,
  "database-edit": 985990,
  "database-edit-outline": 988715,
  "database-export": 985438,
  "database-export-outline": 988716,
  "database-eye": 989471,
  "database-eye-off": 989472,
  "database-eye-off-outline": 989473,
  "database-eye-outline": 989474,
  "database-import": 985437,
  "database-import-outline": 988717,
  "database-lock": 985770,
  "database-lock-outline": 988718,
  "database-marker": 987894,
  "database-marker-outline": 988719,
  "database-minus": 983483,
  "database-minus-outline": 988720,
  "database-off": 988736,
  "database-off-outline": 988721,
  "database-outline": 988722,
  "database-plus": 983482,
  "database-plus-outline": 988723,
  "database-refresh": 984514,
  "database-refresh-outline": 988724,
  "database-remove": 986368,
  "database-remove-outline": 988725,
  "database-search": 985190,
  "database-search-outline": 988726,
  "database-settings": 986369,
  "database-settings-outline": 988727,
  "database-sync": 986367,
  "database-sync-outline": 988728,
  "death-star": 985304,
  "death-star-variant": 985305,
  "deathly-hallows": 985991,
  "debian": 985306,
  "debug-step-into": 983481,
  "debug-step-out": 983480,
  "debug-step-over": 983479,
  "decagram": 984940,
  "decagram-outline": 984941,
  "decimal": 987297,
  "decimal-comma": 987298,
  "decimal-comma-decrease": 987299,
  "decimal-comma-increase": 987300,
  "decimal-decrease": 983478,
  "decimal-increase": 983477,
  "delete": 983476,
  "delete-alert": 987301,
  "delete-alert-outline": 987302,
  "delete-circle": 984707,
  "delete-circle-outline": 985992,
  "delete-clock": 988502,
  "delete-clock-outline": 988503,
  "delete-empty": 984780,
  "delete-empty-outline": 986781,
  "delete-forever": 984552,
  "delete-forever-outline": 985993,
  "delete-off": 987303,
  "delete-off-outline": 987304,
  "delete-outline": 985575,
  "delete-restore": 985113,
  "delete-sweep": 984553,
  "delete-sweep-outline": 986210,
  "delete-variant": 983475,
  "delta": 983490,
  "desk": 987705,
  "desk-lamp": 985439,
  "deskphone": 983491,
  "desktop-classic": 985024,
  "desktop-mac": 983492,
  "desktop-mac-dashboard": 985576,
  "desktop-tower": 983493,
  "desktop-tower-monitor": 985771,
  "details": 983494,
  "dev-to": 986478,
  "developer-board": 984727,
  "deviantart": 983495,
  "devices": 987056,
  "dharmachakra": 985419,
  "diabetes": 987430,
  "dialpad": 984604,
  "diameter": 986211,
  "diameter-outline": 986212,
  "diameter-variant": 986213,
  "diamond": 985994,
  "diamond-outline": 985995,
  "diamond-stone": 983496,
  "dice-1": 983498,
  "dice-1-outline": 987466,
  "dice-2": 983499,
  "dice-2-outline": 987467,
  "dice-3": 983500,
  "dice-3-outline": 987468,
  "dice-4": 983501,
  "dice-4-outline": 987469,
  "dice-5": 983502,
  "dice-5-outline": 987470,
  "dice-6": 983503,
  "dice-6-outline": 987471,
  "dice-d10": 987475,
  "dice-d10-outline": 984943,
  "dice-d12": 987476,
  "dice-d12-outline": 985191,
  "dice-d20": 987477,
  "dice-d20-outline": 984554,
  "dice-d4": 987472,
  "dice-d4-outline": 984555,
  "dice-d6": 987473,
  "dice-d6-outline": 984557,
  "dice-d8": 987474,
  "dice-d8-outline": 984556,
  "dice-multiple": 984942,
  "dice-multiple-outline": 987478,
  "digital-ocean": 987703,
  "dip-switch": 985025,
  "directions": 983504,
  "directions-fork": 984641,
  "disc": 984558,
  "disc-alert": 983505,
  "disc-player": 985440,
  "discord": 984687,
  "dishwasher": 985772,
  "dishwasher-alert": 987576,
  "dishwasher-off": 987577,
  "disqus": 983506,
  "distribute-horizontal-center": 987593,
  "distribute-horizontal-left": 987592,
  "distribute-horizontal-right": 987594,
  "distribute-vertical-bottom": 987595,
  "distribute-vertical-center": 987596,
  "distribute-vertical-top": 987597,
  "diversify": 989303,
  "diving": 989559,
  "diving-flippers": 986559,
  "diving-helmet": 986560,
  "diving-scuba": 986561,
  "diving-scuba-flag": 986562,
  "diving-scuba-tank": 986563,
  "diving-scuba-tank-multiple": 986564,
  "diving-snorkel": 986565,
  "division": 983508,
  "division-box": 983509,
  "dlna": 985665,
  "dna": 984708,
  "dns": 983510,
  "dns-outline": 985996,
  "dock-bottom": 987305,
  "dock-left": 987306,
  "dock-right": 987307,
  "dock-top": 988435,
  "dock-window": 987308,
  "docker": 985192,
  "doctor": 985666,
  "dog": 985667,
  "dog-service": 985773,
  "dog-side": 985668,
  "dog-side-off": 988910,
  "dolby": 984755,
  "dolly": 986782,
  "dolphin": 989364,
  "domain": 983511,
  "domain-off": 986479,
  "domain-plus": 987309,
  "domain-remove": 987310,
  "dome-light": 988190,
  "domino-mask": 987171,
  "donkey": 985026,
  "door": 985114,
  "door-closed": 985115,
  "door-closed-lock": 987311,
  "door-open": 985116,
  "door-sliding": 989214,
  "door-sliding-lock": 989215,
  "door-sliding-open": 989216,
  "doorbell": 987878,
  "doorbell-video": 985193,
  "dot-net": 985774,
  "dots-circle": 989560,
  "dots-grid": 988668,
  "dots-hexagon": 988671,
  "dots-horizontal": 983512,
  "dots-horizontal-circle": 985027,
  "dots-horizontal-circle-outline": 985997,
  "dots-square": 988669,
  "dots-triangle": 988670,
  "dots-vertical": 983513,
  "dots-vertical-circle": 985028,
  "dots-vertical-circle-outline": 985998,
  "download": 983514,
  "download-box": 988258,
  "download-box-outline": 988259,
  "download-circle": 988260,
  "download-circle-outline": 988261,
  "download-lock": 987936,
  "download-lock-outline": 987937,
  "download-multiple": 985577,
  "download-network": 984820,
  "download-network-outline": 986214,
  "download-off": 987312,
  "download-off-outline": 987313,
  "download-outline": 985999,
  "drag": 983515,
  "drag-horizontal": 983516,
  "drag-horizontal-variant": 987888,
  "drag-variant": 986000,
  "drag-vertical": 983517,
  "drag-vertical-variant": 987889,
  "drama-masks": 986370,
  "draw": 986953,
  "draw-pen": 989625,
  "drawing": 983518,
  "drawing-box": 983519,
  "dresser": 986954,
  "dresser-outline": 986955,
  "drone": 983522,
  "dropbox": 983523,
  "drupal": 983524,
  "duck": 983525,
  "dumbbell": 983526,
  "dump-truck": 986215,
  "ear-hearing": 985029,
  "ear-hearing-off": 985669,
  "earbuds": 989263,
  "earbuds-off": 989264,
  "earbuds-off-outline": 989265,
  "earbuds-outline": 989266,
  "earth": 983527,
  "earth-arrow-right": 987921,
  "earth-box": 984781,
  "earth-box-minus": 988167,
  "earth-box-off": 984782,
  "earth-box-plus": 988166,
  "earth-box-remove": 988168,
  "earth-minus": 988164,
  "earth-off": 983528,
  "earth-plus": 988163,
  "earth-remove": 988165,
  "egg": 985775,
  "egg-easter": 985776,
  "egg-fried": 989258,
  "egg-off": 988144,
  "egg-off-outline": 988145,
  "egg-outline": 988146,
  "eiffel-tower": 988523,
  "eight-track": 985578,
  "eject": 983530,
  "eject-outline": 986001,
  "electric-switch": 986783,
  "electric-switch-closed": 987353,
  "electron-framework": 987172,
  "elephant": 985030,
  "elevation-decline": 983531,
  "elevation-rise": 983532,
  "elevator": 983533,
  "elevator-down": 987842,
  "elevator-passenger": 988033,
  "elevator-passenger-off": 989561,
  "elevator-passenger-off-outline": 989562,
  "elevator-passenger-outline": 989563,
  "elevator-up": 987841,
  "ellipse": 986784,
  "ellipse-outline": 986785,
  "email": 983534,
  "email-alert": 984783,
  "email-alert-outline": 986434,
  "email-box": 986371,
  "email-check": 985777,
  "email-check-outline": 985778,
  "email-edit": 986851,
  "email-edit-outline": 986852,
  "email-fast": 989295,
  "email-fast-outline": 989296,
  "email-lock": 983537,
  "email-mark-as-unread": 986002,
  "email-minus": 986853,
  "email-minus-outline": 986854,
  "email-multiple": 986855,
  "email-multiple-outline": 986856,
  "email-newsletter": 987057,
  "email-off": 988131,
  "email-off-outline": 988132,
  "email-open": 983535,
  "email-open-multiple": 986857,
  "email-open-multiple-outline": 986858,
  "email-open-outline": 984559,
  "email-outline": 983536,
  "email-plus": 985579,
  "email-plus-outline": 985580,
  "email-receive": 987354,
  "email-receive-outline": 987355,
  "email-remove": 988769,
  "email-remove-outline": 988770,
  "email-seal": 989531,
  "email-seal-outline": 989532,
  "email-search": 985441,
  "email-search-outline": 985442,
  "email-send": 987356,
  "email-send-outline": 987357,
  "email-sync": 987847,
  "email-sync-outline": 987848,
  "email-variant": 984560,
  "ember": 985904,
  "emby": 984756,
  "emoticon": 986216,
  "emoticon-angry": 986217,
  "emoticon-angry-outline": 986218,
  "emoticon-confused": 987358,
  "emoticon-confused-outline": 987359,
  "emoticon-cool": 986219,
  "emoticon-cool-outline": 983539,
  "emoticon-cry": 986220,
  "emoticon-cry-outline": 986221,
  "emoticon-dead": 986222,
  "emoticon-dead-outline": 984731,
  "emoticon-devil": 986223,
  "emoticon-devil-outline": 983540,
  "emoticon-excited": 986224,
  "emoticon-excited-outline": 984732,
  "emoticon-frown": 986956,
  "emoticon-frown-outline": 986957,
  "emoticon-happy": 986225,
  "emoticon-happy-outline": 983541,
  "emoticon-kiss": 986226,
  "emoticon-kiss-outline": 986227,
  "emoticon-lol": 987668,
  "emoticon-lol-outline": 987669,
  "emoticon-neutral": 986228,
  "emoticon-neutral-outline": 983542,
  "emoticon-outline": 983538,
  "emoticon-poop": 983543,
  "emoticon-poop-outline": 986229,
  "emoticon-sad": 986230,
  "emoticon-sad-outline": 983544,
  "emoticon-sick": 988540,
  "emoticon-sick-outline": 988541,
  "emoticon-tongue": 983545,
  "emoticon-tongue-outline": 986231,
  "emoticon-wink": 986232,
  "emoticon-wink-outline": 986233,
  "engine": 983546,
  "engine-off": 985670,
  "engine-off-outline": 985671,
  "engine-outline": 983547,
  "epsilon": 987360,
  "equal": 983548,
  "equal-box": 983549,
  "equalizer": 986786,
  "equalizer-outline": 986787,
  "eraser": 983550,
  "eraser-variant": 984642,
  "escalator": 983551,
  "escalator-box": 988057,
  "escalator-down": 987840,
  "escalator-up": 987839,
  "eslint": 986234,
  "et": 985779,
  "ethereum": 985194,
  "ethernet": 983552,
  "ethernet-cable": 983553,
  "ethernet-cable-off": 983554,
  "ev-plug-ccs1": 988441,
  "ev-plug-ccs2": 988442,
  "ev-plug-chademo": 988443,
  "ev-plug-tesla": 988444,
  "ev-plug-type1": 988445,
  "ev-plug-type2": 988446,
  "ev-station": 984561,
  "evernote": 983556,
  "excavator": 987173,
  "exclamation": 983557,
  "exclamation-thick": 987704,
  "exit-run": 985672,
  "exit-to-app": 983558,
  "expand-all": 985780,
  "expand-all-outline": 985781,
  "expansion-card": 985262,
  "expansion-card-variant": 987058,
  "exponent": 985443,
  "exponent-box": 985444,
  "export": 983559,
  "export-variant": 986003,
  "eye": 983560,
  "eye-arrow-left": 989437,
  "eye-arrow-left-outline": 989438,
  "eye-arrow-right": 989439,
  "eye-arrow-right-outline": 989440,
  "eye-check": 986372,
  "eye-check-outline": 986373,
  "eye-circle": 986004,
  "eye-circle-outline": 986005,
  "eye-minus": 987174,
  "eye-minus-outline": 987175,
  "eye-off": 983561,
  "eye-off-outline": 984785,
  "eye-outline": 984784,
  "eye-plus": 985195,
  "eye-plus-outline": 985196,
  "eye-refresh": 989564,
  "eye-refresh-outline": 989565,
  "eye-remove": 988643,
  "eye-remove-outline": 988644,
  "eye-settings": 985197,
  "eye-settings-outline": 985198,
  "eyedropper": 983562,
  "eyedropper-minus": 988125,
  "eyedropper-off": 988127,
  "eyedropper-plus": 988124,
  "eyedropper-remove": 988126,
  "eyedropper-variant": 983563,
  "face-agent": 986480,
  "face-man": 984643,
  "face-man-outline": 986006,
  "face-man-profile": 984644,
  "face-man-shimmer": 988620,
  "face-man-shimmer-outline": 988621,
  "face-mask": 988550,
  "face-mask-outline": 988551,
  "face-recognition": 986235,
  "face-woman": 987255,
  "face-woman-outline": 987256,
  "face-woman-profile": 987254,
  "face-woman-shimmer": 988622,
  "face-woman-shimmer-outline": 988623,
  "facebook": 983564,
  "facebook-gaming": 985053,
  "facebook-messenger": 983566,
  "facebook-workplace": 985905,
  "factory": 983567,
  "family-tree": 988686,
  "fan": 983568,
  "fan-alert": 988268,
  "fan-auto": 988957,
  "fan-chevron-down": 988269,
  "fan-chevron-up": 988270,
  "fan-minus": 988272,
  "fan-off": 985117,
  "fan-plus": 988271,
  "fan-remove": 988273,
  "fan-speed-1": 988274,
  "fan-speed-2": 988275,
  "fan-speed-3": 988276,
  "fast-forward": 983569,
  "fast-forward-10": 986481,
  "fast-forward-15": 989498,
  "fast-forward-30": 986374,
  "fast-forward-5": 987640,
  "fast-forward-60": 988683,
  "fast-forward-outline": 984786,
  "fax": 983570,
  "feather": 984787,
  "feature-search": 985673,
  "feature-search-outline": 985674,
  "fedora": 985307,
  "fence": 989082,
  "fence-electric": 989174,
  "fencing": 988353,
  "ferris-wheel": 986788,
  "ferry": 983571,
  "file": 983572,
  "file-account": 984891,
  "file-account-outline": 987176,
  "file-alert": 985675,
  "file-alert-outline": 985676,
  "file-cabinet": 985782,
  "file-cad": 986859,
  "file-cad-box": 986860,
  "file-cancel": 986566,
  "file-cancel-outline": 986567,
  "file-certificate": 987526,
  "file-certificate-outline": 987527,
  "file-chart": 983573,
  "file-chart-outline": 987177,
  "file-check": 983574,
  "file-check-outline": 986665,
  "file-clock": 987873,
  "file-clock-outline": 987874,
  "file-cloud": 983575,
  "file-cloud-outline": 987178,
  "file-code": 983598,
  "file-code-outline": 987179,
  "file-cog": 987259,
  "file-cog-outline": 987260,
  "file-compare": 985258,
  "file-delimited": 983576,
  "file-delimited-outline": 986789,
  "file-document": 983577,
  "file-document-edit": 986568,
  "file-document-edit-outline": 986569,
  "file-document-multiple": 988439,
  "file-document-multiple-outline": 988440,
  "file-document-outline": 985582,
  "file-download": 985445,
  "file-download-outline": 985446,
  "file-edit": 987623,
  "file-edit-outline": 987624,
  "file-excel": 983579,
  "file-excel-box": 983580,
  "file-excel-box-outline": 987180,
  "file-excel-outline": 987181,
  "file-export": 983581,
  "file-export-outline": 987182,
  "file-eye": 986570,
  "file-eye-outline": 986571,
  "file-find": 983582,
  "file-find-outline": 986007,
  "file-gif-box": 986488,
  "file-hidden": 984595,
  "file-image": 983583,
  "file-image-marker": 989042,
  "file-image-marker-outline": 989043,
  "file-image-minus": 989499,
  "file-image-minus-outline": 989500,
  "file-image-outline": 986800,
  "file-image-plus": 989501,
  "file-image-plus-outline": 989502,
  "file-image-remove": 989503,
  "file-image-remove-outline": 989504,
  "file-import": 983584,
  "file-import-outline": 987183,
  "file-jpg-box": 983589,
  "file-key": 987524,
  "file-key-outline": 987525,
  "file-link": 987511,
  "file-link-outline": 987512,
  "file-lock": 983585,
  "file-lock-outline": 987184,
  "file-marker": 989044,
  "file-marker-outline": 989045,
  "file-move": 985785,
  "file-move-outline": 987185,
  "file-multiple": 983586,
  "file-multiple-outline": 987186,
  "file-music": 983587,
  "file-music-outline": 986666,
  "file-outline": 983588,
  "file-pdf-box": 983590,
  "file-percent": 985118,
  "file-percent-outline": 987187,
  "file-phone": 987513,
  "file-phone-outline": 987514,
  "file-plus": 984914,
  "file-plus-outline": 986861,
  "file-png-box": 986669,
  "file-powerpoint": 983591,
  "file-powerpoint-box": 983592,
  "file-powerpoint-box-outline": 987188,
  "file-powerpoint-outline": 987189,
  "file-presentation-box": 983593,
  "file-question": 985199,
  "file-question-outline": 987190,
  "file-refresh": 985368,
  "file-refresh-outline": 984385,
  "file-remove": 986008,
  "file-remove-outline": 987191,
  "file-replace": 985906,
  "file-replace-outline": 985907,
  "file-restore": 984688,
  "file-restore-outline": 987192,
  "file-search": 986236,
  "file-search-outline": 986237,
  "file-send": 983594,
  "file-send-outline": 987193,
  "file-settings": 987257,
  "file-settings-outline": 987258,
  "file-sign": 989635,
  "file-star": 987194,
  "file-star-outline": 987195,
  "file-swap": 987060,
  "file-swap-outline": 987061,
  "file-sync": 987670,
  "file-sync-outline": 987671,
  "file-table": 986238,
  "file-table-box": 987361,
  "file-table-box-multiple": 987362,
  "file-table-box-multiple-outline": 987363,
  "file-table-box-outline": 987364,
  "file-table-outline": 986239,
  "file-tree": 984645,
  "file-tree-outline": 988114,
  "file-undo": 985308,
  "file-undo-outline": 987196,
  "file-upload": 985677,
  "file-upload-outline": 985678,
  "file-video": 983595,
  "file-video-outline": 986668,
  "file-word": 983596,
  "file-word-box": 983597,
  "file-word-box-outline": 987197,
  "file-word-outline": 987198,
  "film": 983599,
  "filmstrip": 983600,
  "filmstrip-box": 983858,
  "filmstrip-box-multiple": 986392,
  "filmstrip-off": 983601,
  "filter": 983602,
  "filter-check": 989420,
  "filter-check-outline": 989421,
  "filter-menu": 987365,
  "filter-menu-outline": 987366,
  "filter-minus": 986862,
  "filter-minus-outline": 986863,
  "filter-off": 988399,
  "filter-off-outline": 988400,
  "filter-outline": 983603,
  "filter-plus": 986864,
  "filter-plus-outline": 986865,
  "filter-remove": 983604,
  "filter-remove-outline": 983605,
  "filter-variant": 983606,
  "filter-variant-minus": 987410,
  "filter-variant-plus": 987411,
  "filter-variant-remove": 987199,
  "finance": 985119,
  "find-replace": 984788,
  "fingerprint": 983607,
  "fingerprint-off": 986801,
  "fire": 983608,
  "fire-alert": 988631,
  "fire-circle": 989191,
  "fire-extinguisher": 986866,
  "fire-hydrant": 987447,
  "fire-hydrant-alert": 987448,
  "fire-hydrant-off": 987449,
  "fire-off": 988962,
  "fire-truck": 985259,
  "firebase": 985447,
  "firefox": 983609,
  "fireplace": 986670,
  "fireplace-off": 986671,
  "firewire": 984510,
  "firework": 986672,
  "firework-off": 988963,
  "fish": 983610,
  "fish-off": 988147,
  "fishbowl": 986867,
  "fishbowl-outline": 986868,
  "fit-to-page": 986869,
  "fit-to-page-outline": 986870,
  "fit-to-screen": 989428,
  "fit-to-screen-outline": 989429,
  "flag": 983611,
  "flag-checkered": 983612,
  "flag-minus": 986009,
  "flag-minus-outline": 987314,
  "flag-off": 989422,
  "flag-off-outline": 989423,
  "flag-outline": 983613,
  "flag-plus": 986010,
  "flag-plus-outline": 987315,
  "flag-remove": 986011,
  "flag-remove-outline": 987316,
  "flag-triangle": 983615,
  "flag-variant": 983616,
  "flag-variant-outline": 983614,
  "flare": 986482,
  "flash": 983617,
  "flash-alert": 986871,
  "flash-alert-outline": 986872,
  "flash-auto": 983618,
  "flash-off": 983619,
  "flash-outline": 984789,
  "flash-red-eye": 984699,
  "flashlight": 983620,
  "flashlight-off": 983621,
  "flask": 983187,
  "flask-empty": 983188,
  "flask-empty-minus": 987706,
  "flask-empty-minus-outline": 987707,
  "flask-empty-off": 988148,
  "flask-empty-off-outline": 988149,
  "flask-empty-outline": 983189,
  "flask-empty-plus": 987708,
  "flask-empty-plus-outline": 987709,
  "flask-empty-remove": 987710,
  "flask-empty-remove-outline": 987711,
  "flask-minus": 987712,
  "flask-minus-outline": 987713,
  "flask-off": 988150,
  "flask-off-outline": 988151,
  "flask-outline": 983190,
  "flask-plus": 987714,
  "flask-plus-outline": 987715,
  "flask-remove": 987716,
  "flask-remove-outline": 987717,
  "flask-round-bottom": 987723,
  "flask-round-bottom-empty": 987724,
  "flask-round-bottom-empty-outline": 987725,
  "flask-round-bottom-outline": 987726,
  "fleur-de-lis": 987907,
  "flip-horizontal": 987367,
  "flip-to-back": 983623,
  "flip-to-front": 983624,
  "flip-vertical": 987368,
  "floor-lamp": 985309,
  "floor-lamp-dual": 987200,
  "floor-lamp-dual-outline": 989134,
  "floor-lamp-outline": 989128,
  "floor-lamp-torchiere": 988999,
  "floor-lamp-torchiere-outline": 989142,
  "floor-lamp-torchiere-variant": 987201,
  "floor-lamp-torchiere-variant-outline": 989135,
  "floor-plan": 985121,
  "floppy": 983625,
  "floppy-variant": 985583,
  "flower": 983626,
  "flower-outline": 985584,
  "flower-pollen": 989317,
  "flower-pollen-outline": 989318,
  "flower-poppy": 986376,
  "flower-tulip": 985585,
  "flower-tulip-outline": 985586,
  "focus-auto": 986958,
  "focus-field": 986959,
  "focus-field-horizontal": 986960,
  "focus-field-vertical": 986961,
  "folder": 983627,
  "folder-account": 983628,
  "folder-account-outline": 986012,
  "folder-alert": 986572,
  "folder-alert-outline": 986573,
  "folder-check": 989566,
  "folder-check-outline": 989567,
  "folder-clock": 985786,
  "folder-clock-outline": 985787,
  "folder-cog": 987263,
  "folder-cog-outline": 987264,
  "folder-download": 983629,
  "folder-download-outline": 987369,
  "folder-edit": 985310,
  "folder-edit-outline": 986574,
  "folder-eye": 989066,
  "folder-eye-outline": 989067,
  "folder-google-drive": 983630,
  "folder-heart": 987370,
  "folder-heart-outline": 987371,
  "folder-hidden": 989086,
  "folder-home": 987317,
  "folder-home-outline": 987318,
  "folder-image": 983631,
  "folder-information": 987319,
  "folder-information-outline": 987320,
  "folder-key": 985260,
  "folder-key-network": 985261,
  "folder-key-network-outline": 986240,
  "folder-key-outline": 987372,
  "folder-lock": 983632,
  "folder-lock-open": 983633,
  "folder-marker": 987757,
  "folder-marker-outline": 987758,
  "folder-move": 983634,
  "folder-move-outline": 987718,
  "folder-multiple": 983635,
  "folder-multiple-image": 983636,
  "folder-multiple-outline": 983637,
  "folder-multiple-plus": 988286,
  "folder-multiple-plus-outline": 988287,
  "folder-music": 987993,
  "folder-music-outline": 987994,
  "folder-network": 985200,
  "folder-network-outline": 986241,
  "folder-open": 984944,
  "folder-open-outline": 986575,
  "folder-outline": 983638,
  "folder-plus": 983639,
  "folder-plus-outline": 986013,
  "folder-pound": 986377,
  "folder-pound-outline": 986378,
  "folder-refresh": 984905,
  "folder-refresh-outline": 984386,
  "folder-remove": 983640,
  "folder-remove-outline": 986014,
  "folder-search": 985448,
  "folder-search-outline": 985449,
  "folder-settings": 987261,
  "folder-settings-outline": 987262,
  "folder-star": 984733,
  "folder-star-multiple": 988115,
  "folder-star-multiple-outline": 988116,
  "folder-star-outline": 986015,
  "folder-swap": 987062,
  "folder-swap-outline": 987063,
  "folder-sync": 986379,
  "folder-sync-outline": 986380,
  "folder-table": 987875,
  "folder-table-outline": 987876,
  "folder-text": 986242,
  "folder-text-outline": 986243,
  "folder-upload": 983641,
  "folder-upload-outline": 987373,
  "folder-zip": 984811,
  "folder-zip-outline": 985017,
  "font-awesome": 983098,
  "food": 983642,
  "food-apple": 983643,
  "food-apple-outline": 986244,
  "food-croissant": 985032,
  "food-drumstick": 988191,
  "food-drumstick-off": 988264,
  "food-drumstick-off-outline": 988265,
  "food-drumstick-outline": 988192,
  "food-fork-drink": 984562,
  "food-halal": 988530,
  "food-hot-dog": 989259,
  "food-kosher": 988531,
  "food-off": 984563,
  "food-off-outline": 989461,
  "food-outline": 989462,
  "food-steak": 988266,
  "food-steak-off": 988267,
  "food-takeout-box": 989238,
  "food-takeout-box-outline": 989239,
  "food-turkey": 988956,
  "food-variant": 983644,
  "food-variant-off": 988133,
  "foot-print": 986962,
  "football": 983645,
  "football-australian": 983646,
  "football-helmet": 983647,
  "forest": 989335,
  "forklift": 985033,
  "form-dropdown": 988160,
  "form-select": 988161,
  "form-textarea": 987285,
  "form-textbox": 984590,
  "form-textbox-lock": 987997,
  "form-textbox-password": 985077,
  "format-align-bottom": 984915,
  "format-align-center": 983648,
  "format-align-justify": 983649,
  "format-align-left": 983650,
  "format-align-middle": 984916,
  "format-align-right": 983651,
  "format-align-top": 984917,
  "format-annotation-minus": 985788,
  "format-annotation-plus": 984646,
  "format-bold": 983652,
  "format-clear": 983653,
  "format-color-fill": 983654,
  "format-color-highlight": 986673,
  "format-color-marker-cancel": 987923,
  "format-color-text": 984734,
  "format-columns": 985311,
  "format-float-center": 983655,
  "format-float-left": 983656,
  "format-float-none": 983657,
  "format-float-right": 983658,
  "format-font": 984790,
  "format-font-size-decrease": 985587,
  "format-font-size-increase": 985588,
  "format-header-1": 983659,
  "format-header-2": 983660,
  "format-header-3": 983661,
  "format-header-4": 983662,
  "format-header-5": 983663,
  "format-header-6": 983664,
  "format-header-decrease": 983665,
  "format-header-equal": 983666,
  "format-header-increase": 983667,
  "format-header-pound": 983668,
  "format-horizontal-align-center": 984606,
  "format-horizontal-align-left": 984607,
  "format-horizontal-align-right": 984608,
  "format-indent-decrease": 983669,
  "format-indent-increase": 983670,
  "format-italic": 983671,
  "format-letter-case": 985908,
  "format-letter-case-lower": 985909,
  "format-letter-case-upper": 985910,
  "format-letter-ends-with": 987064,
  "format-letter-matches": 987065,
  "format-letter-spacing": 989526,
  "format-letter-starts-with": 987066,
  "format-line-spacing": 983672,
  "format-line-style": 984520,
  "format-line-weight": 984521,
  "format-list-bulleted": 983673,
  "format-list-bulleted-square": 986576,
  "format-list-bulleted-triangle": 986802,
  "format-list-bulleted-type": 983674,
  "format-list-checkbox": 985450,
  "format-list-checks": 984918,
  "format-list-group": 989280,
  "format-list-numbered": 983675,
  "format-list-numbered-rtl": 986381,
  "format-list-text": 987759,
  "format-overline": 986803,
  "format-page-break": 984791,
  "format-page-split": 989463,
  "format-paint": 983676,
  "format-paragraph": 983677,
  "format-pilcrow": 984792,
  "format-quote-close": 983678,
  "format-quote-close-outline": 987560,
  "format-quote-open": 984919,
  "format-quote-open-outline": 987559,
  "format-rotate-90": 984746,
  "format-section": 984735,
  "format-size": 983679,
  "format-strikethrough": 983680,
  "format-strikethrough-variant": 983681,
  "format-subscript": 983682,
  "format-superscript": 983683,
  "format-text": 983684,
  "format-text-rotation-angle-down": 987067,
  "format-text-rotation-angle-up": 987068,
  "format-text-rotation-down": 986483,
  "format-text-rotation-down-vertical": 987069,
  "format-text-rotation-none": 986484,
  "format-text-rotation-up": 987070,
  "format-text-rotation-vertical": 987071,
  "format-text-variant": 986674,
  "format-text-variant-outline": 988431,
  "format-text-wrapping-clip": 986382,
  "format-text-wrapping-overflow": 986383,
  "format-text-wrapping-wrap": 986384,
  "format-textbox": 986385,
  "format-textdirection-l-to-r": 983685,
  "format-textdirection-r-to-l": 983686,
  "format-title": 984564,
  "format-underline": 983687,
  "format-underline-wavy": 989417,
  "format-vertical-align-bottom": 984609,
  "format-vertical-align-center": 984610,
  "format-vertical-align-top": 984611,
  "format-wrap-inline": 983688,
  "format-wrap-square": 983689,
  "format-wrap-tight": 983690,
  "format-wrap-top-bottom": 983691,
  "forum": 983692,
  "forum-outline": 985122,
  "forward": 983693,
  "forwardburger": 986485,
  "fountain": 985451,
  "fountain-pen": 986386,
  "fountain-pen-tip": 986387,
  "fraction-one-half": 989586,
  "freebsd": 985312,
  "french-fries": 989527,
  "frequently-asked-questions": 986804,
  "fridge": 983696,
  "fridge-alert": 987569,
  "fridge-alert-outline": 987570,
  "fridge-bottom": 983698,
  "fridge-industrial": 988654,
  "fridge-industrial-alert": 988655,
  "fridge-industrial-alert-outline": 988656,
  "fridge-industrial-off": 988657,
  "fridge-industrial-off-outline": 988658,
  "fridge-industrial-outline": 988659,
  "fridge-off": 987567,
  "fridge-off-outline": 987568,
  "fridge-outline": 983695,
  "fridge-top": 983697,
  "fridge-variant": 988660,
  "fridge-variant-alert": 988661,
  "fridge-variant-alert-outline": 988662,
  "fridge-variant-off": 988663,
  "fridge-variant-off-outline": 988664,
  "fridge-variant-outline": 988665,
  "fruit-cherries": 987202,
  "fruit-cherries-off": 988152,
  "fruit-citrus": 987203,
  "fruit-citrus-off": 988153,
  "fruit-grapes": 987204,
  "fruit-grapes-outline": 987205,
  "fruit-pineapple": 987206,
  "fruit-watermelon": 987207,
  "fuel": 985034,
  "fuel-cell": 989365,
  "fullscreen": 983699,
  "fullscreen-exit": 983700,
  "function": 983701,
  "function-variant": 985201,
  "furigana-horizontal": 987265,
  "furigana-vertical": 987266,
  "fuse": 986245,
  "fuse-alert": 988205,
  "fuse-blade": 986246,
  "fuse-off": 988204,
  "gamepad": 983702,
  "gamepad-circle": 986675,
  "gamepad-circle-down": 986676,
  "gamepad-circle-left": 986677,
  "gamepad-circle-outline": 986678,
  "gamepad-circle-right": 986679,
  "gamepad-circle-up": 986680,
  "gamepad-down": 986681,
  "gamepad-left": 986682,
  "gamepad-outline": 989465,
  "gamepad-right": 986683,
  "gamepad-round": 986684,
  "gamepad-round-down": 986685,
  "gamepad-round-left": 986686,
  "gamepad-round-outline": 986687,
  "gamepad-round-right": 986688,
  "gamepad-round-up": 986689,
  "gamepad-square": 986805,
  "gamepad-square-outline": 986806,
  "gamepad-up": 986690,
  "gamepad-variant": 983703,
  "gamepad-variant-outline": 986807,
  "gamma": 987374,
  "gantry-crane": 986577,
  "garage": 984793,
  "garage-alert": 985202,
  "garage-alert-variant": 987861,
  "garage-lock": 989179,
  "garage-open": 984794,
  "garage-open-variant": 987860,
  "garage-variant": 987859,
  "garage-variant-lock": 989180,
  "gas-cylinder": 984647,
  "gas-station": 983704,
  "gas-station-off": 988169,
  "gas-station-off-outline": 988170,
  "gas-station-outline": 986808,
  "gate": 983705,
  "gate-alert": 989176,
  "gate-and": 985313,
  "gate-arrow-left": 989175,
  "gate-arrow-right": 987497,
  "gate-nand": 985314,
  "gate-nor": 985315,
  "gate-not": 985316,
  "gate-open": 987498,
  "gate-or": 985317,
  "gate-xnor": 985318,
  "gate-xor": 985319,
  "gatsby": 986691,
  "gauge": 983706,
  "gauge-empty": 985203,
  "gauge-full": 985204,
  "gauge-low": 985205,
  "gavel": 983707,
  "gender-female": 983708,
  "gender-male": 983709,
  "gender-male-female": 983710,
  "gender-male-female-variant": 987455,
  "gender-non-binary": 987456,
  "gender-transgender": 983711,
  "gentoo": 985320,
  "gesture": 985035,
  "gesture-double-tap": 984892,
  "gesture-pinch": 985789,
  "gesture-spread": 985790,
  "gesture-swipe": 986486,
  "gesture-swipe-down": 984893,
  "gesture-swipe-horizontal": 985791,
  "gesture-swipe-left": 984894,
  "gesture-swipe-right": 984895,
  "gesture-swipe-up": 984896,
  "gesture-swipe-vertical": 985792,
  "gesture-tap": 984897,
  "gesture-tap-box": 987817,
  "gesture-tap-button": 987816,
  "gesture-tap-hold": 986487,
  "gesture-two-double-tap": 984898,
  "gesture-two-tap": 984899,
  "ghost": 983712,
  "ghost-off": 985589,
  "ghost-off-outline": 988764,
  "ghost-outline": 988765,
  "gift": 986692,
  "gift-off": 988911,
  "gift-off-outline": 988912,
  "gift-open": 988913,
  "gift-open-outline": 988914,
  "gift-outline": 983713,
  "git": 983714,
  "github": 983716,
  "gitlab": 986016,
  "glass-cocktail": 983894,
  "glass-cocktail-off": 988646,
  "glass-flute": 983717,
  "glass-fragile": 989299,
  "glass-mug": 983718,
  "glass-mug-off": 988647,
  "glass-mug-variant": 987414,
  "glass-mug-variant-off": 988648,
  "glass-pint-outline": 987917,
  "glass-stange": 983719,
  "glass-tulip": 983720,
  "glass-wine": 985206,
  "glasses": 983722,
  "globe-light": 987863,
  "globe-model": 985321,
  "gmail": 983723,
  "gnome": 983724,
  "go-kart": 986489,
  "go-kart-track": 986490,
  "gog": 986017,
  "gold": 987727,
  "golf": 985123,
  "golf-cart": 987556,
  "golf-tee": 987267,
  "gondola": 984710,
  "goodreads": 986491,
  "google": 983725,
  "google-ads": 986247,
  "google-analytics": 985036,
  "google-assistant": 985037,
  "google-cardboard": 983726,
  "google-chrome": 983727,
  "google-circles": 983728,
  "google-circles-communities": 983729,
  "google-circles-extended": 983730,
  "google-circles-group": 983731,
  "google-classroom": 983744,
  "google-cloud": 987638,
  "google-controller": 983732,
  "google-controller-off": 983733,
  "google-downasaur": 988002,
  "google-drive": 983734,
  "google-earth": 983735,
  "google-fit": 985452,
  "google-glass": 983736,
  "google-hangouts": 983753,
  "google-home": 985124,
  "google-keep": 984796,
  "google-lens": 985590,
  "google-maps": 984565,
  "google-my-business": 987208,
  "google-nearby": 983737,
  "google-play": 983740,
  "google-plus": 983741,
  "google-podcast": 986809,
  "google-spreadsheet": 985591,
  "google-street-view": 986248,
  "google-translate": 983743,
  "gradient-horizontal": 989002,
  "gradient-vertical": 984736,
  "grain": 986492,
  "graph": 987209,
  "graph-outline": 987210,
  "graphql": 985207,
  "grass": 988432,
  "grave-stone": 986018,
  "grease-pencil": 984648,
  "greater-than": 985453,
  "greater-than-or-equal": 985454,
  "greenhouse": 983085,
  "grid": 983745,
  "grid-large": 984920,
  "grid-off": 983746,
  "grill": 986693,
  "grill-outline": 987530,
  "group": 983747,
  "guitar-acoustic": 984945,
  "guitar-electric": 983748,
  "guitar-pick": 983749,
  "guitar-pick-outline": 983750,
  "guy-fawkes-mask": 985125,
  "hail": 985793,
  "hair-dryer": 987375,
  "hair-dryer-outline": 987376,
  "halloween": 986019,
  "hamburger": 984709,
  "hamburger-check": 989046,
  "hamburger-minus": 989047,
  "hamburger-off": 989048,
  "hamburger-plus": 989049,
  "hamburger-remove": 989050,
  "hammer": 985322,
  "hammer-screwdriver": 987938,
  "hammer-sickle": 989319,
  "hammer-wrench": 987939,
  "hand-back-left": 986694,
  "hand-back-left-off": 989232,
  "hand-back-left-off-outline": 989234,
  "hand-back-left-outline": 989228,
  "hand-back-right": 986695,
  "hand-back-right-off": 989233,
  "hand-back-right-off-outline": 989235,
  "hand-back-right-outline": 989229,
  "hand-clap": 989515,
  "hand-coin": 989327,
  "hand-coin-outline": 989328,
  "hand-extended": 989366,
  "hand-extended-outline": 989367,
  "hand-front-left": 989227,
  "hand-front-left-outline": 989230,
  "hand-front-right": 985679,
  "hand-front-right-outline": 989231,
  "hand-heart": 987377,
  "hand-heart-outline": 988542,
  "hand-okay": 985680,
  "hand-peace": 985681,
  "hand-peace-variant": 985682,
  "hand-pointing-down": 985683,
  "hand-pointing-left": 985684,
  "hand-pointing-right": 983751,
  "hand-pointing-up": 985685,
  "hand-saw": 986696,
  "hand-wash": 988543,
  "hand-wash-outline": 988544,
  "hand-water": 988063,
  "hand-wave": 989217,
  "hand-wave-outline": 989218,
  "handball": 986963,
  "handcuffs": 987454,
  "hands-pray": 984441,
  "handshake": 987672,
  "handshake-outline": 988577,
  "hanger": 983752,
  "hard-hat": 985455,
  "harddisk": 983754,
  "harddisk-plus": 987211,
  "harddisk-remove": 987212,
  "hat-fedora": 986020,
  "hazard-lights": 986249,
  "hdr": 986493,
  "hdr-off": 986494,
  "head": 987998,
  "head-alert": 987960,
  "head-alert-outline": 987961,
  "head-check": 987962,
  "head-check-outline": 987963,
  "head-cog": 987964,
  "head-cog-outline": 987965,
  "head-dots-horizontal": 987966,
  "head-dots-horizontal-outline": 987967,
  "head-flash": 987968,
  "head-flash-outline": 987969,
  "head-heart": 987970,
  "head-heart-outline": 987971,
  "head-lightbulb": 987972,
  "head-lightbulb-outline": 987973,
  "head-minus": 987974,
  "head-minus-outline": 987975,
  "head-outline": 987999,
  "head-plus": 987976,
  "head-plus-outline": 987977,
  "head-question": 987978,
  "head-question-outline": 987979,
  "head-remove": 987980,
  "head-remove-outline": 987981,
  "head-snowflake": 987982,
  "head-snowflake-outline": 987983,
  "head-sync": 987984,
  "head-sync-outline": 987985,
  "headphones": 983755,
  "headphones-bluetooth": 985456,
  "headphones-box": 983756,
  "headphones-off": 985038,
  "headphones-settings": 983757,
  "headset": 983758,
  "headset-dock": 983759,
  "headset-off": 983760,
  "heart": 983761,
  "heart-box": 983762,
  "heart-box-outline": 983763,
  "heart-broken": 983764,
  "heart-broken-outline": 986388,
  "heart-circle": 985457,
  "heart-circle-outline": 985458,
  "heart-cog": 988771,
  "heart-cog-outline": 988772,
  "heart-flash": 986873,
  "heart-half": 984799,
  "heart-half-full": 984798,
  "heart-half-outline": 984800,
  "heart-minus": 988207,
  "heart-minus-outline": 988210,
  "heart-multiple": 985686,
  "heart-multiple-outline": 985687,
  "heart-off": 984921,
  "heart-off-outline": 988212,
  "heart-outline": 983765,
  "heart-plus": 988206,
  "heart-plus-outline": 988209,
  "heart-pulse": 984566,
  "heart-remove": 988208,
  "heart-remove-outline": 988211,
  "heart-settings": 988773,
  "heart-settings-outline": 988774,
  "helicopter": 985794,
  "help": 983766,
  "help-box": 984971,
  "help-circle": 983767,
  "help-circle-outline": 984613,
  "help-network": 984821,
  "help-network-outline": 986250,
  "help-rhombus": 986021,
  "help-rhombus-outline": 986022,
  "hexadecimal": 987815,
  "hexagon": 983768,
  "hexagon-multiple": 984801,
  "hexagon-multiple-outline": 987378,
  "hexagon-outline": 983769,
  "hexagon-slice-1": 985795,
  "hexagon-slice-2": 985796,
  "hexagon-slice-3": 985797,
  "hexagon-slice-4": 985798,
  "hexagon-slice-5": 985799,
  "hexagon-slice-6": 985800,
  "hexagram": 985801,
  "hexagram-outline": 985802,
  "high-definition": 985039,
  "high-definition-box": 985208,
  "highway": 984567,
  "hiking": 986495,
  "history": 983770,
  "hockey-puck": 985209,
  "hockey-sticks": 985210,
  "hololens": 983771,
  "home": 983772,
  "home-account": 985126,
  "home-alert": 985211,
  "home-alert-outline": 988624,
  "home-analytics": 986810,
  "home-assistant": 985040,
  "home-automation": 985041,
  "home-battery": 989441,
  "home-battery-outline": 989442,
  "home-circle": 985042,
  "home-circle-outline": 987213,
  "home-city": 986389,
  "home-city-outline": 986390,
  "home-edit": 987481,
  "home-edit-outline": 987482,
  "home-export-outline": 987035,
  "home-flood": 986874,
  "home-floor-0": 986578,
  "home-floor-1": 986496,
  "home-floor-2": 986497,
  "home-floor-3": 986498,
  "home-floor-a": 986499,
  "home-floor-b": 986500,
  "home-floor-g": 986501,
  "home-floor-l": 986502,
  "home-floor-negative-1": 986579,
  "home-group": 986580,
  "home-group-minus": 989633,
  "home-group-plus": 989632,
  "home-group-remove": 989634,
  "home-heart": 985127,
  "home-import-outline": 987036,
  "home-lightbulb": 987729,
  "home-lightbulb-outline": 987730,
  "home-lightning-bolt": 989443,
  "home-lightning-bolt-outline": 989444,
  "home-lock": 985323,
  "home-lock-open": 985324,
  "home-map-marker": 984568,
  "home-minus": 985460,
  "home-minus-outline": 988117,
  "home-modern": 983773,
  "home-outline": 984737,
  "home-plus": 985461,
  "home-plus-outline": 988118,
  "home-remove": 987719,
  "home-remove-outline": 988119,
  "home-roof": 987435,
  "home-search": 988080,
  "home-search-outline": 988081,
  "home-switch": 989076,
  "home-switch-outline": 989077,
  "home-thermometer": 986964,
  "home-thermometer-outline": 986965,
  "home-variant": 983774,
  "home-variant-outline": 986023,
  "hook": 984802,
  "hook-off": 984803,
  "hoop-house": 986710,
  "hops": 983775,
  "horizontal-rotate-clockwise": 987379,
  "horizontal-rotate-counterclockwise": 987380,
  "horse": 988607,
  "horse-human": 988608,
  "horse-variant": 988609,
  "horse-variant-fast": 989294,
  "horseshoe": 985688,
  "hospital": 987126,
  "hospital-box": 983776,
  "hospital-box-outline": 987127,
  "hospital-building": 983777,
  "hospital-marker": 983778,
  "hot-tub": 985128,
  "hours-24": 988280,
  "hubspot": 986391,
  "hulu": 985129,
  "human": 983782,
  "human-baby-changing-table": 988043,
  "human-cane": 988545,
  "human-capacity-decrease": 988571,
  "human-capacity-increase": 988572,
  "human-child": 983783,
  "human-dolly": 989568,
  "human-edit": 988392,
  "human-female": 984649,
  "human-female-boy": 985689,
  "human-female-dance": 988617,
  "human-female-female": 985690,
  "human-female-girl": 985691,
  "human-greeting": 989124,
  "human-greeting-proximity": 988573,
  "human-greeting-variant": 984650,
  "human-handsdown": 984651,
  "human-handsup": 984652,
  "human-male": 984653,
  "human-male-board": 985232,
  "human-male-board-poll": 985158,
  "human-male-boy": 985692,
  "human-male-child": 988044,
  "human-male-female": 983784,
  "human-male-female-child": 989219,
  "human-male-girl": 985693,
  "human-male-height": 986875,
  "human-male-height-variant": 986876,
  "human-male-male": 985694,
  "human-non-binary": 989256,
  "human-pregnant": 984527,
  "human-queue": 988529,
  "human-scooter": 987625,
  "human-wheelchair": 988045,
  "human-white-cane": 989569,
  "humble-bundle": 984900,
  "hvac": 987986,
  "hvac-off": 988574,
  "hydraulic-oil-level": 987940,
  "hydraulic-oil-temperature": 987941,
  "hydro-power": 987877,
  "hydrogen-station": 989332,
  "ice-cream": 985130,
  "ice-cream-off": 986706,
  "ice-pop": 986877,
  "id-card": 987072,
  "identifier": 986878,
  "ideogram-cjk": 987953,
  "ideogram-cjk-variant": 987954,
  "image": 983785,
  "image-album": 983786,
  "image-area": 983787,
  "image-area-close": 983788,
  "image-auto-adjust": 987073,
  "image-broken": 983789,
  "image-broken-variant": 983790,
  "image-edit": 987619,
  "image-edit-outline": 987620,
  "image-filter-black-white": 983792,
  "image-filter-center-focus": 983793,
  "image-filter-center-focus-strong": 986879,
  "image-filter-center-focus-strong-outline": 986880,
  "image-filter-center-focus-weak": 983794,
  "image-filter-drama": 983795,
  "image-filter-frames": 983796,
  "image-filter-hdr": 983797,
  "image-filter-none": 983798,
  "image-filter-tilt-shift": 983799,
  "image-filter-vintage": 983800,
  "image-frame": 986697,
  "image-marker": 989051,
  "image-marker-outline": 989052,
  "image-minus": 988185,
  "image-move": 985592,
  "image-multiple": 983801,
  "image-multiple-outline": 983791,
  "image-off": 985131,
  "image-off-outline": 987601,
  "image-outline": 985462,
  "image-plus": 985212,
  "image-remove": 988184,
  "image-search": 985463,
  "image-search-outline": 985464,
  "image-size-select-actual": 986253,
  "image-size-select-large": 986254,
  "image-size-select-small": 986255,
  "image-text": 988685,
  "import": 983802,
  "inbox": 984711,
  "inbox-arrow-down": 983803,
  "inbox-arrow-down-outline": 987760,
  "inbox-arrow-up": 984017,
  "inbox-arrow-up-outline": 987761,
  "inbox-full": 987762,
  "inbox-full-outline": 987763,
  "inbox-multiple": 985264,
  "inbox-multiple-outline": 986024,
  "inbox-outline": 987764,
  "inbox-remove": 988575,
  "inbox-remove-outline": 988576,
  "incognito": 984569,
  "incognito-circle": 988193,
  "incognito-circle-off": 988194,
  "incognito-off": 983157,
  "induction": 989260,
  "infinity": 984804,
  "information": 983804,
  "information-off": 989068,
  "information-off-outline": 989069,
  "information-outline": 983805,
  "information-variant": 984654,
  "instagram": 983806,
  "instrument-triangle": 987214,
  "integrated-circuit-chip": 989459,
  "invert-colors": 983809,
  "invert-colors-off": 986698,
  "iobroker": 987880,
  "ip": 985695,
  "ip-network": 985696,
  "ip-network-outline": 986256,
  "ip-outline": 989570,
  "ipod": 986257,
  "iron": 989220,
  "iron-board": 989240,
  "iron-outline": 989221,
  "island": 987215,
  "iv-bag": 987321,
  "jabber": 986581,
  "jeepney": 983810,
  "jellyfish": 986881,
  "jellyfish-outline": 986882,
  "jira": 983811,
  "jquery": 985213,
  "jsfiddle": 983812,
  "jump-rope": 987903,
  "kabaddi": 986503,
  "kangaroo": 988504,
  "karate": 985132,
  "kayaking": 985263,
  "keg": 983813,
  "kettle": 984570,
  "kettle-alert": 987927,
  "kettle-alert-outline": 987928,
  "kettle-off": 987931,
  "kettle-off-outline": 987932,
  "kettle-outline": 986966,
  "kettle-pour-over": 988988,
  "kettle-steam": 987929,
  "kettle-steam-outline": 987930,
  "kettlebell": 987904,
  "key": 983814,
  "key-alert": 989571,
  "key-alert-outline": 989572,
  "key-arrow-right": 987922,
  "key-chain": 988532,
  "key-chain-variant": 988533,
  "key-change": 983815,
  "key-link": 987551,
  "key-minus": 983816,
  "key-outline": 986582,
  "key-plus": 983817,
  "key-remove": 983818,
  "key-star": 987550,
  "key-variant": 983819,
  "key-wireless": 987074,
  "keyboard": 983820,
  "keyboard-backspace": 983821,
  "keyboard-caps": 983822,
  "keyboard-close": 983823,
  "keyboard-esc": 987831,
  "keyboard-f1": 987819,
  "keyboard-f10": 987828,
  "keyboard-f11": 987829,
  "keyboard-f12": 987830,
  "keyboard-f2": 987820,
  "keyboard-f3": 987821,
  "keyboard-f4": 987822,
  "keyboard-f5": 987823,
  "keyboard-f6": 987824,
  "keyboard-f7": 987825,
  "keyboard-f8": 987826,
  "keyboard-f9": 987827,
  "keyboard-off": 983824,
  "keyboard-off-outline": 986699,
  "keyboard-outline": 985467,
  "keyboard-return": 983825,
  "keyboard-settings": 985593,
  "keyboard-settings-outline": 985594,
  "keyboard-space": 987216,
  "keyboard-tab": 983826,
  "keyboard-tab-reverse": 983845,
  "keyboard-variant": 983827,
  "khanda": 987389,
  "kickstarter": 984901,
  "kite": 989573,
  "kite-outline": 989574,
  "kitesurfing": 988996,
  "klingon": 987995,
  "knife": 985595,
  "knife-military": 985596,
  "koala": 988991,
  "kodi": 983828,
  "kubernetes": 987390,
  "label": 983829,
  "label-multiple": 988021,
  "label-multiple-outline": 988022,
  "label-off": 985803,
  "label-off-outline": 985804,
  "label-outline": 983830,
  "label-percent": 987882,
  "label-percent-outline": 987883,
  "label-variant": 985805,
  "label-variant-outline": 985806,
  "ladder": 988578,
  "ladybug": 985133,
  "lambda": 984615,
  "lamp": 984757,
  "lamp-outline": 989136,
  "lamps": 988534,
  "lamps-outline": 989137,
  "lan": 983831,
  "lan-check": 987818,
  "lan-connect": 983832,
  "lan-disconnect": 983833,
  "lan-pending": 983834,
  "language-c": 984689,
  "language-cpp": 984690,
  "language-csharp": 983835,
  "language-css3": 983836,
  "language-fortran": 987674,
  "language-go": 985043,
  "language-haskell": 986258,
  "language-html5": 983837,
  "language-java": 985911,
  "language-javascript": 983838,
  "language-kotlin": 987673,
  "language-lua": 985265,
  "language-markdown": 983892,
  "language-markdown-outline": 986971,
  "language-php": 983839,
  "language-python": 983840,
  "language-r": 985044,
  "language-ruby": 986413,
  "language-ruby-on-rails": 985807,
  "language-rust": 988695,
  "language-swift": 984805,
  "language-typescript": 984806,
  "language-xaml": 984691,
  "laptop": 983842,
  "laptop-off": 984807,
  "laravel": 985808,
  "laser-pointer": 988292,
  "lasso": 986883,
  "lastpass": 984134,
  "latitude": 986967,
  "launch": 983847,
  "lava-lamp": 985045,
  "layers": 983848,
  "layers-edit": 989330,
  "layers-minus": 986700,
  "layers-off": 983849,
  "layers-off-outline": 985597,
  "layers-outline": 985598,
  "layers-plus": 986701,
  "layers-remove": 986702,
  "layers-search": 987654,
  "layers-search-outline": 987655,
  "layers-triple": 986968,
  "layers-triple-outline": 986969,
  "lead-pencil": 984655,
  "leaf": 983850,
  "leaf-circle": 989445,
  "leaf-circle-outline": 989446,
  "leaf-maple": 986259,
  "leaf-maple-off": 987866,
  "leaf-off": 987865,
  "leak": 986583,
  "leak-off": 986584,
  "led-off": 983851,
  "led-on": 983852,
  "led-outline": 983853,
  "led-strip": 985046,
  "led-strip-variant": 987217,
  "led-variant-off": 983854,
  "led-variant-on": 983855,
  "led-variant-outline": 983856,
  "leek": 987517,
  "less-than": 985468,
  "less-than-or-equal": 985469,
  "library": 983857,
  "library-shelves": 986025,
  "license": 987075,
  "lifebuoy": 985214,
  "light-flood-down": 989575,
  "light-flood-up": 989576,
  "light-recessed": 989083,
  "light-switch": 985470,
  "lightbulb": 983861,
  "lightbulb-auto": 989184,
  "lightbulb-auto-outline": 989185,
  "lightbulb-cfl": 987656,
  "lightbulb-cfl-off": 987657,
  "lightbulb-cfl-spiral": 987765,
  "lightbulb-cfl-spiral-off": 987843,
  "lightbulb-fluorescent-tube": 989188,
  "lightbulb-fluorescent-tube-outline": 989189,
  "lightbulb-group": 987731,
  "lightbulb-group-off": 987853,
  "lightbulb-group-off-outline": 987854,
  "lightbulb-group-outline": 987732,
  "lightbulb-multiple": 987733,
  "lightbulb-multiple-off": 987855,
  "lightbulb-multiple-off-outline": 987856,
  "lightbulb-multiple-outline": 987734,
  "lightbulb-off": 986703,
  "lightbulb-off-outline": 986704,
  "lightbulb-on": 984808,
  "lightbulb-on-outline": 984809,
  "lightbulb-outline": 983862,
  "lightbulb-spot": 989172,
  "lightbulb-spot-off": 989173,
  "lightbulb-variant": 989186,
  "lightbulb-variant-outline": 989187,
  "lighthouse": 985599,
  "lighthouse-on": 985600,
  "lightning-bolt": 988171,
  "lightning-bolt-circle": 985120,
  "lightning-bolt-outline": 988172,
  "line-scan": 984612,
  "lingerie": 988278,
  "link": 983863,
  "link-box": 986394,
  "link-box-outline": 986395,
  "link-box-variant": 986396,
  "link-box-variant-outline": 986397,
  "link-lock": 987322,
  "link-off": 983864,
  "link-plus": 986260,
  "link-variant": 983865,
  "link-variant-minus": 987391,
  "link-variant-off": 983866,
  "link-variant-plus": 987392,
  "link-variant-remove": 987393,
  "linkedin": 983867,
  "linux": 983869,
  "linux-mint": 985325,
  "lipstick": 988085,
  "liquid-spot": 989222,
  "liquor": 989470,
  "list-status": 988587,
  "litecoin": 985697,
  "loading": 984946,
  "location-enter": 987076,
  "location-exit": 987077,
  "lock": 983870,
  "lock-alert": 985326,
  "lock-alert-outline": 988625,
  "lock-check": 988058,
  "lock-check-outline": 988840,
  "lock-clock": 985471,
  "lock-minus": 988841,
  "lock-minus-outline": 988842,
  "lock-off": 988785,
  "lock-off-outline": 988786,
  "lock-open": 983871,
  "lock-open-alert": 988059,
  "lock-open-alert-outline": 988626,
  "lock-open-check": 988060,
  "lock-open-check-outline": 988843,
  "lock-open-minus": 988844,
  "lock-open-minus-outline": 988845,
  "lock-open-outline": 983872,
  "lock-open-plus": 988846,
  "lock-open-plus-outline": 988847,
  "lock-open-remove": 988848,
  "lock-open-remove-outline": 988849,
  "lock-open-variant": 987078,
  "lock-open-variant-outline": 987079,
  "lock-outline": 983873,
  "lock-pattern": 984810,
  "lock-plus": 984571,
  "lock-plus-outline": 988850,
  "lock-question": 985327,
  "lock-remove": 988851,
  "lock-remove-outline": 988852,
  "lock-reset": 984947,
  "lock-smart": 985266,
  "locker": 985047,
  "locker-multiple": 985048,
  "login": 983874,
  "login-variant": 984572,
  "logout": 983875,
  "logout-variant": 984573,
  "longitude": 986970,
  "looks": 983876,
  "lotion": 988546,
  "lotion-outline": 988547,
  "lotion-plus": 988548,
  "lotion-plus-outline": 988549,
  "loupe": 983877,
  "lumx": 983878,
  "lungs": 987268,
  "mace": 989251,
  "magazine-pistol": 983844,
  "magazine-rifle": 983843,
  "magic-staff": 989252,
  "magnet": 983879,
  "magnet-on": 983880,
  "magnify": 983881,
  "magnify-close": 985472,
  "magnify-expand": 989300,
  "magnify-minus": 983882,
  "magnify-minus-cursor": 985698,
  "magnify-minus-outline": 984812,
  "magnify-plus": 983883,
  "magnify-plus-cursor": 985699,
  "magnify-plus-outline": 984813,
  "magnify-remove-cursor": 987660,
  "magnify-remove-outline": 987661,
  "magnify-scan": 987766,
  "mail": 986811,
  "mailbox": 984814,
  "mailbox-open": 986504,
  "mailbox-open-outline": 986505,
  "mailbox-open-up": 986506,
  "mailbox-open-up-outline": 986507,
  "mailbox-outline": 986508,
  "mailbox-up": 986509,
  "mailbox-up-outline": 986510,
  "manjaro": 988682,
  "map": 983885,
  "map-check": 986812,
  "map-check-outline": 986813,
  "map-clock": 986398,
  "map-clock-outline": 986399,
  "map-legend": 985601,
  "map-marker": 983886,
  "map-marker-account": 989411,
  "map-marker-account-outline": 989412,
  "map-marker-alert": 986885,
  "map-marker-alert-outline": 986886,
  "map-marker-check": 986261,
  "map-marker-check-outline": 987899,
  "map-marker-circle": 983887,
  "map-marker-distance": 985328,
  "map-marker-down": 987394,
  "map-marker-left": 987867,
  "map-marker-left-outline": 987869,
  "map-marker-minus": 984656,
  "map-marker-minus-outline": 987897,
  "map-marker-multiple": 983888,
  "map-marker-multiple-outline": 987767,
  "map-marker-off": 983889,
  "map-marker-off-outline": 987901,
  "map-marker-outline": 985049,
  "map-marker-path": 986400,
  "map-marker-plus": 984657,
  "map-marker-plus-outline": 987896,
  "map-marker-question": 986887,
  "map-marker-question-outline": 986888,
  "map-marker-radius": 983890,
  "map-marker-radius-outline": 987900,
  "map-marker-remove": 986889,
  "map-marker-remove-outline": 987898,
  "map-marker-remove-variant": 986890,
  "map-marker-right": 987868,
  "map-marker-right-outline": 987870,
  "map-marker-star": 988680,
  "map-marker-star-outline": 988681,
  "map-marker-up": 987395,
  "map-minus": 985473,
  "map-outline": 985474,
  "map-plus": 985475,
  "map-search": 985476,
  "map-search-outline": 985477,
  "mapbox": 986026,
  "margin": 983891,
  "marker": 984658,
  "marker-cancel": 986585,
  "marker-check": 983893,
  "mastodon": 985809,
  "material-design": 985478,
  "material-ui": 983895,
  "math-compass": 983896,
  "math-cos": 986262,
  "math-integral": 987080,
  "math-integral-box": 987081,
  "math-log": 987269,
  "math-norm": 987082,
  "math-norm-box": 987083,
  "math-sin": 986263,
  "math-tan": 986264,
  "matrix": 984616,
  "medal": 985479,
  "medal-outline": 987942,
  "medical-bag": 984815,
  "meditation": 987515,
  "memory": 983899,
  "menorah": 989140,
  "menorah-fire": 989141,
  "menu": 983900,
  "menu-down": 983901,
  "menu-down-outline": 984758,
  "menu-left": 983902,
  "menu-left-outline": 985602,
  "menu-open": 986027,
  "menu-right": 983903,
  "menu-right-outline": 985603,
  "menu-swap": 985700,
  "menu-swap-outline": 985701,
  "menu-up": 983904,
  "menu-up-outline": 984759,
  "merge": 986972,
  "message": 983905,
  "message-alert": 983906,
  "message-alert-outline": 985604,
  "message-arrow-left": 987890,
  "message-arrow-left-outline": 987891,
  "message-arrow-right": 987892,
  "message-arrow-right-outline": 987893,
  "message-badge": 989505,
  "message-badge-outline": 989506,
  "message-bookmark": 988588,
  "message-bookmark-outline": 988589,
  "message-bulleted": 984738,
  "message-bulleted-off": 984739,
  "message-cog": 984817,
  "message-cog-outline": 987506,
  "message-draw": 983907,
  "message-flash": 988585,
  "message-flash-outline": 988586,
  "message-image": 983908,
  "message-image-outline": 987500,
  "message-lock": 987084,
  "message-lock-outline": 987501,
  "message-minus": 987502,
  "message-minus-outline": 987503,
  "message-off": 988749,
  "message-off-outline": 988750,
  "message-outline": 983909,
  "message-plus": 984659,
  "message-plus-outline": 987323,
  "message-processing": 983910,
  "message-processing-outline": 987504,
  "message-question": 988986,
  "message-question-outline": 988987,
  "message-reply": 983911,
  "message-reply-outline": 988989,
  "message-reply-text": 983912,
  "message-reply-text-outline": 988990,
  "message-settings": 984816,
  "message-settings-outline": 987505,
  "message-star": 984730,
  "message-star-outline": 987728,
  "message-text": 983913,
  "message-text-clock": 987507,
  "message-text-clock-outline": 987508,
  "message-text-lock": 987085,
  "message-text-lock-outline": 987509,
  "message-text-outline": 983914,
  "message-video": 983915,
  "meteor": 984617,
  "metronome": 985050,
  "metronome-tick": 985051,
  "micro-sd": 985052,
  "microphone": 983916,
  "microphone-minus": 985267,
  "microphone-off": 983917,
  "microphone-outline": 983918,
  "microphone-plus": 985268,
  "microphone-question": 989577,
  "microphone-question-outline": 989578,
  "microphone-settings": 983919,
  "microphone-variant": 983920,
  "microphone-variant-off": 983921,
  "microscope": 984660,
  "microsoft": 983922,
  "microsoft-access": 988046,
  "microsoft-azure": 985093,
  "microsoft-azure-devops": 987093,
  "microsoft-bing": 983204,
  "microsoft-dynamics-365": 985480,
  "microsoft-edge": 983529,
  "microsoft-excel": 988047,
  "microsoft-internet-explorer": 983808,
  "microsoft-office": 984006,
  "microsoft-onedrive": 984010,
  "microsoft-onenote": 984903,
  "microsoft-outlook": 986402,
  "microsoft-powerpoint": 988048,
  "microsoft-sharepoint": 988049,
  "microsoft-teams": 983739,
  "microsoft-visual-studio": 984592,
  "microsoft-visual-studio-code": 985630,
  "microsoft-windows": 984499,
  "microsoft-windows-classic": 985633,
  "microsoft-word": 988050,
  "microsoft-xbox": 984505,
  "microsoft-xbox-controller": 984506,
  "microsoft-xbox-controller-battery-alert": 984907,
  "microsoft-xbox-controller-battery-charging": 985634,
  "microsoft-xbox-controller-battery-empty": 984908,
  "microsoft-xbox-controller-battery-full": 984909,
  "microsoft-xbox-controller-battery-low": 984910,
  "microsoft-xbox-controller-battery-medium": 984911,
  "microsoft-xbox-controller-battery-unknown": 984912,
  "microsoft-xbox-controller-menu": 986735,
  "microsoft-xbox-controller-off": 984507,
  "microsoft-xbox-controller-view": 986736,
  "microwave": 986265,
  "microwave-off": 988195,
  "middleware": 986973,
  "middleware-outline": 986974,
  "midi": 985329,
  "midi-port": 985330,
  "mine": 986586,
  "minecraft": 983923,
  "mini-sd": 985605,
  "minidisc": 985606,
  "minus": 983924,
  "minus-box": 983925,
  "minus-box-multiple": 987457,
  "minus-box-multiple-outline": 987458,
  "minus-box-outline": 984818,
  "minus-circle": 983926,
  "minus-circle-multiple": 983898,
  "minus-circle-multiple-outline": 985811,
  "minus-circle-off": 988249,
  "minus-circle-off-outline": 988250,
  "minus-circle-outline": 983927,
  "minus-network": 983928,
  "minus-network-outline": 986266,
  "minus-thick": 988729,
  "mirror": 987645,
  "mirror-rectangle": 989087,
  "mirror-variant": 989088,
  "mixed-martial-arts": 986511,
  "mixed-reality": 985215,
  "molecule": 986028,
  "molecule-co": 987902,
  "molecule-co2": 985060,
  "monitor": 983929,
  "monitor-cellphone": 985481,
  "monitor-cellphone-star": 985482,
  "monitor-dashboard": 985607,
  "monitor-edit": 987846,
  "monitor-eye": 988084,
  "monitor-lock": 986587,
  "monitor-multiple": 983930,
  "monitor-off": 986512,
  "monitor-screenshot": 986705,
  "monitor-share": 988291,
  "monitor-shimmer": 987396,
  "monitor-small": 989302,
  "monitor-speaker": 986975,
  "monitor-speaker-off": 986976,
  "monitor-star": 986588,
  "moon-first-quarter": 986977,
  "moon-full": 986978,
  "moon-last-quarter": 986979,
  "moon-new": 986980,
  "moon-waning-crescent": 986981,
  "moon-waning-gibbous": 986982,
  "moon-waxing-crescent": 986983,
  "moon-waxing-gibbous": 986984,
  "moped": 987270,
  "moped-electric": 988599,
  "moped-electric-outline": 988600,
  "moped-outline": 988601,
  "more": 983931,
  "mortar-pestle": 989000,
  "mortar-pestle-plus": 984049,
  "mosque": 989223,
  "mother-heart": 987924,
  "mother-nurse": 986401,
  "motion": 988594,
  "motion-outline": 988595,
  "motion-pause": 988560,
  "motion-pause-outline": 988562,
  "motion-play": 988559,
  "motion-play-outline": 988561,
  "motion-sensor": 986513,
  "motion-sensor-off": 988213,
  "motorbike": 983932,
  "motorbike-electric": 988602,
  "mouse": 983933,
  "mouse-bluetooth": 985483,
  "mouse-move-down": 988496,
  "mouse-move-up": 988497,
  "mouse-move-vertical": 988498,
  "mouse-off": 983934,
  "mouse-variant": 983935,
  "mouse-variant-off": 983936,
  "move-resize": 984661,
  "move-resize-variant": 984662,
  "movie": 983937,
  "movie-check": 988915,
  "movie-check-outline": 988916,
  "movie-cog": 988917,
  "movie-cog-outline": 988918,
  "movie-edit": 987426,
  "movie-edit-outline": 987427,
  "movie-filter": 987428,
  "movie-filter-outline": 987429,
  "movie-minus": 988919,
  "movie-minus-outline": 988920,
  "movie-off": 988921,
  "movie-off-outline": 988922,
  "movie-open": 987086,
  "movie-open-check": 988923,
  "movie-open-check-outline": 988924,
  "movie-open-cog": 988925,
  "movie-open-cog-outline": 988926,
  "movie-open-edit": 988927,
  "movie-open-edit-outline": 988928,
  "movie-open-minus": 988929,
  "movie-open-minus-outline": 988930,
  "movie-open-off": 988931,
  "movie-open-off-outline": 988932,
  "movie-open-outline": 987087,
  "movie-open-play": 988933,
  "movie-open-play-outline": 988934,
  "movie-open-plus": 988935,
  "movie-open-plus-outline": 988936,
  "movie-open-remove": 988937,
  "movie-open-remove-outline": 988938,
  "movie-open-settings": 988939,
  "movie-open-settings-outline": 988940,
  "movie-open-star": 988941,
  "movie-open-star-outline": 988942,
  "movie-outline": 986589,
  "movie-play": 988943,
  "movie-play-outline": 988944,
  "movie-plus": 988945,
  "movie-plus-outline": 988946,
  "movie-remove": 988947,
  "movie-remove-outline": 988948,
  "movie-roll": 985054,
  "movie-search": 987602,
  "movie-search-outline": 987603,
  "movie-settings": 988949,
  "movie-settings-outline": 988950,
  "movie-star": 988951,
  "movie-star-outline": 988952,
  "mower": 988783,
  "mower-bag": 988784,
  "muffin": 985484,
  "multicast": 989331,
  "multiplication": 983938,
  "multiplication-box": 983939,
  "mushroom": 985055,
  "mushroom-off": 988154,
  "mushroom-off-outline": 988155,
  "mushroom-outline": 985056,
  "music": 984922,
  "music-accidental-double-flat": 986985,
  "music-accidental-double-sharp": 986986,
  "music-accidental-flat": 986987,
  "music-accidental-natural": 986988,
  "music-accidental-sharp": 986989,
  "music-box": 983940,
  "music-box-multiple": 983859,
  "music-box-multiple-outline": 986884,
  "music-box-outline": 983941,
  "music-circle": 983942,
  "music-circle-outline": 985812,
  "music-clef-alto": 986990,
  "music-clef-bass": 986991,
  "music-clef-treble": 986992,
  "music-note": 983943,
  "music-note-bluetooth": 984574,
  "music-note-bluetooth-off": 984575,
  "music-note-eighth": 983944,
  "music-note-eighth-dotted": 986993,
  "music-note-half": 983945,
  "music-note-half-dotted": 986994,
  "music-note-off": 983946,
  "music-note-off-outline": 986995,
  "music-note-outline": 986996,
  "music-note-plus": 986590,
  "music-note-quarter": 983947,
  "music-note-quarter-dotted": 986997,
  "music-note-sixteenth": 983948,
  "music-note-sixteenth-dotted": 986998,
  "music-note-whole": 983949,
  "music-note-whole-dotted": 986999,
  "music-off": 984923,
  "music-rest-eighth": 987000,
  "music-rest-half": 987001,
  "music-rest-quarter": 987002,
  "music-rest-sixteenth": 987003,
  "music-rest-whole": 987004,
  "mustache": 988638,
  "nail": 986591,
  "nas": 985331,
  "nativescript": 985216,
  "nature": 983950,
  "nature-people": 983951,
  "navigation": 983952,
  "navigation-outline": 988679,
  "navigation-variant": 989424,
  "navigation-variant-outline": 989425,
  "near-me": 984525,
  "necklace": 986891,
  "needle": 983953,
  "netflix": 984902,
  "network": 984819,
  "network-off": 986267,
  "network-off-outline": 986268,
  "network-outline": 986269,
  "network-strength-1": 985332,
  "network-strength-1-alert": 985333,
  "network-strength-2": 985334,
  "network-strength-2-alert": 985335,
  "network-strength-3": 985336,
  "network-strength-3-alert": 985337,
  "network-strength-4": 985338,
  "network-strength-4-alert": 985339,
  "network-strength-4-cog": 989466,
  "network-strength-off": 985340,
  "network-strength-off-outline": 985341,
  "network-strength-outline": 985342,
  "new-box": 983956,
  "newspaper": 983957,
  "newspaper-check": 989507,
  "newspaper-minus": 986892,
  "newspaper-plus": 986893,
  "newspaper-remove": 989508,
  "newspaper-variant": 987137,
  "newspaper-variant-multiple": 987138,
  "newspaper-variant-multiple-outline": 987139,
  "newspaper-variant-outline": 987140,
  "nfc": 983958,
  "nfc-search-variant": 986707,
  "nfc-tap": 983959,
  "nfc-variant": 983960,
  "nfc-variant-off": 986708,
  "ninja": 984948,
  "nintendo-game-boy": 988051,
  "nintendo-switch": 985057,
  "nintendo-wii": 984491,
  "nintendo-wiiu": 984877,
  "nix": 987397,
  "nodejs": 983961,
  "noodles": 987518,
  "not-equal": 985485,
  "not-equal-variant": 985486,
  "note": 983962,
  "note-alert": 989053,
  "note-alert-outline": 989054,
  "note-check": 989055,
  "note-check-outline": 989056,
  "note-edit": 989057,
  "note-edit-outline": 989058,
  "note-minus": 988751,
  "note-minus-outline": 988752,
  "note-multiple": 984760,
  "note-multiple-outline": 984761,
  "note-off": 989059,
  "note-off-outline": 989060,
  "note-outline": 983963,
  "note-plus": 983964,
  "note-plus-outline": 983965,
  "note-remove": 988753,
  "note-remove-outline": 988754,
  "note-search": 988755,
  "note-search-outline": 988756,
  "note-text": 983966,
  "note-text-outline": 987607,
  "notebook": 985134,
  "notebook-check": 988405,
  "notebook-check-outline": 988406,
  "notebook-edit": 988391,
  "notebook-edit-outline": 988393,
  "notebook-minus": 988688,
  "notebook-minus-outline": 988689,
  "notebook-multiple": 986709,
  "notebook-outline": 986815,
  "notebook-plus": 988690,
  "notebook-plus-outline": 988691,
  "notebook-remove": 988692,
  "notebook-remove-outline": 988693,
  "notification-clear-all": 983967,
  "npm": 984823,
  "nuke": 984740,
  "null": 985058,
  "numeric": 983968,
  "numeric-0": 985913,
  "numeric-0-box": 983969,
  "numeric-0-box-multiple": 986894,
  "numeric-0-box-multiple-outline": 983970,
  "numeric-0-box-outline": 983971,
  "numeric-0-circle": 986270,
  "numeric-0-circle-outline": 986271,
  "numeric-1": 985914,
  "numeric-1-box": 983972,
  "numeric-1-box-multiple": 986895,
  "numeric-1-box-multiple-outline": 983973,
  "numeric-1-box-outline": 983974,
  "numeric-1-circle": 986272,
  "numeric-1-circle-outline": 986273,
  "numeric-10": 987113,
  "numeric-10-box": 987005,
  "numeric-10-box-multiple": 987114,
  "numeric-10-box-multiple-outline": 987115,
  "numeric-10-box-outline": 987006,
  "numeric-10-circle": 987116,
  "numeric-10-circle-outline": 987117,
  "numeric-2": 985915,
  "numeric-2-box": 983975,
  "numeric-2-box-multiple": 986896,
  "numeric-2-box-multiple-outline": 983976,
  "numeric-2-box-outline": 983977,
  "numeric-2-circle": 986274,
  "numeric-2-circle-outline": 986275,
  "numeric-3": 985916,
  "numeric-3-box": 983978,
  "numeric-3-box-multiple": 986897,
  "numeric-3-box-multiple-outline": 983979,
  "numeric-3-box-outline": 983980,
  "numeric-3-circle": 986276,
  "numeric-3-circle-outline": 986277,
  "numeric-4": 985917,
  "numeric-4-box": 983981,
  "numeric-4-box-multiple": 986898,
  "numeric-4-box-multiple-outline": 983986,
  "numeric-4-box-outline": 983982,
  "numeric-4-circle": 986278,
  "numeric-4-circle-outline": 986279,
  "numeric-5": 985918,
  "numeric-5-box": 983985,
  "numeric-5-box-multiple": 986899,
  "numeric-5-box-multiple-outline": 983983,
  "numeric-5-box-outline": 983984,
  "numeric-5-circle": 986280,
  "numeric-5-circle-outline": 986281,
  "numeric-6": 985919,
  "numeric-6-box": 983987,
  "numeric-6-box-multiple": 986900,
  "numeric-6-box-multiple-outline": 983988,
  "numeric-6-box-outline": 983989,
  "numeric-6-circle": 986282,
  "numeric-6-circle-outline": 986283,
  "numeric-7": 985920,
  "numeric-7-box": 983990,
  "numeric-7-box-multiple": 986901,
  "numeric-7-box-multiple-outline": 983991,
  "numeric-7-box-outline": 983992,
  "numeric-7-circle": 986284,
  "numeric-7-circle-outline": 986285,
  "numeric-8": 985921,
  "numeric-8-box": 983993,
  "numeric-8-box-multiple": 986902,
  "numeric-8-box-multiple-outline": 983994,
  "numeric-8-box-outline": 983995,
  "numeric-8-circle": 986286,
  "numeric-8-circle-outline": 986287,
  "numeric-9": 985922,
  "numeric-9-box": 983996,
  "numeric-9-box-multiple": 986903,
  "numeric-9-box-multiple-outline": 983997,
  "numeric-9-box-outline": 983998,
  "numeric-9-circle": 986288,
  "numeric-9-circle-outline": 986289,
  "numeric-9-plus": 987118,
  "numeric-9-plus-box": 983999,
  "numeric-9-plus-box-multiple": 986904,
  "numeric-9-plus-box-multiple-outline": 984000,
  "numeric-9-plus-box-outline": 984001,
  "numeric-9-plus-circle": 986290,
  "numeric-9-plus-circle-outline": 986291,
  "numeric-negative-1": 987218,
  "numeric-positive-1": 988619,
  "nut": 984824,
  "nutrition": 984002,
  "nuxt": 987398,
  "oar": 984700,
  "ocarina": 986592,
  "oci": 987881,
  "ocr": 987450,
  "octagon": 984003,
  "octagon-outline": 984004,
  "octagram": 984825,
  "octagram-outline": 984949,
  "octahedron": 989520,
  "octahedron-off": 989521,
  "odnoklassniki": 984005,
  "offer": 987675,
  "office-building": 985489,
  "office-building-cog": 989513,
  "office-building-cog-outline": 989514,
  "office-building-marker": 988448,
  "office-building-marker-outline": 988449,
  "office-building-outline": 988447,
  "oil": 984007,
  "oil-lamp": 986905,
  "oil-level": 987219,
  "oil-temperature": 987128,
  "om": 985459,
  "omega": 984009,
  "one-up": 986029,
  "onepassword": 985217,
  "opacity": 984524,
  "open-in-app": 984011,
  "open-in-new": 984012,
  "open-source-initiative": 986030,
  "openid": 984013,
  "opera": 984014,
  "orbit": 983064,
  "orbit-variant": 988635,
  "order-alphabetical-ascending": 983565,
  "order-alphabetical-descending": 986375,
  "order-bool-ascending": 983742,
  "order-bool-ascending-variant": 985487,
  "order-bool-descending": 988036,
  "order-bool-descending-variant": 985488,
  "order-numeric-ascending": 984389,
  "order-numeric-descending": 984390,
  "origin": 985923,
  "ornament": 984015,
  "ornament-variant": 984016,
  "outdoor-lamp": 987220,
  "overscan": 987141,
  "owl": 984018,
  "pac-man": 986031,
  "package": 984019,
  "package-down": 984020,
  "package-up": 984021,
  "package-variant": 984022,
  "package-variant-closed": 984023,
  "page-first": 984576,
  "page-last": 984577,
  "page-layout-body": 984826,
  "page-layout-footer": 984827,
  "page-layout-header": 984828,
  "page-layout-header-footer": 987007,
  "page-layout-sidebar-left": 984829,
  "page-layout-sidebar-right": 984830,
  "page-next": 986032,
  "page-next-outline": 986033,
  "page-previous": 986034,
  "page-previous-outline": 986035,
  "pail": 988183,
  "pail-minus": 988215,
  "pail-minus-outline": 988220,
  "pail-off": 988217,
  "pail-off-outline": 988222,
  "pail-outline": 988218,
  "pail-plus": 988214,
  "pail-plus-outline": 988219,
  "pail-remove": 988216,
  "pail-remove-outline": 988221,
  "palette": 984024,
  "palette-advanced": 984025,
  "palette-outline": 986636,
  "palette-swatch": 985269,
  "palette-swatch-outline": 987996,
  "palette-swatch-variant": 989530,
  "palm-tree": 987221,
  "pan": 986036,
  "pan-bottom-left": 986037,
  "pan-bottom-right": 986038,
  "pan-down": 986039,
  "pan-horizontal": 986040,
  "pan-left": 986041,
  "pan-right": 986042,
  "pan-top-left": 986043,
  "pan-top-right": 986044,
  "pan-up": 986045,
  "pan-vertical": 986046,
  "panda": 984026,
  "pandora": 984027,
  "panorama": 984028,
  "panorama-fisheye": 984029,
  "panorama-horizontal": 989480,
  "panorama-horizontal-outline": 984030,
  "panorama-outline": 989580,
  "panorama-sphere": 989581,
  "panorama-sphere-outline": 989582,
  "panorama-variant": 989583,
  "panorama-variant-outline": 989584,
  "panorama-vertical": 989481,
  "panorama-vertical-outline": 984031,
  "panorama-wide-angle": 989535,
  "panorama-wide-angle-outline": 984032,
  "paper-cut-vertical": 984033,
  "paper-roll": 987479,
  "paper-roll-outline": 987480,
  "paperclip": 984034,
  "parachute": 986292,
  "parachute-outline": 986293,
  "paragliding": 988997,
  "parking": 984035,
  "party-popper": 987222,
  "passport": 985059,
  "passport-biometric": 986593,
  "pasta": 987488,
  "patio-heater": 987008,
  "patreon": 985218,
  "pause": 984036,
  "pause-circle": 984037,
  "pause-circle-outline": 984038,
  "pause-octagon": 984039,
  "pause-octagon-outline": 984040,
  "paw": 984041,
  "paw-off": 984663,
  "paw-off-outline": 988790,
  "paw-outline": 988789,
  "peace": 985220,
  "peanut": 987132,
  "peanut-off": 987133,
  "peanut-off-outline": 987135,
  "peanut-outline": 987134,
  "pen": 984042,
  "pen-lock": 986594,
  "pen-minus": 986595,
  "pen-off": 986596,
  "pen-plus": 986597,
  "pen-remove": 986598,
  "pencil": 984043,
  "pencil-box": 984044,
  "pencil-box-multiple": 987460,
  "pencil-box-multiple-outline": 987461,
  "pencil-box-outline": 984045,
  "pencil-circle": 984831,
  "pencil-circle-outline": 984950,
  "pencil-lock": 984046,
  "pencil-lock-outline": 986599,
  "pencil-minus": 986600,
  "pencil-minus-outline": 986601,
  "pencil-off": 984047,
  "pencil-off-outline": 986602,
  "pencil-outline": 986294,
  "pencil-plus": 986603,
  "pencil-plus-outline": 986604,
  "pencil-remove": 986605,
  "pencil-remove-outline": 986606,
  "pencil-ruler": 987987,
  "penguin": 986816,
  "pentagon": 984833,
  "pentagon-outline": 984832,
  "pentagram": 988775,
  "percent": 984048,
  "percent-outline": 987768,
  "periodic-table": 985270,
  "perspective-less": 986403,
  "perspective-more": 986404,
  "ph": 989125,
  "phone": 984050,
  "phone-alert": 986906,
  "phone-alert-outline": 987534,
  "phone-bluetooth": 984051,
  "phone-bluetooth-outline": 987535,
  "phone-cancel": 987324,
  "phone-cancel-outline": 987536,
  "phone-check": 987561,
  "phone-check-outline": 987562,
  "phone-classic": 984578,
  "phone-classic-off": 987769,
  "phone-dial": 988505,
  "phone-dial-outline": 988506,
  "phone-forward": 984052,
  "phone-forward-outline": 987537,
  "phone-hangup": 984053,
  "phone-hangup-outline": 987538,
  "phone-in-talk": 984054,
  "phone-in-talk-outline": 987522,
  "phone-incoming": 984055,
  "phone-incoming-outline": 987539,
  "phone-lock": 984056,
  "phone-lock-outline": 987540,
  "phone-log": 984057,
  "phone-log-outline": 987541,
  "phone-message": 987542,
  "phone-message-outline": 987543,
  "phone-minus": 984664,
  "phone-minus-outline": 987544,
  "phone-missed": 984058,
  "phone-missed-outline": 987557,
  "phone-off": 986607,
  "phone-off-outline": 987558,
  "phone-outgoing": 984059,
  "phone-outgoing-outline": 987545,
  "phone-outline": 986608,
  "phone-paused": 984060,
  "phone-paused-outline": 987546,
  "phone-plus": 984665,
  "phone-plus-outline": 987547,
  "phone-refresh": 989587,
  "phone-refresh-outline": 989588,
  "phone-remove": 988463,
  "phone-remove-outline": 988464,
  "phone-return": 985135,
  "phone-return-outline": 987548,
  "phone-ring": 987563,
  "phone-ring-outline": 987564,
  "phone-rotate-landscape": 985221,
  "phone-rotate-portrait": 985222,
  "phone-settings": 984061,
  "phone-settings-outline": 987549,
  "phone-sync": 989589,
  "phone-sync-outline": 989590,
  "phone-voip": 984062,
  "pi": 984063,
  "pi-box": 984064,
  "pi-hole": 986609,
  "piano": 984701,
  "piano-off": 984728,
  "pickaxe": 985271,
  "picture-in-picture-bottom-right": 986711,
  "picture-in-picture-bottom-right-outline": 986712,
  "picture-in-picture-top-right": 986713,
  "picture-in-picture-top-right-outline": 986714,
  "pier": 985223,
  "pier-crane": 985224,
  "pig": 984065,
  "pig-variant": 987142,
  "pig-variant-outline": 988792,
  "piggy-bank": 987143,
  "piggy-bank-outline": 988793,
  "pill": 984066,
  "pillar": 984834,
  "pin": 984067,
  "pin-off": 984068,
  "pin-off-outline": 985392,
  "pin-outline": 985393,
  "pine-tree": 984069,
  "pine-tree-box": 984070,
  "pine-tree-fire": 988186,
  "pinterest": 984071,
  "pinwheel": 985813,
  "pinwheel-outline": 985814,
  "pipe": 985061,
  "pipe-disconnected": 985062,
  "pipe-leak": 985225,
  "pipe-valve": 989261,
  "pipe-wrench": 987988,
  "pirate": 985608,
  "pistol": 984835,
  "piston": 985226,
  "pitchfork": 988499,
  "pizza": 984073,
  "play": 984074,
  "play-box": 987770,
  "play-box-multiple": 986393,
  "play-box-multiple-outline": 988134,
  "play-box-outline": 984075,
  "play-circle": 984076,
  "play-circle-outline": 984077,
  "play-network": 985227,
  "play-network-outline": 986295,
  "play-outline": 986907,
  "play-pause": 984078,
  "play-protected-content": 984079,
  "play-speed": 985343,
  "playlist-check": 984519,
  "playlist-edit": 985344,
  "playlist-minus": 984080,
  "playlist-music": 986296,
  "playlist-music-outline": 986297,
  "playlist-play": 984081,
  "playlist-plus": 984082,
  "playlist-remove": 984083,
  "playlist-star": 986610,
  "plex": 984762,
  "pliers": 989604,
  "plus": 984085,
  "plus-box": 984086,
  "plus-box-multiple": 983860,
  "plus-box-multiple-outline": 987459,
  "plus-box-outline": 984836,
  "plus-circle": 984087,
  "plus-circle-multiple": 983884,
  "plus-circle-multiple-outline": 984088,
  "plus-circle-outline": 984089,
  "plus-minus": 985490,
  "plus-minus-box": 985491,
  "plus-minus-variant": 988361,
  "plus-network": 984090,
  "plus-network-outline": 986298,
  "plus-outline": 984837,
  "plus-thick": 987628,
  "podcast": 985492,
  "podium": 986405,
  "podium-bronze": 986406,
  "podium-gold": 986407,
  "podium-silver": 986408,
  "point-of-sale": 986514,
  "pokeball": 984093,
  "pokemon-go": 985609,
  "poker-chip": 985136,
  "polaroid": 984094,
  "police-badge": 987495,
  "police-badge-outline": 987496,
  "police-station": 989241,
  "poll": 984095,
  "polo": 988355,
  "polymer": 984097,
  "pool": 984582,
  "popcorn": 984098,
  "post": 987144,
  "post-outline": 987145,
  "postage-stamp": 986299,
  "pot": 983781,
  "pot-mix": 984667,
  "pot-mix-outline": 984695,
  "pot-outline": 983807,
  "pot-steam": 984666,
  "pot-steam-outline": 983846,
  "pound": 984099,
  "pound-box": 984100,
  "pound-box-outline": 987519,
  "power": 984101,
  "power-cycle": 985345,
  "power-off": 985346,
  "power-on": 985347,
  "power-plug": 984741,
  "power-plug-off": 984742,
  "power-plug-off-outline": 988196,
  "power-plug-outline": 988197,
  "power-settings": 984102,
  "power-sleep": 985348,
  "power-socket": 984103,
  "power-socket-au": 985349,
  "power-socket-ch": 987059,
  "power-socket-de": 987399,
  "power-socket-eu": 985063,
  "power-socket-fr": 987400,
  "power-socket-it": 988415,
  "power-socket-jp": 987401,
  "power-socket-uk": 985064,
  "power-socket-us": 985065,
  "power-standby": 985350,
  "powershell": 985610,
  "prescription": 984838,
  "presentation": 984104,
  "presentation-play": 984105,
  "pretzel": 988514,
  "printer": 984106,
  "printer-3d": 984107,
  "printer-3d-nozzle": 986715,
  "printer-3d-nozzle-alert": 987584,
  "printer-3d-nozzle-alert-outline": 987585,
  "printer-3d-nozzle-heat": 989368,
  "printer-3d-nozzle-heat-outline": 989369,
  "printer-3d-nozzle-outline": 986716,
  "printer-alert": 984108,
  "printer-check": 987462,
  "printer-eye": 988248,
  "printer-off": 986717,
  "printer-off-outline": 989061,
  "printer-outline": 989062,
  "printer-pos": 987223,
  "printer-search": 988247,
  "printer-settings": 984839,
  "printer-wireless": 985611,
  "priority-high": 984579,
  "priority-low": 984580,
  "professional-hexagon": 984109,
  "progress-alert": 986300,
  "progress-check": 985493,
  "progress-clock": 985494,
  "progress-close": 987402,
  "progress-download": 985495,
  "progress-pencil": 989063,
  "progress-question": 988450,
  "progress-star": 989064,
  "progress-upload": 985496,
  "progress-wrench": 986301,
  "projector": 984110,
  "projector-screen": 984111,
  "projector-screen-off": 989197,
  "projector-screen-off-outline": 989198,
  "projector-screen-outline": 988964,
  "projector-screen-variant": 989199,
  "projector-screen-variant-off": 989200,
  "projector-screen-variant-off-outline": 989201,
  "projector-screen-variant-outline": 989202,
  "propane-tank": 987991,
  "propane-tank-outline": 987992,
  "protocol": 987096,
  "publish": 984743,
  "publish-off": 989509,
  "pulse": 984112,
  "pump": 988162,
  "pumpkin": 986047,
  "purse": 986908,
  "purse-outline": 986909,
  "puzzle": 984113,
  "puzzle-check": 988198,
  "puzzle-check-outline": 988199,
  "puzzle-edit": 988371,
  "puzzle-edit-outline": 988377,
  "puzzle-heart": 988372,
  "puzzle-heart-outline": 988378,
  "puzzle-minus": 988369,
  "puzzle-minus-outline": 988375,
  "puzzle-outline": 985702,
  "puzzle-plus": 988368,
  "puzzle-plus-outline": 988374,
  "puzzle-remove": 988370,
  "puzzle-remove-outline": 988376,
  "puzzle-star": 988373,
  "puzzle-star-outline": 988379,
  "pyramid": 989522,
  "pyramid-off": 989523,
  "qi": 985497,
  "qqchat": 984581,
  "qrcode": 984114,
  "qrcode-edit": 985272,
  "qrcode-minus": 987532,
  "qrcode-plus": 987531,
  "qrcode-remove": 987533,
  "qrcode-scan": 984115,
  "quadcopter": 984116,
  "quality-high": 984117,
  "quality-low": 985612,
  "quality-medium": 985613,
  "quora": 986409,
  "rabbit": 985351,
  "racing-helmet": 986515,
  "racquetball": 986516,
  "radar": 984119,
  "radiator": 984120,
  "radiator-disabled": 985815,
  "radiator-off": 985816,
  "radio": 984121,
  "radio-am": 986302,
  "radio-fm": 986303,
  "radio-handheld": 984122,
  "radio-off": 987676,
  "radio-tower": 984123,
  "radioactive": 984124,
  "radioactive-circle": 989277,
  "radioactive-circle-outline": 989278,
  "radioactive-off": 986817,
  "radiobox-blank": 984125,
  "radiobox-marked": 984126,
  "radiology-box": 988357,
  "radiology-box-outline": 988358,
  "radius": 986304,
  "radius-outline": 986305,
  "railroad-light": 986910,
  "rake": 988484,
  "raspberry-pi": 984127,
  "ray-end": 984128,
  "ray-end-arrow": 984129,
  "ray-start": 984130,
  "ray-start-arrow": 984131,
  "ray-start-end": 984132,
  "ray-start-vertex-end": 988632,
  "ray-vertex": 984133,
  "razor-double-edge": 989591,
  "razor-single-edge": 989592,
  "react": 984840,
  "read": 984135,
  "receipt": 984137,
  "record": 984138,
  "record-circle": 986818,
  "record-circle-outline": 986819,
  "record-player": 985498,
  "record-rec": 984139,
  "rectangle": 986718,
  "rectangle-outline": 986719,
  "recycle": 984140,
  "recycle-variant": 988061,
  "reddit": 984141,
  "redhat": 987419,
  "redo": 984142,
  "redo-variant": 984143,
  "reflect-horizontal": 985614,
  "reflect-vertical": 985615,
  "refresh": 984144,
  "refresh-auto": 989426,
  "refresh-circle": 988023,
  "regex": 984145,
  "registered-trademark": 985703,
  "reiterate": 988552,
  "relation-many-to-many": 988310,
  "relation-many-to-one": 988311,
  "relation-many-to-one-or-many": 988312,
  "relation-many-to-only-one": 988313,
  "relation-many-to-zero-or-many": 988314,
  "relation-many-to-zero-or-one": 988315,
  "relation-one-or-many-to-many": 988316,
  "relation-one-or-many-to-one": 988317,
  "relation-one-or-many-to-one-or-many": 988318,
  "relation-one-or-many-to-only-one": 988319,
  "relation-one-or-many-to-zero-or-many": 988320,
  "relation-one-or-many-to-zero-or-one": 988321,
  "relation-one-to-many": 988322,
  "relation-one-to-one": 988323,
  "relation-one-to-one-or-many": 988324,
  "relation-one-to-only-one": 988325,
  "relation-one-to-zero-or-many": 988326,
  "relation-one-to-zero-or-one": 988327,
  "relation-only-one-to-many": 988328,
  "relation-only-one-to-one": 988329,
  "relation-only-one-to-one-or-many": 988330,
  "relation-only-one-to-only-one": 988331,
  "relation-only-one-to-zero-or-many": 988332,
  "relation-only-one-to-zero-or-one": 988333,
  "relation-zero-or-many-to-many": 988334,
  "relation-zero-or-many-to-one": 988335,
  "relation-zero-or-many-to-one-or-many": 988336,
  "relation-zero-or-many-to-only-one": 988337,
  "relation-zero-or-many-to-zero-or-many": 988338,
  "relation-zero-or-many-to-zero-or-one": 988339,
  "relation-zero-or-one-to-many": 988340,
  "relation-zero-or-one-to-one": 988341,
  "relation-zero-or-one-to-one-or-many": 988342,
  "relation-zero-or-one-to-only-one": 988343,
  "relation-zero-or-one-to-zero-or-many": 988344,
  "relation-zero-or-one-to-zero-or-one": 988345,
  "relative-scale": 984146,
  "reload": 984147,
  "reload-alert": 987403,
  "reminder": 985228,
  "remote": 984148,
  "remote-desktop": 985273,
  "remote-off": 986820,
  "remote-tv": 986821,
  "remote-tv-off": 986822,
  "rename-box": 984149,
  "reorder-horizontal": 984712,
  "reorder-vertical": 984713,
  "repeat": 984150,
  "repeat-off": 984151,
  "repeat-once": 984152,
  "repeat-variant": 984391,
  "replay": 984153,
  "reply": 984154,
  "reply-all": 984155,
  "reply-all-outline": 986911,
  "reply-circle": 987566,
  "reply-outline": 986912,
  "reproduction": 984156,
  "resistor": 985924,
  "resistor-nodes": 985925,
  "resize": 985704,
  "resize-bottom-right": 984157,
  "responsive": 984158,
  "restart": 984841,
  "restart-alert": 987404,
  "restart-off": 986517,
  "restore": 985499,
  "restore-alert": 987405,
  "rewind": 984159,
  "rewind-10": 986410,
  "rewind-15": 989510,
  "rewind-30": 986518,
  "rewind-5": 987641,
  "rewind-60": 988684,
  "rewind-outline": 984842,
  "rhombus": 984843,
  "rhombus-medium": 985616,
  "rhombus-medium-outline": 988380,
  "rhombus-outline": 984844,
  "rhombus-split": 985617,
  "rhombus-split-outline": 988381,
  "ribbon": 984160,
  "rice": 985066,
  "rickshaw": 988603,
  "rickshaw-electric": 988604,
  "ring": 985067,
  "rivet": 986720,
  "road": 984161,
  "road-variant": 984162,
  "robber": 987224,
  "robot": 984745,
  "robot-angry": 988829,
  "robot-angry-outline": 988830,
  "robot-confused": 988831,
  "robot-confused-outline": 988832,
  "robot-dead": 988833,
  "robot-dead-outline": 988834,
  "robot-excited": 988835,
  "robot-excited-outline": 988836,
  "robot-happy": 988953,
  "robot-happy-outline": 988954,
  "robot-industrial": 985926,
  "robot-love": 988837,
  "robot-love-outline": 988838,
  "robot-mower": 987639,
  "robot-mower-outline": 987635,
  "robot-off": 988839,
  "robot-off-outline": 988795,
  "robot-outline": 988794,
  "robot-vacuum": 984845,
  "robot-vacuum-variant": 985352,
  "rocket": 984163,
  "rocket-launch": 988382,
  "rocket-launch-outline": 988383,
  "rocket-outline": 988079,
  "rodent": 987943,
  "roller-skate": 986411,
  "roller-skate-off": 983365,
  "rollerblade": 986412,
  "rollerblade-off": 983086,
  "rollupjs": 986048,
  "roman-numeral-1": 987272,
  "roman-numeral-10": 987281,
  "roman-numeral-2": 987273,
  "roman-numeral-3": 987274,
  "roman-numeral-4": 987275,
  "roman-numeral-5": 987276,
  "roman-numeral-6": 987277,
  "roman-numeral-7": 987278,
  "roman-numeral-8": 987279,
  "roman-numeral-9": 987280,
  "room-service": 985229,
  "room-service-outline": 986519,
  "rotate-360": 989593,
  "rotate-3d": 986823,
  "rotate-3d-variant": 984164,
  "rotate-left": 984165,
  "rotate-left-variant": 984166,
  "rotate-orbit": 986520,
  "rotate-right": 984167,
  "rotate-right-variant": 984168,
  "rounded-corner": 984583,
  "router": 987618,
  "router-network": 987271,
  "router-wireless": 984169,
  "router-wireless-off": 988579,
  "router-wireless-settings": 985705,
  "routes": 984170,
  "routes-clock": 987225,
  "rowing": 984584,
  "rss": 984171,
  "rss-box": 984172,
  "rss-off": 986913,
  "rug": 988277,
  "rugby": 986521,
  "ruler": 984173,
  "ruler-square": 986306,
  "ruler-square-compass": 986814,
  "run": 984846,
  "run-fast": 984174,
  "rv-truck": 987604,
  "sack": 986414,
  "sack-percent": 986415,
  "safe": 985706,
  "safe-square": 987772,
  "safe-square-outline": 987773,
  "safety-goggles": 986416,
  "sail-boat": 986824,
  "sale": 984175,
  "salesforce": 985230,
  "sass": 985068,
  "satellite": 984176,
  "satellite-uplink": 985353,
  "satellite-variant": 984177,
  "sausage": 985274,
  "sausage-off": 989065,
  "saw-blade": 986721,
  "sawtooth-wave": 988282,
  "saxophone": 984585,
  "scale": 984178,
  "scale-balance": 984529,
  "scale-bathroom": 984179,
  "scale-off": 987226,
  "scale-unbalanced": 989624,
  "scan-helper": 988120,
  "scanner": 984747,
  "scanner-off": 985354,
  "scatter-plot": 986825,
  "scatter-plot-outline": 986826,
  "scent": 989528,
  "scent-off": 989529,
  "school": 984180,
  "school-outline": 987520,
  "scissors-cutting": 985707,
  "scooter": 988605,
  "scooter-electric": 988606,
  "scoreboard": 987774,
  "scoreboard-outline": 987775,
  "screen-rotation": 984181,
  "screen-rotation-lock": 984184,
  "screw-flat-top": 986611,
  "screw-lag": 986612,
  "screw-machine-flat-top": 986613,
  "screw-machine-round-top": 986614,
  "screw-round-top": 986615,
  "screwdriver": 984182,
  "script": 986049,
  "script-outline": 984183,
  "script-text": 986050,
  "script-text-key": 988965,
  "script-text-key-outline": 988966,
  "script-text-outline": 986051,
  "script-text-play": 988967,
  "script-text-play-outline": 988968,
  "sd": 984185,
  "seal": 984186,
  "seal-variant": 987097,
  "search-web": 984847,
  "seat": 986307,
  "seat-flat": 984187,
  "seat-flat-angled": 984188,
  "seat-individual-suite": 984189,
  "seat-legroom-extra": 984190,
  "seat-legroom-normal": 984191,
  "seat-legroom-reduced": 984192,
  "seat-outline": 986308,
  "seat-passenger": 987721,
  "seat-recline-extra": 984193,
  "seat-recline-normal": 984194,
  "seatbelt": 986309,
  "security": 984195,
  "security-network": 984196,
  "seed": 986722,
  "seed-off": 988157,
  "seed-off-outline": 988158,
  "seed-outline": 986723,
  "seesaw": 988580,
  "segment": 986827,
  "select": 984197,
  "select-all": 984198,
  "select-color": 986417,
  "select-compare": 985817,
  "select-drag": 985708,
  "select-group": 987010,
  "select-inverse": 984199,
  "select-marker": 987776,
  "select-multiple": 987777,
  "select-multiple-marker": 987778,
  "select-off": 984200,
  "select-place": 987098,
  "select-remove": 989121,
  "select-search": 987652,
  "selection": 984201,
  "selection-drag": 985709,
  "selection-ellipse": 986418,
  "selection-ellipse-arrow-inside": 986914,
  "selection-ellipse-remove": 989122,
  "selection-marker": 987779,
  "selection-multiple": 987781,
  "selection-multiple-marker": 987780,
  "selection-off": 984951,
  "selection-remove": 989123,
  "selection-search": 987653,
  "semantic-web": 987926,
  "send": 984202,
  "send-check": 987489,
  "send-check-outline": 987490,
  "send-circle": 986616,
  "send-circle-outline": 986617,
  "send-clock": 987491,
  "send-clock-outline": 987492,
  "send-lock": 985069,
  "send-lock-outline": 987494,
  "send-outline": 987493,
  "serial-port": 984668,
  "server": 984203,
  "server-minus": 984204,
  "server-network": 984205,
  "server-network-off": 984206,
  "server-off": 984207,
  "server-plus": 984208,
  "server-remove": 984209,
  "server-security": 984210,
  "set-all": 984952,
  "set-center": 984953,
  "set-center-right": 984954,
  "set-left": 984955,
  "set-left-center": 984956,
  "set-left-right": 984957,
  "set-merge": 988384,
  "set-none": 984958,
  "set-right": 984959,
  "set-split": 988385,
  "set-square": 988253,
  "set-top-box": 985503,
  "settings-helper": 985710,
  "shaker": 987406,
  "shaker-outline": 987407,
  "shape": 985137,
  "shape-circle-plus": 984669,
  "shape-outline": 985138,
  "shape-oval-plus": 987642,
  "shape-plus": 984213,
  "shape-polygon-plus": 984670,
  "shape-rectangle-plus": 984671,
  "shape-square-plus": 984672,
  "shape-square-rounded-plus": 988410,
  "share": 984214,
  "share-all": 987636,
  "share-all-outline": 987637,
  "share-circle": 987565,
  "share-off": 986915,
  "share-off-outline": 986916,
  "share-outline": 985394,
  "share-variant": 984215,
  "share-variant-outline": 988436,
  "shark": 989370,
  "shark-fin": 988787,
  "shark-fin-outline": 988788,
  "shark-off": 989371,
  "sheep": 986310,
  "shield": 984216,
  "shield-account": 985231,
  "shield-account-outline": 985618,
  "shield-account-variant": 988583,
  "shield-account-variant-outline": 988584,
  "shield-airplane": 984763,
  "shield-airplane-outline": 986311,
  "shield-alert": 986828,
  "shield-alert-outline": 986829,
  "shield-bug": 988122,
  "shield-bug-outline": 988123,
  "shield-car": 987011,
  "shield-check": 984421,
  "shield-check-outline": 986312,
  "shield-cross": 986313,
  "shield-cross-outline": 986314,
  "shield-crown": 989372,
  "shield-crown-outline": 989373,
  "shield-edit": 987552,
  "shield-edit-outline": 987553,
  "shield-half": 988000,
  "shield-half-full": 984960,
  "shield-home": 984714,
  "shield-home-outline": 986315,
  "shield-key": 986052,
  "shield-key-outline": 986053,
  "shield-link-variant": 986419,
  "shield-link-variant-outline": 986420,
  "shield-lock": 985501,
  "shield-lock-open": 989594,
  "shield-lock-open-outline": 989595,
  "shield-lock-outline": 986316,
  "shield-moon": 989224,
  "shield-moon-outline": 989225,
  "shield-off": 985502,
  "shield-off-outline": 985500,
  "shield-outline": 984217,
  "shield-plus": 985818,
  "shield-plus-outline": 985819,
  "shield-refresh": 983210,
  "shield-refresh-outline": 983520,
  "shield-remove": 985820,
  "shield-remove-outline": 985821,
  "shield-search": 986522,
  "shield-star": 987451,
  "shield-star-outline": 987452,
  "shield-sun": 987229,
  "shield-sun-outline": 987230,
  "shield-sword": 989374,
  "shield-sword-outline": 989375,
  "shield-sync": 987554,
  "shield-sync-outline": 987555,
  "shimmer": 988485,
  "ship-wheel": 985139,
  "shipping-pallet": 989262,
  "shoe-ballet": 988618,
  "shoe-cleat": 988615,
  "shoe-formal": 985927,
  "shoe-heel": 985928,
  "shoe-print": 986618,
  "shoe-sneaker": 988616,
  "shopping": 984218,
  "shopping-music": 984219,
  "shopping-outline": 987605,
  "shopping-search": 987012,
  "shore": 988409,
  "shovel": 984848,
  "shovel-off": 984849,
  "shower": 985504,
  "shower-head": 985505,
  "shredder": 984220,
  "shuffle": 984221,
  "shuffle-disabled": 984222,
  "shuffle-variant": 984223,
  "shuriken": 988031,
  "sickle": 989376,
  "sigma": 984224,
  "sigma-lower": 984619,
  "sign-caution": 984225,
  "sign-direction": 984961,
  "sign-direction-minus": 987136,
  "sign-direction-plus": 987100,
  "sign-direction-remove": 987101,
  "sign-pole": 988408,
  "sign-real-estate": 987416,
  "sign-text": 984962,
  "signal": 984226,
  "signal-2g": 984850,
  "signal-3g": 984851,
  "signal-4g": 984852,
  "signal-5g": 985711,
  "signal-cellular-1": 985276,
  "signal-cellular-2": 985277,
  "signal-cellular-3": 985278,
  "signal-cellular-outline": 985279,
  "signal-distance-variant": 986724,
  "signal-hspa": 984853,
  "signal-hspa-plus": 984854,
  "signal-off": 984963,
  "signal-variant": 984586,
  "signature": 986619,
  "signature-freehand": 986620,
  "signature-image": 986621,
  "signature-text": 986622,
  "silo": 985929,
  "silverware": 984227,
  "silverware-clean": 987102,
  "silverware-fork": 984228,
  "silverware-fork-knife": 985712,
  "silverware-spoon": 984229,
  "silverware-variant": 984230,
  "sim": 984231,
  "sim-alert": 984232,
  "sim-alert-outline": 988627,
  "sim-off": 984233,
  "sim-off-outline": 988628,
  "sim-outline": 988629,
  "simple-icons": 987933,
  "sina-weibo": 985823,
  "sine-wave": 985435,
  "sitemap": 984234,
  "sitemap-outline": 989596,
  "size-l": 988070,
  "size-m": 988069,
  "size-s": 988068,
  "size-xl": 988071,
  "size-xs": 988067,
  "size-xxl": 988072,
  "size-xxs": 988066,
  "size-xxxl": 988073,
  "skate": 986421,
  "skate-off": 984729,
  "skateboard": 988354,
  "skateboarding": 984321,
  "skew-less": 986422,
  "skew-more": 986423,
  "ski": 987908,
  "ski-cross-country": 987909,
  "ski-water": 987910,
  "skip-backward": 984235,
  "skip-backward-outline": 986917,
  "skip-forward": 984236,
  "skip-forward-outline": 986918,
  "skip-next": 984237,
  "skip-next-circle": 984673,
  "skip-next-circle-outline": 984674,
  "skip-next-outline": 986919,
  "skip-previous": 984238,
  "skip-previous-circle": 984675,
  "skip-previous-circle-outline": 984676,
  "skip-previous-outline": 986920,
  "skull": 984716,
  "skull-crossbones": 986054,
  "skull-crossbones-outline": 986055,
  "skull-outline": 986056,
  "skull-scan": 988359,
  "skull-scan-outline": 988360,
  "skype": 984239,
  "skype-business": 984240,
  "slack": 984241,
  "slash-forward": 987103,
  "slash-forward-box": 987104,
  "sledding": 984091,
  "sleep": 984242,
  "sleep-off": 984243,
  "slide": 988581,
  "slope-downhill": 986623,
  "slope-uphill": 986624,
  "slot-machine": 987412,
  "slot-machine-outline": 987413,
  "smart-card": 987325,
  "smart-card-off": 989431,
  "smart-card-off-outline": 989432,
  "smart-card-outline": 987326,
  "smart-card-reader": 987327,
  "smart-card-reader-outline": 987328,
  "smog": 985713,
  "smoke": 989081,
  "smoke-detector": 983954,
  "smoke-detector-alert": 989486,
  "smoke-detector-alert-outline": 989487,
  "smoke-detector-off": 989193,
  "smoke-detector-off-outline": 989194,
  "smoke-detector-outline": 989192,
  "smoke-detector-variant": 989195,
  "smoke-detector-variant-alert": 989488,
  "smoke-detector-variant-off": 989196,
  "smoking": 984244,
  "smoking-off": 984245,
  "smoking-pipe": 988173,
  "smoking-pipe-off": 988200,
  "snail": 988791,
  "snake": 988430,
  "snapchat": 984246,
  "snowboard": 987911,
  "snowflake": 984855,
  "snowflake-alert": 986921,
  "snowflake-melt": 987851,
  "snowflake-off": 988387,
  "snowflake-variant": 986922,
  "snowman": 984247,
  "snowmobile": 984797,
  "soccer": 984248,
  "soccer-field": 985140,
  "social-distance-2-meters": 988537,
  "social-distance-6-feet": 988538,
  "sofa": 984249,
  "sofa-outline": 988525,
  "sofa-single": 988526,
  "sofa-single-outline": 988527,
  "solar-panel": 986523,
  "solar-panel-large": 986524,
  "solar-power": 985714,
  "soldering-iron": 987282,
  "solid": 984717,
  "sony-playstation": 984084,
  "sort": 984250,
  "sort-alphabetical-ascending": 984509,
  "sort-alphabetical-ascending-variant": 987464,
  "sort-alphabetical-descending": 984511,
  "sort-alphabetical-descending-variant": 987465,
  "sort-alphabetical-variant": 984251,
  "sort-ascending": 984252,
  "sort-bool-ascending": 988037,
  "sort-bool-ascending-variant": 988038,
  "sort-bool-descending": 988039,
  "sort-bool-descending-variant": 988040,
  "sort-calendar-ascending": 988487,
  "sort-calendar-descending": 988488,
  "sort-clock-ascending": 988489,
  "sort-clock-ascending-outline": 988490,
  "sort-clock-descending": 988491,
  "sort-clock-descending-outline": 988492,
  "sort-descending": 984253,
  "sort-numeric-ascending": 988041,
  "sort-numeric-ascending-variant": 985357,
  "sort-numeric-descending": 988042,
  "sort-numeric-descending-variant": 985810,
  "sort-numeric-variant": 984254,
  "sort-reverse-variant": 983868,
  "sort-variant": 984255,
  "sort-variant-lock": 986317,
  "sort-variant-lock-open": 986318,
  "sort-variant-remove": 987463,
  "soundbar": 989147,
  "soundcloud": 984256,
  "source-branch": 984620,
  "source-branch-check": 988367,
  "source-branch-minus": 988363,
  "source-branch-plus": 988362,
  "source-branch-refresh": 988365,
  "source-branch-remove": 988364,
  "source-branch-sync": 988366,
  "source-commit": 984856,
  "source-commit-end": 984857,
  "source-commit-end-local": 984858,
  "source-commit-local": 984859,
  "source-commit-next-local": 984860,
  "source-commit-start": 984861,
  "source-commit-start-next-local": 984862,
  "source-fork": 984257,
  "source-merge": 984621,
  "source-pull": 984258,
  "source-repository": 986319,
  "source-repository-multiple": 986320,
  "soy-sauce": 985070,
  "soy-sauce-off": 988156,
  "spa": 986321,
  "spa-outline": 986322,
  "space-invaders": 986057,
  "space-station": 988035,
  "spade": 986725,
  "speaker": 984259,
  "speaker-bluetooth": 985506,
  "speaker-multiple": 986424,
  "speaker-off": 984260,
  "speaker-wireless": 984863,
  "spear": 989253,
  "speedometer": 984261,
  "speedometer-medium": 987013,
  "speedometer-slow": 987014,
  "spellcheck": 984262,
  "sphere": 989524,
  "sphere-off": 989525,
  "spider": 987626,
  "spider-thread": 987627,
  "spider-web": 986058,
  "spirit-level": 988401,
  "spoon-sugar": 988201,
  "spotify": 984263,
  "spotlight": 984264,
  "spotlight-beam": 984265,
  "spray": 984677,
  "spray-bottle": 985824,
  "sprinkler": 987231,
  "sprinkler-fire": 989597,
  "sprinkler-variant": 987232,
  "sprout": 986726,
  "sprout-outline": 986727,
  "square": 984932,
  "square-circle": 988416,
  "square-edit-outline": 985356,
  "square-medium": 985619,
  "square-medium-outline": 985620,
  "square-off": 987886,
  "square-off-outline": 987887,
  "square-opacity": 989268,
  "square-outline": 984931,
  "square-root": 984964,
  "square-root-box": 985507,
  "square-rounded": 988411,
  "square-rounded-outline": 988412,
  "square-small": 985621,
  "square-wave": 988283,
  "squeegee": 985825,
  "ssh": 985280,
  "stack-exchange": 984587,
  "stack-overflow": 984268,
  "stackpath": 983897,
  "stadium": 987129,
  "stadium-variant": 984864,
  "stairs": 984269,
  "stairs-box": 988062,
  "stairs-down": 987838,
  "stairs-up": 987837,
  "stamper": 986425,
  "standard-definition": 985071,
  "star": 984270,
  "star-box": 985715,
  "star-box-multiple": 987782,
  "star-box-multiple-outline": 987783,
  "star-box-outline": 985716,
  "star-check": 988518,
  "star-check-outline": 988522,
  "star-circle": 984271,
  "star-circle-outline": 985508,
  "star-cog": 988776,
  "star-cog-outline": 988777,
  "star-crescent": 985465,
  "star-david": 985466,
  "star-face": 985509,
  "star-four-points": 985826,
  "star-four-points-outline": 985827,
  "star-half": 983622,
  "star-half-full": 984272,
  "star-minus": 988516,
  "star-minus-outline": 988520,
  "star-off": 984273,
  "star-off-outline": 988507,
  "star-outline": 984274,
  "star-plus": 988515,
  "star-plus-outline": 988519,
  "star-remove": 988517,
  "star-remove-outline": 988521,
  "star-settings": 988778,
  "star-settings-outline": 988779,
  "star-shooting": 988993,
  "star-shooting-outline": 988994,
  "star-three-points": 985828,
  "star-three-points-outline": 985829,
  "state-machine": 987631,
  "steam": 984275,
  "steering": 984276,
  "steering-off": 985358,
  "step-backward": 984277,
  "step-backward-2": 984278,
  "step-forward": 984279,
  "step-forward-2": 984280,
  "stethoscope": 984281,
  "sticker": 988004,
  "sticker-alert": 988005,
  "sticker-alert-outline": 988006,
  "sticker-check": 988007,
  "sticker-check-outline": 988008,
  "sticker-circle-outline": 984528,
  "sticker-emoji": 984965,
  "sticker-minus": 988009,
  "sticker-minus-outline": 988010,
  "sticker-outline": 988011,
  "sticker-plus": 988012,
  "sticker-plus-outline": 988013,
  "sticker-remove": 988014,
  "sticker-remove-outline": 988015,
  "sticker-text": 989070,
  "sticker-text-outline": 989071,
  "stocking": 984282,
  "stomach": 987283,
  "stool": 989533,
  "stool-outline": 989534,
  "stop": 984283,
  "stop-circle": 984678,
  "stop-circle-outline": 984679,
  "store": 984284,
  "store-24-hour": 984285,
  "store-alert": 989377,
  "store-alert-outline": 989378,
  "store-check": 989379,
  "store-check-outline": 989380,
  "store-clock": 989381,
  "store-clock-outline": 989382,
  "store-cog": 989383,
  "store-cog-outline": 989384,
  "store-edit": 989385,
  "store-edit-outline": 989386,
  "store-marker": 989387,
  "store-marker-outline": 989388,
  "store-minus": 988766,
  "store-minus-outline": 989389,
  "store-off": 989390,
  "store-off-outline": 989391,
  "store-outline": 988001,
  "store-plus": 988767,
  "store-plus-outline": 989392,
  "store-remove": 988768,
  "store-remove-outline": 989393,
  "store-search": 989394,
  "store-search-outline": 989395,
  "store-settings": 989396,
  "store-settings-outline": 989397,
  "storefront": 985031,
  "storefront-outline": 987329,
  "stove": 984286,
  "strategy": 987606,
  "stretch-to-page": 986923,
  "stretch-to-page-outline": 986924,
  "string-lights": 987834,
  "string-lights-off": 987835,
  "subdirectory-arrow-left": 984588,
  "subdirectory-arrow-right": 984589,
  "submarine": 988524,
  "subtitles": 985622,
  "subtitles-outline": 985623,
  "subway": 984748,
  "subway-alert-variant": 986525,
  "subway-variant": 984287,
  "summit": 984966,
  "sun-compass": 989605,
  "sun-snowflake": 989078,
  "sun-thermometer": 989398,
  "sun-thermometer-outline": 989399,
  "sun-wireless": 989182,
  "sun-wireless-outline": 989183,
  "sunglasses": 984288,
  "surfing": 988998,
  "surround-sound": 984517,
  "surround-sound-2-0": 985072,
  "surround-sound-2-1": 988969,
  "surround-sound-3-1": 985073,
  "surround-sound-5-1": 985074,
  "surround-sound-5-1-2": 988970,
  "surround-sound-7-1": 985075,
  "svg": 984865,
  "swap-horizontal": 984289,
  "swap-horizontal-bold": 986061,
  "swap-horizontal-circle": 987105,
  "swap-horizontal-circle-outline": 987106,
  "swap-horizontal-variant": 985281,
  "swap-vertical": 984290,
  "swap-vertical-bold": 986062,
  "swap-vertical-circle": 987107,
  "swap-vertical-circle-outline": 987108,
  "swap-vertical-variant": 985282,
  "swim": 984291,
  "switch": 984292,
  "sword": 984293,
  "sword-cross": 984967,
  "syllabary-hangul": 987955,
  "syllabary-hiragana": 987956,
  "syllabary-katakana": 987957,
  "syllabary-katakana-halfwidth": 987958,
  "symbol": 988417,
  "symfony": 985830,
  "sync": 984294,
  "sync-alert": 984295,
  "sync-circle": 988024,
  "sync-off": 984296,
  "tab": 984297,
  "tab-minus": 985931,
  "tab-plus": 984924,
  "tab-remove": 985932,
  "tab-search": 989598,
  "tab-unselected": 984298,
  "table": 984299,
  "table-account": 988089,
  "table-alert": 988090,
  "table-arrow-down": 988091,
  "table-arrow-left": 988092,
  "table-arrow-right": 988093,
  "table-arrow-up": 988094,
  "table-border": 985624,
  "table-cancel": 988095,
  "table-chair": 987233,
  "table-check": 988096,
  "table-clock": 988097,
  "table-cog": 988098,
  "table-column": 985141,
  "table-column-plus-after": 984300,
  "table-column-plus-before": 984301,
  "table-column-remove": 984302,
  "table-column-width": 984303,
  "table-edit": 984304,
  "table-eye": 987284,
  "table-eye-off": 988099,
  "table-furniture": 984508,
  "table-headers-eye": 987677,
  "table-headers-eye-off": 987678,
  "table-heart": 988100,
  "table-key": 988101,
  "table-large": 984305,
  "table-large-plus": 987015,
  "table-large-remove": 987016,
  "table-lock": 988102,
  "table-merge-cells": 985510,
  "table-minus": 988103,
  "table-multiple": 988104,
  "table-network": 988105,
  "table-of-contents": 985142,
  "table-off": 988106,
  "table-picnic": 988995,
  "table-pivot": 989244,
  "table-plus": 985717,
  "table-refresh": 988064,
  "table-remove": 985718,
  "table-row": 985143,
  "table-row-height": 984306,
  "table-row-plus-after": 984307,
  "table-row-plus-before": 984308,
  "table-row-remove": 984309,
  "table-search": 985359,
  "table-settings": 985144,
  "table-split-cell": 988202,
  "table-star": 988107,
  "table-sync": 988065,
  "table-tennis": 986728,
  "tablet": 984310,
  "tablet-android": 984311,
  "tablet-cellphone": 985511,
  "tablet-dashboard": 986830,
  "taco": 984930,
  "tag": 984313,
  "tag-arrow-down": 988971,
  "tag-arrow-down-outline": 988972,
  "tag-arrow-left": 988973,
  "tag-arrow-left-outline": 988974,
  "tag-arrow-right": 988975,
  "tag-arrow-right-outline": 988976,
  "tag-arrow-up": 988977,
  "tag-arrow-up-outline": 988978,
  "tag-faces": 984314,
  "tag-heart": 984715,
  "tag-heart-outline": 986063,
  "tag-minus": 985360,
  "tag-minus-outline": 987679,
  "tag-multiple": 984315,
  "tag-multiple-outline": 987895,
  "tag-off": 987680,
  "tag-off-outline": 987681,
  "tag-outline": 984316,
  "tag-plus": 984866,
  "tag-plus-outline": 987682,
  "tag-remove": 984867,
  "tag-remove-outline": 987683,
  "tag-search": 989447,
  "tag-search-outline": 989448,
  "tag-text": 987684,
  "tag-text-outline": 984317,
  "tailwind": 988159,
  "tangram": 984312,
  "tank": 986426,
  "tanker-truck": 987109,
  "tape-drive": 988895,
  "tape-measure": 985933,
  "target": 984318,
  "target-account": 986064,
  "target-variant": 985719,
  "taxi": 984319,
  "tea": 986526,
  "tea-outline": 986527,
  "teamviewer": 984320,
  "teddy-bear": 989435,
  "telescope": 985934,
  "television": 984322,
  "television-ambient-light": 987990,
  "television-box": 985145,
  "television-classic": 985076,
  "television-classic-off": 985146,
  "television-guide": 984323,
  "television-off": 985147,
  "television-pause": 987017,
  "television-play": 986831,
  "television-shimmer": 987408,
  "television-stop": 987018,
  "temperature-celsius": 984324,
  "temperature-fahrenheit": 984325,
  "temperature-kelvin": 984326,
  "tennis": 986528,
  "tennis-ball": 984327,
  "tent": 984328,
  "terraform": 987234,
  "terrain": 984329,
  "test-tube": 984680,
  "test-tube-empty": 985361,
  "test-tube-off": 985362,
  "text": 985512,
  "text-account": 988528,
  "text-box": 983578,
  "text-box-check": 986790,
  "text-box-check-outline": 986791,
  "text-box-minus": 986792,
  "text-box-minus-outline": 986793,
  "text-box-multiple": 985783,
  "text-box-multiple-outline": 985784,
  "text-box-outline": 985581,
  "text-box-plus": 986794,
  "text-box-plus-outline": 986795,
  "text-box-remove": 986796,
  "text-box-remove-outline": 986797,
  "text-box-search": 986798,
  "text-box-search-outline": 986799,
  "text-long": 985514,
  "text-recognition": 987453,
  "text-search": 988088,
  "text-shadow": 984681,
  "text-short": 985513,
  "text-to-speech": 984330,
  "text-to-speech-off": 984331,
  "texture": 984332,
  "texture-box": 987110,
  "theater": 984333,
  "theme-light-dark": 984334,
  "thermometer": 984335,
  "thermometer-alert": 986625,
  "thermometer-bluetooth": 989333,
  "thermometer-chevron-down": 986626,
  "thermometer-chevron-up": 986627,
  "thermometer-high": 987330,
  "thermometer-lines": 984336,
  "thermometer-low": 987331,
  "thermometer-minus": 986628,
  "thermometer-off": 988465,
  "thermometer-plus": 986629,
  "thermostat": 983955,
  "thermostat-box": 985233,
  "thought-bubble": 985078,
  "thought-bubble-outline": 985079,
  "thumb-down": 984337,
  "thumb-down-outline": 984338,
  "thumb-up": 984339,
  "thumb-up-outline": 984340,
  "thumbs-up-down": 984341,
  "thumbs-up-down-outline": 989460,
  "ticket": 984342,
  "ticket-account": 984343,
  "ticket-confirmation": 984344,
  "ticket-confirmation-outline": 988074,
  "ticket-outline": 985363,
  "ticket-percent": 984868,
  "ticket-percent-outline": 988203,
  "tie": 984345,
  "tilde": 984869,
  "tilde-off": 989427,
  "timelapse": 984346,
  "timeline": 986065,
  "timeline-alert": 987029,
  "timeline-alert-outline": 987032,
  "timeline-check": 988466,
  "timeline-check-outline": 988467,
  "timeline-clock": 987643,
  "timeline-clock-outline": 987644,
  "timeline-help": 987033,
  "timeline-help-outline": 987034,
  "timeline-minus": 988468,
  "timeline-minus-outline": 988469,
  "timeline-outline": 986066,
  "timeline-plus": 987030,
  "timeline-plus-outline": 987031,
  "timeline-remove": 988470,
  "timeline-remove-outline": 988471,
  "timeline-text": 986067,
  "timeline-text-outline": 986068,
  "timer": 988075,
  "timer-10": 984348,
  "timer-3": 984349,
  "timer-cog": 989477,
  "timer-cog-outline": 989478,
  "timer-off": 988076,
  "timer-off-outline": 984350,
  "timer-outline": 984347,
  "timer-sand": 984351,
  "timer-sand-complete": 989599,
  "timer-sand-empty": 984749,
  "timer-sand-full": 984972,
  "timer-sand-paused": 989600,
  "timer-settings": 989475,
  "timer-settings-outline": 989476,
  "timetable": 984352,
  "tire": 989334,
  "toaster": 987235,
  "toaster-off": 987575,
  "toaster-oven": 986323,
  "toggle-switch": 984353,
  "toggle-switch-off": 984354,
  "toggle-switch-off-outline": 985625,
  "toggle-switch-outline": 985626,
  "toilet": 985515,
  "toolbox": 985516,
  "toolbox-outline": 985517,
  "tools": 987236,
  "tooltip": 984355,
  "tooltip-account": 983052,
  "tooltip-cellphone": 989243,
  "tooltip-check": 988508,
  "tooltip-check-outline": 988509,
  "tooltip-edit": 984356,
  "tooltip-edit-outline": 987845,
  "tooltip-image": 984357,
  "tooltip-image-outline": 986069,
  "tooltip-minus": 988510,
  "tooltip-minus-outline": 988511,
  "tooltip-outline": 984358,
  "tooltip-plus": 986070,
  "tooltip-plus-outline": 984359,
  "tooltip-remove": 988512,
  "tooltip-remove-outline": 988513,
  "tooltip-text": 984360,
  "tooltip-text-outline": 986071,
  "tooth": 985283,
  "tooth-outline": 984361,
  "toothbrush": 987433,
  "toothbrush-electric": 987436,
  "toothbrush-paste": 987434,
  "torch": 988678,
  "tortoise": 986427,
  "toslink": 987832,
  "tournament": 985518,
  "tow-truck": 985148,
  "tower-beach": 984705,
  "tower-fire": 984706,
  "town-hall": 989301,
  "toy-brick": 987784,
  "toy-brick-marker": 987785,
  "toy-brick-marker-outline": 987786,
  "toy-brick-minus": 987787,
  "toy-brick-minus-outline": 987788,
  "toy-brick-outline": 987789,
  "toy-brick-plus": 987790,
  "toy-brick-plus-outline": 987791,
  "toy-brick-remove": 987792,
  "toy-brick-remove-outline": 987793,
  "toy-brick-search": 987794,
  "toy-brick-search-outline": 987795,
  "track-light": 985364,
  "trackpad": 985080,
  "trackpad-lock": 985395,
  "tractor": 985234,
  "tractor-variant": 988356,
  "trademark": 985720,
  "traffic-cone": 988028,
  "traffic-light": 984363,
  "traffic-light-outline": 989226,
  "train": 984364,
  "train-car": 986072,
  "train-car-passenger": 988979,
  "train-car-passenger-door": 988980,
  "train-car-passenger-door-open": 988981,
  "train-car-passenger-variant": 988982,
  "train-variant": 985284,
  "tram": 984365,
  "tram-side": 987111,
  "transcribe": 984366,
  "transcribe-close": 984367,
  "transfer": 987237,
  "transfer-down": 986529,
  "transfer-left": 986530,
  "transfer-right": 984368,
  "transfer-up": 986531,
  "transit-connection": 986428,
  "transit-connection-horizontal": 988486,
  "transit-connection-variant": 986429,
  "transit-detour": 987019,
  "transit-skip": 988437,
  "transit-transfer": 984750,
  "transition": 985365,
  "transition-masked": 985366,
  "translate": 984522,
  "translate-off": 986630,
  "transmission-tower": 986430,
  "transmission-tower-export": 989484,
  "transmission-tower-import": 989485,
  "trash-can": 985721,
  "trash-can-outline": 985722,
  "tray": 987796,
  "tray-alert": 987797,
  "tray-arrow-down": 983328,
  "tray-arrow-up": 983325,
  "tray-full": 987798,
  "tray-minus": 987799,
  "tray-plus": 987800,
  "tray-remove": 987801,
  "treasure-chest": 984870,
  "tree": 984369,
  "tree-outline": 986729,
  "trello": 984370,
  "trending-down": 984371,
  "trending-neutral": 984372,
  "trending-up": 984373,
  "triangle": 984374,
  "triangle-outline": 984375,
  "triangle-wave": 988284,
  "triforce": 986073,
  "trophy": 984376,
  "trophy-award": 984377,
  "trophy-broken": 986532,
  "trophy-outline": 984378,
  "trophy-variant": 984379,
  "trophy-variant-outline": 984380,
  "truck": 984381,
  "truck-cargo-container": 989400,
  "truck-check": 986324,
  "truck-check-outline": 987802,
  "truck-delivery": 984382,
  "truck-delivery-outline": 987803,
  "truck-fast": 984968,
  "truck-fast-outline": 987804,
  "truck-flatbed": 989329,
  "truck-minus": 989614,
  "truck-minus-outline": 989629,
  "truck-outline": 987805,
  "truck-plus": 989613,
  "truck-plus-outline": 989628,
  "truck-remove": 989615,
  "truck-remove-outline": 989630,
  "truck-snowflake": 989606,
  "truck-trailer": 984871,
  "trumpet": 987286,
  "tshirt-crew": 985723,
  "tshirt-crew-outline": 984383,
  "tshirt-v": 985724,
  "tshirt-v-outline": 984384,
  "tumble-dryer": 985367,
  "tumble-dryer-alert": 987578,
  "tumble-dryer-off": 987579,
  "tune": 984622,
  "tune-variant": 988482,
  "tune-vertical": 984682,
  "tune-vertical-variant": 988483,
  "tunnel": 989245,
  "tunnel-outline": 989246,
  "turkey": 988955,
  "turnstile": 986325,
  "turnstile-outline": 986326,
  "turtle": 986327,
  "twitch": 984387,
  "twitter": 984388,
  "two-factor-authentication": 985519,
  "typewriter": 986925,
  "ubisoft": 986074,
  "ubuntu": 984392,
  "ufo": 987332,
  "ufo-outline": 987333,
  "ultra-high-definition": 985081,
  "umbraco": 984393,
  "umbrella": 984394,
  "umbrella-beach": 989322,
  "umbrella-beach-outline": 989323,
  "umbrella-closed": 985520,
  "umbrella-closed-outline": 988130,
  "umbrella-closed-variant": 988129,
  "umbrella-outline": 984395,
  "undo": 984396,
  "undo-variant": 984397,
  "unfold-less-horizontal": 984398,
  "unfold-less-vertical": 984928,
  "unfold-more-horizontal": 984399,
  "unfold-more-vertical": 984929,
  "ungroup": 984400,
  "unicode": 986832,
  "unicorn": 988610,
  "unicorn-variant": 988611,
  "unicycle": 988645,
  "unity": 984751,
  "unreal": 985521,
  "update": 984752,
  "upload": 984402,
  "upload-lock": 988019,
  "upload-lock-outline": 988020,
  "upload-multiple": 985149,
  "upload-network": 984822,
  "upload-network-outline": 986328,
  "upload-off": 987334,
  "upload-off-outline": 987335,
  "upload-outline": 986631,
  "usb": 984403,
  "usb-flash-drive": 987806,
  "usb-flash-drive-outline": 987807,
  "usb-port": 987632,
  "vacuum": 989601,
  "vacuum-outline": 989602,
  "valve": 987238,
  "valve-closed": 987239,
  "valve-open": 987240,
  "van-passenger": 985082,
  "van-utility": 985083,
  "vanish": 985084,
  "vanish-quarter": 988500,
  "vanity-light": 987617,
  "variable": 985831,
  "variable-box": 987409,
  "vector-arrange-above": 984404,
  "vector-arrange-below": 984405,
  "vector-bezier": 985832,
  "vector-circle": 984406,
  "vector-circle-variant": 984407,
  "vector-combine": 984408,
  "vector-curve": 984409,
  "vector-difference": 984410,
  "vector-difference-ab": 984411,
  "vector-difference-ba": 984412,
  "vector-ellipse": 985235,
  "vector-intersection": 984413,
  "vector-line": 984414,
  "vector-link": 987112,
  "vector-point": 984415,
  "vector-polygon": 984416,
  "vector-polygon-variant": 989270,
  "vector-polyline": 984417,
  "vector-polyline-edit": 987685,
  "vector-polyline-minus": 987686,
  "vector-polyline-plus": 987687,
  "vector-polyline-remove": 987688,
  "vector-radius": 984906,
  "vector-rectangle": 984518,
  "vector-selection": 984418,
  "vector-square": 983041,
  "vector-square-close": 989271,
  "vector-square-edit": 989401,
  "vector-square-minus": 989402,
  "vector-square-open": 989272,
  "vector-square-plus": 989403,
  "vector-square-remove": 989404,
  "vector-triangle": 984419,
  "vector-union": 984420,
  "vhs": 985627,
  "vibrate": 984422,
  "vibrate-off": 986329,
  "video": 984423,
  "video-3d": 985085,
  "video-3d-off": 988121,
  "video-3d-variant": 986833,
  "video-4k-box": 985150,
  "video-account": 985369,
  "video-box": 983293,
  "video-box-off": 983294,
  "video-check": 987241,
  "video-check-outline": 987242,
  "video-high-definition": 988462,
  "video-image": 985370,
  "video-input-antenna": 985151,
  "video-input-component": 985152,
  "video-input-hdmi": 985153,
  "video-input-scart": 987020,
  "video-input-svideo": 985154,
  "video-marker": 989609,
  "video-marker-outline": 989610,
  "video-minus": 985522,
  "video-minus-outline": 983738,
  "video-off": 984424,
  "video-off-outline": 986075,
  "video-outline": 986076,
  "video-plus": 985523,
  "video-plus-outline": 983507,
  "video-stabilization": 985371,
  "video-switch": 984425,
  "video-switch-outline": 984976,
  "video-vintage": 985628,
  "video-wireless": 986834,
  "video-wireless-outline": 986835,
  "view-agenda": 984426,
  "view-agenda-outline": 987608,
  "view-array": 984427,
  "view-array-outline": 988293,
  "view-carousel": 984428,
  "view-carousel-outline": 988294,
  "view-column": 984429,
  "view-column-outline": 988295,
  "view-comfy": 986730,
  "view-comfy-outline": 988296,
  "view-compact": 986731,
  "view-compact-outline": 986732,
  "view-dashboard": 984430,
  "view-dashboard-edit": 989511,
  "view-dashboard-edit-outline": 989512,
  "view-dashboard-outline": 985629,
  "view-dashboard-variant": 985155,
  "view-dashboard-variant-outline": 988297,
  "view-day": 984431,
  "view-day-outline": 988298,
  "view-gallery": 989320,
  "view-gallery-outline": 989321,
  "view-grid": 984432,
  "view-grid-outline": 987609,
  "view-grid-plus": 987021,
  "view-grid-plus-outline": 987610,
  "view-headline": 984433,
  "view-list": 984434,
  "view-list-outline": 988299,
  "view-module": 984435,
  "view-module-outline": 988300,
  "view-parallel": 984872,
  "view-parallel-outline": 988301,
  "view-quilt": 984436,
  "view-quilt-outline": 988302,
  "view-sequential": 984873,
  "view-sequential-outline": 988303,
  "view-split-horizontal": 986059,
  "view-split-vertical": 986060,
  "view-stream": 984437,
  "view-stream-outline": 988304,
  "view-week": 984438,
  "view-week-outline": 988305,
  "vimeo": 984439,
  "violin": 984591,
  "virtual-reality": 985236,
  "virus": 988086,
  "virus-off": 989409,
  "virus-off-outline": 989410,
  "virus-outline": 988087,
  "vlc": 984444,
  "voicemail": 984445,
  "volleyball": 985524,
  "volume-high": 984446,
  "volume-low": 984447,
  "volume-medium": 984448,
  "volume-minus": 984926,
  "volume-mute": 984927,
  "volume-off": 984449,
  "volume-plus": 984925,
  "volume-source": 987424,
  "volume-variant-off": 986632,
  "volume-vibrate": 987425,
  "vote": 985631,
  "vote-outline": 985632,
  "vpn": 984450,
  "vuejs": 985156,
  "vuetify": 986733,
  "walk": 984451,
  "wall": 985086,
  "wall-sconce": 985372,
  "wall-sconce-flat": 985373,
  "wall-sconce-flat-outline": 989129,
  "wall-sconce-flat-variant": 984092,
  "wall-sconce-flat-variant-outline": 989130,
  "wall-sconce-outline": 989131,
  "wall-sconce-round": 984904,
  "wall-sconce-round-outline": 989132,
  "wall-sconce-round-variant": 985374,
  "wall-sconce-round-variant-outline": 989133,
  "wallet": 984452,
  "wallet-giftcard": 984453,
  "wallet-membership": 984454,
  "wallet-outline": 986077,
  "wallet-plus": 987022,
  "wallet-plus-outline": 987023,
  "wallet-travel": 984455,
  "wallpaper": 986633,
  "wan": 984456,
  "wardrobe": 987024,
  "wardrobe-outline": 987025,
  "warehouse": 987009,
  "washing-machine": 984874,
  "washing-machine-alert": 987580,
  "washing-machine-off": 987581,
  "watch": 984457,
  "watch-export": 984458,
  "watch-export-variant": 985237,
  "watch-import": 984459,
  "watch-import-variant": 985238,
  "watch-variant": 985239,
  "watch-vibrate": 984753,
  "watch-vibrate-off": 986330,
  "water": 984460,
  "water-alert": 988418,
  "water-alert-outline": 988419,
  "water-boiler": 987026,
  "water-boiler-alert": 987571,
  "water-boiler-off": 987572,
  "water-check": 988420,
  "water-check-outline": 988421,
  "water-circle": 989190,
  "water-minus": 988422,
  "water-minus-outline": 988423,
  "water-off": 984461,
  "water-off-outline": 988424,
  "water-opacity": 989269,
  "water-outline": 986634,
  "water-percent": 984462,
  "water-percent-alert": 988425,
  "water-plus": 988426,
  "water-plus-outline": 988427,
  "water-polo": 987808,
  "water-pump": 984463,
  "water-pump-off": 987027,
  "water-remove": 988428,
  "water-remove-outline": 988429,
  "water-sync": 989126,
  "water-well": 987243,
  "water-well-outline": 987244,
  "waterfall": 989257,
  "watering-can": 988289,
  "watering-can-outline": 988290,
  "watermark": 984594,
  "wave": 986926,
  "waveform": 988285,
  "waves": 984973,
  "waves-arrow-left": 989273,
  "waves-arrow-right": 989274,
  "waves-arrow-up": 989275,
  "waze": 986078,
  "weather-cloudy": 984464,
  "weather-cloudy-alert": 986927,
  "weather-cloudy-arrow-right": 986734,
  "weather-cloudy-clock": 989430,
  "weather-fog": 984465,
  "weather-hail": 984466,
  "weather-hazy": 986928,
  "weather-hurricane": 985240,
  "weather-lightning": 984467,
  "weather-lightning-rainy": 984702,
  "weather-night": 984468,
  "weather-night-partly-cloudy": 986929,
  "weather-partly-cloudy": 984469,
  "weather-partly-lightning": 986930,
  "weather-partly-rainy": 986931,
  "weather-partly-snowy": 986932,
  "weather-partly-snowy-rainy": 986933,
  "weather-pouring": 984470,
  "weather-rainy": 984471,
  "weather-snowy": 984472,
  "weather-snowy-heavy": 986934,
  "weather-snowy-rainy": 984703,
  "weather-sunny": 984473,
  "weather-sunny-alert": 986935,
  "weather-sunny-off": 988388,
  "weather-sunset": 984474,
  "weather-sunset-down": 984475,
  "weather-sunset-up": 984476,
  "weather-tornado": 986936,
  "weather-windy": 984477,
  "weather-windy-variant": 984478,
  "web": 984479,
  "web-box": 987028,
  "web-cancel": 989072,
  "web-check": 984969,
  "web-clock": 987722,
  "web-minus": 987296,
  "web-off": 985742,
  "web-plus": 983091,
  "web-refresh": 989073,
  "web-remove": 984401,
  "web-sync": 989074,
  "webcam": 984480,
  "webcam-off": 988983,
  "webhook": 984623,
  "webpack": 984875,
  "webrtc": 987720,
  "wechat": 984593,
  "weight": 984481,
  "weight-gram": 986431,
  "weight-kilogram": 984482,
  "weight-lifter": 987485,
  "weight-pound": 985525,
  "whatsapp": 984483,
  "wheel-barrow": 988402,
  "wheelchair-accessibility": 984484,
  "whistle": 985526,
  "whistle-outline": 987836,
  "white-balance-auto": 984485,
  "white-balance-incandescent": 984486,
  "white-balance-iridescent": 984487,
  "white-balance-sunny": 984488,
  "widgets": 984876,
  "widgets-outline": 987989,
  "wifi": 984489,
  "wifi-alert": 988853,
  "wifi-arrow-down": 988854,
  "wifi-arrow-left": 988855,
  "wifi-arrow-left-right": 988856,
  "wifi-arrow-right": 988857,
  "wifi-arrow-up": 988858,
  "wifi-arrow-up-down": 988859,
  "wifi-cancel": 988860,
  "wifi-check": 988861,
  "wifi-cog": 988862,
  "wifi-lock": 988863,
  "wifi-lock-open": 988864,
  "wifi-marker": 988865,
  "wifi-minus": 988866,
  "wifi-off": 984490,
  "wifi-plus": 988867,
  "wifi-refresh": 988868,
  "wifi-remove": 988869,
  "wifi-settings": 988870,
  "wifi-star": 986635,
  "wifi-strength-1": 985375,
  "wifi-strength-1-alert": 985376,
  "wifi-strength-1-lock": 985377,
  "wifi-strength-1-lock-open": 988875,
  "wifi-strength-2": 985378,
  "wifi-strength-2-alert": 985379,
  "wifi-strength-2-lock": 985380,
  "wifi-strength-2-lock-open": 988876,
  "wifi-strength-3": 985381,
  "wifi-strength-3-alert": 985382,
  "wifi-strength-3-lock": 985383,
  "wifi-strength-3-lock-open": 988877,
  "wifi-strength-4": 985384,
  "wifi-strength-4-alert": 985385,
  "wifi-strength-4-lock": 985386,
  "wifi-strength-4-lock-open": 988878,
  "wifi-strength-alert-outline": 985387,
  "wifi-strength-lock-open-outline": 988879,
  "wifi-strength-lock-outline": 985388,
  "wifi-strength-off": 985389,
  "wifi-strength-off-outline": 985390,
  "wifi-strength-outline": 985391,
  "wifi-sync": 988871,
  "wikipedia": 984492,
  "wind-turbine": 986533,
  "wind-turbine-alert": 989611,
  "wind-turbine-check": 989612,
  "window-close": 984493,
  "window-closed": 984494,
  "window-closed-variant": 987611,
  "window-maximize": 984495,
  "window-minimize": 984496,
  "window-open": 984497,
  "window-open-variant": 987612,
  "window-restore": 984498,
  "window-shutter": 987420,
  "window-shutter-alert": 987421,
  "window-shutter-open": 987422,
  "windsock": 988666,
  "wiper": 985833,
  "wiper-wash": 986534,
  "wiper-wash-alert": 989407,
  "wizard-hat": 988279,
  "wordpress": 984500,
  "wrap": 984502,
  "wrap-disabled": 986079,
  "wrench": 984503,
  "wrench-clock": 989603,
  "wrench-outline": 986080,
  "xamarin": 985157,
  "xml": 984512,
  "xmpp": 985087,
  "yahoo": 985935,
  "yeast": 984513,
  "yin-yang": 984704,
  "yoga": 987516,
  "youtube": 984515,
  "youtube-gaming": 985160,
  "youtube-studio": 985159,
  "youtube-subscription": 986432,
  "youtube-tv": 984136,
  "yurt": 988438,
  "z-wave": 985834,
  "zend": 985835,
  "zigbee": 986433,
  "zip-box": 984516,
  "zip-box-outline": 987130,
  "zip-disk": 985635,
  "zodiac-aquarius": 985725,
  "zodiac-aries": 985726,
  "zodiac-cancer": 985727,
  "zodiac-capricorn": 985728,
  "zodiac-gemini": 985729,
  "zodiac-leo": 985730,
  "zodiac-libra": 985731,
  "zodiac-pisces": 985732,
  "zodiac-sagittarius": 985733,
  "zodiac-scorpio": 985734,
  "zodiac-taurus": 985735,
  "zodiac-virgo": 985736,
  "blank": 63116
};
},602,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WeatherPlaceHolder = undefined;
  var _reactNative = _$$_REQUIRE(_dependencyMap[1]);
  var _MaterialCommunityIcons = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[3]);
  var WeatherPlaceHolder = exports.WeatherPlaceHolder = function WeatherPlaceHolder() {
    var _useTheme = (0, _$$_REQUIRE(_dependencyMap[4]).useTheme)(),
      theme = _useTheme.theme,
      toggleTheme = _useTheme.toggleTheme;
    var isDarkMode = theme === 'dark';
    var styles = _reactNative.StyleSheet.create({
      card: {
        margin: 20,
        padding: 25,
        borderRadius: 20,
        alignItems: 'center'
      },
      title: {
        color: isDarkMode ? "white" : "black",
        alignSelf: "center",
        fontSize: 22,
        fontWeight: "600"
      },
      description: {
        color: isDarkMode ? "white" : "black",
        alignSelf: "center",
        fontSize: 22,
        fontWeight: "600",
        textAlign: "center"
      }
    });
    return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.card,
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.title,
        children: " Current location not found"
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_MaterialCommunityIcons.default, {
        name: "cloud-search",
        size: 150,
        color: "#fff"
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.description,
        children: "Search above to get your weather report"
      })]
    });
  };
},603,[1,2,601,251,578]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WeatherCardReport = undefined;
  var _reactNative = _$$_REQUIRE(_dependencyMap[1]);
  var _MaterialCommunityIcons = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[3]);
  /**
   * Reusable Weather Report Card
   * @param param0 weather response
   * @returns 
   */
  var WeatherCardReport = exports.WeatherCardReport = function WeatherCardReport(_ref) {
    var _weather$weather, _weather$weather$, _weather$weather$$mai, _weather$weather2, _weather$weather2$, _weather$main;
    var weather = _ref.weather;
    var _useTheme = (0, _$$_REQUIRE(_dependencyMap[4]).useTheme)(),
      theme = _useTheme.theme,
      toggleTheme = _useTheme.toggleTheme;
    var isDarkMode = theme === 'dark';
    var weatherMain = weather == null ? undefined : (_weather$weather = weather.weather) == null ? undefined : (_weather$weather$ = _weather$weather[0]) == null ? undefined : (_weather$weather$$mai = _weather$weather$.main) == null ? undefined : _weather$weather$$mai.toLowerCase();
    var iconName = (0, _$$_REQUIRE(_dependencyMap[5]).getWeatherIcon)(weatherMain);
    var backgroundColor = (0, _$$_REQUIRE(_dependencyMap[5]).getWeatherCardColor)(weatherMain);
    var styles = _reactNative.StyleSheet.create({
      card: {
        margin: 20,
        padding: 25,
        borderRadius: 20,
        shadowColor: "#000",
        shadowOffset: {
          width: 0,
          height: 8
        },
        shadowOpacity: 0.3,
        shadowRadius: 12,
        elevation: 10,
        alignItems: 'center'
      },
      cityText: {
        fontSize: 24,
        fontWeight: 'bold',
        color: isDarkMode ? "white" : "black",
        marginBottom: 10
      },
      weatherImage: {
        marginBottom: 10
      },
      weatherMainText: {
        fontSize: 22,
        fontWeight: "600",
        color: isDarkMode ? "white" : "black",
        marginBottom: 5
      },
      tempText: {
        fontSize: 40,
        fontWeight: 'bold',
        color: isDarkMode ? "white" : "black"
      }
    });
    return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: [styles.card, {
        backgroundColor: backgroundColor
      }],
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.cityText,
        children: weather.name
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_MaterialCommunityIcons.default, {
        name: iconName,
        size: 150,
        color: "#fff",
        style: styles.weatherImage
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.weatherMainText,
        children: weather == null ? undefined : (_weather$weather2 = weather.weather) == null ? undefined : (_weather$weather2$ = _weather$weather2[0]) == null ? undefined : _weather$weather2$.main
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.tempText,
        children: (_weather$main = weather.main) != null && _weather$main.temp ? `${Math.round(weather.main.temp - 273.15)}°C` : ""
      })]
    });
  };
},604,[1,2,601,251,578,605]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getWeatherIcon = exports.getWeatherCardColor = exports.getGradientForWeatherBackground = undefined;
  /**
   * helper function to get different color based on the weather 
   * @param weatherMain 
   * @returns 
   */
  var getWeatherCardColor = exports.getWeatherCardColor = function getWeatherCardColor(weatherMain) {
    var _useTheme = (0, _$$_REQUIRE(_dependencyMap[0]).useTheme)(),
      theme = _useTheme.theme,
      toggleTheme = _useTheme.toggleTheme;
    var isDarkMode = theme === 'dark';
    switch (weatherMain) {
      case "clear":
        return isDarkMode ? "#FFD93D" : "#FDB813";
      // Warm sun vs bright sun
      case "clouds":
        return isDarkMode ? "#495057" : "#ADB5BD";
      // Dark cloud vs light cloud
      case "rain":
      case "drizzle":
        return isDarkMode ? "#1E3A8A" : "#4A90E2";
      // Deeper blue for dark mode
      case "thunderstorm":
        return isDarkMode ? "#0F172A" : "#2C3E50";
      // Very dark stormy
      case "snow":
        return isDarkMode ? "#60A5FA" : "#00BCD4";
      // Frosty blue variants
      case "mist":
      case "fog":
        return isDarkMode ? "#6B7280" : "#CFD8DC";
      // Soft grays
      default:
        return isDarkMode ? "#374151" : "#95A5A6";
      // Neutral fallback
    }
  };

  /**
   * Helper function to get weather icon based on the weather condition
   * @param weatherMain 
   * @returns 
   */
  var getWeatherIcon = exports.getWeatherIcon = function getWeatherIcon(weatherMain) {
    // if (!weatherMain) return "weather-sunny";

    switch (weatherMain) {
      case "clear":
        return "weather-sunny";
      case "clouds":
        return "weather-cloudy";
      case "rain":
        return "weather-rainy";
      case "drizzle":
        return "weather-partly-cloudy";
      case "thunderstorm":
        return "weather-lightning";
      case "snow":
        return "weather-snowy";
      default:
        return "weather-cloudy-alert";
    }
  };
  var getGradientForWeatherBackground = exports.getGradientForWeatherBackground = function getGradientForWeatherBackground(weatherMain) {
    switch (weatherMain) {
      case 'clear':
        return ['#FFDD00', '#FF9E00', '#FFD700'];
      // Sunny
      case 'clouds':
        return ['#B0C4DE', '#D3D3D3'];
      // Cloudy
      case 'rain':
      case 'drizzle':
        return ['#00A9E0', '#005F8D', '#4B6C84'];
      // Rainy
      case 'thunderstorm':
        return ['#4C1C24', '#3B2A45', '#212A3E'];
      // Thunderstorm
      case 'snow':
        return ['#A8C8D9', '#E5F0FF'];
      // Snowy
      default:
        return ['#B0C4DE', '#D3D3D3'];
      // Default (Cloudy)
    }
  };
},605,[578]);
__d(function(global, require, _importDefaultUnused, _importAllUnused, module, exports, _dependencyMapUnused) {
  module.exports = {
  "name": "WeatherAppNW",
  "displayName": "WeatherAppNW"
}
;
},606,[]);
__r(62);
__r(0);